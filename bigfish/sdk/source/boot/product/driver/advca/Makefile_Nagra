#===============================================================================
# export variables
#===============================================================================
ifeq ($(CFG_HI_EXPORT_FLAG),)
SDK_DIR     := $(shell pwd)/../../../../..
include $(SDK_DIR)/base.mak
endif

#===============================================================================
# local variables
#===============================================================================

ifeq ($(CFG_HI_MINIBOOT_SUPPORT),y)
BOOT_DIR  := $(SDK_DIR)/source/boot/miniboot
else
BOOT_DIR  := $(SDK_DIR)/source/boot/fastboot
endif
PRODUCT_DIR  := $(BOOT_DIR)/../product

ifndef CFLAGS
include $(BOOT_DIR)/define.mak
export MKFLAGS

CC := $(CROSS_COMPILE)gcc

gccincdir := $(shell $(CC) -print-file-name=include)

CFLAGS := -g -Os -D__KERNEL__ -D__ARM__ -fno-strict-aliasing -fno-common -ffixed-r8 \
	  -nostdinc -isystem $(gccincdir) $(MKFLAGS) -I$(PRODUCT_DIR) \
	  -fno-builtin -ffreestanding  -pipe -marm  -mabi=aapcs-linux  \
	  -mno-thumb-interwork -march=armv7-a \
	  -Wall -Wstrict-prototypes -fno-stack-protector
endif

ifeq ($(CFG_HI_MINIBOOT_SUPPORT),y)
CFLAGS   += -I$(BOOT_DIR)/app
CFLAGS   += -I$(PRODUCT_DIR)/driver/include_inc
else
CFLAGS   += -I$(BOOT_DIR)/arch/arm/include
CFLAGS   += -I$(BOOT_DIR)/include
CFLAGS   += -I$(BOOT_DIR)/include/configs
endif

CFLAGS   += -I$(PRODUCT_DIR)/driver/include
CFLAGS	 += -I$(PRODUCT_DIR)/driver/advca/common/cipher
CFLAGS	 += -I$(PRODUCT_DIR)/driver/advca/common/ca
CFLAGS	 += -I$(PRODUCT_DIR)/driver/advca/common/auth
CFLAGS	 += -I$(PRODUCT_DIR)/driver/advca/common/include
CFLAGS   += -I$(COMPONENT_DIR)/loader/api/include
CFLAGS   += -I$(PRODUCT_DIR)/driver/advca/nagra
CFLAGS   += -I$(PRODUCT_DIR)/driver/advca/nagra/include

ifeq ($(CFG_HI_BUILD_WITH_KEYLED),y)
CFLAGS += -DHI_BUILD_WITH_KEYLED
    ifeq ($(CFG_HI_KEYLED_PT6964_SELECT),y)
    CFLAGS += -DHI_BOOT_KEYLED_PT6964
    endif
    ifeq ($(CFG_HI_KEYLED_PT6961_SELECT),y)
    CFLAGS += -DHI_BOOT_KEYLED_PT6961
    endif
    ifeq ($(CFG_HI_KEYLED_CT1642_SELECT),y)
    CFLAGS += -DHI_BOOT_KEYLED_CT1642
    endif
    ifeq ($(CFG_HI_KEYLED_74HC164_SELECT),y)
    CFLAGS += -DHI_BOOT_KEYLED_74HC164
    endif
    ifeq ($(CFG_HI_KEYLED_FD650_SELECT),y)
    CFLAGS += -DHI_BOOT_KEYLED_FD650
    endif
endif

ifeq ($(CFG_HI_BUILD_WITH_IR),y)
CFLAGS += -DHI_BUILD_WITH_IR
endif

LIBS     := libadvca.a

###########################nagra#####################
ADVCA_COMMON_DIR = common
CIPHER_DIR = $(ADVCA_COMMON_DIR)/cipher
CA_DIR = $(ADVCA_COMMON_DIR)/ca
OBJS += $(patsubst %.c,%.o,$(wildcard $(CA_DIR)/*.c))

ifeq ($(CFG_HI_ADVCA_TYPE),NAGRA)
CFLAGS += -DHI_ADVCA_SUPPORT
CFLAGS += -DHI_ADVCA_TYPE_NAGRA
NAGRA_DIR = nagra
OBJS += $(NAGRA_DIR)/nasc1x_sbp.o
ifeq ($(CFG_HI_MINIBOOT_SUPPORT),y)
OBJS += $(CIPHER_DIR)/unf_cipher.o
OBJS += $(CIPHER_DIR)/drv_cipher.o
OBJS += $(CIPHER_DIR)/drv_cipher_intf.o
OBJS += $(CIPHER_DIR)/hal_cipher.o
OBJS += $(NAGRA_DIR)/driver/nocs_bsd.o
OBJS += $(NAGRA_DIR)/driver/nocs_check.o
OBJS += $(NAGRA_DIR)/driver/nocs_cipher.o
else
OBJS += $(patsubst %.c,%.o,$(wildcard $(CIPHER_DIR)/*.c))
OBJS += $(patsubst %.c,%.o,$(wildcard $(NAGRA_DIR)/driver/*.c))
endif

endif

#===============================================================================
# rules
#===============================================================================

.PHONY: all clean install uninstall $(LIBS) prepare

all: prepare $(LIBS)

prepare:
	@make -C nagra/bep all
ifeq ($(CFG_HI_ADVCA_FUNCTION), RELEASE)
	@cp nagra/sbp_rel.a.lib nagra/libsbp.a
else
	@cp nagra/sbp_dbg.a.lib nagra/libsbp.a
endif

clean:
	$(AT)rm -rf $(OBJS)
	$(AT)rm -rf $(LIBS)

install: all

uninstall:

$(LIBS): $(OBJS)
	$(AT)$(AR) -rc $@ $^
