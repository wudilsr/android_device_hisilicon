	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"mvc.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/mach-hi3798mx/include
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/scene/stb
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/osal/linux_kernel
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV300R001
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3798MV100
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3796mv100
@ -DSDK_VERSION=HiSTBAndroidV600R001C00SPC065_v2016112920 -DHI_MCE_SUPPORT
@ -DHI_GPIOI2C_SUPPORT -DHI_LOG_SUPPORT=1 -DHI_LOG_LEVEL=4
@ -DHI_PROC_SUPPORT=1 -DHI_HDMI_SUPPORT_1_4 -DHI_KEYLED_SUPPORT
@ -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_PVR_SUPPORT -DHI_VI_SUPPORT
@ -DHI_VENC_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_V3_0 -DENV_ARMLINUX_KERNEL
@ -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE -DSUPPORT_JPEG_444
@ -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB -D__VFMW_REGISTER_ISR__
@ -DQ_MATRIX_FIXED -DVFMW_VDH_V300R001_SUPPORT -DCFG_SCD_TIME_OUT=2000
@ -DCFG_VDH_TIME_OUT=500 -DVFMW_H264_SUPPORT -DVFMW_HEVC_SUPPORT
@ -DVFMW_MVC_SUPPORT -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT
@ -DVFMW_AVS_SUPPORT -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT
@ -DVFMW_REAL8_SUPPORT -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT
@ -DVFMW_VP8_SUPPORT -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT
@ -DVFMW_JPEG_SUPPORT -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT
@ -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT -DVFMW_SCD_LOWDLY_SUPPORT
@ -DVFMW_AVSPLUS_SUPPORT -DVFMW_MODULE_LOWDLY_SUPPORT
@ -DVFMW_SYSTEM_REG_DISABLE -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(mvc) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.mvc.o.d
@ /home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.c
@ -mlittle-endian -mapcs -mno-sched-prolog -mabi=aapcs-linux
@ -mno-thumb-interwork -marm -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.o -O2 -Wall -Wundef
@ -Wstrict-prototypes -Wno-trigraphs -Werror-implicit-function-declaration
@ -Wno-format-security -Wframe-larger-than=1024
@ -Wdeclaration-after-statement -Wno-pointer-sign -p -fno-strict-aliasing
@ -fno-common -fno-delete-null-pointer-checks -fno-dwarf2-cfi-asm
@ -funwind-tables -fno-stack-protector -fno-omit-frame-pointer
@ -fno-optimize-sibling-calls -fno-strict-overflow -fconserve-stack
@ -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -foptimize-register-move
@ -fpeephole -fpeephole2 -fprofile -fpromote-loop-indices
@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
@ -freorder-functions -frerun-cse-after-loop -fsched-interblock
@ -fsched-spec -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
@ -fsection-anchors -fsigned-zeros -fsplit-ivs-in-unroller
@ -fsplit-wide-types -fthread-jumps -ftoplevel-reorder -ftrapping-math
@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-copy-prop
@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
@ -ftree-dse -ftree-fre -ftree-loop-im -ftree-loop-ivcanon
@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-pre -ftree-reassoc
@ -ftree-scev-cprop -ftree-sink -ftree-sra -ftree-switch-conversion
@ -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
@ -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mapcs-frame -mglibc -mlittle-endian

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.text
	.align	2
	.global	MVC_FrameStoreRefFlg
	.type	MVC_FrameStoreRefFlg, %function
MVC_FrameStoreRefFlg:
	.fnstart
.LFB1540:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r0, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r0, r0, #0	@, <variable>.is_reference,
	movne	r0, #1	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FrameStoreRefFlg, .-MVC_FrameStoreRefFlg
	.align	2
	.global	MVC_NonLongTermRefFlg
	.type	MVC_NonLongTermRefFlg, %function
MVC_NonLongTermRefFlg:
	.fnstart
.LFB1541:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ D.38845, <variable>.is_reference
	cmp	r3, #3	@ D.38845,
	beq	.L12	@,
	tst	r3, #1	@ D.38845,
	bne	.L6	@,
.L7:
	ands	r3, r3, #2	@ tmp141, D.38845,
	moveq	r0, r3	@ D.38851, tmp141
	ldmeqfd	sp, {fp, sp, pc}	@
	ldrb	r0, [r0, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	rsbs	r0, r0, #1	@ D.38851, <variable>.bottom_field.is_long_term
	movcc	r0, #0	@ D.38851
	ldmfd	sp, {fp, sp, pc}	@
.L12:
	ldrb	r2, [r0, #601]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r2, #0	@ <variable>.frame.is_long_term,
	beq	.L5	@,
.L6:
	ldrb	r1, [r0, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r1, #0	@ <variable>.top_field.is_long_term,
	bne	.L7	@,
.L5:
	mov	r0, #1	@ D.38851,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_NonLongTermRefFlg, .-MVC_NonLongTermRefFlg
	.align	2
	.global	MVC_ShortTermRefFlg
	.type	MVC_ShortTermRefFlg, %function
MVC_ShortTermRefFlg:
	.fnstart
.LFB1542:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ D.38869, <variable>.is_reference
	cmp	r3, #3	@ D.38869,
	beq	.L21	@,
	tst	r3, #1	@ D.38869,
	bne	.L16	@,
.L17:
	ands	r3, r3, #2	@ tmp145, D.38869,
	moveq	r0, r3	@ D.38876, tmp145
	ldmeqfd	sp, {fp, sp, pc}	@
	ldr	r1, [r0, #672]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #65536	@ tmp146,
	movne	r0, #0	@, D.38876
	moveq	r0, #1	@, D.38876
	ldmfd	sp, {fp, sp, pc}	@
.L21:
	ldr	ip, [r0, #600]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #65536	@ tmp138,
	beq	.L15	@,
.L16:
	ldr	ip, [r0, #636]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #65536	@ tmp142,
	bne	.L17	@,
.L15:
	mov	r0, #1	@ D.38876,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_ShortTermRefFlg, .-MVC_ShortTermRefFlg
	.align	2
	.global	MVC_LongTermRefFlg
	.type	MVC_LongTermRefFlg, %function
MVC_LongTermRefFlg:
	.fnstart
.LFB1543:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ D.38896, <variable>.is_reference
	cmp	r3, #3	@ D.38896,
	beq	.L30	@,
	tst	r3, #1	@ D.38896,
	bne	.L25	@,
.L26:
	ands	r3, r3, #2	@ tmp145, D.38896,
	moveq	r0, r3	@ D.38903, tmp145
	ldmeqfd	sp, {fp, sp, pc}	@
	ldr	r1, [r0, #672]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #256	@ tmp146,
	movne	r0, #0	@, D.38903
	moveq	r0, #1	@, D.38903
	ldmfd	sp, {fp, sp, pc}	@
.L30:
	ldr	ip, [r0, #600]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #256	@ tmp138,
	beq	.L24	@,
.L25:
	ldr	ip, [r0, #636]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #256	@ tmp142,
	bne	.L26	@,
.L24:
	mov	r0, #1	@ D.38903,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_LongTermRefFlg, .-MVC_LongTermRefFlg
	.align	2
	.global	MVC_UpdateLTReflist
	.type	MVC_UpdateLTReflist, %function
MVC_UpdateLTReflist:
	.fnstart
.LFB1544:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11123112	@ tmp170,
	movt	r8, #:upper16:11123112	@ tmp170,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, #0	@ <variable>.DPB.size,
	beq	.L33	@,
	movw	r5, #:lower16:11122920	@ ivtmp.1058,
	movt	r5, #:upper16:11122920	@ ivtmp.1058,
	mov	sl, #0	@ j,
	movw	r9, #:lower16:11152584	@ tmp188,
	add	r5, r0, r5	@ ivtmp.1058, pMvcCtx, ivtmp.1058
	movt	r9, #:upper16:11152584	@ tmp188,
	mov	r6, sl	@ i, j
.L35:
	ldr	r4, [r5, #0]	@ D.38932, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.1058, ivtmp.1058,
	cmp	r4, #0	@ D.38932,
	mov	r0, r4	@, D.38932
	beq	.L34	@,
	bl	MVC_LongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L34	@,
	ldr	r3, [r7, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	r2, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r2, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	movweq	r3, #:lower16:2780762	@ tmp176,
	movteq	r3, #:upper16:2780762	@ tmp176,
	addeq	r3, sl, r3	@ tmp176, j, tmp176
	addeq	sl, sl, #1	@ j, j,
	streq	r4, [r7, r3, asl #2]	@ D.38932, <variable>.DPB.fs_ltref
.L34:
	ldr	r0, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i
	bhi	.L35	@,
.L33:
	movw	ip, #:lower16:11123112	@ tmp181,
	movt	ip, #:upper16:11123112	@ tmp181,
	movw	r1, #:lower16:11123124	@ tmp180,
	movt	r1, #:upper16:11123124	@ tmp180,
	ldr	r0, [r7, ip]	@ temp.1061, <variable>.DPB.size
	str	sl, [r7, r1]	@ j, <variable>.DPB.ltref_frames_in_buffer
	cmp	r0, sl	@ temp.1061, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r2, #:lower16:2780762	@ tmp182,
	movt	r2, #:upper16:2780762	@ tmp182,
	add	r3, sl, r2	@ tmp182, j, tmp182
	add	r2, sl, #1	@ j, j,
	cmp	r0, r2	@ temp.1061, j
	mvn	r1, sl	@ tmp191, j
	add	r7, r7, r3, asl #2	@, ivtmp.1053, pMvcCtx, tmp182,
	add	sl, r1, r0	@ tmp190, tmp191, temp.1061
	and	sl, sl, #1	@ tmp192, tmp190,
	mov	r1, #0	@ tmp187,
	str	r1, [r7], #4	@ tmp187, <variable>.DPB.fs_ltref
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	sl, #0	@ tmp192,
	beq	.L37	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r7], #4	@ tmp187, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.1061, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L37:
	add	r2, r2, #2	@ j, j,
	mov	ip, r7	@ tmp193, ivtmp.1053
	cmp	r0, r2	@ temp.1061, j
	str	r1, [ip], #4	@ tmp187, <variable>.DPB.fs_ltref
	str	r1, [r7, #4]	@ tmp187, <variable>.DPB.fs_ltref
	add	r7, ip, #4	@ ivtmp.1053, tmp193,
	bhi	.L37	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_UpdateLTReflist, .-MVC_UpdateLTReflist
	.align	2
	.global	MVC_UpdateReflist
	.type	MVC_UpdateReflist, %function
MVC_UpdateReflist:
	.fnstart
.LFB1545:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11123112	@ tmp141,
	movt	r8, #:upper16:11123112	@ tmp141,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, #0	@ <variable>.DPB.size,
	beq	.L48	@,
	movw	r5, #:lower16:11122920	@ ivtmp.1096,
	movt	r5, #:upper16:11122920	@ ivtmp.1096,
	mov	sl, #0	@ j,
	movw	r9, #:lower16:11152584	@ tmp159,
	add	r5, r0, r5	@ ivtmp.1096, pMvcCtx, ivtmp.1096
	movt	r9, #:upper16:11152584	@ tmp159,
	mov	r6, sl	@ i, j
.L50:
	ldr	r4, [r5, #0]	@ D.38956, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.1096, ivtmp.1096,
	cmp	r4, #0	@ D.38956,
	mov	r0, r4	@, D.38956
	beq	.L49	@,
	bl	MVC_ShortTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L49	@,
	ldr	r3, [r7, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	r2, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r2, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	movweq	r3, #:lower16:2780746	@ tmp147,
	movteq	r3, #:upper16:2780746	@ tmp147,
	addeq	r3, sl, r3	@ tmp147, j, tmp147
	addeq	sl, sl, #1	@ j, j,
	streq	r4, [r7, r3, asl #2]	@ D.38956, <variable>.DPB.fs_ref
.L49:
	ldr	r0, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i
	bhi	.L50	@,
.L48:
	movw	ip, #:lower16:11123112	@ tmp152,
	movt	ip, #:upper16:11123112	@ tmp152,
	movw	r1, #:lower16:11123120	@ tmp151,
	movt	r1, #:upper16:11123120	@ tmp151,
	ldr	r0, [r7, ip]	@ temp.1099, <variable>.DPB.size
	str	sl, [r7, r1]	@ j, <variable>.DPB.ref_frames_in_buffer
	cmp	r0, sl	@ temp.1099, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r2, #:lower16:2780746	@ tmp153,
	movt	r2, #:upper16:2780746	@ tmp153,
	add	r3, sl, r2	@ tmp153, j, tmp153
	add	r2, sl, #1	@ j, j,
	cmp	r0, r2	@ temp.1099, j
	mvn	r1, sl	@ tmp162, j
	add	r7, r7, r3, asl #2	@, ivtmp.1092, pMvcCtx, tmp153,
	add	sl, r1, r0	@ tmp161, tmp162, temp.1099
	and	sl, sl, #1	@ tmp163, tmp161,
	mov	r1, #0	@ tmp158,
	str	r1, [r7], #4	@ tmp158, <variable>.DPB.fs_ref
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	sl, #0	@ tmp163,
	beq	.L52	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r7], #4	@ tmp158, <variable>.DPB.fs_ref
	cmp	r0, r2	@ temp.1099, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L52:
	add	r2, r2, #2	@ j, j,
	mov	ip, r7	@ tmp165, ivtmp.1092
	cmp	r0, r2	@ temp.1099, j
	str	r1, [ip], #4	@ tmp158, <variable>.DPB.fs_ref
	str	r1, [r7, #4]	@ tmp158, <variable>.DPB.fs_ref
	add	r7, ip, #4	@ ivtmp.1092, tmp165,
	bhi	.L52	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_UpdateReflist, .-MVC_UpdateReflist
	.align	2
	.global	MVC_GetPicNumX
	.type	MVC_GetPicNumX, %function
MVC_GetPicNumX:
	.fnstart
.LFB1546:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r0, [r0, #552]	@ CurrPicNum, <variable>.frame_num
	mvn	r1, r1	@ tmp141, difference_of_pic_nums_minus1
	cmp	r3, #0	@ <variable>.structure,
	movne	r0, r0, asl #1	@ tmp138, <variable>.frame_num,
	addne	r0, r0, #1	@ CurrPicNum, tmp138,
	add	r0, r0, r1	@, CurrPicNum, tmp141
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetPicNumX, .-MVC_GetPicNumX
	.align	2
	.global	MVC_MarkPicLTRef
	.type	MVC_MarkPicLTRef, %function
MVC_MarkPicLTRef:
	.fnstart
.LFB1552:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r3, #3]	@ zero_extendqisi2	@ D.39235, <variable>.structure
	mov	r9, r1	@ long_term_frame_idx, long_term_frame_idx
	cmp	r3, #0	@ D.39235,
	beq	.L66	@,
	movw	r1, #:lower16:11123120	@ tmp155,
	movt	r1, #:upper16:11123120	@ tmp155,
	ldr	r8, [r0, r1]	@ D.39255, <variable>.DPB.ref_frames_in_buffer
	cmp	r8, #0	@ D.39255,
	beq	.L76	@,
	movw	r6, #:lower16:11122984	@ ivtmp.1161,
	movt	r6, #:upper16:11122984	@ ivtmp.1161,
	add	r6, r0, r6	@ ivtmp.1161, pMvcCtx, ivtmp.1161
	sub	r7, r8, #1	@ tmp291, D.39255,
	and	r7, r7, #1	@, tmp291,
	str	r7, [fp, #-48]	@, %sfp
	ldr	r1, [r6, #0]	@ temp.1171, <variable>.DPB.fs_ref
	movw	sl, #:lower16:11152584	@ tmp285,
	mov	ip, #0	@ i.1181,
	movt	sl, #:upper16:11152584	@ tmp285,
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ D.39257, <variable>.is_reference
	tst	r4, #1	@ D.39257,
	beq	.L86	@,
	ldr	r5, [r1, #636]	@ tmp334,
	bic	r5, r5, #-16777216	@ tmp335, tmp334,
	bic	r5, r5, #255	@ tmp335, tmp335,
	cmp	r5, #65536	@ tmp335,
	beq	.L115	@,
.L86:
	tst	r4, #2	@ D.39257,
	beq	.L87	@,
	ldr	r4, [r1, #672]	@ tmp326,
	bic	r4, r4, #-16777216	@ tmp327, tmp326,
	bic	r4, r4, #255	@ tmp327, tmp327,
	cmp	r4, #65536	@ tmp327,
	beq	.L116	@,
.L87:
	mov	ip, #1	@ i.1181,
	cmp	r8, ip	@ D.39255, i.1181
	add	r6, r6, #4	@ ivtmp.1161, ivtmp.1161,
	bls	.L76	@,
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, #0	@,
	beq	.L110	@,
	ldr	r1, [r6, #0]	@ temp.1171, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ D.39257, <variable>.is_reference
	tst	r4, #1	@ D.39257,
	beq	.L89	@,
	ldr	r5, [r1, #636]	@ tmp353,
	bic	r5, r5, #-16777216	@ tmp354, tmp353,
	bic	r5, r5, #255	@ tmp354, tmp354,
	cmp	r5, #65536	@ tmp354,
	beq	.L117	@,
.L89:
	tst	r4, #2	@ D.39257,
	beq	.L90	@,
	ldr	r4, [r1, #672]	@ tmp345,
	bic	r4, r4, #-16777216	@ tmp346, tmp345,
	bic	r4, r4, #255	@ tmp346, tmp346,
	cmp	r4, #65536	@ tmp346,
	beq	.L118	@,
.L90:
	add	ip, ip, #1	@ i.1181, i.1181,
	add	r6, r6, #4	@ ivtmp.1161, ivtmp.1161,
	cmp	r8, ip	@ D.39255, i.1181
	bls	.L76	@,
.L110:
	str	r3, [fp, #-48]	@ D.39235, %sfp
	b	.L75	@
.L71:
	tst	r3, #2	@ D.39257,
	beq	.L73	@,
	ldr	r3, [r1, #672]	@ tmp245,
	bic	r3, r3, #-16777216	@ tmp243, tmp245,
	bic	r3, r3, #255	@ tmp243, tmp243,
	cmp	r3, #65536	@ tmp243,
	beq	.L119	@,
.L73:
	ldr	r1, [r6, #4]	@ temp.1171, <variable>.DPB.fs_ref
	add	ip, ip, #1	@ i.1181, i.1181,
	add	r6, r6, #4	@ tmp295, ivtmp.1161,
	mov	r5, ip	@ tmp294, i.1181
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ D.39257, <variable>.is_reference
	tst	r3, #1	@ D.39257,
	beq	.L93	@,
	ldr	r4, [r1, #636]	@ tmp370,
	bic	r4, r4, #-16777216	@ tmp371, tmp370,
	bic	r4, r4, #255	@ tmp371, tmp371,
	cmp	r4, #65536	@ tmp371,
	beq	.L120	@,
.L93:
	tst	r3, #2	@ D.39257,
	beq	.L94	@,
	ldr	r3, [r1, #672]	@ tmp362,
	bic	r3, r3, #-16777216	@ tmp363, tmp362,
	bic	r3, r3, #255	@ tmp363, tmp363,
	cmp	r3, #65536	@ tmp363,
	beq	.L121	@,
.L94:
	add	ip, r5, #1	@ i.1181, tmp294,
	add	r6, r6, #4	@ ivtmp.1161, tmp295,
	cmp	r8, ip	@ D.39255, i.1181
	bls	.L76	@,
.L75:
	ldr	r1, [r6, #0]	@ temp.1171, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ D.39257, <variable>.is_reference
	tst	r3, #1	@ D.39257,
	beq	.L71	@,
	ldr	r4, [r1, #636]	@ tmp203,
	bic	r4, r4, #-16777216	@ tmp201, tmp203,
	bic	r4, r4, #255	@ tmp201, tmp201,
	cmp	r4, #65536	@ tmp201,
	bne	.L71	@,
	ldr	r4, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r4, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L71	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L71	@,
	ldrb	r3, [r1, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r3, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L113	@,
	ldr	r3, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L73	@,
.L113:
	ldr	r3, [fp, #-48]	@ D.39235, %sfp
.L72:
	movw	r2, #:lower16:2780746	@ tmp210,
	movt	r2, #:upper16:2780746	@ tmp210,
	add	r2, ip, r2	@ tmp210, i.1181, tmp210
	str	r9, [r1, #28]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, #1	@ D.39235,
	movne	r3, #0	@, tmp215
	moveq	r3, #1	@, tmp215
	ldr	r1, [r0, r2, asl #2]	@ tmp212, <variable>.DPB.fs_ref
	add	r9, r3, r9, asl #1	@, tmp216, tmp215, long_term_frame_idx,
	str	r9, [r1, #644]	@ tmp216, <variable>.top_field.long_term_pic_num
	mov	r1, #1	@ tmp220,
	ldr	ip, [r0, r2, asl #2]	@ tmp219, <variable>.DPB.fs_ref
	strb	r1, [ip, #637]	@ tmp220, <variable>.top_field.is_long_term
	mov	ip, #0	@ tmp225,
	ldr	r3, [r0, r2, asl #2]	@ tmp224, <variable>.DPB.fs_ref
	strb	ip, [r3, #638]	@ tmp225, <variable>.top_field.is_short_term
	ldr	r3, [r0, r2, asl #2]	@ temp.1178, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #600]	@ zero_extendqisi2	@ D.39280, <variable>.frame.structure
	cmp	r1, #3	@ D.39280,
	cmpne	r1, #0	@, D.39280,
	bne	.L76	@,
	ldrb	ip, [r3, #637]	@ zero_extendqisi2	@ D.39286, <variable>.top_field.is_long_term
	ldrb	r1, [r3, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r1, ip	@ <variable>.bottom_field.is_long_term, D.39286
	streqb	r1, [r3, #601]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r1, [r0, r2, asl #2]	@ temp.1180, <variable>.DPB.fs_ref
	ldreqb	r0, [r1, #638]	@ zero_extendqisi2	@ <variable>.top_field.is_short_term, <variable>.top_field.is_short_term
	streqb	r0, [r1, #602]	@ <variable>.top_field.is_short_term, <variable>.frame.is_short_term
.L76:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L66:
	movw	ip, #:lower16:11123120	@ tmp156,
	movt	ip, #:upper16:11123120	@ tmp156,
	ldr	r6, [r0, ip]	@ temp.1182, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ temp.1182,
	beq	.L76	@,
	movw	r5, #:lower16:11122984	@ ivtmp.1156,
	movt	r5, #:upper16:11122984	@ ivtmp.1156,
	add	ip, r0, r5	@ ivtmp.1156, pMvcCtx, ivtmp.1156
	sub	r4, r6, #1	@ tmp286, temp.1182,
	and	r5, r4, #1	@ tmp288, tmp286,
	movw	r7, #:lower16:11152584	@ tmp284,
	ldr	r1, [ip, #0]	@ D.39239, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11152584	@ tmp284,
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	beq	.L122	@,
.L79:
	mov	r3, #1	@ i,
	cmp	r3, r6	@ i, temp.1182
	add	ip, ip, #4	@ ivtmp.1156, ivtmp.1156,
	bcs	.L76	@,
	cmp	r5, #0	@ tmp288,
	beq	.L70	@,
	ldr	r1, [ip, #0]	@ D.39239, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	beq	.L123	@,
.L81:
	add	r3, r3, #1	@ i, i,
	add	ip, ip, #4	@ ivtmp.1156, ivtmp.1156,
	cmp	r3, r6	@ i, temp.1182
	bcc	.L70	@,
	b	.L76	@
.L69:
	ldr	r1, [ip, #4]	@ D.39239, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	ip, r3	@ tmp289, i
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	beq	.L124	@,
.L84:
	add	r3, ip, #1	@ i, tmp289,
	add	ip, r4, #4	@ ivtmp.1156, tmp290,
	cmp	r3, r6	@ i, temp.1182
	bcs	.L76	@,
.L70:
	ldr	r1, [ip, #0]	@ D.39239, <variable>.DPB.fs_ref
	add	r4, ip, #4	@ tmp290, ivtmp.1156,
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L69	@,
	ldr	r5, [r1, #600]	@ tmp161,
	bic	r5, r5, #-16777216	@ tmp159, tmp161,
	bic	r5, r5, #255	@ tmp159, tmp159,
	cmp	r5, #65536	@ tmp159,
	bne	.L69	@,
	ldr	r5, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L69	@,
	ldr	r8, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L102	@,
	ldr	r1, [ip, #4]	@ D.39239, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	ip, r3	@ tmp289, i
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L84	@,
.L124:
	ldr	r5, [r1, #600]	@ tmp319,
	bic	r5, r5, #-16777216	@ tmp320, tmp319,
	bic	r5, r5, #255	@ tmp320, tmp320,
	cmp	r5, #65536	@ tmp320,
	bne	.L84	@,
	ldr	r5, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L84	@,
	ldr	r8, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L84	@,
	b	.L102	@
.L120:
	ldr	r4, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r4, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L93	@,
	ldr	r4, [r1, #56]	@, <variable>.view_id
	ldr	r7, [r0, sl]	@, <variable>.CurrPic.view_id
	cmp	r4, r7	@,
	bne	.L93	@,
	ldrb	r3, [r1, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r3, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L113	@,
	ldr	r3, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L94	@,
	b	.L113	@
.L119:
	ldr	r3, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L73	@,
	ldr	r4, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L73	@,
	ldrb	r3, [r1, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r3, #1	@ <variable>.top_field.is_long_term,
	bne	.L111	@,
	ldr	r3, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L73	@,
.L111:
	ldr	r3, [fp, #-48]	@ D.39235, %sfp
.L74:
	movw	r2, #:lower16:2780746	@ tmp252,
	movt	r2, #:upper16:2780746	@ tmp252,
	add	r2, ip, r2	@ tmp252, i.1181, tmp252
	str	r9, [r1, #28]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, #2	@ D.39235,
	movne	r3, #0	@, tmp257
	moveq	r3, #1	@, tmp257
	ldr	ip, [r0, r2, asl #2]	@ tmp254, <variable>.DPB.fs_ref
	add	r9, r3, r9, asl #1	@, tmp258, tmp257, long_term_frame_idx,
	str	r9, [ip, #680]	@ tmp258, <variable>.bottom_field.long_term_pic_num
	mov	ip, #1	@ tmp262,
	ldr	r1, [r0, r2, asl #2]	@ tmp261, <variable>.DPB.fs_ref
	strb	ip, [r1, #673]	@ tmp262, <variable>.bottom_field.is_long_term
	mov	r1, #0	@ tmp267,
	ldr	r3, [r0, r2, asl #2]	@ tmp266, <variable>.DPB.fs_ref
	strb	r1, [r3, #674]	@ tmp267, <variable>.bottom_field.is_short_term
	ldr	r3, [r0, r2, asl #2]	@ temp.1191, <variable>.DPB.fs_ref
	ldrb	ip, [r3, #600]	@ zero_extendqisi2	@ D.39308, <variable>.frame.structure
	cmp	ip, #3	@ D.39308,
	cmpne	ip, #0	@, D.39308,
	bne	.L76	@,
	ldrb	ip, [r3, #637]	@ zero_extendqisi2	@ temp.1192, <variable>.top_field.is_long_term
	ldrb	r1, [r3, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r1, ip	@ <variable>.bottom_field.is_long_term, temp.1192
	streqb	r1, [r3, #601]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r1, [r0, r2, asl #2]	@ temp.1194, <variable>.DPB.fs_ref
	ldreqb	r0, [r1, #674]	@ zero_extendqisi2	@ <variable>.bottom_field.is_short_term, <variable>.bottom_field.is_short_term
	streqb	r0, [r1, #602]	@ <variable>.bottom_field.is_short_term, <variable>.frame.is_short_term
	b	.L76	@
.L121:
	ldr	r3, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L94	@,
	ldr	r4, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L94	@,
	ldrb	r3, [r1, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r3, #1	@ <variable>.top_field.is_long_term,
	bne	.L111	@,
	ldr	r3, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L94	@,
	b	.L111	@
.L115:
	ldr	r5, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L86	@,
	ldr	r5, [r1, #56]	@, <variable>.view_id
	ldr	r7, [r0, sl]	@, <variable>.CurrPic.view_id
	cmp	r5, r7	@,
	bne	.L86	@,
	ldrb	r4, [r1, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r4, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r4, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L87	@,
	b	.L72	@
.L116:
	ldr	r4, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r4, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L87	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L87	@,
	ldrb	r4, [r1, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r4, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r4, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L87	@,
	b	.L74	@
.L117:
	ldr	r5, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L89	@,
	ldr	r7, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L89	@,
	ldrb	r4, [r1, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r4, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r4, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L90	@,
	b	.L72	@
.L118:
	ldr	r4, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r4, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L90	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L90	@,
	ldrb	r4, [r1, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r4, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r4, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L90	@,
	b	.L74	@
.L122:
	ldr	r4, [r1, #600]	@ tmp306,
	bic	r4, r4, #-16777216	@ tmp307, tmp306,
	bic	r4, r4, #255	@ tmp307, tmp307,
	cmp	r4, #65536	@ tmp307,
	bne	.L79	@,
	ldr	r4, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L79	@,
	ldr	r8, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L79	@,
.L102:
	movw	r2, #:lower16:2780746	@ tmp166,
	movt	r2, #:upper16:2780746	@ tmp166,
	add	r2, r3, r2	@ tmp166, i, tmp166
	str	r9, [r1, #28]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	mov	r1, #1	@ tmp172,
	mov	r3, #0	@ tmp187,
	ldr	ip, [r0, r2, asl #2]	@ tmp168, <variable>.DPB.fs_ref
	str	r9, [ip, #608]	@ long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	ip, [r0, r2, asl #2]	@ tmp171, <variable>.DPB.fs_ref
	strb	r1, [ip, #601]	@ tmp172, <variable>.frame.is_long_term
	ldr	ip, [r0, r2, asl #2]	@ tmp176, <variable>.DPB.fs_ref
	strb	r1, [ip, #637]	@ tmp172, <variable>.top_field.is_long_term
	ldr	ip, [r0, r2, asl #2]	@ tmp181, <variable>.DPB.fs_ref
	strb	r1, [ip, #673]	@ tmp172, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, r2, asl #2]	@ tmp186, <variable>.DPB.fs_ref
	strb	r3, [ip, #602]	@ tmp187, <variable>.frame.is_short_term
	ldr	r1, [r0, r2, asl #2]	@ tmp191, <variable>.DPB.fs_ref
	strb	r3, [r1, #638]	@ tmp187, <variable>.top_field.is_short_term
	ldr	r2, [r0, r2, asl #2]	@ tmp196, <variable>.DPB.fs_ref
	strb	r3, [r2, #674]	@ tmp187, <variable>.bottom_field.is_short_term
	b	.L76	@
.L123:
	ldr	r4, [r1, #600]	@ tmp313,
	bic	r4, r4, #-16777216	@ tmp314, tmp313,
	bic	r4, r4, #255	@ tmp314, tmp314,
	cmp	r4, #65536	@ tmp314,
	bne	.L81	@,
	ldr	r4, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L81	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L81	@,
	b	.L102	@
	.fnend
	.size	MVC_MarkPicLTRef, .-MVC_MarkPicLTRef
	.align	2
	.global	MVC_SetFrmRepeatCount
	.type	MVC_SetFrmRepeatCount, %function
MVC_SetFrmRepeatCount:
	.fnstart
.LFB1562:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r2, ip, #2032	@ tmp138, <variable>.s32FastForwardBackwardSpeed,
	add	r3, r2, #15	@ tmp138, tmp138,
	cmp	r3, #4096	@ tmp138,
	bcc	.L126	@,
	movw	r3, #:lower16:11123112	@ tmp145,
	movt	r3, #:upper16:11123112	@ tmp145,
	ldr	ip, [r0, #136]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldr	r2, [r0, r3]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r3, [r0, #132]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	add	r2, r2, ip, lsr #1	@, D.39747, <variable>.DPB.size, <variable>.PicOutCounter,
	add	ip, r2, #1	@ tmp147, D.39747,
	mov	r3, r3, lsr #1	@ D.39743, <variable>.NewPicCounter,
	cmp	r3, ip	@ D.39743, tmp147
	bcc	.L126	@,
	mvn	r2, r2	@ tmp148, D.39747
	add	ip, r2, r3	@ tmp149, tmp148, D.39743
	cmp	ip, #1	@ tmp149,
	movhi	ip, #2	@ tmp150,
	movls	ip, #1	@ tmp153,
	strhi	ip, [r1, #84]	@ tmp150, <variable>.u32RepeatCnt
	strls	ip, [r1, #84]	@ tmp153, <variable>.u32RepeatCnt
	ldrhi	ip, [r0, #136]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldrls	ip, [r0, #136]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	addhi	ip, ip, #4	@ tmp152, <variable>.PicOutCounter,
	addls	ip, ip, #2	@ tmp155, <variable>.PicOutCounter,
	str	ip, [r0, #136]	@ tmp155, <variable>.PicOutCounter
	ldmfd	sp, {fp, sp, pc}	@
.L126:
	mov	r0, #0	@ tmp157,
	str	r0, [r1, #84]	@ tmp157, <variable>.u32RepeatCnt
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_SetFrmRepeatCount, .-MVC_SetFrmRepeatCount
	.align	2
	.global	MVC_SplitFrmToFlds
	.type	MVC_SplitFrmToFlds, %function
MVC_SplitFrmToFlds:
	.fnstart
.LFB1565:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r4, [r0, #601]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	ldrb	ip, [r0, #602]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	mov	r5, #1	@ tmp138,
	ldr	r1, [r0, #624]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldrb	r2, [r0, #603]	@ zero_extendqisi2	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldr	r3, [r0, #604]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r5, [r0, #636]	@ tmp138, <variable>.top_field.structure
	mov	r5, #2	@ tmp148,
	strb	r4, [r0, #673]	@ <variable>.frame.is_long_term, <variable>.bottom_field.is_long_term
	str	r3, [r0, #676]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r0, #674]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r5, [r0, #672]	@ tmp148, <variable>.bottom_field.structure
	str	r1, [r0, #696]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	strb	r2, [r0, #675]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	r4, [r0, #637]	@ <variable>.frame.is_long_term, <variable>.top_field.is_long_term
	strb	ip, [r0, #638]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	r1, [r0, #660]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	strb	r2, [r0, #639]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r3, [r0, #640]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_SplitFrmToFlds, .-MVC_SplitFrmToFlds
	.align	2
	.global	MVC_CombineFldsToFrm
	.type	MVC_CombineFldsToFrm, %function
MVC_CombineFldsToFrm:
	.fnstart
.LFB1566:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r1, [r0, #688]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	ldr	r3, [r0, #652]	@ <variable>.top_field.poc, <variable>.top_field.poc
	ldr	r4, [r0, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, r3	@ <variable>.bottom_field.poc, <variable>.top_field.poc
	movlt	r3, r1	@ D.39866, <variable>.bottom_field.poc
	movge	r3, r3	@ D.39866, <variable>.top_field.poc
	ldr	r2, [r0, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldrb	r1, [r0, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, #640]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	add	r2, r4, r2	@ tmp144, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	cmp	r1, #0	@ <variable>.bottom_field.is_long_term,
	mov	r4, #3	@ tmp142,
	mov	r2, r2, lsr #1	@ D.39871, tmp144,
	str	r3, [r0, #32]	@ D.39866, <variable>.poc
	strb	r4, [r0, #600]	@ tmp142, <variable>.frame.structure
	str	ip, [r0, #604]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	str	r3, [r0, #616]	@ D.39866, <variable>.frame.poc
	str	r2, [r0, #624]	@ D.39871, <variable>.frame.err_level
	beq	.L135	@,
	ldrb	ip, [r0, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	subs	r1, ip, #0	@ prephitmp.1272, <variable>.top_field.is_long_term,
	movne	r1, #1	@ prephitmp.1272
.L135:
	ldr	r3, [r0, #672]	@ tmp154,
	strb	r1, [r0, #601]	@ prephitmp.1272, <variable>.frame.is_long_term
	bic	ip, r3, #-16777216	@ tmp152, tmp154,
	bic	r3, ip, #255	@ tmp152, tmp152,
	cmp	r3, #0	@ tmp152,
	beq	.L136	@,
	ldr	ip, [r0, #636]	@ tmp157,
	bic	r3, ip, #-16777216	@ tmp155, tmp157,
	bic	ip, r3, #255	@ tmp155, tmp155,
	cmp	ip, #0	@ tmp155,
	bne	.L139	@,
.L136:
	mov	r1, #0	@ prephitmp.1261,
.L137:
	ldrb	ip, [r0, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldrb	r3, [r0, #639]	@ zero_extendqisi2	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	str	r2, [r0, #44]	@ D.39871, <variable>.err_level
	cmp	ip, r3	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	movcs	r3, ip	@ D.39895, <variable>.bottom_field.pic_type
	strb	r1, [r0, #602]	@ prephitmp.1261, <variable>.frame.is_short_term
	strb	r3, [r0, #0]	@ D.39895, <variable>.pic_type
	strb	r3, [r0, #603]	@ D.39895, <variable>.frame.pic_type
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L139:
	rsbs	r1, r1, #1	@ prephitmp.1261, prephitmp.1272
	movcc	r1, #0	@ prephitmp.1261
	b	.L137	@
	.fnend
	.size	MVC_CombineFldsToFrm, .-MVC_CombineFldsToFrm
	.align	2
	.global	MVC_UpdateCurrFrameInfo
	.type	MVC_UpdateCurrFrameInfo, %function
MVC_UpdateCurrFrameInfo:
	.fnstart
.LFB1577:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:11152504	@ tmp152,
	movw	r5, #:lower16:11151962	@ tmp153,
	movt	r6, #:upper16:11152504	@ tmp152,
	movt	r5, #:upper16:11151962	@ tmp153,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	ldr	r4, [r3, r6]	@ pCurrFrame, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11151964	@ tmp156,
	ldrb	r1, [r3, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	movt	r0, #:upper16:11151964	@ tmp156,
	strb	r1, [r4, #1]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldrb	r2, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	bne	.L141	@,
	movw	r7, #:lower16:11151965	@ tmp158,
	movt	r7, #:upper16:11151965	@ tmp158,
	ldrb	r1, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	cmp	r1, #0	@ <variable>.CurrPic.is_short_term,
	bne	.L141	@,
.L142:
	movw	r5, #:lower16:11152512	@ tmp161,
	movt	r5, #:upper16:11152512	@ tmp161,
	strb	r1, [r4, #3]	@ iftmp.555, <variable>.is_reference
	movw	ip, #:lower16:11152556	@ tmp163,
	ldr	r2, [r3, r5]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	movt	ip, #:upper16:11152556	@ tmp163,
	movw	r5, #:lower16:11151972	@ tmp165,
	movt	r5, #:upper16:11151972	@ tmp165,
	movw	r8, #:lower16:11152524	@ tmp168,
	movt	r8, #:upper16:11152524	@ tmp168,
	str	r2, [r4, #20]	@ <variable>.CurrPic.frame_num, <variable>.frame_num
	movw	r7, #:lower16:11152580	@ tmp170,
	ldr	sl, [r3, ip]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movt	r7, #:upper16:11152580	@ tmp170,
	movw	r6, #:lower16:11152516	@ tmp172,
	movt	r6, #:upper16:11152516	@ tmp172,
	movw	r0, #:lower16:11151969	@ tmp174,
	movt	r0, #:upper16:11151969	@ tmp174,
	str	sl, [r4, #44]	@ <variable>.CurrPic.err_level, <variable>.err_level
	movw	r2, #:lower16:11151967	@ tmp176,
	ldrb	sl, [r3, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	movt	r2, #:upper16:11151967	@ tmp176,
	movw	r1, #:lower16:11151963	@ tmp179,
	movt	r1, #:upper16:11151963	@ tmp179,
	strb	sl, [r4, #0]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r8, [r3, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	r8, [r4, #32]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r7, [r3, r7]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	str	r7, [r4, #48]	@ <variable>.CurrPic.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r6, [r3, r6]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.CurrPic.long_term_frame_idx
	str	r6, [r4, #28]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.long_term_frame_idx
	ldrb	r0, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	str	r0, [r4, #40]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	r0, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r0, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r0, #3	@ iftmp.557,
	movne	r0, #0	@ iftmp.557,
	strb	r0, [r4, #4]	@ iftmp.557, <variable>.mode_skip_flag
	ldrb	r1, [r3, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r1, #1	@ <variable>.CurrPic.structure,
	beq	.L147	@,
	bcs	.L161	@,
	movw	r6, #:lower16:11151964	@ tmp185,
	movt	r6, #:upper16:11151964	@ tmp185,
	str	r4, [r4, #604]	@ pCurrFrame, <variable>.frame.frame_store
	mov	sl, #3	@ tmp181,
	mov	r8, #0	@ tmp183,
	strb	sl, [r4, #2]	@ tmp181, <variable>.is_used
	strb	r8, [r4, #600]	@ tmp183, <variable>.frame.structure
	movw	r0, #:lower16:11151965	@ tmp187,
	ldrb	r8, [r3, r6]	@ zero_extendqisi2	@ temp.1303, <variable>.CurrPic.is_long_term
	movt	r0, #:upper16:11151965	@ tmp187,
	movw	r7, #:lower16:11152528	@ tmp189,
	movt	r7, #:upper16:11152528	@ tmp189,
	movw	r6, #:lower16:11152532	@ tmp194,
	movt	r6, #:upper16:11152532	@ tmp194,
	strb	r8, [r4, #601]	@ temp.1303, <variable>.frame.is_long_term
	movw	lr, #:lower16:11152536	@ tmp196,
	ldrb	sl, [r3, r0]	@ zero_extendqisi2	@ temp.1304, <variable>.CurrPic.is_short_term
	movt	lr, #:upper16:11152536	@ tmp196,
	movw	r1, #:lower16:11151976	@,
	movt	r1, #:upper16:11151976	@,
	add	r1, r3, r1	@, pMvcCtx,
	add	r0, r4, #72	@, pCurrFrame,
	strb	sl, [r4, #602]	@ temp.1304, <variable>.frame.is_short_term
	mov	r2, #528	@,
	ldr	r7, [r3, r7]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	str	r7, [r4, #616]	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	ldrb	r7, [r3, r5]	@ zero_extendqisi2	@ temp.1305, <variable>.CurrPic.pic_type
	strb	r7, [r4, #603]	@ temp.1305, <variable>.frame.pic_type
	ldr	r5, [r3, ip]	@ temp.1306, <variable>.CurrPic.err_level
	str	r5, [r4, #624]	@ temp.1306, <variable>.frame.err_level
	ldr	ip, [r3, r6]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	ip, [r4, #652]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	r3, [r3, lr]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	str	r3, [r4, #688]	@ <variable>.CurrPic.bottompoc, <variable>.bottom_field.poc
	bl	memcpy	@
	mov	ip, #1	@ tmp205,
	mov	r3, #2	@ tmp210,
	strb	r8, [r4, #673]	@ temp.1303, <variable>.bottom_field.is_long_term
	strb	sl, [r4, #674]	@ temp.1304, <variable>.bottom_field.is_short_term
	str	r5, [r4, #696]	@ temp.1306, <variable>.bottom_field.err_level
	strb	ip, [r4, #636]	@ tmp205, <variable>.top_field.structure
	strb	r3, [r4, #672]	@ tmp210, <variable>.bottom_field.structure
	strb	r7, [r4, #675]	@ temp.1305, <variable>.bottom_field.pic_type
	str	r4, [r4, #676]	@ pCurrFrame, <variable>.bottom_field.frame_store
	strb	r8, [r4, #637]	@ temp.1303, <variable>.top_field.is_long_term
	strb	sl, [r4, #638]	@ temp.1304, <variable>.top_field.is_short_term
	str	r5, [r4, #660]	@ temp.1306, <variable>.top_field.err_level
	strb	r7, [r4, #639]	@ temp.1305, <variable>.top_field.pic_type
	str	r4, [r4, #640]	@ pCurrFrame, <variable>.top_field.frame_store
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L141:
	mov	r1, #3	@ iftmp.555,
	b	.L142	@
.L161:
	cmp	r1, #2	@ <variable>.CurrPic.structure,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	lr, #:lower16:11151964	@ tmp258,
	movt	lr, #:upper16:11151964	@ tmp258,
	str	r4, [r4, #676]	@ pCurrFrame, <variable>.bottom_field.frame_store
	mov	r6, #1	@ tmp256,
	strb	r6, [r4, #672]	@ tmp256, <variable>.bottom_field.structure
	movw	r7, #:lower16:11151965	@ tmp261,
	ldrb	r8, [r3, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movt	r7, #:upper16:11151965	@ tmp261,
	movw	lr, #:lower16:11152532	@ tmp264,
	movt	lr, #:upper16:11152532	@ tmp264,
	movw	r6, #:lower16:11151961	@ tmp270,
	movt	r6, #:upper16:11151961	@ tmp270,
	strb	r8, [r4, #673]	@ <variable>.CurrPic.is_long_term, <variable>.bottom_field.is_long_term
	mov	r8, #0	@ tmp269,
	ldrb	r7, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	strb	r7, [r4, #674]	@ <variable>.CurrPic.is_short_term, <variable>.bottom_field.is_short_term
	ldr	lr, [r3, lr]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	lr, [r4, #688]	@ <variable>.CurrPic.toppoc, <variable>.bottom_field.poc
	ldrb	lr, [r3, r5]	@ zero_extendqisi2	@ temp.1318, <variable>.CurrPic.pic_type
	strb	lr, [r4, #675]	@ temp.1318, <variable>.bottom_field.pic_type
	ldr	ip, [r3, ip]	@ temp.1319, <variable>.CurrPic.err_level
	str	r8, [r4, #40]	@ tmp269, <variable>.MbaffFrameFlag
	str	ip, [r4, #696]	@ temp.1319, <variable>.bottom_field.err_level
	ldrb	r5, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r5, r8	@ <variable>.CurrPic.field_pair_flag,
	beq	.L162	@,
	ldr	r1, [r4, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	mov	r5, #3	@ tmp282,
	strb	r5, [r4, #2]	@ tmp282, <variable>.is_used
	add	r7, ip, r1	@ temp.1322, temp.1319, <variable>.top_field.err_level
	str	r7, [r4, #624]	@ temp.1322, <variable>.frame.err_level
	str	r7, [r4, #44]	@ temp.1322, <variable>.err_level
	movw	ip, #:lower16:11151984	@ tmp289,
	ldrb	r2, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	movt	ip, #:upper16:11151984	@ tmp289,
	mvn	r1, #0	@,
	cmp	r2, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	r8, r0, #2	@ iftmp.560, iftmp.557,
	strb	r8, [r4, #4]	@ iftmp.560, <variable>.mode_skip_flag
	ldrd	r6, [r3, ip]	@ temp.1324, pMvcCtx, tmp289
	mvn	r0, #0	@ tmp290,
	cmp	r7, r1	@ temp.1324, tmp290
	cmpeq	r6, r0	@ temp.1324, tmp290
	beq	.L158	@,
	ldrd	r8, [r4, #80]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	r9, r1	@ <variable>.fs_image.PTS, tmp290
	cmpeq	r8, r0	@ <variable>.fs_image.PTS, tmp290
	beq	.L163	@,
.L158:
	ldrb	r1, [r4, #639]	@ zero_extendqisi2	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L160	@
.L147:
	movw	r6, #:lower16:11151964	@ tmp215,
	movt	r6, #:upper16:11151964	@ tmp215,
	strb	r1, [r4, #636]	@ <variable>.CurrPic.structure, <variable>.top_field.structure
	movw	r7, #:lower16:11151965	@ tmp218,
	str	r4, [r4, #640]	@ pCurrFrame, <variable>.top_field.frame_store
	movt	r7, #:upper16:11151965	@ tmp218,
	ldrb	sl, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movw	lr, #:lower16:11152532	@ tmp221,
	movt	lr, #:upper16:11152532	@ tmp221,
	movw	r6, #:lower16:11151961	@ tmp227,
	movt	r6, #:upper16:11151961	@ tmp227,
	mov	r8, #0	@ tmp226,
	strb	sl, [r4, #637]	@ <variable>.CurrPic.is_long_term, <variable>.top_field.is_long_term
	ldrb	r7, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	strb	r7, [r4, #638]	@ <variable>.CurrPic.is_short_term, <variable>.top_field.is_short_term
	ldr	lr, [r3, lr]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	lr, [r4, #652]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldrb	lr, [r3, r5]	@ zero_extendqisi2	@ temp.1310, <variable>.CurrPic.pic_type
	strb	lr, [r4, #639]	@ temp.1310, <variable>.top_field.pic_type
	ldr	ip, [r3, ip]	@ temp.1311, <variable>.CurrPic.err_level
	str	r8, [r4, #40]	@ tmp226, <variable>.MbaffFrameFlag
	str	ip, [r4, #660]	@ temp.1311, <variable>.top_field.err_level
	ldrb	r5, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r5, r8	@ <variable>.CurrPic.field_pair_flag,
	beq	.L164	@,
	ldr	r1, [r4, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	mov	r5, #3	@ tmp240,
	strb	r5, [r4, #2]	@ tmp240, <variable>.is_used
	add	r6, ip, r1	@ D.40665, temp.1311, <variable>.bottom_field.err_level
	str	r6, [r4, #624]	@ D.40665, <variable>.frame.err_level
	str	r6, [r4, #44]	@ D.40665, <variable>.err_level
	mvn	r1, #0	@,
	ldrb	r7, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	movw	r2, #:lower16:11151984	@ tmp247,
	movt	r2, #:upper16:11151984	@ tmp247,
	cmp	r7, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	r8, r0, #1	@ iftmp.558, iftmp.557,
	strb	r8, [r4, #4]	@ iftmp.558, <variable>.mode_skip_flag
	ldrd	r6, [r3, r2]	@ D.40672, pMvcCtx, tmp247
	mvn	r0, #0	@ tmp248,
	cmp	r7, r1	@ D.40672, tmp248
	cmpeq	r6, r0	@ D.40672, tmp248
	beq	.L152	@,
	ldrd	r8, [r4, #80]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	r9, r1	@ <variable>.fs_image.PTS, tmp248
	cmpeq	r8, r0	@ <variable>.fs_image.PTS, tmp248
	beq	.L165	@,
.L152:
	ldrb	r1, [r4, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
.L160:
	movw	ip, #:lower16:11152524	@ tmp296,
	movt	ip, #:upper16:11152524	@ tmp296,
	cmp	r1, lr	@ <variable>.top_field.pic_type, temp.1318
	movcs	lr, r1	@ tmp294, <variable>.top_field.pic_type
	strb	lr, [r4, #0]	@ tmp294, <variable>.pic_type
	ldr	lr, [r3, ip]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	mov	r0, r4	@, pCurrFrame
	str	lr, [r4, #32]	@ <variable>.CurrPic.thispoc, <variable>.poc
	bl	MVC_CombineFldsToFrm	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L162:
	movw	r0, #:lower16:11151976	@,
	movt	r0, #:upper16:11151976	@,
	strb	r1, [r4, #2]	@ <variable>.CurrPic.structure, <variable>.is_used
	add	r1, r3, r0	@, pMvcCtx,
	str	ip, [r4, #624]	@ temp.1319, <variable>.frame.err_level
	add	r0, r4, #72	@, pCurrFrame,
	str	ip, [r4, #44]	@ temp.1319, <variable>.err_level
	ldrb	r3, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	mov	r2, #528	@,
	cmp	r3, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r3, #2	@ iftmp.559,
	movne	r3, r8	@ iftmp.559,
	strb	r3, [r4, #4]	@ iftmp.559, <variable>.mode_skip_flag
	bl	memcpy	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L164:
	strb	r1, [r4, #2]	@ <variable>.CurrPic.structure, <variable>.is_used
	movw	r1, #:lower16:11151976	@,
	str	ip, [r4, #624]	@ temp.1311, <variable>.frame.err_level
	movt	r1, #:upper16:11151976	@,
	str	ip, [r4, #44]	@ temp.1311, <variable>.err_level
	add	r1, r3, r1	@, pMvcCtx,
	ldrb	ip, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	add	r0, r4, #72	@, pCurrFrame,
	mov	r2, #528	@,
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	r3, #0	@, tmp233
	moveq	r3, #1	@, tmp233
	strb	r3, [r4, #4]	@ tmp233, <variable>.mode_skip_flag
	bl	memcpy	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L165:
	strd	r6, [r4, #80]	@ D.40672, pCurrFrame,
	b	.L152	@
.L163:
	strd	r6, [r4, #80]	@ temp.1324, pCurrFrame,
	ldrb	r1, [r4, #639]	@ zero_extendqisi2	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L160	@
	.fnend
	.size	MVC_UpdateCurrFrameInfo, .-MVC_UpdateCurrFrameInfo
	.align	2
	.global	MVC_GetShortTermPicPoint
	.type	MVC_GetShortTermPicPoint, %function
MVC_GetShortTermPicPoint:
	.fnstart
.LFB1583:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117161	@ tmp144,
	movt	r3, #:upper16:11117161	@ tmp144,
	ldrb	r4, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r4, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L168	@,
	movw	r2, #:lower16:11117162	@ tmp146,
	movt	r2, #:upper16:11117162	@ tmp146,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r4, #2	@ structure,
	moveq	r4, #1	@ structure,
.L168:
	movw	ip, #:lower16:11123120	@ tmp148,
	movt	ip, #:upper16:11123120	@ tmp148,
	ldr	r6, [r0, ip]	@ D.41157, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.41157,
	beq	.L170	@,
	cmp	r4, #0	@ structure,
	movw	r5, #:lower16:11122984	@ ivtmp.1354,
	sub	r2, r6, #1	@ tmp166, D.41157,
	movt	r5, #:upper16:11122984	@ ivtmp.1354,
	add	r3, r0, r5	@ ivtmp.1354, pMvcCtx, ivtmp.1354
	and	r5, r2, #1	@ tmp168, tmp166,
	bne	.L178	@,
	ldr	r2, [r3, #0]	@ D.41122, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L180	@,
	ldr	ip, [r2, #600]	@ tmp185,
	bic	r0, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, r0, #255	@ tmp186, tmp186,
	cmp	ip, #65536	@ tmp186,
	bne	.L180	@,
	ldr	r0, [r2, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L197	@,
.L180:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.41157, i
	add	r3, r3, #4	@ ivtmp.1354, ivtmp.1354,
	bls	.L170	@,
	cmp	r5, #0	@ tmp168,
	beq	.L175	@,
	cmp	r4, #0	@ structure,
	beq	.L198	@,
	ldr	r0, [r3, #0]	@ temp.1357, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #3]	@ zero_extendqisi2	@ D.41135, <variable>.is_reference
	tst	r2, #1	@ D.41135,
	beq	.L183	@,
	ldr	r5, [r0, #636]	@ tmp194,
	bic	r5, r5, #-16777216	@ tmp195, tmp194,
	bic	r5, r5, #255	@ tmp195, tmp195,
	cmp	r5, #65536	@ tmp195,
	beq	.L202	@,
.L183:
	tst	r2, #2	@ D.41135,
	beq	.L184	@,
	ldr	r2, [r0, #672]	@ tmp191,
	bic	r2, r2, #-16777216	@ tmp192, tmp191,
	bic	r2, r2, #255	@ tmp192, tmp192,
	cmp	r2, #65536	@ tmp192,
	bne	.L184	@,
	ldr	r2, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L195	@,
.L184:
	add	ip, ip, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.1354, ivtmp.1354,
	cmp	r6, ip	@ D.41157, i
	bhi	.L175	@,
.L170:
	mov	r0, #0	@ D.41133,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L178:
	ldr	r0, [r3, #0]	@ temp.1357, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #3]	@ zero_extendqisi2	@ D.41135, <variable>.is_reference
	tst	r2, #1	@ D.41135,
	beq	.L179	@,
	ldr	ip, [r0, #636]	@ tmp181,
	bic	ip, ip, #-16777216	@ tmp182, tmp181,
	bic	ip, ip, #255	@ tmp182, tmp182,
	cmp	ip, #65536	@ tmp182,
	beq	.L203	@,
.L179:
	tst	r2, #2	@ D.41135,
	beq	.L180	@,
	ldr	ip, [r0, #672]	@ tmp178,
	bic	r2, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, r2, #255	@ tmp179, tmp179,
	cmp	ip, #65536	@ tmp179,
	bne	.L180	@,
	ldr	r2, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L180	@,
.L195:
	add	r0, r0, #672	@ D.41133, temp.1357,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L204:
	ldr	r2, [r3, #0]	@ D.41122, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L172	@,
	ldr	r0, [r2, #600]	@ tmp153,
	bic	r0, r0, #-16777216	@ tmp151, tmp153,
	bic	r0, r0, #255	@ tmp151, tmp151,
	cmp	r0, #65536	@ tmp151,
	bne	.L172	@,
	ldr	r0, [r2, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L197	@,
.L172:
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1354,
	bne	.L187	@,
.L206:
	ldr	r2, [r3, #4]	@ D.41122, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L189	@,
	ldr	r3, [r2, #600]	@ tmp211,
	bic	r0, r3, #-16777216	@ tmp212, tmp211,
	bic	r3, r0, #255	@ tmp212, tmp212,
	cmp	r3, #65536	@ tmp212,
	bne	.L189	@,
	ldr	r0, [r2, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L197	@,
.L189:
	add	ip, ip, #1	@ i, tmp169,
	add	r3, r5, #4	@ ivtmp.1354, tmp170,
	cmp	r6, ip	@ D.41157, i
	bls	.L170	@,
.L175:
	cmp	r4, #0	@ structure,
	beq	.L204	@,
	ldr	r0, [r3, #0]	@ temp.1357, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #3]	@ zero_extendqisi2	@ D.41135, <variable>.is_reference
	tst	r2, #1	@ D.41135,
	beq	.L174	@,
	ldr	r5, [r0, #636]	@ tmp158,
	bic	r5, r5, #-16777216	@ tmp156, tmp158,
	bic	r5, r5, #255	@ tmp156, tmp156,
	cmp	r5, #65536	@ tmp156,
	beq	.L205	@,
.L174:
	tst	r2, #2	@ D.41135,
	beq	.L172	@,
	ldr	r2, [r0, #672]	@ tmp163,
	bic	r2, r2, #-16777216	@ tmp161, tmp163,
	bic	r2, r2, #255	@ tmp161, tmp161,
	cmp	r2, #65536	@ tmp161,
	bne	.L172	@,
	ldr	r2, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L195	@,
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1354,
	beq	.L206	@,
.L187:
	ldr	r0, [r3, #4]	@ temp.1357, <variable>.DPB.fs_ref
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ D.41135, <variable>.is_reference
	tst	r3, #1	@ D.41135,
	beq	.L188	@,
	ldr	r2, [r0, #636]	@ tmp207,
	bic	r2, r2, #-16777216	@ tmp208, tmp207,
	bic	r2, r2, #255	@ tmp208, tmp208,
	cmp	r2, #65536	@ tmp208,
	beq	.L207	@,
.L188:
	tst	r3, #2	@ D.41135,
	beq	.L189	@,
	ldr	r3, [r0, #672]	@ tmp204,
	bic	r2, r3, #-16777216	@ tmp205, tmp204,
	bic	r3, r2, #255	@ tmp205, tmp205,
	cmp	r3, #65536	@ tmp205,
	bne	.L189	@,
	ldr	r2, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L189	@,
	b	.L195	@
.L205:
	ldr	r5, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L174	@,
.L196:
	add	r0, r0, #636	@ D.41133, temp.1357,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L207:
	ldr	r2, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r2, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L188	@,
	b	.L196	@
.L198:
	ldr	r2, [r3, #0]	@ D.41122, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L184	@,
	ldr	r0, [r2, #600]	@ tmp198,
	bic	r0, r0, #-16777216	@ tmp199, tmp198,
	bic	r0, r0, #255	@ tmp199, tmp199,
	cmp	r0, #65536	@ tmp199,
	bne	.L184	@,
	ldr	r0, [r2, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	bne	.L184	@,
.L197:
	add	r0, r2, #600	@ D.41133, D.41122,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L203:
	ldr	ip, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L179	@,
	b	.L196	@
.L202:
	ldr	r5, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L183	@,
	b	.L196	@
	.fnend
	.size	MVC_GetShortTermPicPoint, .-MVC_GetShortTermPicPoint
	.align	2
	.global	MVC_GetLongTermPicPoint
	.type	MVC_GetLongTermPicPoint, %function
MVC_GetLongTermPicPoint:
	.fnstart
.LFB1584:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117161	@ tmp144,
	movt	r3, #:upper16:11117161	@ tmp144,
	ldrb	r4, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r4, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L210	@,
	movw	r2, #:lower16:11117162	@ tmp146,
	movt	r2, #:upper16:11117162	@ tmp146,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r4, #2	@ structure,
	moveq	r4, #1	@ structure,
.L210:
	movw	ip, #:lower16:11123124	@ tmp148,
	movt	ip, #:upper16:11123124	@ tmp148,
	ldr	r6, [r0, ip]	@ D.41215, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ D.41215,
	beq	.L212	@,
	cmp	r4, #0	@ structure,
	movw	r5, #:lower16:11123048	@ ivtmp.1385,
	sub	r2, r6, #1	@ tmp166, D.41215,
	movt	r5, #:upper16:11123048	@ ivtmp.1385,
	add	r3, r0, r5	@ ivtmp.1385, pMvcCtx, ivtmp.1385
	and	r5, r2, #1	@ tmp168, tmp166,
	bne	.L220	@,
	ldr	r2, [r3, #0]	@ D.41180, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L222	@,
	ldr	ip, [r2, #600]	@ tmp185,
	bic	r0, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, r0, #255	@ tmp186, tmp186,
	cmp	ip, #256	@ tmp186,
	bne	.L222	@,
	ldr	r0, [r2, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L239	@,
.L222:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.41215, i
	add	r3, r3, #4	@ ivtmp.1385, ivtmp.1385,
	bls	.L212	@,
	cmp	r5, #0	@ tmp168,
	beq	.L217	@,
	cmp	r4, #0	@ structure,
	beq	.L240	@,
	ldr	r0, [r3, #0]	@ temp.1388, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #3]	@ zero_extendqisi2	@ D.41193, <variable>.is_reference
	tst	r2, #1	@ D.41193,
	beq	.L225	@,
	ldr	r5, [r0, #636]	@ tmp194,
	bic	r5, r5, #-16777216	@ tmp195, tmp194,
	bic	r5, r5, #255	@ tmp195, tmp195,
	cmp	r5, #256	@ tmp195,
	beq	.L244	@,
.L225:
	tst	r2, #2	@ D.41193,
	beq	.L226	@,
	ldr	r2, [r0, #672]	@ tmp191,
	bic	r2, r2, #-16777216	@ tmp192, tmp191,
	bic	r2, r2, #255	@ tmp192, tmp192,
	cmp	r2, #256	@ tmp192,
	bne	.L226	@,
	ldr	r2, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L237	@,
.L226:
	add	ip, ip, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.1385, ivtmp.1385,
	cmp	r6, ip	@ D.41215, i
	bhi	.L217	@,
.L212:
	mov	r0, #0	@ D.41191,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L220:
	ldr	r0, [r3, #0]	@ temp.1388, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #3]	@ zero_extendqisi2	@ D.41193, <variable>.is_reference
	tst	r2, #1	@ D.41193,
	beq	.L221	@,
	ldr	ip, [r0, #636]	@ tmp181,
	bic	ip, ip, #-16777216	@ tmp182, tmp181,
	bic	ip, ip, #255	@ tmp182, tmp182,
	cmp	ip, #256	@ tmp182,
	beq	.L245	@,
.L221:
	tst	r2, #2	@ D.41193,
	beq	.L222	@,
	ldr	ip, [r0, #672]	@ tmp178,
	bic	r2, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, r2, #255	@ tmp179, tmp179,
	cmp	ip, #256	@ tmp179,
	bne	.L222	@,
	ldr	r2, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L222	@,
.L237:
	add	r0, r0, #672	@ D.41191, temp.1388,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L246:
	ldr	r2, [r3, #0]	@ D.41180, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L214	@,
	ldr	r0, [r2, #600]	@ tmp153,
	bic	r0, r0, #-16777216	@ tmp151, tmp153,
	bic	r0, r0, #255	@ tmp151, tmp151,
	cmp	r0, #256	@ tmp151,
	bne	.L214	@,
	ldr	r0, [r2, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L239	@,
.L214:
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1385,
	bne	.L229	@,
.L248:
	ldr	r2, [r3, #4]	@ D.41180, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L231	@,
	ldr	r3, [r2, #600]	@ tmp211,
	bic	r0, r3, #-16777216	@ tmp212, tmp211,
	bic	r3, r0, #255	@ tmp212, tmp212,
	cmp	r3, #256	@ tmp212,
	bne	.L231	@,
	ldr	r0, [r2, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L239	@,
.L231:
	add	ip, ip, #1	@ i, tmp169,
	add	r3, r5, #4	@ ivtmp.1385, tmp170,
	cmp	r6, ip	@ D.41215, i
	bls	.L212	@,
.L217:
	cmp	r4, #0	@ structure,
	beq	.L246	@,
	ldr	r0, [r3, #0]	@ temp.1388, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #3]	@ zero_extendqisi2	@ D.41193, <variable>.is_reference
	tst	r2, #1	@ D.41193,
	beq	.L216	@,
	ldr	r5, [r0, #636]	@ tmp158,
	bic	r5, r5, #-16777216	@ tmp156, tmp158,
	bic	r5, r5, #255	@ tmp156, tmp156,
	cmp	r5, #256	@ tmp156,
	beq	.L247	@,
.L216:
	tst	r2, #2	@ D.41193,
	beq	.L214	@,
	ldr	r2, [r0, #672]	@ tmp163,
	bic	r2, r2, #-16777216	@ tmp161, tmp163,
	bic	r2, r2, #255	@ tmp161, tmp161,
	cmp	r2, #256	@ tmp161,
	bne	.L214	@,
	ldr	r2, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L237	@,
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1385,
	beq	.L248	@,
.L229:
	ldr	r0, [r3, #4]	@ temp.1388, <variable>.DPB.fs_ltref
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ D.41193, <variable>.is_reference
	tst	r3, #1	@ D.41193,
	beq	.L230	@,
	ldr	r2, [r0, #636]	@ tmp207,
	bic	r2, r2, #-16777216	@ tmp208, tmp207,
	bic	r2, r2, #255	@ tmp208, tmp208,
	cmp	r2, #256	@ tmp208,
	beq	.L249	@,
.L230:
	tst	r3, #2	@ D.41193,
	beq	.L231	@,
	ldr	r3, [r0, #672]	@ tmp204,
	bic	r2, r3, #-16777216	@ tmp205, tmp204,
	bic	r3, r2, #255	@ tmp205, tmp205,
	cmp	r3, #256	@ tmp205,
	bne	.L231	@,
	ldr	r2, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L231	@,
	b	.L237	@
.L247:
	ldr	r5, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r5, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L216	@,
.L238:
	add	r0, r0, #636	@ D.41191, temp.1388,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L249:
	ldr	r2, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L230	@,
	b	.L238	@
.L240:
	ldr	r2, [r3, #0]	@ D.41180, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L226	@,
	ldr	r0, [r2, #600]	@ tmp198,
	bic	r0, r0, #-16777216	@ tmp199, tmp198,
	bic	r0, r0, #255	@ tmp199, tmp199,
	cmp	r0, #256	@ tmp199,
	bne	.L226	@,
	ldr	r0, [r2, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	bne	.L226	@,
.L239:
	add	r0, r2, #600	@ D.41191, D.41180,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L245:
	ldr	ip, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	ip, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L221	@,
	b	.L238	@
.L244:
	ldr	r5, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r5, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L225	@,
	b	.L238	@
	.fnend
	.size	MVC_GetLongTermPicPoint, .-MVC_GetLongTermPicPoint
	.align	2
	.global	MVC_ReorderSTList
	.type	MVC_ReorderSTList, %function
MVC_ReorderSTList:
	.fnstart
.LFB1585:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ refIdxLX, refIdxLX
	mov	r5, r3	@ picNumLX, picNumLX
	add	r6, r1, r1, asl #5	@, tmp158, listidx, listidx,
	add	r3, r0, #256	@ tmp155, pMvcCtx,
	mov	r1, r5	@, picNumLX
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	add	r6, r3, r6, asl #2	@, RefPicListX, tmp155, tmp158,
	ldr	r8, [fp, #8]	@ CurrViewId, CurrViewId
	bl	MVC_GetShortTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.41246,* refIdxLX
	add	ip, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	ip, r3	@ cIdx, D.41246
	ble	.L251	@,
	add	r1, r6, ip, asl #2	@, ivtmp.1435, RefPicListX, cIdx,
	add	r2, r6, r7, asl #2	@, ivtmp.1433, RefPicListX, ivtmp.1430,
.L252:
	ldr	lr, [r2], #-4	@ tmp162,
	mov	sl, r7	@ cIdx.1437, ivtmp.1430
	sub	r7, r7, #1	@ ivtmp.1430, ivtmp.1430,
	str	lr, [r1], #-4	@ tmp162,
	ldr	r3, [r4, #0]	@ D.41246,* refIdxLX
	cmp	r3, sl	@ D.41246, cIdx.1437
	blt	.L252	@,
.L251:
	add	r1, r3, #1	@ cIdx.1436, D.41246,
	str	r0, [r6, r3, asl #2]	@ picLX,* RefPicListX
	cmp	ip, r1	@ cIdx, cIdx.1436
	str	r1, [r4, #0]	@ cIdx.1436,* refIdxLX
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r6, r1, asl #2	@, ivtmp.1426, RefPicListX, cIdx.1436,
	rsb	r0, r1, ip	@ tmp168, cIdx.1436, cIdx
	and	r4, r0, #1	@ tmp169, tmp168,
	mov	r3, r1	@ nIdx, cIdx.1436
	ldr	r0, [r2, #0]	@ D.41251,* ivtmp.1426
	cmp	r0, #0	@ D.41251,
	beq	.L260	@,
	ldrb	r7, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r7, #0	@ <variable>.is_long_term,
	beq	.L273	@,
.L261:
	add	r3, r1, #1	@ nIdx, cIdx.1436,
	str	r0, [r6, r1, asl #2]	@ D.41251,* RefPicListX
.L260:
	add	r0, r1, #1	@ cIdx.1436, cIdx.1436,
	add	r2, r2, #4	@ ivtmp.1426, ivtmp.1426,
	cmp	ip, r0	@ cIdx, cIdx.1436
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp169,
	beq	.L256	@,
	ldr	r1, [r2, #0]	@ D.41251,* ivtmp.1426
	cmp	r1, #0	@ D.41251,
	beq	.L263	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L274	@,
.L264:
	str	r1, [r6, r3, asl #2]	@ D.41251,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L263:
	add	r0, r0, #1	@ cIdx.1436, cIdx.1436,
	add	r2, r2, #4	@ ivtmp.1426, ivtmp.1426,
	cmp	ip, r0	@ cIdx, cIdx.1436
	bge	.L256	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L279:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	beq	.L254	@,
.L255:
	str	r1, [r6, r3, asl #2]	@ D.41251,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L254:
	ldr	r1, [r2, #4]	@ D.41251,
	add	r0, r0, #1	@ tmp170, cIdx.1436,
	add	r2, r2, #4	@ tmp171, ivtmp.1426,
	cmp	r1, #0	@ D.41251,
	beq	.L267	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L268	@,
	ldr	r4, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r5	@ <variable>.pic_num, picNumLX
	beq	.L276	@,
.L268:
	str	r1, [r6, r3, asl #2]	@ D.41251,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L267:
	add	r0, r0, #1	@ cIdx.1436, tmp170,
	add	r2, r2, #4	@ ivtmp.1426, tmp171,
	cmp	ip, r0	@ cIdx, cIdx.1436
	blt	.L277	@,
.L256:
	ldr	r1, [r2, #0]	@ D.41251,* ivtmp.1426
	cmp	r1, #0	@ D.41251,
	beq	.L254	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L255	@,
	ldr	r4, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r5	@ <variable>.pic_num, picNumLX
	bne	.L255	@,
	b	.L279	@
.L273:
	ldr	r7, [r0, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r7, r5	@ <variable>.pic_num, picNumLX
	bne	.L261	@,
	ldr	r7, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r7, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r7, r8	@ <variable>.view_id, CurrViewId
	bne	.L261	@,
	b	.L260	@
.L274:
	ldr	r4, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r5	@ <variable>.pic_num, picNumLX
	bne	.L264	@,
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [lr, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L264	@,
	b	.L263	@
.L276:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L268	@,
	add	r0, r0, #1	@ cIdx.1436, tmp170,
	add	r2, r2, #4	@ ivtmp.1426, tmp171,
	cmp	ip, r0	@ cIdx, cIdx.1436
	bge	.L256	@,
.L277:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_ReorderSTList, .-MVC_ReorderSTList
	.align	2
	.global	MVC_ReorderLTList
	.type	MVC_ReorderLTList, %function
MVC_ReorderLTList:
	.fnstart
.LFB1586:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ refIdxLX, refIdxLX
	mov	r5, r3	@ LongTermPicNum, LongTermPicNum
	add	r6, r1, r1, asl #5	@, tmp154, listidx, listidx,
	add	r3, r0, #256	@ tmp151, pMvcCtx,
	mov	r1, r5	@, LongTermPicNum
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	add	r6, r3, r6, asl #2	@, RefPicListX, tmp151, tmp154,
	ldr	r8, [fp, #8]	@ CurrViewId, CurrViewId
	bl	MVC_GetLongTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.41296,* refIdxLX
	add	ip, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	ip, r3	@ cIdx, D.41296
	ble	.L281	@,
	add	r1, r6, ip, asl #2	@, ivtmp.1483, RefPicListX, cIdx,
	add	r2, r6, r7, asl #2	@, ivtmp.1481, RefPicListX, ivtmp.1478,
.L282:
	ldr	lr, [r2], #-4	@ tmp158,
	mov	sl, r7	@ cIdx.1485, ivtmp.1478
	sub	r7, r7, #1	@ ivtmp.1478, ivtmp.1478,
	str	lr, [r1], #-4	@ tmp158,
	ldr	r3, [r4, #0]	@ D.41296,* refIdxLX
	cmp	r3, sl	@ D.41296, cIdx.1485
	blt	.L282	@,
.L281:
	add	r1, r3, #1	@ cIdx.1484, D.41296,
	str	r0, [r6, r3, asl #2]	@ picLX,* RefPicListX
	cmp	ip, r1	@ cIdx, cIdx.1484
	str	r1, [r4, #0]	@ cIdx.1484,* refIdxLX
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r6, r1, asl #2	@, ivtmp.1474, RefPicListX, cIdx.1484,
	rsb	r0, r1, ip	@ tmp164, cIdx.1484, cIdx
	and	r4, r0, #1	@ tmp165, tmp164,
	mov	r3, r1	@ nIdx, cIdx.1484
	ldr	r0, [r2, #0]	@ D.41301,* ivtmp.1474
	cmp	r0, #0	@ D.41301,
	beq	.L290	@,
	ldrb	r7, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r7, #0	@ <variable>.is_long_term,
	bne	.L303	@,
.L291:
	add	r3, r1, #1	@ nIdx, cIdx.1484,
	str	r0, [r6, r1, asl #2]	@ D.41301,* RefPicListX
.L290:
	add	r0, r1, #1	@ cIdx.1484, cIdx.1484,
	add	r2, r2, #4	@ ivtmp.1474, ivtmp.1474,
	cmp	ip, r0	@ cIdx, cIdx.1484
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp165,
	beq	.L286	@,
	ldr	r1, [r2, #0]	@ D.41301,* ivtmp.1474
	cmp	r1, #0	@ D.41301,
	beq	.L293	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L304	@,
.L294:
	str	r1, [r6, r3, asl #2]	@ D.41301,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L293:
	add	r0, r0, #1	@ cIdx.1484, cIdx.1484,
	add	r2, r2, #4	@ ivtmp.1474, ivtmp.1474,
	cmp	ip, r0	@ cIdx, cIdx.1484
	bge	.L286	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L309:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	beq	.L284	@,
.L285:
	str	r1, [r6, r3, asl #2]	@ D.41301,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L284:
	ldr	r1, [r2, #4]	@ D.41301,
	add	r0, r0, #1	@ tmp167, cIdx.1484,
	add	r2, r2, #4	@ tmp166, ivtmp.1474,
	cmp	r1, #0	@ D.41301,
	beq	.L297	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L298	@,
	ldr	r4, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r5	@ <variable>.long_term_pic_num, LongTermPicNum
	beq	.L306	@,
.L298:
	str	r1, [r6, r3, asl #2]	@ D.41301,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L297:
	add	r0, r0, #1	@ cIdx.1484, tmp167,
	add	r2, r2, #4	@ ivtmp.1474, tmp166,
	cmp	ip, r0	@ cIdx, cIdx.1484
	blt	.L307	@,
.L286:
	ldr	r1, [r2, #0]	@ D.41301,* ivtmp.1474
	cmp	r1, #0	@ D.41301,
	beq	.L284	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L285	@,
	ldr	r4, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r5	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L285	@,
	b	.L309	@
.L303:
	ldr	r7, [r0, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r7, r5	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L291	@,
	ldr	r7, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r7, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r7, r8	@ <variable>.view_id, CurrViewId
	bne	.L291	@,
	b	.L290	@
.L304:
	ldr	r4, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r5	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L294	@,
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [lr, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L294	@,
	b	.L293	@
.L306:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L298	@,
	add	r0, r0, #1	@ cIdx.1484, tmp167,
	add	r2, r2, #4	@ ivtmp.1474, tmp166,
	cmp	ip, r0	@ cIdx, cIdx.1484
	bge	.L286	@,
.L307:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_ReorderLTList, .-MVC_ReorderLTList
	.align	2
	.global	MVC_GetMaxViewIdx
	.type	MVC_GetMaxViewIdx, %function
MVC_GetMaxViewIdx:
	.fnstart
.LFB1587:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:10770768	@ tmp143,
	movt	ip, #:upper16:10770768	@ tmp143,
	ldr	ip, [r0, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	adds	r7, ip, #1	@ D.41326, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L311	@,
	movw	r4, #:lower16:10770772	@ tmp145,
	movt	r4, #:upper16:10770772	@ tmp145,
	ldr	r4, [r0, r4]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r1, r4	@ CurrViewId, <variable>.CurrSUBSPS.view_id
	beq	.L311	@,
	tst	ip, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r5, #:lower16:10770776	@ ivtmp.1513,
	movt	r5, #:upper16:10770776	@ ivtmp.1513,
	mov	ip, #0	@ VOIdx,
	add	r4, r0, r5	@ ivtmp.1513, pMvcCtx, ivtmp.1513
	beq	.L312	@,
	ldr	r5, [r4], #4	@ D.48559, <variable>.CurrSUBSPS.view_id
	mov	ip, #1	@ VOIdx,
	cmp	r1, r5	@ CurrViewId, D.48559
	bne	.L312	@,
.L313:
	cmp	r2, #0	@ anchor_pic_flag,
	bne	.L323	@,
.L315:
	add	r3, ip, r3, asl #1	@, tmp157, VOIdx, listidx,
	movw	ip, #:lower16:2692702	@ tmp158,
	movt	ip, #:upper16:2692702	@ tmp158,
	add	r1, r3, ip	@ tmp158, tmp157, tmp158
	add	r2, r0, r1, asl #2	@, tmp162, pMvcCtx, tmp158,
	ldr	r0, [r2, #4]	@ maxViewIdx, <variable>.CurrSUBSPS.num_non_anchor_refs
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L314:
	ldr	r6, [r5], #4	@ D.48559, <variable>.CurrSUBSPS.view_id
	cmp	r1, r6	@ CurrViewId, D.48559
	beq	.L313	@,
	ldr	r6, [r4, #4]	@ D.48559, <variable>.CurrSUBSPS.view_id
	add	ip, ip, #1	@ VOIdx, VOIdx,
	add	r4, r5, #4	@ ivtmp.1513, tmp169,
	cmp	r1, r6	@ CurrViewId, D.48559
	beq	.L313	@,
.L312:
	add	ip, ip, #1	@ VOIdx, VOIdx,
	mov	r5, r4	@ tmp169, ivtmp.1513
	cmp	r7, ip	@ D.41326, VOIdx
	bhi	.L314	@,
	cmp	r2, #0	@ anchor_pic_flag,
	beq	.L315	@,
.L323:
	add	r3, ip, r3, asl #1	@, tmp149, VOIdx, listidx,
	movw	ip, #:lower16:2692694	@ tmp150,
	movt	ip, #:upper16:2692694	@ tmp150,
	add	r1, r3, ip	@ tmp150, tmp149, tmp150
	add	r2, r0, r1, asl #2	@, tmp154, pMvcCtx, tmp150,
	ldr	r0, [r2, #4]	@ maxViewIdx, <variable>.CurrSUBSPS.num_anchor_refs
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L311:
	mov	ip, #0	@ VOIdx,
	b	.L313	@
	.fnend
	.size	MVC_GetMaxViewIdx, .-MVC_GetMaxViewIdx
	.align	2
	.global	mvc_get_inter_view_pic
	.type	mvc_get_inter_view_pic, %function
mvc_get_inter_view_pic:
	.fnstart
.LFB1588:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:2779702	@ tmp151,
	movt	r5, #:upper16:2779702	@ tmp151,
	movw	r4, #:lower16:11106944	@ tmp147,
	add	ip, r3, r5	@ tmp151, listidx, tmp151
	movt	r4, #:upper16:11106944	@ tmp147,
	add	r4, r0, r4	@ tmp147, pMvcCtx, tmp147
	mov	r5, #1424	@ tmp150,
	ldr	ip, [r0, ip, asl #2]	@ interviewlistsize, <variable>.CurrSlice.interviewlistXsize
	mla	r3, r5, r3, r4	@ fs_interviewlist, tmp150, listidx, tmp147
	cmp	ip, #0	@ interviewlistsize,
	beq	.L325	@,
	ldr	r4, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	sub	r6, ip, #1	@ tmp160, interviewlistsize,
	and	r7, r6, #1	@ tmp162, tmp160,
	movw	r6, #:lower16:11151963	@ tmp159,
	cmp	r4, r1	@ <variable>.view_id, targetViewID
	movt	r6, #:upper16:11151963	@ tmp159,
	mov	r4, r3	@ ivtmp.1548, fs_interviewlist
	bne	.L333	@,
	ldrb	r5, [r0, r6]	@ zero_extendqisi2	@ D.41360, <variable>.CurrPic.structure
	cmp	r5, #0	@ D.41360,
	beq	.L349	@,
	cmp	r5, #1	@ D.41360,
	bne	.L359	@,
	ldr	r5, [r3, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r5, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L352	@,
.L333:
	mov	r5, #1	@ i,
	cmp	ip, r5	@ interviewlistsize, i
	add	r4, r3, #712	@ ivtmp.1548, fs_interviewlist,
	bls	.L325	@,
	cmp	r7, #0	@ tmp162,
	beq	.L330	@,
	ldr	r3, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L337	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.41360, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.41360,
	beq	.L354	@,
	cmp	r3, r5	@ D.41360,
	bne	.L360	@,
	ldr	r3, [r4, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L352	@,
.L337:
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #712	@ ivtmp.1548, ivtmp.1548,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L330	@,
.L325:
	mov	r0, #0	@ D.41364,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L362:
	ldr	r3, [r4, #620]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	beq	.L353	@,
.L326:
	add	r4, r4, #712	@ ivtmp.1548, ivtmp.1548,
	add	r5, r5, #1	@ tmp163, i,
	ldr	r3, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	mov	r7, r4	@ tmp164, ivtmp.1548
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L342	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.41360, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.41360,
	beq	.L356	@,
	cmp	r3, #1	@ D.41360,
	bne	.L361	@,
	ldr	r3, [r4, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L352	@,
.L342:
	add	r5, r5, #1	@ i, tmp163,
	add	r4, r7, #712	@ ivtmp.1548, tmp164,
	cmp	ip, r5	@ interviewlistsize, i
	bls	.L325	@,
.L330:
	ldr	r3, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L326	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.41360, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.41360,
	beq	.L362	@,
	cmp	r3, #1	@ D.41360,
	bne	.L329	@,
	ldr	r3, [r4, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	bne	.L326	@,
.L352:
	add	r0, r4, #636	@ D.41364, ivtmp.1548,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L356:
	ldr	r3, [r4, #620]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	bne	.L342	@,
.L353:
	add	r0, r4, #600	@ D.41364, ivtmp.1548,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L329:
	cmp	r3, #2	@ D.41360,
	bne	.L326	@,
	ldr	r3, [r4, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L326	@,
.L351:
	add	r0, r4, #672	@ D.41364, ivtmp.1548,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L361:
	cmp	r3, #2	@ D.41360,
	bne	.L342	@,
	ldr	r3, [r4, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L342	@,
	add	r0, r4, #672	@ D.41364, ivtmp.1548,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L349:
	ldr	r5, [r3, #620]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r5, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	bne	.L333	@,
	b	.L353	@
.L354:
	ldr	r3, [r4, #620]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	beq	.L353	@,
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #712	@ ivtmp.1548, ivtmp.1548,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L330	@,
	b	.L325	@
.L359:
	cmp	r5, #2	@ D.41360,
	bne	.L333	@,
	ldr	r5, [r3, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r5, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L333	@,
	b	.L351	@
.L360:
	cmp	r3, #2	@ D.41360,
	bne	.L337	@,
	ldr	r3, [r4, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	beq	.L351	@,
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #712	@ ivtmp.1548, ivtmp.1548,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L330	@,
	b	.L325	@
	.fnend
	.size	mvc_get_inter_view_pic, .-mvc_get_inter_view_pic
	.align	2
	.global	mvc_reorder_interview
	.type	mvc_reorder_interview, %function
mvc_reorder_interview:
	.fnstart
.LFB1589:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmib	fp, {r7, r8}	@ phole ldm
	mov	r6, r3	@ targetViewID, targetViewID
	mov	r4, r1	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	mov	r5, r2	@ refIdxLX, refIdxLX
	mov	r1, r3	@, targetViewID
	mov	r2, r7	@, currpoc
	mov	r3, r8	@, listidx
	mov	sl, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_get_inter_view_pic	@
	cmp	r0, #0	@ picLX
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldr	r3, [r5, #0]	@ D.41404,* refIdxLX
	add	ip, r4, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	add	r8, r8, r8, asl #5	@, tmp153, listidx, listidx,
	add	sl, sl, #256	@ tmp150, pMvcCtx,
	cmp	ip, r3	@ cIdx, D.41404
	add	r8, sl, r8, asl #2	@, list, tmp150, tmp153,
	bls	.L365	@,
	add	r1, r8, r4, asl #2	@, ivtmp.1595, list, num_ref_idx_lX_active_minus1,
	add	r2, r8, ip, asl #2	@, ivtmp.1597, list, cIdx,
.L366:
	ldr	r3, [r1], #-4	@ tmp157,
	sub	sl, r4, #1	@ num_ref_idx_lX_active_minus1.1599, num_ref_idx_lX_active_minus1,
	str	r3, [r2], #-4	@ tmp157,
	ldr	r3, [r5, #0]	@ D.41404,* refIdxLX
	cmp	r3, r4	@ D.41404, num_ref_idx_lX_active_minus1
	mov	r4, sl	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1.1599
	bcc	.L366	@,
.L365:
	add	r1, r3, #1	@ cIdx.1598, D.41404,
	str	r0, [r8, r3, asl #2]	@ picLX,* list
	cmp	ip, r1	@ cIdx, cIdx.1598
	str	r1, [r5, #0]	@ cIdx.1598,* refIdxLX
	ldmccfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r8, r1, asl #2	@, ivtmp.1588, list, cIdx.1598,
	rsb	r0, r1, ip	@ tmp162, cIdx.1598, cIdx
	and	r4, r0, #1	@ tmp163, tmp162,
	mov	r3, r1	@ nIdx, cIdx.1598
	ldr	r0, [r2, #0]	@ D.41410,* ivtmp.1588
	cmp	r0, #0	@ D.41410,
	beq	.L372	@,
	ldr	lr, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [lr, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r5, r6	@ <variable>.view_id, targetViewID
	beq	.L386	@,
.L372:
	add	r3, r1, #1	@ nIdx, cIdx.1598,
	str	r0, [r8, r1, asl #2]	@ D.41410,* list
.L373:
	add	r1, r1, #1	@ cIdx.1598, cIdx.1598,
	add	r2, r2, #4	@ ivtmp.1588, ivtmp.1588,
	cmp	ip, r1	@ cIdx, cIdx.1598
	ldmccfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp163,
	beq	.L369	@,
	ldr	r0, [r2, #0]	@ D.41410,* ivtmp.1588
	cmp	r0, #0	@ D.41410,
	beq	.L375	@,
	ldr	r4, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r6	@ <variable>.view_id, targetViewID
	beq	.L387	@,
.L375:
	str	r0, [r8, r3, asl #2]	@ D.41410,* list
	add	r3, r3, #1	@ nIdx, nIdx,
.L376:
	add	r1, r1, #1	@ cIdx.1598, cIdx.1598,
	add	r2, r2, #4	@ ivtmp.1588, ivtmp.1588,
	cmp	ip, r1	@ cIdx, cIdx.1598
	ldmccfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldr	r0, [r2, #0]	@ D.41410,* ivtmp.1588
	add	r1, r1, #1	@ tmp164, cIdx.1598,
	add	r4, r2, #4	@ tmp165, ivtmp.1588,
	cmp	r0, #0	@ D.41410,
	bne	.L388	@,
.L367:
	str	r0, [r8, r3, asl #2]	@ D.41410,* list
	add	r3, r3, #1	@ nIdx, nIdx,
.L368:
	ldr	r2, [r2, #4]	@ D.41410,
	cmp	r2, #0	@ D.41410,
	beq	.L379	@,
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [lr, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r0, r6	@ <variable>.view_id, targetViewID
	beq	.L389	@,
.L379:
	add	r1, r1, #1	@ cIdx.1598, tmp164,
	str	r2, [r8, r3, asl #2]	@ D.41410,* list
	cmp	ip, r1	@ cIdx, cIdx.1598
	add	r3, r3, #1	@ nIdx, nIdx,
	add	r2, r4, #4	@ ivtmp.1588, tmp165,
	bcc	.L390	@,
.L369:
	ldr	r0, [r2, #0]	@ D.41410,* ivtmp.1588
	add	r1, r1, #1	@ tmp164, cIdx.1598,
	add	r4, r2, #4	@ tmp165, ivtmp.1588,
	cmp	r0, #0	@ D.41410,
	beq	.L367	@,
.L388:
	ldr	r5, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [r5, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r5, r6	@ <variable>.view_id, targetViewID
	bne	.L367	@,
	ldr	r5, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r5, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L367	@,
	b	.L368	@
.L389:
	ldr	r0, [r2, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r0, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L379	@,
	add	r1, r1, #1	@ cIdx.1598, tmp164,
	add	r2, r4, #4	@ ivtmp.1588, tmp165,
	cmp	ip, r1	@ cIdx, cIdx.1598
	bcs	.L369	@,
.L390:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L387:
	ldr	r4, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r4, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L375	@,
	b	.L376	@
.L386:
	ldr	r5, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r5, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L372	@,
	b	.L373	@
	.fnend
	.size	mvc_reorder_interview, .-mvc_reorder_interview
	.align	2
	.global	MVC_ReorderRefPiclist
	.type	MVC_ReorderRefPiclist, %function
MVC_ReorderRefPiclist:
	.fnstart
.LFB1590:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #84
	sub	sp, sp, #84	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117161	@ tmp169,
	movt	r3, #:upper16:11117161	@ tmp169,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ listidx, listidx
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	str	r2, [fp, #-60]	@ num_ref_idx_lX_active_minus1, %sfp
	mov	r2, #0	@ tmp168,
	cmp	r3, r2	@ <variable>.CurrSlice.field_pic_flag,
	str	r2, [fp, #-48]	@ tmp168, refIdxLX
	beq	.L393	@,
	movw	r0, #:lower16:11117162	@ tmp171,
	movt	r0, #:upper16:11117162	@ tmp171,
	ldrb	r3, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r3, r2	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r3, #2	@ structure,
	moveq	r3, #1	@ structure,
.L393:
	cmp	r8, #1	@ listidx,
	bls	.L441	@,
.L424:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L441:
	cmp	r8, #0	@ listidx,
	beq	.L442	@,
	movw	r2, #:lower16:11116508	@,
	movt	r2, #:upper16:11116508	@,
	str	r2, [fp, #-96]	@, %sfp
	movw	r2, #:lower16:11117028	@,
	movt	r2, #:upper16:11117028	@,
	movw	r0, #:lower16:11116244	@,
	movw	r1, #:lower16:11116768	@,
	movt	r0, #:upper16:11116244	@,
	movt	r1, #:upper16:11116768	@,
	str	r0, [fp, #-56]	@, %sfp
	str	r1, [fp, #-100]	@, %sfp
.L439:
	str	r2, [fp, #-64]	@, %sfp
	cmp	r3, #0	@ structure,
	ldr	r0, [fp, #-56]	@, %sfp
	ldr	r2, [fp, #-96]	@, %sfp
	add	r1, r5, r0	@, pMvcCtx,
	str	r1, [fp, #-56]	@, %sfp
	add	r0, r5, r2	@, pMvcCtx,
	ldr	r1, [fp, #-100]	@, %sfp
	str	r0, [fp, #-96]	@, %sfp
	ldr	r0, [fp, #-64]	@, %sfp
	add	r2, r5, r1	@, pMvcCtx,
	str	r2, [fp, #-100]	@, %sfp
	add	r1, r5, r0	@, pMvcCtx,
	str	r1, [fp, #-64]	@, %sfp
	ldr	r2, [r5, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	mov	r1, #1	@ tmp184,
	ldr	r0, [r2, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	r3, r0, #4	@ tmp182, <variable>.log2_max_frame_num_minus4,
	movw	r0, #:lower16:11117188	@ tmp185,
	mov	r2, r1, asl r3	@ MaxFrameNum, tmp184,
	movt	r0, #:upper16:11117188	@ tmp185,
	ldr	r1, [fp, #-60]	@, %sfp
	movne	r2, r2, asl #1	@, MaxFrameNum,
	strne	r2, [fp, #-104]	@, %sfp
	ldrne	r0, [r5, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	streq	r2, [fp, #-104]	@ MaxFrameNum, %sfp
	ldreq	r0, [r5, r0]	@, <variable>.CurrSlice.frame_num
	movne	r0, r0, asl #1	@ tmp187, <variable>.CurrSlice.frame_num,
	addne	r0, r0, #1	@, tmp187,
	adds	r3, r1, #2	@,,
	str	r0, [fp, #-108]	@, %sfp
	str	r3, [fp, #-68]	@, %sfp
	beq	.L424	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r3, [r2, #0]	@ D.41473,
	cmp	r3, #3	@ D.41473,
	beq	.L424	@,
	ldr	r4, [fp, #-108]	@, %sfp
	mov	r2, #0	@ D.41471,
	movw	r0, #:lower16:10770776	@,
	movt	r0, #:upper16:10770776	@,
	movw	r9, #:lower16:11152524	@,
	add	r1, r5, r0	@, pMvcCtx,
	movt	r9, #:upper16:11152524	@,
	movw	r7, #:lower16:10770768	@,
	str	r9, [fp, #-80]	@, %sfp
	movt	r7, #:upper16:10770768	@,
	movw	r6, #:lower16:11118800	@,
	str	r7, [fp, #-112]	@, %sfp
	movt	r6, #:upper16:11118800	@,
	movw	lr, #:lower16:11117169	@,
	str	r6, [fp, #-88]	@, %sfp
	movt	lr, #:upper16:11117169	@,
	str	r4, [fp, #-92]	@, %sfp
	mov	r7, #1	@ init_flag,
	str	r1, [fp, #-72]	@, %sfp
	mov	r9, r2	@ picViewIdxLXPred, D.41471
	str	lr, [fp, #-84]	@, %sfp
	mov	r4, r2	@ CurrVOIdx, D.41471
	str	r2, [fp, #-76]	@ D.41471, %sfp
	mov	r6, r2	@ i, D.41471
	b	.L400	@
.L401:
	cmp	r3, #2	@ D.41473,
	beq	.L443	@,
	cmp	r7, #1	@ init_flag,
	beq	.L408	@,
	ldr	r1, [fp, #-84]	@, %sfp
	mov	r7, r9	@ prephitmp.1618, picViewIdxLXPred
	mov	r0, r8, asl #1	@ tmp251, listidx,
	ldrb	r9, [r5, r1]	@ zero_extendqisi2	@ D.41511, <variable>.CurrSlice.anchor_pic_flag
.L409:
	cmp	r3, #4	@ D.41473,
	beq	.L444	@,
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	lr, [fp, #-76]	@, %sfp
	ldr	ip, [r3, r2]	@ tmp227,* D.41471
	add	r3, ip, #1	@ tmp226, tmp227,
	add	r7, r3, r7	@ picViewIdxLX, tmp226, prephitmp.1618
	cmp	lr, r7	@, picViewIdxLX
	rsble	r7, lr, r7	@ picViewIdxLX,, picViewIdxLX
.L420:
	cmp	r9, #0	@ D.41511,
	add	lr, r0, r7	@ tmp229, tmp251, picViewIdxLX
	addne	lr, lr, r4	@ tmp230, tmp229, CurrVOIdx
	ldr	r0, [fp, #-80]	@, %sfp
	movwne	r3, #:lower16:2692698	@ tmp231,
	movweq	r3, #:lower16:2692706	@ tmp240,
	movtne	r3, #:upper16:2692698	@ tmp231,
	movteq	r3, #:upper16:2692706	@ tmp240,
	addeq	lr, lr, r4	@ tmp239, tmp238, CurrVOIdx
	ldr	r9, [r5, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r2, lr, r3	@ tmp240, tmp239, tmp240
	mov	r0, r5	@, pMvcCtx
	add	r1, r5, r2, asl #2	@, tmp244, pMvcCtx, tmp240,
	sub	r2, fp, #48	@,,
	ldr	r3, [r1, #4]	@ targetViewId,
	ldr	r1, [fp, #-60]	@, %sfp
	str	r9, [sp, #0]	@ <variable>.CurrPic.thispoc,
	mov	r9, r7	@ picViewIdxLXPred, picViewIdxLX
	str	r8, [sp, #4]	@ listidx,
	bl	mvc_reorder_interview	@
	mov	r7, #0	@ init_flag,
.L406:
	ldr	r3, [fp, #-68]	@, %sfp
	add	r6, r6, #1	@ i, i,
	cmp	r3, r6	@, i
	bls	.L424	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r3, [r2, r6, asl #2]	@ D.41473,
	mov	r2, r6, asl #2	@ D.41471, i,
	cmp	r3, #3	@ D.41473,
	beq	.L424	@,
.L400:
	cmp	r3, #1	@ D.41473,
	bhi	.L401	@,
	cmp	r3, #0	@ D.41473,
	bne	.L402	@,
	ldr	r3, [fp, #-96]	@, %sfp
	ldr	lr, [fp, #-92]	@, %sfp
	ldr	ip, [r3, r2]	@ tmp190,* D.41471
	mvn	sl, ip	@ tmp189, tmp190
	adds	sl, sl, lr	@ picNumLXNoWrap, tmp189,
	bmi	.L445	@,
.L403:
	ldr	r3, [fp, #-108]	@, %sfp
	mov	r0, r5	@, pMvcCtx
	ldr	r1, [fp, #-88]	@, %sfp
	cmp	r3, sl	@, picNumLXNoWrap
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	ip, [r5, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movge	r3, sl	@ picNumLX, picNumLXNoWrap
	ldrlt	lr, [fp, #-104]	@, %sfp
	mov	r1, r8	@, listidx
	rsblt	r3, lr, sl	@ picNumLX,, picNumLXNoWrap
	str	ip, [sp, #4]	@ <variable>.CurrSlice.view_id,
	sub	lr, fp, #48	@,,
	str	lr, [sp, #0]	@,
	bl	MVC_ReorderSTList	@
	str	sl, [fp, #-92]	@ picNumLXNoWrap, %sfp
	b	.L406	@
.L442:
	movw	r0, #:lower16:11116112	@,
	movw	r2, #:lower16:11116376	@,
	movt	r0, #:upper16:11116112	@,
	movt	r2, #:upper16:11116376	@,
	movw	r1, #:lower16:11116640	@,
	str	r2, [fp, #-96]	@, %sfp
	movt	r1, #:upper16:11116640	@,
	movw	r2, #:lower16:11116896	@,
	str	r0, [fp, #-56]	@, %sfp
	movt	r2, #:upper16:11116896	@,
	str	r1, [fp, #-100]	@, %sfp
	b	.L439	@
.L444:
	ldr	r1, [fp, #-64]	@, %sfp
	ldr	r3, [r1, r2]	@ tmp225,* D.41471
	mvn	r3, r3	@ tmp224, tmp225
	adds	r7, r7, r3	@ picViewIdxLX, prephitmp.1618, tmp224
	ldrmi	r2, [fp, #-76]	@, %sfp
	addmi	r7, r7, r2	@ picViewIdxLX, picViewIdxLX,
	b	.L420	@
.L408:
	ldr	sl, [fp, #-112]	@, %sfp
	ldr	r9, [fp, #-88]	@, %sfp
	ldr	r4, [r5, sl]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	ldr	r0, [r5, r9]	@ temp.1655, <variable>.CurrSlice.view_id
	adds	sl, r4, #1	@ D.41509, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L410	@,
	movw	r1, #:lower16:10770772	@ tmp204,
	movt	r1, #:upper16:10770772	@ tmp204,
	ldr	lr, [r5, r1]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r0, lr	@ temp.1655, <variable>.CurrSUBSPS.view_id
	beq	.L411	@,
	ldr	lr, [fp, #-72]	@ ivtmp.1640, %sfp
	tst	sl, #1	@ D.41509,
	mov	r4, #0	@ CurrVOIdx,
	mov	ip, lr	@ ivtmp.1658, ivtmp.1640
	bne	.L412	@,
	cmp	r7, sl	@ CurrVOIdx, D.41509
	mov	r4, r7	@ CurrVOIdx, init_flag
	bcs	.L413	@,
	ldr	ip, [fp, #-72]	@ ivtmp.1658, %sfp
	ldr	r9, [ip], #4	@ temp.1659, <variable>.CurrSUBSPS.view_id
	cmp	r0, r9	@ temp.1655, temp.1659
	bne	.L412	@,
	b	.L413	@
.L414:
	ldr	r7, [r1], #4	@ temp.1659, <variable>.CurrSUBSPS.view_id
	cmp	r0, r7	@ temp.1655, temp.1659
	beq	.L413	@,
	ldr	r7, [ip, #4]	@ temp.1659, <variable>.CurrSUBSPS.view_id
	add	r4, r4, #1	@ CurrVOIdx, CurrVOIdx,
	add	ip, r1, #4	@ ivtmp.1658, tmp269,
	cmp	r0, r7	@ temp.1655, temp.1659
	beq	.L413	@,
.L412:
	add	r4, r4, #1	@ CurrVOIdx, CurrVOIdx,
	mov	r1, ip	@ tmp269, ivtmp.1658
	cmp	r4, sl	@ CurrVOIdx, D.41509
	bcc	.L414	@,
.L413:
	ldr	r1, [fp, #-84]	@, %sfp
	tst	sl, #1	@ D.41509,
	ldrb	r9, [r5, r1]	@ zero_extendqisi2	@ D.41511, <variable>.CurrSlice.anchor_pic_flag
	mov	r1, #0	@ VOIdx,
	bne	.L415	@,
	mov	r1, #1	@ VOIdx,
	cmp	r1, sl	@ VOIdx, D.41509
	bcs	.L416	@,
	ldr	lr, [fp, #-72]	@ ivtmp.1640, %sfp
	ldr	ip, [lr], #4	@ D.48583, <variable>.CurrSUBSPS.view_id
	cmp	r0, ip	@ temp.1655, D.48583
	bne	.L415	@,
	b	.L416	@
.L417:
	ldr	r7, [ip], #4	@ D.48583, <variable>.CurrSUBSPS.view_id
	cmp	r0, r7	@ temp.1655, D.48583
	beq	.L416	@,
	ldr	r7, [lr, #4]	@ D.48583, <variable>.CurrSUBSPS.view_id
	add	r1, r1, #1	@ VOIdx, VOIdx,
	add	lr, ip, #4	@ ivtmp.1640, tmp264,
	cmp	r0, r7	@ temp.1655, D.48583
	beq	.L416	@,
.L415:
	add	r1, r1, #1	@ VOIdx, VOIdx,
	mov	ip, lr	@ tmp264, ivtmp.1640
	cmp	r1, sl	@ VOIdx, D.41509
	bcc	.L417	@,
.L416:
	cmp	r9, #0	@ D.41511,
	mov	r0, r8, asl #1	@ tmp251, listidx,
	addne	r1, r0, r1	@ tmp209, tmp251, VOIdx
	addeq	r1, r0, r1	@ tmp217, tmp251, VOIdx
	movwne	ip, #:lower16:2692694	@ tmp210,
	movweq	ip, #:lower16:2692702	@ tmp218,
	movtne	ip, #:upper16:2692694	@ tmp210,
	movteq	ip, #:upper16:2692702	@ tmp218,
	add	ip, r1, ip	@ tmp218, tmp217, tmp218
	mvn	r7, #0	@ prephitmp.1618,
	add	lr, r5, ip, asl #2	@, tmp222, pMvcCtx, tmp218,
	ldr	ip, [lr, #4]	@,
	str	ip, [fp, #-76]	@, %sfp
	b	.L409	@
.L402:
	ldr	lr, [fp, #-96]	@, %sfp
	ldr	sl, [fp, #-92]	@, %sfp
	ldr	r0, [fp, #-104]	@, %sfp
	ldr	ip, [lr, r2]	@ tmp192,* D.41471
	add	r2, sl, #1	@ tmp191,,
	add	sl, r2, ip	@ picNumLXNoWrap, tmp191, tmp192
	cmp	r0, sl	@, picNumLXNoWrap
	rsble	sl, r0, sl	@ picNumLXNoWrap,, picNumLXNoWrap
	b	.L403	@
.L443:
	ldr	r0, [fp, #-100]	@, %sfp
	mov	r1, r8	@, listidx
	sub	lr, fp, #48	@,,
	ldr	r3, [r0, r2]	@ tmp196,* D.41471
	mov	r0, r5	@, pMvcCtx
	ldr	r2, [fp, #-88]	@, %sfp
	ldr	ip, [r5, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r2, [fp, #-60]	@, %sfp
	str	lr, [sp, #0]	@,
	str	ip, [sp, #4]	@ <variable>.CurrSlice.view_id,
	bl	MVC_ReorderLTList	@
	b	.L406	@
.L445:
	ldr	r1, [fp, #-104]	@, %sfp
	add	sl, sl, r1	@ picNumLXNoWrap, picNumLXNoWrap,
	b	.L403	@
.L410:
	ldr	r7, [fp, #-84]	@, %sfp
	mov	r4, sl	@ CurrVOIdx, D.41509
	mov	r1, sl	@ VOIdx, CurrVOIdx
	ldrb	r9, [r5, r7]	@ zero_extendqisi2	@ D.41511, <variable>.CurrSlice.anchor_pic_flag
	b	.L416	@
.L411:
	ldr	r0, [fp, #-84]	@, %sfp
	mov	r4, #0	@ CurrVOIdx,
	mov	r1, r4	@ VOIdx, CurrVOIdx
	ldrb	r9, [r5, r0]	@ zero_extendqisi2	@ D.41511, <variable>.CurrSlice.anchor_pic_flag
	b	.L416	@
	.fnend
	.size	MVC_ReorderRefPiclist, .-MVC_ReorderRefPiclist
	.align	2
	.global	MVC_ReorderListX
	.type	MVC_ReorderListX, %function
MVC_ReorderListX:
	.fnstart
.LFB1591:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11117160	@ tmp134,
	movt	r1, #:upper16:11117160	@ tmp134,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	movw	ip, #:lower16:11116108	@ tmp136,
	movt	ip, #:upper16:11116108	@ tmp136,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r2, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0,
	bne	.L453	@,
.L448:
	movw	r0, #:lower16:11117160	@ tmp144,
	movt	r0, #:upper16:11117160	@ tmp144,
	movw	ip, #:lower16:11117220	@ tmp141,
	movt	ip, #:upper16:11117220	@ tmp141,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	r3, #:lower16:11117208	@ tmp140,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movt	r3, #:upper16:11117208	@ tmp140,
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	add	r0, r2, #1	@ tmp143, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	str	r0, [r4, r3]	@ tmp143, <variable>.CurrSlice.listXsize
	ldmnefd	sp, {r3, r4, fp, sp, pc}	@
	movw	r2, #:lower16:11116109	@ tmp146,
	movt	r2, #:upper16:11116109	@ tmp146,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r3, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1,
	bne	.L454	@,
.L449:
	movw	r3, #:lower16:11117224	@ tmp151,
	movt	r3, #:upper16:11117224	@ tmp151,
	movw	ip, #:lower16:11117212	@ tmp150,
	movt	ip, #:upper16:11117212	@ tmp150,
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r1, r0, #1	@ tmp153, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	str	r1, [r4, ip]	@ tmp153, <variable>.CurrSlice.listXsize
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L453:
	movw	lr, #:lower16:11117220	@ tmp138,
	movt	lr, #:upper16:11117220	@ tmp138,
	mov	r1, #0	@,
	ldr	r2, [r0, lr]	@, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bl	MVC_ReorderRefPiclist	@
	b	.L448	@
.L454:
	movw	lr, #:lower16:11117224	@ tmp148,
	movt	lr, #:upper16:11117224	@ tmp148,
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [r4, lr]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	MVC_ReorderRefPiclist	@
	b	.L449	@
	.fnend
	.size	MVC_ReorderListX, .-MVC_ReorderListX
	.align	2
	.global	MVC_IsSTRefFlg
	.type	MVC_IsSTRefFlg, %function
MVC_IsSTRefFlg:
	.fnstart
.LFB1592:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #65536	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_IsSTRefFlg, .-MVC_IsSTRefFlg
	.align	2
	.global	MVC_IsLTRefFlg
	.type	MVC_IsLTRefFlg, %function
MVC_IsLTRefFlg:
	.fnstart
.LFB1593:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #256	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_IsLTRefFlg, .-MVC_IsLTRefFlg
	.align	2
	.global	MVC_compare_pic_by_pic_num_desc
	.type	MVC_compare_pic_by_pic_num_desc, %function
MVC_compare_pic_by_pic_num_desc:
	.fnstart
.LFB1594:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #12]	@ D.41576, <variable>.pic_num
	ldr	r3, [r1, #12]	@ D.41579, <variable>.pic_num
	cmp	r2, r3	@ D.41576, D.41579
	movlt	r0, #1	@ D.41582,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41582,
	mvngt	r0, #0	@ D.41582,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_pic_num_desc, .-MVC_compare_pic_by_pic_num_desc
	.align	2
	.global	MVC_compare_pic_by_lt_pic_num_asc
	.type	MVC_compare_pic_by_lt_pic_num_asc, %function
MVC_compare_pic_by_lt_pic_num_asc:
	.fnstart
.LFB1595:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #8]	@ D.41591, <variable>.long_term_pic_num
	ldr	r3, [r1, #8]	@ D.41594, <variable>.long_term_pic_num
	cmp	r2, r3	@ D.41591, D.41594
	mvnlt	r0, #0	@ D.41597,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.41597
	movgt	r0, #1	@, D.41597
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_lt_pic_num_asc, .-MVC_compare_pic_by_lt_pic_num_asc
	.align	2
	.global	MVC_compare_fs_by_frame_num_desc
	.type	MVC_compare_fs_by_frame_num_desc, %function
MVC_compare_fs_by_frame_num_desc:
	.fnstart
.LFB1596:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #24]	@ D.41606, <variable>.frame_num_wrap
	ldr	r3, [r1, #24]	@ D.41609, <variable>.frame_num_wrap
	cmp	r2, r3	@ D.41606, D.41609
	movlt	r0, #1	@ D.41612,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41612,
	mvngt	r0, #0	@ D.41612,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_frame_num_desc, .-MVC_compare_fs_by_frame_num_desc
	.align	2
	.global	MVC_compare_fs_by_lt_pic_idx_asc
	.type	MVC_compare_fs_by_lt_pic_idx_asc, %function
MVC_compare_fs_by_lt_pic_idx_asc:
	.fnstart
.LFB1597:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #28]	@ D.41621, <variable>.long_term_frame_idx
	ldr	r3, [r1, #28]	@ D.41624, <variable>.long_term_frame_idx
	cmp	r2, r3	@ D.41621, D.41624
	mvncc	r0, #0	@ D.41627,
	ldmccfd	sp, {fp, sp, pc}	@
	movls	r0, #0	@, D.41627
	movhi	r0, #1	@, D.41627
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_lt_pic_idx_asc, .-MVC_compare_fs_by_lt_pic_idx_asc
	.align	2
	.global	MVC_compare_pic_by_poc_asc
	.type	MVC_compare_pic_by_poc_asc, %function
MVC_compare_pic_by_poc_asc:
	.fnstart
.LFB1598:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.41636, <variable>.poc
	ldr	r3, [r1, #16]	@ D.41639, <variable>.poc
	cmp	r2, r3	@ D.41636, D.41639
	mvnlt	r0, #0	@ D.41642,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.41642
	movgt	r0, #1	@, D.41642
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_poc_asc, .-MVC_compare_pic_by_poc_asc
	.align	2
	.global	MVC_compare_pic_by_poc_desc
	.type	MVC_compare_pic_by_poc_desc, %function
MVC_compare_pic_by_poc_desc:
	.fnstart
.LFB1599:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.41651, <variable>.poc
	ldr	r3, [r1, #16]	@ D.41654, <variable>.poc
	cmp	r2, r3	@ D.41651, D.41654
	movlt	r0, #1	@ D.41657,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41657,
	mvngt	r0, #0	@ D.41657,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_poc_desc, .-MVC_compare_pic_by_poc_desc
	.align	2
	.global	MVC_compare_fs_by_poc_asc
	.type	MVC_compare_fs_by_poc_asc, %function
MVC_compare_fs_by_poc_asc:
	.fnstart
.LFB1600:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #32]	@ D.41666, <variable>.poc
	ldr	r3, [r1, #32]	@ D.41669, <variable>.poc
	cmp	r2, r3	@ D.41666, D.41669
	mvnlt	r0, #0	@ D.41672,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.41672
	movgt	r0, #1	@, D.41672
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_poc_asc, .-MVC_compare_fs_by_poc_asc
	.align	2
	.global	MVC_compare_fs_by_poc_desc
	.type	MVC_compare_fs_by_poc_desc, %function
MVC_compare_fs_by_poc_desc:
	.fnstart
.LFB1601:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #32]	@ D.41681, <variable>.poc
	ldr	r3, [r1, #32]	@ D.41684, <variable>.poc
	cmp	r2, r3	@ D.41681, D.41684
	movlt	r0, #1	@ D.41687,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41687,
	mvngt	r0, #0	@ D.41687,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_poc_desc, .-MVC_compare_fs_by_poc_desc
	.align	2
	.global	MVC_GenPiclistfromFrmlist
	.type	MVC_GenPiclistfromFrmlist, %function
MVC_GenPiclistfromFrmlist:
	.fnstart
.LFB1602:
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #31	@ list_idx,
	movcc	r4, r2	@ list_idx.2044, list_idx
	movcs	r4, #31	@ list_idx.2044,
	ldr	r2, [fp, #8]	@ long_term, long_term
	movw	ip, #:lower16:MVC_IsSTRefFlg	@ tmp218,
	movt	ip, #:upper16:MVC_IsSTRefFlg	@ tmp218,
	movw	r5, #:lower16:MVC_IsLTRefFlg	@ tmp217,
	cmp	r2, #0	@ long_term,
	movt	r5, #:upper16:MVC_IsLTRefFlg	@ tmp217,
	mov	r6, r1	@ fs_list, fs_list
	str	r3, [fp, #-56]	@ list, %sfp
	moveq	r5, ip	@ is_ref, tmp218
	cmp	r0, #1	@ currStrcture,
	beq	.L577	@,
	cmp	r0, #2	@ currStrcture,
	bne	.L506	@,
	mov	r8, #0	@ bot_idx.2022,
	mov	r6, r5	@ is_ref, is_ref
	mov	sl, r8	@ top_idx, bot_idx.2022
	str	r1, [fp, #-48]	@ fs_list, %sfp
.L556:
	cmp	sl, r4	@ top_idx, list_idx.2044
	movcs	r2, #0	@,
	movcc	r2, #1	@,
	str	r2, [fp, #-52]	@, %sfp
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r8, r4	@ bot_idx.2022, list_idx.2044
	movcs	r3, #0	@, temp.2016
	movcc	r3, #1	@, temp.2016
	orrs	r1, r3, r1	@, temp.2016,
	beq	.L506	@,
	cmp	r3, #0	@ temp.2016,
	beq	.L511	@,
	ldr	ip, [fp, #-48]	@, %sfp
	mvn	r7, r8	@ tmp235, bot_idx.2022
	add	r5, r7, r4	@ tmp234, tmp235, list_idx.2044
	and	r5, r5, #1	@ tmp236, tmp234,
	add	r7, ip, r8, asl #2	@, ivtmp.2003,, bot_idx.2022,
	ldr	r0, [ip, r8, asl #2]	@ temp.2018,
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L578	@,
.L540:
	add	r8, r8, #1	@ bot_idx.2022, bot_idx.2022,
	add	r7, r7, #4	@ ivtmp.2003, ivtmp.2003,
	cmp	r8, r4	@ bot_idx.2022, list_idx.2044
	bcs	.L511	@,
	cmp	r5, #0	@ tmp236,
	beq	.L510	@,
	ldr	r0, [r7, #0]	@ temp.2018,* ivtmp.2003
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L579	@,
.L542:
	add	r8, r8, #1	@ bot_idx.2022, bot_idx.2022,
	add	r7, r7, #4	@ ivtmp.2003, ivtmp.2003,
	cmp	r8, r4	@ bot_idx.2022, list_idx.2044
	bcc	.L510	@,
	b	.L511	@
.L508:
	add	r7, r7, #4	@ ivtmp.2003, ivtmp.2003,
	add	r8, r8, #1	@ bot_idx.2022, bot_idx.2022,
	ldr	r0, [r7, #0]	@ temp.2018,* ivtmp.2003
	mov	r9, r8	@ tmp237, bot_idx.2022
	mov	r5, r7	@ tmp238, ivtmp.2003
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L580	@,
.L545:
	add	r8, r9, #1	@ bot_idx.2022, tmp237,
	add	r7, r5, #4	@ ivtmp.2003, tmp238,
	cmp	r8, r4	@ bot_idx.2022, list_idx.2044
	bcs	.L511	@,
.L510:
	ldr	r0, [r7, #0]	@ temp.2018,* ivtmp.2003
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	beq	.L508	@,
	add	r0, r0, #672	@, temp.2018,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L508	@,
.L564:
	ldr	r0, [fp, #4]	@, list_size
	add	r8, r8, #1	@ bot_idx.2022, bot_idx.2022,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	lr, [r7, #0]	@ tmp195,* ivtmp.2003
	ldr	r3, [r0, #0]	@ tmp194,
	add	r2, lr, #672	@ tmp196, tmp195,
	str	r2, [ip, r3, asl #2]	@ tmp196,
	ldr	lr, [fp, #4]	@, list_size
	ldr	r1, [lr, #0]	@ tmp197,
	add	r0, r1, #1	@ tmp198, tmp197,
	str	r0, [lr, #0]	@ tmp198,
.L511:
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r1, #0	@,
	beq	.L556	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mvn	r5, sl	@ tmp230, top_idx
	add	r7, r5, r4	@ tmp229, tmp230, list_idx.2044
	and	r7, r7, #1	@ tmp231, tmp229,
	add	r5, r3, sl, asl #2	@, ivtmp.1998,, top_idx,
	ldr	r0, [r3, sl, asl #2]	@ temp.2032,
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L581	@,
.L533:
	add	sl, sl, #1	@ top_idx, top_idx,
	add	r5, r5, #4	@ ivtmp.1998, ivtmp.1998,
	cmp	sl, r4	@ top_idx, list_idx.2044
	bcs	.L556	@,
	cmp	r7, #0	@ tmp231,
	beq	.L513	@,
	ldr	r0, [r5, #0]	@ temp.2032,* ivtmp.1998
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	bne	.L582	@,
.L535:
	add	sl, sl, #1	@ top_idx, top_idx,
	add	r5, r5, #4	@ ivtmp.1998, ivtmp.1998,
	cmp	sl, r4	@ top_idx, list_idx.2044
	bcc	.L513	@,
	b	.L556	@
.L512:
	add	r5, r5, #4	@ ivtmp.1998, ivtmp.1998,
	add	sl, sl, #1	@ top_idx, top_idx,
	ldr	r0, [r5, #0]	@ temp.2032,* ivtmp.1998
	mov	r9, sl	@ tmp232, top_idx
	mov	r7, r5	@ tmp233, ivtmp.1998
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L583	@,
.L538:
	add	sl, r9, #1	@ top_idx, tmp232,
	add	r5, r7, #4	@ ivtmp.1998, tmp233,
	cmp	sl, r4	@ top_idx, list_idx.2044
	bcs	.L556	@,
.L513:
	ldr	r0, [r5, #0]	@ temp.2032,* ivtmp.1998
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	beq	.L512	@,
	add	r0, r0, #636	@, temp.2032,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L512	@,
.L563:
	ldr	r0, [fp, #4]	@, list_size
	add	sl, sl, #1	@ top_idx, top_idx,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	lr, [r5, #0]	@ tmp204,* ivtmp.1998
	ldr	r3, [r0, #0]	@ tmp203,
	add	r2, lr, #636	@ tmp205, tmp204,
	str	r2, [r1, r3, asl #2]	@ tmp205,
	ldr	lr, [fp, #4]	@, list_size
	ldr	ip, [lr, #0]	@ tmp206,
	add	r0, ip, #1	@ tmp207, tmp206,
	str	r0, [lr, #0]	@ tmp207,
	b	.L556	@
.L506:
	mov	r0, #0	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L583:
	add	r0, r0, #636	@, temp.2032,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L538	@,
	b	.L563	@
.L580:
	add	r0, r0, #672	@, temp.2018,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L545	@,
	b	.L564	@
.L578:
	add	r0, r0, #672	@, temp.2018,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L540	@,
	b	.L564	@
.L581:
	add	r0, r0, #636	@, temp.2032,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L533	@,
	b	.L563	@
.L582:
	add	r0, r0, #636	@, temp.2032,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L535	@,
	b	.L563	@
.L579:
	add	r0, r0, #672	@, temp.2018,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L542	@,
	b	.L564	@
.L577:
	mov	r8, #0	@ bot_idx,
	mov	r6, r5	@ is_ref, is_ref
	mov	sl, r8	@ top_idx.2027, bot_idx
	str	r1, [fp, #-48]	@ fs_list, %sfp
.L551:
	cmp	r8, r4	@ bot_idx, list_idx.2044
	movcs	r1, #0	@,
	movcc	r1, #1	@,
	cmp	sl, r4	@ top_idx.2027, list_idx.2044
	movcs	r3, #0	@, D.41756
	movcc	r3, #1	@, D.41756
	str	r1, [fp, #-52]	@, %sfp
	orrs	r1, r1, r3	@,, D.41756
	beq	.L506	@,
	cmp	r3, #0	@ D.41756,
	beq	.L503	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mvn	r7, sl	@ tmp225, top_idx.2027
	add	r5, r7, r4	@ tmp224, tmp225, list_idx.2044
	and	r5, r5, #1	@ tmp226, tmp224,
	add	r7, r3, sl, asl #2	@, ivtmp.1993,, top_idx.2027,
	ldr	r0, [r3, sl, asl #2]	@ D.41729,
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L584	@,
.L526:
	add	sl, sl, #1	@ top_idx.2027, top_idx.2027,
	add	r7, r7, #4	@ ivtmp.1993, ivtmp.1993,
	cmp	sl, r4	@ top_idx.2027, list_idx.2044
	bcs	.L503	@,
	cmp	r5, #0	@ tmp226,
	beq	.L502	@,
	ldr	r0, [r7, #0]	@ D.41729,* ivtmp.1993
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L585	@,
.L528:
	add	sl, sl, #1	@ top_idx.2027, top_idx.2027,
	add	r7, r7, #4	@ ivtmp.1993, ivtmp.1993,
	cmp	sl, r4	@ top_idx.2027, list_idx.2044
	bcc	.L502	@,
	b	.L503	@
.L500:
	add	r7, r7, #4	@ ivtmp.1993, ivtmp.1993,
	add	sl, sl, #1	@ top_idx.2027, top_idx.2027,
	ldr	r0, [r7, #0]	@ D.41729,* ivtmp.1993
	mov	r9, sl	@ tmp228, top_idx.2027
	mov	r5, r7	@ tmp227, ivtmp.1993
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L586	@,
.L531:
	add	sl, r9, #1	@ top_idx.2027, tmp228,
	add	r7, r5, #4	@ ivtmp.1993, tmp227,
	cmp	sl, r4	@ top_idx.2027, list_idx.2044
	bcs	.L503	@,
.L502:
	ldr	r0, [r7, #0]	@ D.41729,* ivtmp.1993
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	beq	.L500	@,
	add	r0, r0, #636	@, D.41729,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L500	@,
.L562:
	ldr	r1, [fp, #4]	@, list_size
	add	sl, sl, #1	@ top_idx.2027, top_idx.2027,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r7, #0]	@ tmp170,* ivtmp.1993
	ldr	r3, [r1, #0]	@ tmp169,
	add	r2, r0, #636	@ tmp171, tmp170,
	str	r2, [ip, r3, asl #2]	@ tmp171,
	ldr	r0, [fp, #4]	@, list_size
	ldr	lr, [r0, #0]	@ tmp172,
	add	r1, lr, #1	@ tmp173, tmp172,
	str	r1, [r0, #0]	@ tmp173,
.L503:
	ldr	ip, [fp, #-52]	@, %sfp
	cmp	ip, #0	@,
	beq	.L551	@,
	ldr	r1, [fp, #-48]	@, %sfp
	mvn	r5, r8	@ tmp220, bot_idx
	add	r7, r5, r4	@ tmp219, tmp220, list_idx.2044
	and	r7, r7, #1	@ tmp221, tmp219,
	add	r5, r1, r8, asl #2	@, ivtmp.1988,, bot_idx,
	ldr	r0, [r1, r8, asl #2]	@ D.41746,
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L587	@,
.L519:
	add	r8, r8, #1	@ bot_idx, bot_idx,
	add	r5, r5, #4	@ ivtmp.1988, ivtmp.1988,
	cmp	r8, r4	@ bot_idx, list_idx.2044
	bcs	.L551	@,
	cmp	r7, #0	@ tmp221,
	beq	.L505	@,
	ldr	r0, [r5, #0]	@ D.41746,* ivtmp.1988
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #2	@ <variable>.is_used,
	bne	.L588	@,
.L521:
	add	r8, r8, #1	@ bot_idx, bot_idx,
	add	r5, r5, #4	@ ivtmp.1988, ivtmp.1988,
	cmp	r8, r4	@ bot_idx, list_idx.2044
	bcc	.L505	@,
	b	.L551	@
.L504:
	add	r5, r5, #4	@ ivtmp.1988, ivtmp.1988,
	add	r8, r8, #1	@ bot_idx, bot_idx,
	ldr	r0, [r5, #0]	@ D.41746,* ivtmp.1988
	mov	r9, r8	@ tmp222, bot_idx
	mov	r7, r5	@ tmp223, ivtmp.1988
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L589	@,
.L524:
	add	r8, r9, #1	@ bot_idx, tmp222,
	add	r5, r7, #4	@ ivtmp.1988, tmp223,
	cmp	r8, r4	@ bot_idx, list_idx.2044
	bcs	.L551	@,
.L505:
	ldr	r0, [r5, #0]	@ D.41746,* ivtmp.1988
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	beq	.L504	@,
	add	r0, r0, #672	@, D.41746,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L504	@,
.L561:
	ldr	r0, [fp, #4]	@, list_size
	add	r8, r8, #1	@ bot_idx, bot_idx,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	lr, [r5, #0]	@ tmp179,* ivtmp.1988
	ldr	r3, [r0, #0]	@ tmp178,
	add	ip, lr, #672	@ tmp180, tmp179,
	str	ip, [r1, r3, asl #2]	@ tmp180,
	ldr	lr, [fp, #4]	@, list_size
	ldr	r2, [lr, #0]	@ tmp181,
	add	r0, r2, #1	@ tmp182, tmp181,
	str	r0, [lr, #0]	@ tmp182,
	b	.L551	@
.L589:
	add	r0, r0, #672	@, D.41746,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L524	@,
	b	.L561	@
.L586:
	add	r0, r0, #636	@, D.41729,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L531	@,
	b	.L562	@
.L587:
	add	r0, r0, #672	@, D.41746,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L519	@,
	b	.L561	@
.L584:
	add	r0, r0, #636	@, D.41729,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L526	@,
	b	.L562	@
.L585:
	add	r0, r0, #636	@, D.41729,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L528	@,
	b	.L562	@
.L588:
	add	r0, r0, #672	@, D.41746,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L521	@,
	b	.L561	@
	.fnend
	.size	MVC_GenPiclistfromFrmlist, .-MVC_GenPiclistfromFrmlist
	.align	2
	.global	MVC_GetBaseViewId
	.type	MVC_GetBaseViewId, %function
MVC_GetBaseViewId:
	.fnstart
.LFB1603:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r3, r0, #12992	@ ivtmp.2076, pMvcCtx,
	add	r3, r3, #16	@ ivtmp.2076, ivtmp.2076,
	mov	r1, #0	@ i,
	b	.L593	@
.L591:
	ldr	r3, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r1, r1, #1	@ i, i,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r3, r1	@ tmp181, i
	beq	.L596	@,
	ldrb	ip, [r2, #-4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	ip, #0	@ <variable>.is_valid,
	bne	.L599	@,
.L596:
	add	r1, r3, #1	@ i, tmp181,
	add	r3, r2, #335872	@ ivtmp.2076, ivtmp.2076,
	cmp	r1, #32	@ i,
	add	r3, r3, #308	@ ivtmp.2076, ivtmp.2076,
	beq	.L601	@,
.L593:
	ldr	ip, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r2, r3, #335872	@ ivtmp.2076, ivtmp.2076,
	add	r2, r2, #308	@ ivtmp.2076, ivtmp.2076,
	cmp	ip, #0	@ <variable>.num_views_minus1,
	beq	.L591	@,
	ldrb	r3, [r3, #-4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L591	@,
.L599:
	movw	r2, #:lower16:336180	@ tmp174,
	movt	r2, #:upper16:336180	@ tmp174,
	mla	ip, r2, r1, r0	@ tmp175, tmp174, i, pMvcCtx
	add	r0, ip, #12992	@ tmp176, tmp175,
	add	r1, r0, #16	@ tmp176, tmp176,
	ldr	r0, [r1, #4]	@ baseviewid, <variable>.view_id
	ldmfd	sp, {fp, sp, pc}	@
.L601:
	mvn	r0, #0	@ baseviewid,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetBaseViewId, .-MVC_GetBaseViewId
	.align	2
	.global	MVC_GetVOIdx
	.type	MVC_GetVOIdx, %function
MVC_GetVOIdx:
	.fnstart
.LFB1604:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ num_views
	mov	r3, r0	@ ref_view_id, ref_view_id
	beq	.L603	@,
	ldr	r0, [r0, #0]	@ tmp139,* ref_view_id
	cmp	r0, r2	@ tmp139, CurrViewId
	beq	.L603	@,
	tst	r1, #1	@ num_views,
	mov	r0, #0	@ i,
	bne	.L604	@,
	ldr	ip, [r3, #4]	@ tmp148,
	mov	r0, #1	@ i,
	cmp	ip, r2	@ tmp148, CurrViewId
	ldmeqfd	sp, {fp, sp, pc}	@
	add	r0, r0, #1	@ i, i,
	cmp	r0, r1	@ i, num_views
	bcs	.L613	@,
.L606:
	ldr	ip, [r3, r0, asl #2]	@ tmp141,* ref_view_id
	cmp	ip, r2	@ tmp141, CurrViewId
	beq	.L614	@,
	add	r0, r0, #1	@ i, i,
	ldr	ip, [r3, r0, asl #2]	@ tmp150,* ref_view_id
	cmp	ip, r2	@ tmp150, CurrViewId
	beq	.L615	@,
.L604:
	add	r0, r0, #1	@ i, i,
	cmp	r0, r1	@ i, num_views
	bcc	.L606	@,
.L613:
	ldmfd	sp, {fp, sp, pc}	@
.L614:
	ldmfd	sp, {fp, sp, pc}	@
.L615:
	ldmfd	sp, {fp, sp, pc}	@
.L603:
	mov	r0, #0	@ i,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetVOIdx, .-MVC_GetVOIdx
	.align	2
	.global	MVC_is_view_id_in_ref_view_list
	.type	MVC_is_view_id_in_ref_view_list, %function
MVC_is_view_id_in_ref_view_list:
	.fnstart
.LFB1605:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #0	@ num_ref_views
	beq	.L617	@,
	ldr	r3, [r1, #0]	@ tmp139,* ref_view_id
	cmp	r3, r0	@ tmp139, view_id
	beq	.L617	@,
	tst	r2, #1	@ num_ref_views,
	mov	ip, #0	@ i,
	bne	.L618	@,
	ldr	r4, [r1, #4]	@ tmp153,
	mov	ip, #1	@ i,
	mov	r3, ip	@ i.638, i
	cmp	r4, r0	@ tmp153, view_id
	bne	.L618	@,
.L619:
	cmp	r2, #0	@ num_ref_views,
	cmpne	r2, r3	@, num_ref_views, i.638
	movls	r0, #0	@,
	movhi	r0, #1	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L620:
	ldr	r4, [r1, r3, asl #2]	@ tmp141,* ref_view_id
	cmp	r4, r0	@ tmp141, view_id
	beq	.L619	@,
	ldr	r4, [r1, ip, asl #2]	@ tmp155,* ref_view_id
	mov	r3, ip	@ i.638, i
	cmp	r4, r0	@ tmp155, view_id
	beq	.L619	@,
.L618:
	add	r3, ip, #1	@ i.638, i,
	cmp	r2, r3	@ num_ref_views, i.638
	add	ip, r3, #1	@ i, i.638,
	bhi	.L620	@,
	cmp	r2, #0	@ num_ref_views,
	cmpne	r2, r3	@, num_ref_views, i.638
	movls	r0, #0	@,
	movhi	r0, #1	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L617:
	mov	r3, #0	@ i.638,
	b	.L619	@
	.fnend
	.size	MVC_is_view_id_in_ref_view_list, .-MVC_is_view_id_in_ref_view_list
	.align	2
	.global	MVC_GenPiclistfromFrmlist_Interview
	.type	MVC_GenPiclistfromFrmlist_Interview, %function
MVC_GenPiclistfromFrmlist_Interview:
	.fnstart
.LFB1606:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #1	@ currStrcture,
	ldr	ip, [fp, #4]	@ list_size, list_size
	beq	.L645	@,
	cmp	r0, #2	@ currStrcture,
	ldmnefd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r2, #0	@ list_idx,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	ldr	r4, [ip, #0]	@ prephitmp.2159,* list_size
	add	r5, r1, #672	@ tmp146, fs_list,
	cmp	r2, #1	@ list_idx,
	sub	r7, r2, #1	@ tmp153, list_idx,
	mov	r6, #1	@ i.2184,
	and	r7, r7, #1	@ tmp155, tmp153,
	str	r5, [r3, r4, asl #2]	@ tmp146,* list
	add	r4, r1, #712	@ ivtmp.2179, fs_list,
	ldr	r5, [ip, #0]	@ tmp147,* list_size
	add	r5, r5, r6	@ prephitmp.2159, tmp147,
	str	r5, [ip, #0]	@ prephitmp.2159,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r7, #0	@ tmp155,
	beq	.L631	@,
	add	r6, r4, #672	@ tmp180, ivtmp.2179,
	cmp	r2, r0	@ list_idx, i.2184
	str	r6, [r3, r5, asl #2]	@ tmp180,* list
	mov	r6, r0	@ i.2184, currStrcture
	ldr	r0, [ip, #0]	@ tmp181,* list_size
	add	r4, r1, #1424	@ ivtmp.2179, fs_list,
	add	r5, r0, #1	@ prephitmp.2159, tmp181,
	str	r5, [ip, #0]	@ prephitmp.2159,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L631:
	add	r1, r4, #672	@ tmp171, ivtmp.2179,
	str	r1, [r3, r5, asl #2]	@ tmp171,* list
	ldr	r0, [ip, #0]	@ tmp172,* list_size
	add	r1, r4, #1376	@ tmp176, ivtmp.2179,
	add	r6, r6, #2	@ i.2184, i.2184,
	add	r1, r1, #8	@ tmp176, tmp176,
	add	r5, r0, #1	@ prephitmp.2159, tmp172,
	cmp	r2, r6	@ list_idx, i.2184
	str	r5, [ip, #0]	@ prephitmp.2159,* list_size
	add	r4, r4, #1424	@ ivtmp.2179, ivtmp.2179,
	str	r1, [r3, r5, asl #2]	@ tmp176,* list
	ldr	r0, [ip, #0]	@ tmp177,* list_size
	add	r5, r0, #1	@ prephitmp.2159, tmp177,
	str	r5, [ip, #0]	@ prephitmp.2159,* list_size
	bhi	.L631	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L645:
	cmp	r2, #0	@ list_idx,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	ldr	r4, [ip, #0]	@ prephitmp.2185,* list_size
	add	r5, r1, #636	@ tmp144, fs_list,
	cmp	r2, #1	@ list_idx,
	sub	r6, r2, #1	@ tmp148, list_idx,
	and	r6, r6, #1	@ tmp150, tmp148,
	str	r5, [r3, r4, asl #2]	@ tmp144,* list
	add	r4, r1, #712	@ ivtmp.2175, fs_list,
	ldr	r5, [ip, #0]	@ tmp145,* list_size
	add	r5, r5, #1	@ prephitmp.2185, tmp145,
	str	r5, [ip, #0]	@ prephitmp.2185,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r6, #0	@ tmp150,
	beq	.L630	@,
	add	r4, r4, #636	@ tmp178, ivtmp.2175,
	mov	r0, #2	@ i,
	str	r4, [r3, r5, asl #2]	@ tmp178,* list
	cmp	r2, r0	@ list_idx, i
	ldr	r5, [ip, #0]	@ tmp179,* list_size
	add	r4, r1, #1424	@ ivtmp.2175, fs_list,
	add	r5, r5, #1	@ prephitmp.2185, tmp179,
	str	r5, [ip, #0]	@ prephitmp.2185,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L630:
	add	r1, r4, #636	@ tmp161, ivtmp.2175,
	str	r1, [r3, r5, asl #2]	@ tmp161,* list
	ldr	r5, [ip, #0]	@ tmp162,* list_size
	add	r1, r4, #1344	@ tmp166, ivtmp.2175,
	add	r0, r0, #2	@ i, i,
	add	r1, r1, #4	@ tmp166, tmp166,
	add	r5, r5, #1	@ prephitmp.2185, tmp162,
	cmp	r2, r0	@ list_idx, i
	str	r5, [ip, #0]	@ prephitmp.2185,* list_size
	add	r4, r4, #1424	@ ivtmp.2175, ivtmp.2175,
	str	r1, [r3, r5, asl #2]	@ tmp166,* list
	ldr	r1, [ip, #0]	@ tmp167,* list_size
	add	r5, r1, #1	@ prephitmp.2185, tmp167,
	str	r5, [ip, #0]	@ prephitmp.2185,* list_size
	bhi	.L630	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	MVC_GenPiclistfromFrmlist_Interview, .-MVC_GenPiclistfromFrmlist_Interview
	.align	2
	.global	MVC_FindNearestPOCPicId
	.type	MVC_FindNearestPOCPicId, %function
MVC_FindNearestPOCPicId:
	.fnstart
.LFB1610:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11123116	@ tmp143,
	movt	r1, #:upper16:11123116	@ tmp143,
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	mvneq	r6, #0	@ nearest_pic_id,
	beq	.L648	@,
	movw	r2, #:lower16:11123112	@ tmp146,
	movt	r2, #:upper16:11123112	@ tmp146,
	movw	ip, #:lower16:11152524	@ tmp145,
	movt	ip, #:upper16:11152524	@ tmp145,
	ldr	r5, [r0, r2]	@ D.42219, <variable>.DPB.size
	ldr	r4, [r0, ip]	@ curr_poc, <variable>.CurrPic.thispoc
	cmp	r5, #0	@ D.42219,
	moveq	r6, r5	@ nearest_pic_id, D.42219
	beq	.L648	@,
	movw	r1, #:lower16:11122920	@ tmp148,
	movt	r1, #:upper16:11122920	@ tmp148,
	add	r3, r0, r1	@ tmp148, pMvcCtx, tmp148
	mov	r5, r5, asl #2	@ D.50124, D.42219,
	sub	r6, r5, #4	@ tmp157, D.50124,
	mvn	ip, #-2147483648	@ nearest_poc_diff,
	ldr	r3, [r3, #0]	@ D.42211, <variable>.DPB.fs
	ubfx	r1, r6, #2, #1	@ tmp158, tmp157,,
	mov	r6, #0	@ nearest_pic_id,
	cmp	r3, r6	@ D.42211,
	beq	.L654	@,
	ldr	r2, [r3, #32]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, r4	@ tmp171, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp171,
	rsblt	r2, r2, #0	@ new_poc_diff, tmp171
	cmn	r2, #-2147483647	@ new_poc_diff,
	ldrlt	r6, [r3, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r2	@ nearest_poc_diff, new_poc_diff
.L654:
	mov	r3, #4	@ ivtmp.2214,
	cmp	r3, r5	@ ivtmp.2214, D.50124
	beq	.L648	@,
	cmp	r1, #0	@ tmp158,
	beq	.L651	@,
	movw	r2, #:lower16:11122924	@ tmp175,
	movt	r2, #:upper16:11122924	@ tmp175,
	add	r1, r0, r2	@ tmp175, pMvcCtx, tmp175
	ldr	r2, [r1, #0]	@ D.42211, <variable>.DPB.fs
	cmp	r2, #0	@ D.42211,
	beq	.L656	@,
	ldr	r1, [r2, #32]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, r4	@ tmp178, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp178,
	rsblt	r1, r1, #0	@ new_poc_diff, tmp178
	cmp	r1, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r2, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r1	@ nearest_poc_diff, new_poc_diff
.L656:
	add	r3, r3, #4	@ ivtmp.2214, ivtmp.2214,
	cmp	r3, r5	@ ivtmp.2214, D.50124
	beq	.L648	@,
.L651:
	movw	r2, #:lower16:11122920	@ tmp163,
	movt	r2, #:upper16:11122920	@ tmp163,
	add	r8, r0, r3	@ tmp161, pMvcCtx, ivtmp.2214
	add	r1, r3, #4	@ tmp159, ivtmp.2214,
	mov	r3, r2	@ tmp168, tmp163
	add	r2, r8, r2	@ tmp163, tmp161, tmp163
	add	r7, r0, r1	@ tmp166, pMvcCtx, tmp159
	ldr	r2, [r2, #0]	@ D.42211, <variable>.DPB.fs
	add	r3, r7, r3	@ tmp168, tmp166, tmp168
	cmp	r2, #0	@ D.42211,
	beq	.L650	@,
	ldr	r7, [r2, #32]	@ <variable>.poc, <variable>.poc
	rsb	r7, r7, r4	@ tmp150, <variable>.poc, curr_poc
	cmp	r7, #0	@ tmp150,
	rsblt	r7, r7, #0	@ new_poc_diff, tmp150
	cmp	r7, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r2, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r7	@ nearest_poc_diff, new_poc_diff
.L650:
	ldr	r3, [r3, #0]	@ D.42211, <variable>.DPB.fs
	cmp	r3, #0	@ D.42211,
	beq	.L659	@,
	ldr	r2, [r3, #32]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, r4	@ tmp181, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp181,
	rsblt	r2, r2, #0	@ new_poc_diff, tmp181
	cmp	r2, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r3, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r2	@ nearest_poc_diff, new_poc_diff
.L659:
	add	r3, r1, #4	@ ivtmp.2214, tmp159,
	cmp	r3, r5	@ ivtmp.2214, D.50124
	bne	.L651	@,
.L648:
	mov	r0, r6	@, nearest_pic_id
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_FindNearestPOCPicId, .-MVC_FindNearestPOCPicId
	.align	2
	.global	MVC_FindMinRefIdx
	.type	MVC_FindMinRefIdx, %function
MVC_FindMinRefIdx:
	.fnstart
.LFB1611:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11117160	@ tmp154,
	movt	r1, #:upper16:11117160	@ tmp154,
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r2, #:lower16:11151963	@ tmp156,
	movt	r2, #:upper16:11151963	@ tmp156,
	ldrb	r0, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r0, #0	@ <variable>.CurrPic.structure,
	bne	.L704	@,
	movw	r9, #:lower16:11117208	@ tmp160,
	movw	r5, #:lower16:11123348	@ ivtmp.2265,
	movt	r9, #:upper16:11117208	@ tmp160,
	movt	r5, #:upper16:11123348	@ ivtmp.2265,
	add	r5, r8, r5	@ ivtmp.2265, pMvcCtx, ivtmp.2265
	mov	sl, r9	@ tmp178, tmp160
	ldr	r7, [r8, r9]	@ D.42252, <variable>.CurrSlice.listXsize
	mov	r9, r0	@ j, i
.L668:
	cmp	r7, #0	@ D.42252,
	beq	.L672	@,
	ldr	ip, [r8, #256]	@ tmp203, <variable>.pListX
	mov	r1, #32	@ minrefidx,
	ldr	r6, [r8, sl]	@ temp.2283, <variable>.CurrSlice.listXsize
	ldr	r3, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	sub	r2, r6, #1	@ tmp186, temp.2283,
	and	r2, r2, #1	@ tmp188, tmp186,
	ldr	ip, [r3, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	ip, r0	@ <variable>.apc_idc, i
	beq	.L705	@,
.L680:
	mov	r3, #1	@ j,
	cmp	r6, r3	@ temp.2283, j
	add	ip, r8, #4	@ ivtmp.2259, pMvcCtx,
	bls	.L700	@,
	cmp	r2, #0	@ tmp188,
	beq	.L670	@,
	ldr	r2, [ip, #256]	@ tmp224, <variable>.pListX
	ldr	r2, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r2, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r2, r0	@ <variable>.apc_idc, i
	beq	.L706	@,
.L682:
	add	r3, r3, #1	@ j, j,
	add	ip, ip, #4	@ ivtmp.2259, ivtmp.2259,
	cmp	r6, r3	@ temp.2283, j
	bhi	.L670	@,
	b	.L700	@
.L669:
	ldr	r3, [r2, #256]	@ tmp198, <variable>.pListX
	ldr	r3, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r3, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	beq	.L707	@,
.L685:
	add	r3, ip, #1	@ j, tmp189,
	add	ip, r2, #4	@ ivtmp.2259, tmp190,
	cmp	r6, r3	@ temp.2283, j
	bls	.L700	@,
.L670:
	ldr	r4, [ip, #256]	@ tmp162, <variable>.pListX
	add	r2, ip, #4	@ tmp190, ivtmp.2259,
	add	ip, r3, #1	@ tmp189, j,
	ldr	r4, [r4, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r4, r0	@ <variable>.apc_idc, i
	bne	.L669	@,
	cmp	r1, r3	@ minrefidx, j
	movcs	r1, r3	@ minrefidx, j
	ldr	r3, [r2, #256]	@ tmp198, <variable>.pListX
	str	r1, [r5, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r5, #4]	@ minrefidx, <variable>.APC.RefIdx
	ldr	r3, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r3, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	bne	.L685	@,
.L707:
	add	r3, ip, #1	@ j, tmp189,
	cmp	r1, ip	@ minrefidx, tmp189
	movcs	r1, ip	@ minrefidx, tmp189
	cmp	r6, r3	@ temp.2283, j
	str	r1, [r5, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r5, #4]	@ minrefidx, <variable>.APC.RefIdx
	add	ip, r2, #4	@ ivtmp.2259, tmp190,
	bhi	.L670	@,
.L700:
	cmp	r1, #31	@ minrefidx,
	bls	.L671	@,
.L672:
	str	r9, [r5, #0]	@ j, <variable>.APC.RefIdx
	str	r9, [r5, #4]	@ j, <variable>.APC.RefIdx
.L671:
	add	r0, r0, #1	@ i, i,
	add	r5, r5, #8	@ ivtmp.2265, ivtmp.2265,
	cmp	r0, #16	@ i,
	bne	.L668	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L704:
	movw	r0, #:lower16:11117208	@ tmp158,
	movt	r0, #:upper16:11117208	@ tmp158,
	movw	r7, #:lower16:11123348	@ ivtmp.2279,
	movt	r7, #:upper16:11123348	@ ivtmp.2279,
	ldr	sl, [r8, r0]	@ temp.2285, <variable>.CurrSlice.listXsize
	add	r7, r8, r7	@ ivtmp.2279, pMvcCtx, ivtmp.2279
	mov	ip, #0	@ i.2290,
	mov	r9, r0	@ tmp182, tmp158
.L667:
	cmp	sl, #0	@ temp.2285,
	beq	.L676	@,
	ldr	r3, [r8, #256]	@ temp.2286, <variable>.pListX
	mov	r5, #32	@ minrefidx.2282,
	ldr	r6, [r8, r9]	@ temp.2284, <variable>.CurrSlice.listXsize
	ldr	r0, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	sub	r2, r6, #1	@ tmp191, temp.2284,
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	and	r2, r2, #1	@ tmp193, tmp191,
	ldr	r3, [r0, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r3, asl #1	@ tmp222, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp223, tmp222
	cmp	r3, ip	@ tmp223, i.2290
	beq	.L708	@,
.L687:
	mov	r3, #1	@ j.2289,
	cmp	r6, r3	@ temp.2284, j.2289
	add	r1, r8, #4	@ ivtmp.2273, pMvcCtx,
	bls	.L701	@,
	cmp	r2, #0	@ tmp193,
	beq	.L674	@,
	ldr	r2, [r1, #256]	@ temp.2286, <variable>.pListX
	ldr	r0, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r4, [r2, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r2, [r0, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r0, r2, asl r3	@ tmp232, <variable>.apc_idc,
	cmp	r4, #2	@ <variable>.structure,
	orreq	r0, r0, #1	@,, tmp233, tmp232
	cmp	r0, ip	@ tmp233, i.2290
	beq	.L709	@,
.L689:
	add	r3, r3, #1	@ j.2289, j.2289,
	add	r1, r1, #4	@ ivtmp.2273, ivtmp.2273,
	cmp	r6, r3	@ temp.2284, j.2289
	bhi	.L674	@,
	b	.L701	@
.L673:
	ldr	r3, [r2, #256]	@ temp.2286, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r4, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r3, [r1, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r3, asl #1	@ tmp213, <variable>.apc_idc,
	cmp	r4, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp214, tmp213
	cmp	r3, ip	@ tmp214, i.2290
	beq	.L710	@,
	add	r3, r0, #1	@ j.2289, tmp194,
	add	r1, r2, #4	@ ivtmp.2273, tmp195,
	cmp	r6, r3	@ temp.2284, j.2289
	bls	.L701	@,
.L674:
	add	r2, r1, #4	@ tmp195, ivtmp.2273,
	ldr	r1, [r1, #256]	@ temp.2286, <variable>.pListX
	add	r0, r3, #1	@ tmp194, j.2289,
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r4, [r4, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r4, r4, asl #1	@ tmp172, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	movne	r1, r4	@, tmp174, tmp172
	orreq	r1, r4, #1	@,, tmp174, tmp172
	cmp	r1, ip	@ tmp174, i.2290
	bne	.L673	@,
	cmp	r5, r3	@ minrefidx.2282, j.2289
	movcs	r5, r3	@ minrefidx.2282, j.2289
	str	r5, [r7, #0]	@ minrefidx.2282, <variable>.APC.RefIdx
	b	.L673	@
.L710:
	add	r3, r0, #1	@ j.2289, tmp194,
	cmp	r5, r0	@ minrefidx.2282, tmp194
	movcs	r5, r0	@ minrefidx.2282, tmp194
	cmp	r6, r3	@ temp.2284, j.2289
	str	r5, [r7, #0]	@ minrefidx.2282, <variable>.APC.RefIdx
	add	r1, r2, #4	@ ivtmp.2273, tmp195,
	bhi	.L674	@,
.L701:
	cmp	r5, #31	@ minrefidx.2282,
	bls	.L675	@,
.L676:
	mov	r0, #0	@,
	str	r0, [r7, #0]	@, <variable>.APC.RefIdx
.L675:
	add	ip, ip, #1	@ i.2290, i.2290,
	add	r7, r7, #4	@ ivtmp.2279, ivtmp.2279,
	cmp	ip, #32	@ i.2290,
	bne	.L667	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L708:
	mov	r5, #0	@ minrefidx.2282,
	str	r5, [r7, #0]	@ minrefidx.2282, <variable>.APC.RefIdx
	b	.L687	@
.L709:
	cmp	r5, r3	@ minrefidx.2282, j.2289
	movcs	r5, r3	@ minrefidx.2282, j.2289
	str	r5, [r7, #0]	@ minrefidx.2282, <variable>.APC.RefIdx
	b	.L689	@
.L705:
	mov	r1, #0	@ minrefidx,
	str	r1, [r5, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r5, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L680	@
.L706:
	cmp	r1, r3	@ minrefidx, j
	movcs	r1, r3	@ minrefidx, j
	str	r1, [r5, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r5, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L682	@
	.fnend
	.size	MVC_FindMinRefIdx, .-MVC_FindMinRefIdx
	.align	2
	.global	MVC_NoPicOut
	.type	MVC_NoPicOut, %function
MVC_NoPicOut:
	.fnstart
.LFB1613:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r5, [r0, #48]	@ D.42304, <variable>.TotalFsNum
	cmp	r5, #0	@ D.42304,
	beq	.L712	@,
	movw	r3, #:lower16:11123487	@ ivtmp.2322,
	movt	r3, #:upper16:11123487	@ ivtmp.2322,
	add	r3, r0, r3	@ ivtmp.2322, pMvcCtx, ivtmp.2322
	sub	r4, r5, #1	@ tmp155, D.42304,
	and	r1, r4, #1	@ tmp157, tmp155,
	mov	ip, #0	@ tmp149,
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, #1	@ <variable>.is_displayed,
	beq	.L725	@,
	ldrb	r2, [r3, #-2]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #1	@ <variable>.is_in_dpb,
	beq	.L725	@,
.L726:
	mov	r2, #1	@ i,
	cmp	r2, r5	@ i, D.42304
	add	r3, r3, #712	@ ivtmp.2322, ivtmp.2322,
	bcs	.L712	@,
	cmp	r1, #0	@ tmp157,
	beq	.L715	@,
	ldrb	r4, [r3, #0]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r4, r2	@ <variable>.is_displayed,
	beq	.L728	@,
	ldrb	r1, [r3, #-2]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #1	@ <variable>.is_in_dpb,
	beq	.L728	@,
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #712	@ ivtmp.2322, ivtmp.2322,
	cmp	r2, r5	@ i, D.42304
	bcc	.L715	@,
.L712:
	ldr	r4, [r0, #52]	@ D.42305, <variable>.TotalPmvNum
	cmp	r4, #0	@ D.42305,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	mov	r3, #1	@ i.2328,
	cmp	r3, r4	@ i.2328, D.42305
	sub	r1, r4, #1	@ tmp150, D.42305,
	mov	ip, #0	@ tmp148,
	add	r2, r0, #4	@ ivtmp.2319, pMvcCtx,
	and	r1, r1, r3	@ tmp152, tmp150,
	str	ip, [r0, #148]	@ tmp148, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp, {r4, r5, fp, sp, pc}	@
	cmp	r1, #0	@ tmp152,
	beq	.L717	@,
	mov	r3, #2	@ i.2328,
	cmp	r3, r4	@ i.2328, D.42305
	str	ip, [r2, #148]	@ tmp148, <variable>.PmvStoreUsedFlag
	add	r2, r2, #4	@ ivtmp.2319, ivtmp.2319,
	ldmcsfd	sp, {r4, r5, fp, sp, pc}	@
.L717:
	add	r3, r3, #2	@ i.2328, i.2328,
	add	r0, r2, #4	@ tmp154, ivtmp.2319,
	cmp	r3, r4	@ i.2328, D.42305
	str	ip, [r2, #148]	@ tmp148, <variable>.PmvStoreUsedFlag
	str	ip, [r0, #148]	@ tmp148, <variable>.PmvStoreUsedFlag
	add	r2, r0, #4	@ ivtmp.2319, tmp154,
	bcc	.L717	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L740:
	ldrb	r4, [r3, #-2]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r4, #1	@ <variable>.is_in_dpb,
	beq	.L713	@,
	ldrb	r4, [r3, #712]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r4, #1	@ <variable>.is_displayed,
	beq	.L732	@,
.L738:
	ldrb	r3, [r3, #710]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r3, #1	@ <variable>.is_in_dpb,
	beq	.L732	@,
.L733:
	add	r2, r2, #1	@ i, tmp158,
	add	r3, r1, #712	@ ivtmp.2322, tmp159,
	cmp	r2, r5	@ i, D.42304
	bcs	.L712	@,
.L715:
	ldrb	r4, [r3, #0]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	add	r2, r2, #1	@ tmp158, i,
	add	r1, r3, #712	@ tmp159, ivtmp.2322,
	cmp	r4, #1	@ <variable>.is_displayed,
	bne	.L740	@,
.L713:
	ldrb	r4, [r3, #712]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	strb	ip, [r3, #-5]	@ tmp149, <variable>.is_used
	cmp	r4, #1	@ <variable>.is_displayed,
	strb	ip, [r3, #-4]	@ tmp149, <variable>.is_reference
	bne	.L738	@,
.L732:
	strb	ip, [r1, #-5]	@ tmp149, <variable>.is_used
	strb	ip, [r1, #-4]	@ tmp149, <variable>.is_reference
	b	.L733	@
.L728:
	add	r2, r2, #1	@ i, i,
	strb	ip, [r3, #-5]	@ tmp149, <variable>.is_used
	cmp	r2, r5	@ i, D.42304
	strb	ip, [r3, #-4]	@ tmp149, <variable>.is_reference
	add	r3, r3, #712	@ ivtmp.2322, ivtmp.2322,
	bcc	.L715	@,
	b	.L712	@
.L725:
	strb	ip, [r3, #-5]	@ tmp149, <variable>.is_used
	strb	ip, [r3, #-4]	@ tmp149, <variable>.is_reference
	b	.L726	@
	.fnend
	.size	MVC_NoPicOut, .-MVC_NoPicOut
	.align	2
	.global	mvc_wait_vo
	.type	mvc_wait_vo, %function
mvc_wait_vo:
	.fnstart
.LFB1616:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	mvc_wait_vo, .-mvc_wait_vo
	.align	2
	.global	MVC_RoundLog2
	.type	MVC_RoundLog2, %function
MVC_RoundLog2:
	.fnstart
.LFB1617:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mul	r0, r0, r0	@ iValue_square, iValue, iValue
	mov	r3, #0	@ iRet,
	mov	r2, #1	@ tmp140,
.L744:
	add	r3, r3, #1	@ iRet, iRet,
	cmp	r0, r2, asl r3	@ iValue_square, tmp140,
	bge	.L744	@,
	mov	r0, r3, asr #1	@, iRet,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_RoundLog2, .-MVC_RoundLog2
	.global	__aeabi_uidiv
	.global	__aeabi_uidivmod
	.align	2
	.global	MVC_DecPOC
	.type	MVC_DecPOC, %function
MVC_DecPOC:
	.fnstart
.LFB1619:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r5, [r0, #236]	@ sps, <variable>.pCurrSPS
	movw	r3, #:lower16:11117163	@ tmp169,
	movt	r3, #:upper16:11117163	@ tmp169,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r2, #1	@ tmp174,
	ldrb	r1, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r3, [r5, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r0, [r5, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	r1, #0	@, tmp171
	moveq	r1, #1	@, tmp171
	cmp	r3, r2	@ <variable>.pic_order_cnt_type,
	ldr	ip, [r5, #2904]	@ D.42546, <variable>.log2_max_pic_order_cnt_lsb_minus4
	add	r0, r0, #4	@ tmp172, <variable>.log2_max_frame_num_minus4,
	mov	r0, r2, asl r0	@ MaxFrameNum, tmp174,
	beq	.L750	@,
	bcs	.L803	@,
	cmp	r1, #0	@ tmp171,
	add	ip, ip, #4	@ tmp176, D.42546,
	mov	r2, r2, asl ip	@ MaxPicOrderCntLsb, tmp174,
	bne	.L804	@,
	movw	r0, #:lower16:11116024	@ tmp182,
	movt	r0, #:upper16:11116024	@ tmp182,
	ldrsb	ip, [r4, r0]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	ip, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L754	@,
	movw	r3, #:lower16:11116036	@ tmp185,
	movt	r3, #:upper16:11116036	@ tmp185,
	movw	r5, #:lower16:11116040	@ tmp184,
	movt	r5, #:upper16:11116040	@ tmp184,
	ldr	ip, [r4, r3]	@ prephitmp.2415, <variable>.CurrPOC.PrevPicOrderCntMsb
	ldr	r3, [r4, r5]	@ prephitmp.2413, <variable>.CurrPOC.PrevPicOrderCntLsb
	mov	r5, ip	@ prephitmp.2417, prephitmp.2415
.L755:
	movw	r1, #:lower16:11116028	@ tmp196,
	movt	r1, #:upper16:11116028	@ tmp196,
	ldr	r0, [r4, r1]	@ D.42569, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	r0, r3	@ D.42569, prephitmp.2413
	bcs	.L757	@,
	rsb	r1, r0, r3	@ tmp197, D.42569, prephitmp.2413
	cmp	r1, r2, lsr #1	@ tmp197, MaxPicOrderCntLsb,
	bcc	.L757	@,
	add	r2, r5, r2	@ D.42578, prephitmp.2417, MaxPicOrderCntLsb
	movw	r3, #:lower16:11116044	@ tmp200,
	movt	r3, #:upper16:11116044	@ tmp200,
	mov	r1, r2	@ prephitmp.2483, D.42578
	str	r2, [r4, r3]	@ D.42578, <variable>.CurrPOC.PicOrderCntMsb
.L760:
	movw	r0, #:lower16:11117161	@ tmp206,
	movt	r0, #:upper16:11117161	@ tmp206,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L762	@,
.L807:
	movw	r2, #:lower16:11116028	@ tmp208,
	movt	r2, #:upper16:11116028	@ tmp208,
	movw	r3, #:lower16:11116032	@ tmp211,
	movt	r3, #:upper16:11116032	@ tmp211,
	ldr	r5, [r4, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movw	ip, #:lower16:11116048	@ tmp210,
	ldr	r6, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movt	ip, #:upper16:11116048	@ tmp210,
	add	r5, r1, r5	@ D.42592, prephitmp.2483, <variable>.CurrPOC.pic_order_cnt_lsb
	movw	r0, #:lower16:11116052	@ tmp213,
	movw	r2, #:lower16:11116056	@ tmp214,
	movt	r0, #:upper16:11116052	@ tmp213,
	movt	r2, #:upper16:11116056	@ tmp214,
	movw	r3, #:lower16:11116060	@ tmp215,
	movt	r3, #:upper16:11116060	@ tmp215,
	add	r6, r5, r6	@ D.42594, D.42592, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	cmp	r6, r5	@ D.42594, D.42592
	movlt	r1, r6	@ prephitmp.2408, D.42594
	movge	r1, r5	@ prephitmp.2408, D.42592
	str	r5, [r4, ip]	@ D.42592, <variable>.CurrPOC.toppoc
	str	r6, [r4, r0]	@ D.42594, <variable>.CurrPOC.bottompoc
	str	r1, [r4, r2]	@ prephitmp.2408,
	str	r1, [r4, r3]	@ prephitmp.2408, <variable>.CurrPOC.ThisPOC
.L763:
	movw	r2, #:lower16:11116080	@ tmp227,
	movt	r2, #:upper16:11116080	@ tmp227,
	movw	r3, #:lower16:11116076	@ tmp228,
	movt	r3, #:upper16:11116076	@ tmp228,
	ldr	r0, [r4, r2]	@ D.42604, <variable>.CurrPOC.frame_num
	movw	r2, #:lower16:11116056	@ tmp226,
	movt	r2, #:upper16:11116056	@ tmp226,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	str	r1, [r4, r2]	@ prephitmp.2408, <variable>.CurrPOC.framepoc
	movw	r2, #:lower16:11117168	@ tmp231,
	movt	r2, #:upper16:11117168	@ tmp231,
	cmp	r0, ip	@ D.42604, <variable>.CurrPOC.PreviousFrameNum
	strne	r0, [r4, r3]	@ D.42604, <variable>.CurrPOC.PreviousFrameNum
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrSlice.nal_ref_idc,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	r2, #:lower16:11116028	@ tmp234,
	movw	r3, #:lower16:11116044	@ tmp237,
	movt	r2, #:upper16:11116028	@ tmp234,
	movt	r3, #:upper16:11116044	@ tmp237,
	movw	ip, #:lower16:11116040	@ tmp233,
	movt	ip, #:upper16:11116040	@ tmp233,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb, <variable>.CurrPOC.PicOrderCntMsb
	movw	r3, #:lower16:11116036	@ tmp236,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movt	r3, #:upper16:11116036	@ tmp236,
	str	r0, [r4, ip]	@ <variable>.CurrPOC.pic_order_cnt_lsb,
	str	r1, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L803:
	cmp	r3, #2	@ <variable>.pic_order_cnt_type,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r1, #0	@ tmp171,
	bne	.L805	@,
	movw	r3, #:lower16:11116024	@ tmp345,
	movt	r3, #:upper16:11116024	@ tmp345,
	ldrsb	r2, [r4, r3]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r2, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L786	@,
	movw	r3, #:lower16:11116076	@ tmp348,
	movw	r2, #:lower16:11116080	@ tmp349,
	movt	r3, #:upper16:11116076	@ tmp348,
	movt	r2, #:upper16:11116080	@ tmp349,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	movw	r3, #:lower16:11116088	@ tmp347,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r3, #:upper16:11116088	@ tmp347,
	cmp	r1, ip	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.frame_num
	ldr	ip, [r4, r3]	@ prephitmp.2403, <variable>.CurrPOC.PrevFrameNumOffset
	bls	.L788	@,
	movw	r1, #:lower16:11116084	@ tmp356,
	movt	r1, #:upper16:11116084	@ tmp356,
	add	ip, ip, r0	@ prephitmp.2403, prephitmp.2403, MaxFrameNum
	str	ip, [r4, r1]	@ prephitmp.2403, <variable>.CurrPOC.FrameNumOffset
.L789:
	movw	r3, #:lower16:11117168	@ tmp361,
	movt	r3, #:upper16:11117168	@ tmp361,
	movw	r1, #:lower16:11116080	@ tmp358,
	movt	r1, #:upper16:11116080	@ tmp358,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r3, #:lower16:11116072	@ tmp360,
	ldr	r2, [r4, r1]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r3, #:upper16:11116072	@ tmp360,
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movw	r0, #:lower16:11117161	@ tmp366,
	movt	r0, #:upper16:11117161	@ tmp366,
	add	r1, ip, r2	@ temp.2473, prephitmp.2403, <variable>.CurrPOC.frame_num
	str	r1, [r4, r3]	@ temp.2473, <variable>.CurrPOC.AbsFrameNum
	movw	ip, #:lower16:11116060	@ tmp364,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	mov	r2, r1, asl #1	@ tmp363, temp.2473,
	subeq	r2, r2, #1	@ prephitmp.2475, tmp363,
	movt	ip, #:upper16:11116060	@ tmp364,
	cmp	r3, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r2, [r4, ip]	@ prephitmp.2475, <variable>.CurrPOC.ThisPOC
	bne	.L792	@,
	movw	r0, #:lower16:11116056	@ tmp368,
	movw	ip, #:lower16:11116052	@ tmp369,
	movt	r0, #:upper16:11116056	@ tmp368,
	movt	ip, #:upper16:11116052	@ tmp369,
	movw	r1, #:lower16:11116048	@ tmp370,
	movt	r1, #:upper16:11116048	@ tmp370,
	str	r2, [r4, r0]	@ prephitmp.2475, <variable>.CurrPOC.framepoc
	str	r2, [r4, r1]	@ prephitmp.2475,
	str	r2, [r4, ip]	@ prephitmp.2475,
.L785:
	movw	ip, #:lower16:11116080	@ tmp378,
	movw	r1, #:lower16:11116084	@ tmp381,
	movt	ip, #:upper16:11116080	@ tmp378,
	movt	r1, #:upper16:11116084	@ tmp381,
	movw	r2, #:lower16:11116076	@ tmp377,
	movw	r3, #:lower16:11116088	@ tmp380,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r2, #:upper16:11116076	@ tmp377,
	ldr	ip, [r4, r1]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movt	r3, #:upper16:11116088	@ tmp380,
	str	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num,
	str	ip, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L750:
	cmp	r1, #0	@ tmp171,
	bne	.L806	@,
	movw	ip, #:lower16:11116024	@ tmp241,
	movt	ip, #:upper16:11116024	@ tmp241,
	ldrsb	r6, [r4, ip]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r6, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L768	@,
	movw	r3, #:lower16:11116088	@ tmp243,
	movw	r0, #:lower16:11116076	@ tmp245,
	movt	r3, #:upper16:11116088	@ tmp243,
	movt	r0, #:upper16:11116076	@ tmp245,
	mov	r2, r1	@ prephitmp.2407, tmp171
	str	r1, [r4, r3]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
	str	r1, [r4, r0]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
.L769:
	movw	r7, #:lower16:11116084	@ tmp256,
	movt	r7, #:upper16:11116084	@ tmp256,
	str	r2, [r4, r7]	@ prephitmp.2407, <variable>.CurrPOC.FrameNumOffset
.L767:
	ldr	r6, [r5, #2916]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r6, #0	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle,
	movweq	r2, #:lower16:11116072	@ tmp264,
	movteq	r2, #:upper16:11116072	@ tmp264,
	streq	r6, [r4, r2]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.CurrPOC.AbsFrameNum
	beq	.L772	@,
	movw	r3, #:lower16:11116080	@ tmp259,
	movw	r0, #:lower16:11116084	@ tmp260,
	movt	r3, #:upper16:11116080	@ tmp259,
	movt	r0, #:upper16:11116084	@ tmp260,
	movw	ip, #:lower16:11116072	@ tmp258,
	movt	ip, #:upper16:11116072	@ tmp258,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r2, [r4, r0]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	add	r2, r1, r2	@ tmp263, <variable>.CurrPOC.frame_num, <variable>.CurrPOC.FrameNumOffset
	str	r2, [r4, ip]	@ tmp263, <variable>.CurrPOC.AbsFrameNum
.L772:
	movw	r6, #:lower16:11117168	@ tmp266,
	movt	r6, #:upper16:11117168	@ tmp266,
	ldrb	r7, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r7, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L773	@,
	movw	ip, #:lower16:11116072	@ tmp268,
	movt	ip, #:upper16:11116072	@ tmp268,
	ldr	r2, [r4, ip]	@ D.42630, <variable>.CurrPOC.AbsFrameNum
	cmp	r2, #0	@ D.42630,
	subne	r2, r2, #1	@ tmp270, D.42630,
	strne	r2, [r4, ip]	@ tmp270, <variable>.CurrPOC.AbsFrameNum
.L773:
	movw	ip, #:lower16:11116104	@ tmp271,
	movt	ip, #:upper16:11116104	@ tmp271,
	mov	r3, #0	@ tmp272,
	str	r3, [r4, ip]	@ tmp272, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2916]	@ temp.2478, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r3	@ temp.2478,
	ble	.L774	@,
	add	r2, r5, #2912	@ ivtmp.2437, sps,
	add	r0, r2, #8	@ ivtmp.2437, ivtmp.2437,
	mov	r2, r3	@ i, prephitmp.2404
.L775:
	ldr	r1, [r0], #4	@ tmp274, <variable>.offset_for_ref_frame
	add	r2, r2, #1	@ i, i,
	add	r3, r3, r1	@ prephitmp.2404, prephitmp.2404, tmp274
	str	r3, [r4, ip]	@ prephitmp.2404, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2916]	@ temp.2478, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r2	@ temp.2478, i
	bgt	.L775	@,
.L774:
	movw	r0, #:lower16:11116072	@ tmp276,
	movt	r0, #:upper16:11116072	@ tmp276,
	ldr	r7, [r4, r0]	@ temp.2452, <variable>.CurrPOC.AbsFrameNum
	cmp	r7, #0	@ temp.2452,
	beq	.L776	@,
	sub	r7, r7, #1	@ tmp277, temp.2452,
	mov	r0, r7	@, tmp277
	bl	__aeabi_uidiv	@
	movw	r2, #:lower16:11116096	@ tmp281,
	movt	r2, #:upper16:11116096	@ tmp281,
	mov	r6, r0	@ tmp280,
	mov	r0, r7	@, tmp277
	str	r6, [r4, r2]	@ tmp280, <variable>.CurrPOC.PicOrderCntCycleCnt
	ldr	r1, [r5, #2916]	@, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bl	__aeabi_uidivmod	@
	movw	ip, #:lower16:11116104	@ tmp291,
	movt	ip, #:upper16:11116104	@ tmp291,
	movw	r3, #:lower16:11116092	@ tmp290,
	movt	r3, #:upper16:11116092	@ tmp290,
	ldr	r2, [r4, ip]	@ <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	movw	ip, #:lower16:11116100	@ tmp293,
	movt	ip, #:upper16:11116100	@ tmp293,
	mul	r6, r2, r6	@ prephitmp.2456, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, tmp280
	str	r6, [r4, ip]	@ prephitmp.2456, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	r1, #0	@ D.42645,
	str	r1, [r4, r3]	@ D.42645, <variable>.CurrPOC.FrameNumInPicOrderCntCycle
	blt	.L777	@,
	add	r3, r5, #2912	@ tmp294, sps,
	cmp	r1, #1	@ D.42645,
	and	r8, r1, #1	@ tmp402, D.42645,
	mov	r0, #1	@ i.2458,
	ldr	r7, [r3, #8]	@ tmp295, <variable>.offset_for_ref_frame
	add	r2, r3, #12	@ ivtmp.2432, tmp294,
	add	r6, r6, r7	@ prephitmp.2456, prephitmp.2456, tmp295
	str	r6, [r4, ip]	@ prephitmp.2456, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L777	@,
	cmp	r8, #0	@ tmp402,
	beq	.L778	@,
	ldr	r7, [r2, #0]	@ tmp414, <variable>.offset_for_ref_frame
	mov	r0, #2	@ i.2458,
	cmp	r1, r0	@ D.42645, i.2458
	add	r2, r3, #16	@ ivtmp.2432, tmp294,
	add	r6, r6, r7	@ prephitmp.2456, prephitmp.2456, tmp414
	str	r6, [r4, ip]	@ prephitmp.2456, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L777	@,
.L778:
	mov	r3, r2	@ tmp404, ivtmp.2432
	add	r0, r0, #2	@ i.2458, i.2458,
	ldr	r7, [r3], #4	@ tmp407, <variable>.offset_for_ref_frame
	cmp	r1, r0	@ D.42645, i.2458
	add	lr, r6, r7	@ prephitmp.2456, prephitmp.2456, tmp407
	str	lr, [r4, ip]	@ prephitmp.2456, <variable>.CurrPOC.ExpectedPicOrderCnt
	ldr	r7, [r2, #4]	@ tmp412, <variable>.offset_for_ref_frame
	add	r2, r3, #4	@ ivtmp.2432, tmp404,
	add	r6, lr, r7	@ prephitmp.2456, prephitmp.2456, tmp412
	str	r6, [r4, ip]	@ prephitmp.2456, <variable>.CurrPOC.ExpectedPicOrderCnt
	bge	.L778	@,
.L777:
	movw	r1, #:lower16:11117168	@ tmp299,
	movt	r1, #:upper16:11117168	@ tmp299,
	movw	ip, #:lower16:11117161	@ tmp304,
	movt	ip, #:upper16:11117161	@ tmp304,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movwne	r3, #:lower16:11116100	@ tmp301,
	ldreq	r2, [r5, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	movweq	r3, #:lower16:11116100	@ tmp303,
	movtne	r3, #:upper16:11116100	@ tmp301,
	movteq	r3, #:upper16:11116100	@ tmp303,
	addeq	r6, r6, r2	@ prephitmp.2460, prephitmp.2456, <variable>.offset_for_non_ref_pic
	ldrne	r6, [r4, r3]	@ prephitmp.2460, <variable>.CurrPOC.ExpectedPicOrderCnt
	streq	r6, [r4, r3]	@ prephitmp.2460, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	r0, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L781	@,
	movw	r1, #:lower16:11116064	@ tmp306,
	movt	r1, #:upper16:11116064	@ tmp306,
	movw	r2, #:lower16:11116048	@ tmp308,
	movw	r3, #:lower16:11116068	@ tmp309,
	ldr	r0, [r4, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11116048	@ tmp308,
	movt	r3, #:upper16:11116068	@ tmp309,
	movw	r1, #:lower16:11116052	@ tmp313,
	add	r6, r6, r0	@ D.42659, prephitmp.2460, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r2]	@ D.42659, <variable>.CurrPOC.toppoc
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r1, #:upper16:11116052	@ tmp313,
	ldr	r0, [r5, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	r2, #:lower16:11116056	@ tmp314,
	movw	r3, #:lower16:11116060	@ tmp315,
	movt	r2, #:upper16:11116056	@ tmp314,
	add	r0, ip, r0	@ tmp310, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	movt	r3, #:upper16:11116060	@ tmp315,
	add	r0, r0, r6	@ D.42663, tmp310, D.42659
	str	r0, [r4, r1]	@ D.42663, <variable>.CurrPOC.bottompoc
	cmp	r0, r6	@ D.42663, D.42659
	movlt	r6, r0	@ prephitmp.2465, D.42663
	movge	r6, r6	@ prephitmp.2465, D.42659
	str	r6, [r4, r2]	@ prephitmp.2465,
	str	r6, [r4, r3]	@ prephitmp.2465, <variable>.CurrPOC.ThisPOC
.L782:
	movw	r2, #:lower16:11116080	@ tmp330,
	movw	r3, #:lower16:11116084	@ tmp333,
	movt	r2, #:upper16:11116080	@ tmp330,
	movt	r3, #:upper16:11116084	@ tmp333,
	movw	r1, #:lower16:11116056	@ tmp328,
	movt	r1, #:upper16:11116056	@ tmp328,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movw	r2, #:lower16:11116088	@ tmp332,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movt	r2, #:upper16:11116088	@ tmp332,
	movw	r3, #:lower16:11116076	@ tmp329,
	movt	r3, #:upper16:11116076	@ tmp329,
	str	r6, [r4, r1]	@ prephitmp.2465, <variable>.CurrPOC.framepoc
	str	ip, [r4, r2]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	str	r0, [r4, r3]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L806:
	movw	r7, #:lower16:11116084	@ tmp239,
	movt	r7, #:upper16:11116084	@ tmp239,
	mov	r2, #0	@ tmp240,
	str	r2, [r4, r7]	@ tmp240, <variable>.CurrPOC.FrameNumOffset
	b	.L767	@
.L805:
	movw	r5, #:lower16:11116084	@ tmp335,
	movw	r0, #:lower16:11116052	@ tmp337,
	movt	r5, #:upper16:11116084	@ tmp335,
	movt	r0, #:upper16:11116052	@ tmp337,
	movw	r1, #:lower16:11116048	@ tmp339,
	movw	r2, #:lower16:11116056	@ tmp341,
	movt	r1, #:upper16:11116048	@ tmp339,
	movt	r2, #:upper16:11116056	@ tmp341,
	movw	ip, #:lower16:11116060	@ tmp343,
	movt	ip, #:upper16:11116060	@ tmp343,
	mov	r3, #0	@ tmp336,
	str	r3, [r4, r5]	@ tmp336, <variable>.CurrPOC.FrameNumOffset
	str	r3, [r4, ip]	@ tmp336, <variable>.CurrPOC.ThisPOC
	str	r3, [r4, r0]	@ tmp336, <variable>.CurrPOC.bottompoc
	str	r3, [r4, r1]	@ tmp336, <variable>.CurrPOC.toppoc
	str	r3, [r4, r2]	@ tmp336, <variable>.CurrPOC.framepoc
	b	.L785	@
.L804:
	movw	r1, #:lower16:11116036	@ tmp178,
	movw	r3, #:lower16:11116040	@ tmp180,
	movt	r1, #:upper16:11116036	@ tmp178,
	movt	r3, #:upper16:11116040	@ tmp180,
	mov	r0, #0	@ tmp179,
	str	r0, [r4, r1]	@ tmp179, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r0, [r4, r3]	@ tmp179, <variable>.CurrPOC.PrevPicOrderCntLsb
.L753:
	movw	r0, #:lower16:11116028	@ tmp383,
	movt	r0, #:upper16:11116028	@ tmp383,
	movw	r3, #:lower16:11116036	@ tmp384,
	movt	r3, #:upper16:11116036	@ tmp384,
	ldr	r0, [r4, r0]	@ D.42569, <variable>.CurrPOC.pic_order_cnt_lsb
	mov	r1, #0	@ prephitmp.2483,
	ldr	ip, [r4, r3]	@ prephitmp.2415, <variable>.CurrPOC.PrevPicOrderCntMsb
	mov	r3, r1	@ prephitmp.2413, prephitmp.2483
.L759:
	cmp	r3, r0	@ prephitmp.2413, D.42569
	bcs	.L761	@,
	rsb	r3, r3, r0	@ tmp202, prephitmp.2413, D.42569
	cmp	r3, r2, lsr #1	@ tmp202, MaxPicOrderCntLsb,
	bls	.L761	@,
	rsb	r2, r2, r1	@ D.42585, MaxPicOrderCntLsb, prephitmp.2483
	movw	r0, #:lower16:11116044	@ tmp204,
	movt	r0, #:upper16:11116044	@ tmp204,
	mov	r1, r2	@ prephitmp.2483, D.42585
	str	r2, [r4, r0]	@ D.42585, <variable>.CurrPOC.PicOrderCntMsb
	b	.L760	@
.L761:
	movw	r3, #:lower16:11116044	@ tmp205,
	movw	r0, #:lower16:11117161	@ tmp206,
	movt	r3, #:upper16:11116044	@ tmp205,
	movt	r0, #:upper16:11117161	@ tmp206,
	str	ip, [r4, r3]	@ prephitmp.2415, <variable>.CurrPOC.PicOrderCntMsb
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L807	@,
.L762:
	movw	r0, #:lower16:11117162	@ tmp216,
	movt	r0, #:upper16:11117162	@ tmp216,
	movw	r3, #:lower16:11116028	@ tmp218,
	movt	r3, #:upper16:11116028	@ tmp218,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	ldr	r0, [r4, r3]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movw	ip, #:lower16:11116060	@ tmp225,
	movt	ip, #:upper16:11116060	@ tmp225,
	add	r1, r1, r0	@ prephitmp.2408, prephitmp.2483, <variable>.CurrPOC.pic_order_cnt_lsb
	movweq	r2, #:lower16:11116048	@ tmp220,
	movwne	r2, #:lower16:11116052	@ tmp224,
	movteq	r2, #:upper16:11116048	@ tmp220,
	movtne	r2, #:upper16:11116052	@ tmp224,
	str	r1, [r4, r2]	@ prephitmp.2408,
	str	r1, [r4, ip]	@ prephitmp.2408, <variable>.CurrPOC.ThisPOC
	b	.L763	@
.L776:
	movw	r1, #:lower16:11116100	@ tmp297,
	movt	r1, #:upper16:11116100	@ tmp297,
	mov	r6, r7	@ prephitmp.2456, temp.2452
	str	r7, [r4, r1]	@ temp.2452, <variable>.CurrPOC.ExpectedPicOrderCnt
	b	.L777	@
.L781:
	movw	r3, #:lower16:11117162	@ tmp316,
	movt	r3, #:upper16:11117162	@ tmp316,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	bne	.L783	@,
	movw	ip, #:lower16:11116064	@ tmp318,
	movt	ip, #:upper16:11116064	@ tmp318,
	movw	r2, #:lower16:11116048	@ tmp320,
	movw	r0, #:lower16:11116060	@ tmp321,
	ldr	r1, [r4, ip]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11116048	@ tmp320,
	movt	r0, #:upper16:11116060	@ tmp321,
	add	r6, r6, r1	@ prephitmp.2465, prephitmp.2460, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r2]	@ prephitmp.2465,
	str	r6, [r4, r0]	@ prephitmp.2465, <variable>.CurrPOC.ThisPOC
	b	.L782	@
.L757:
	movw	r1, #:lower16:11116036	@ tmp201,
	movt	r1, #:upper16:11116036	@ tmp201,
	ldr	r1, [r4, r1]	@ prephitmp.2483, <variable>.CurrPOC.PrevPicOrderCntMsb
	b	.L759	@
.L754:
	movw	ip, #:lower16:11116025	@ tmp186,
	movt	ip, #:upper16:11116025	@ tmp186,
	ldrsb	r0, [r4, ip]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.last_pic_bottom_field
	cmp	r0, #0	@ <variable>.CurrPOC.last_pic_bottom_field,
	beq	.L756	@,
	movw	r0, #:lower16:11116036	@ tmp188,
	movw	r3, #:lower16:11116040	@ tmp190,
	movt	r0, #:upper16:11116036	@ tmp188,
	movt	r3, #:upper16:11116040	@ tmp190,
	str	r1, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r1, [r4, r3]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L753	@
.L783:
	movw	r3, #:lower16:11116064	@ tmp322,
	movt	r3, #:upper16:11116064	@ tmp322,
	ldr	ip, [r5, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	r2, #:lower16:11116052	@ tmp326,
	ldr	r0, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11116052	@ tmp326,
	movw	r3, #:lower16:11116060	@ tmp327,
	movt	r3, #:upper16:11116060	@ tmp327,
	add	r1, r0, ip	@ tmp323, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	add	r6, r1, r6	@ prephitmp.2465, tmp323, prephitmp.2460
	str	r6, [r4, r2]	@ prephitmp.2465,
	str	r6, [r4, r3]	@ prephitmp.2465, <variable>.CurrPOC.ThisPOC
	b	.L782	@
.L768:
	movw	r2, #:lower16:11116080	@ tmp247,
	movw	r6, #:lower16:11116076	@ tmp248,
	movt	r2, #:upper16:11116080	@ tmp247,
	movt	r6, #:upper16:11116076	@ tmp248,
	ldr	r1, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r7, [r4, r6]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	cmp	r1, r7	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	bcs	.L770	@,
	movw	r1, #:lower16:11116088	@ tmp252,
	movt	r1, #:upper16:11116088	@ tmp252,
	movw	r3, #:lower16:11116084	@ tmp251,
	movt	r3, #:upper16:11116084	@ tmp251,
	ldr	r2, [r4, r1]	@ <variable>.CurrPOC.PrevFrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	add	ip, r0, r2	@ tmp254, MaxFrameNum, <variable>.CurrPOC.PrevFrameNumOffset
	str	ip, [r4, r3]	@ tmp254, <variable>.CurrPOC.FrameNumOffset
	b	.L767	@
.L792:
	movw	r1, #:lower16:11117162	@ tmp371,
	movt	r1, #:upper16:11117162	@ tmp371,
	movw	ip, #:lower16:11116056	@ tmp373,
	movt	ip, #:upper16:11116056	@ tmp373,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	str	r2, [r4, ip]	@ prephitmp.2475,
	cmp	r3, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movweq	r3, #:lower16:11116048	@ tmp374,
	movwne	r3, #:lower16:11116052	@ tmp376,
	movteq	r3, #:upper16:11116048	@ tmp374,
	movtne	r3, #:upper16:11116052	@ tmp376,
	str	r2, [r4, r3]	@ prephitmp.2475,
	b	.L785	@
.L786:
	movw	ip, #:lower16:11116076	@ tmp352,
	movt	ip, #:upper16:11116076	@ tmp352,
	movw	r0, #:lower16:11116088	@ tmp354,
	movt	r0, #:upper16:11116088	@ tmp354,
	str	r1, [r4, ip]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
	mov	ip, r1	@ prephitmp.2403, tmp171
	str	r1, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
.L788:
	movw	r2, #:lower16:11116084	@ tmp357,
	movt	r2, #:upper16:11116084	@ tmp357,
	str	ip, [r4, r2]	@ prephitmp.2403, <variable>.CurrPOC.FrameNumOffset
	b	.L789	@
.L756:
	movw	ip, #:lower16:11116048	@ tmp194,
	movt	ip, #:upper16:11116048	@ tmp194,
	movw	r6, #:lower16:11116036	@ tmp192,
	movw	r1, #:lower16:11116040	@ tmp195,
	ldr	r3, [r4, ip]	@ prephitmp.2413, <variable>.CurrPOC.toppoc
	movt	r6, #:upper16:11116036	@ tmp192,
	movt	r1, #:upper16:11116040	@ tmp195,
	mov	r5, r0	@ prephitmp.2417, <variable>.CurrPOC.last_pic_bottom_field
	mov	ip, r0	@ prephitmp.2415, prephitmp.2417
	str	r0, [r4, r6]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r3, [r4, r1]	@ prephitmp.2413, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L755	@
.L770:
	movw	r0, #:lower16:11116088	@ tmp255,
	movt	r0, #:upper16:11116088	@ tmp255,
	ldr	r2, [r4, r0]	@ prephitmp.2407, <variable>.CurrPOC.PrevFrameNumOffset
	b	.L769	@
	.fnend
	.size	MVC_DecPOC, .-MVC_DecPOC
	.align	2
	.global	MVC_CalcPicNum
	.type	MVC_CalcPicNum, %function
MVC_CalcPicNum:
	.fnstart
.LFB1620:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11151963	@ tmp161,
	ldr	r1, [r0, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	r4, #:upper16:11151963	@ tmp161,
	ldrb	r2, [r0, r4]	@ zero_extendqisi2	@ D.42716, <variable>.CurrPic.structure
	ldr	r3, [r1, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, #0	@ D.42716,
	add	ip, r3, #4	@ tmp158, <variable>.log2_max_frame_num_minus4,
	mov	r3, #1	@ tmp160,
	mov	ip, r3, asl ip	@ MaxFrameNum, tmp160,
	beq	.L809	@,
	movw	r7, #:lower16:11123120	@ tmp164,
	movt	r7, #:upper16:11123120	@ tmp164,
	cmp	r2, #2	@ D.42716,
	movne	r4, #0	@, add_bottom
	moveq	r4, #1	@, add_bottom
	cmp	r2, r3	@ D.42716,
	movne	r5, #0	@, add_top
	moveq	r5, #1	@, add_top
	ldr	r2, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r2, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L811	@,
	movw	r8, #:lower16:11122984	@ ivtmp.2552,
	movt	r8, #:upper16:11122984	@ ivtmp.2552,
	add	r3, r0, r8	@ ivtmp.2552, pMvcCtx, ivtmp.2552
	movw	r8, #:lower16:11152512	@ tmp235,
	movt	r8, #:upper16:11152512	@ tmp235,
	mov	r2, #0	@ i,
.L824:
	ldr	r1, [r3, #0]	@ temp.2560, <variable>.DPB.fs_ref
	ldrb	r6, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #0	@ <variable>.is_reference,
	beq	.L820	@,
	ldr	r6, [r1, #20]	@ temp.2562, <variable>.frame_num
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	r6, sl	@ temp.2562, <variable>.CurrPic.frame_num
	rsbhi	r6, ip, r6	@ tmp193, MaxFrameNum, temp.2562
	str	r6, [r1, #24]	@ temp.2562, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ prephitmp.2519, <variable>.DPB.fs_ref
	ldrb	r6, [r1, #3]	@ zero_extendqisi2	@ prephitmp.2523, <variable>.is_reference
	tst	r6, #1	@ prephitmp.2523,
	beq	.L823	@,
	ldr	sl, [r1, #636]	@ tmp197,
	bic	sl, sl, #-16777216	@ tmp195, tmp197,
	bic	sl, sl, #255	@ tmp195, tmp195,
	cmp	sl, #65536	@ tmp195,
	ldreq	r6, [r1, #24]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	r6, r5, r6, asl #1	@, tmp200, add_top, <variable>.frame_num_wrap,
	streq	r6, [r1, #648]	@ tmp200, <variable>.top_field.pic_num
	ldreq	r1, [r3, #0]	@ prephitmp.2519, <variable>.DPB.fs_ref
	ldreqb	r6, [r1, #3]	@ zero_extendqisi2	@ prephitmp.2523, <variable>.is_reference
.L823:
	tst	r6, #2	@ prephitmp.2523,
	beq	.L820	@,
	ldr	r6, [r1, #672]	@ tmp204,
	bic	r6, r6, #-16777216	@ tmp202, tmp204,
	bic	r6, r6, #255	@ tmp202, tmp202,
	cmp	r6, #65536	@ tmp202,
	ldreq	r6, [r1, #24]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	r6, r4, r6, asl #1	@, tmp207, add_bottom, <variable>.frame_num_wrap,
	streq	r6, [r1, #684]	@ tmp207, <variable>.bottom_field.pic_num
.L820:
	ldr	r1, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2552, ivtmp.2552,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L824	@,
.L811:
	movw	r6, #:lower16:11123124	@ tmp210,
	movt	r6, #:upper16:11123124	@ tmp210,
	ldr	r3, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r2, #:lower16:11123048	@ ivtmp.2547,
	movt	r2, #:upper16:11123048	@ ivtmp.2547,
	add	r3, r0, r2	@ ivtmp.2547, pMvcCtx, ivtmp.2547
	mov	r2, #0	@ i.2564,
.L827:
	ldr	ip, [r3, #0]	@ prephitmp.2512, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2564, i.2564,
	ldrb	r1, [ip, #3]	@ zero_extendqisi2	@ temp.2574, <variable>.is_reference
	cmp	r1, #0	@ temp.2574,
	beq	.L825	@,
	tst	r1, #1	@ prephitmp.2516,
	beq	.L826	@,
	ldr	r7, [ip, #636]	@ tmp216,
	bic	r7, r7, #-16777216	@ tmp214, tmp216,
	bic	r7, r7, #255	@ tmp214, tmp214,
	cmp	r7, #256	@ tmp214,
	ldreq	r1, [ip, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r5, r1, asl #1	@, tmp219, add_top, <variable>.long_term_frame_idx,
	streq	r1, [ip, #644]	@ tmp219, <variable>.top_field.long_term_pic_num
	ldreq	ip, [r3, #0]	@ prephitmp.2512, <variable>.DPB.fs_ltref
	ldreqb	r1, [ip, #3]	@ zero_extendqisi2	@ prephitmp.2516, <variable>.is_reference
.L826:
	tst	r1, #2	@ prephitmp.2516,
	beq	.L825	@,
	ldr	r1, [ip, #672]	@ tmp223,
	bic	r1, r1, #-16777216	@ tmp221, tmp223,
	bic	r1, r1, #255	@ tmp221, tmp221,
	cmp	r1, #256	@ tmp221,
	ldreq	r1, [ip, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r4, r1, asl #1	@, tmp226, add_bottom, <variable>.long_term_frame_idx,
	streq	r1, [ip, #680]	@ tmp226, <variable>.bottom_field.long_term_pic_num
.L825:
	ldr	ip, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.2547, ivtmp.2547,
	cmp	ip, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2564
	bhi	.L827	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L809:
	movw	r5, #:lower16:11123120	@ tmp166,
	movt	r5, #:upper16:11123120	@ tmp166,
	ldr	r3, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L812	@,
	movw	r6, #:lower16:11122984	@ ivtmp.2542,
	movt	r6, #:upper16:11122984	@ ivtmp.2542,
	add	r3, r0, r6	@ ivtmp.2542, pMvcCtx, ivtmp.2542
	movw	r6, #:lower16:11152512	@ tmp232,
	movt	r6, #:upper16:11152512	@ tmp232,
	b	.L816	@
.L813:
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i.2557, i.2557,
	add	r3, r3, #4	@ ivtmp.2542, ivtmp.2542,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2557
	bls	.L812	@,
.L816:
	ldr	r1, [r3, #0]	@ D.42720, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L813	@,
	ldr	r4, [r1, #600]	@ tmp172,
	bic	r4, r4, #-16777216	@ tmp170, tmp172,
	bic	r4, r4, #255	@ tmp170, tmp170,
	cmp	r4, #65536	@ tmp170,
	bne	.L813	@,
	ldr	r4, [r1, #20]	@ D.42728, <variable>.frame_num
	add	r2, r2, #1	@ i.2557, i.2557,
	ldr	r7, [r0, r6]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	r4, r7	@ D.42728, <variable>.CurrPic.frame_num
	rsb	r7, ip, r4	@ tmp175, MaxFrameNum, D.42728
	strls	r4, [r1, #24]	@ D.42728, <variable>.frame_num_wrap
	strhi	r7, [r1, #24]	@ tmp175, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ temp.2556, <variable>.DPB.fs_ref
	add	r3, r3, #4	@ ivtmp.2542, ivtmp.2542,
	ldr	r4, [r1, #24]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	str	r4, [r1, #612]	@ <variable>.frame_num_wrap, <variable>.frame.pic_num
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2557
	bhi	.L816	@,
.L812:
	movw	r4, #:lower16:11123124	@ tmp179,
	movt	r4, #:upper16:11123124	@ tmp179,
	ldr	ip, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r2, #:lower16:11123048	@ ivtmp.2537,
	movt	r2, #:upper16:11123048	@ ivtmp.2537,
	add	r3, r0, r2	@ ivtmp.2537, pMvcCtx, ivtmp.2537
	mov	r2, #0	@ i.2558,
	b	.L819	@
.L818:
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2558
	bls	.L833	@,
.L819:
	ldr	r1, [r3, #0]	@ D.42738, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2558, i.2558,
	add	r3, r3, #4	@ ivtmp.2537, ivtmp.2537,
	ldrb	ip, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L818	@,
	ldr	ip, [r1, #600]	@ tmp185,
	bic	ip, ip, #-16777216	@ tmp183, tmp185,
	bic	ip, ip, #255	@ tmp183, tmp183,
	cmp	ip, #256	@ tmp183,
	ldreq	ip, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r1, #608]	@ <variable>.long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2558
	bhi	.L819	@,
.L833:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_CalcPicNum, .-MVC_CalcPicNum
	.align	2
	.global	MVC_IsOutDPB
	.type	MVC_IsOutDPB, %function
MVC_IsOutDPB:
	.fnstart
.LFB1621:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pFrameStore
	beq	.L835	@,
	movw	r3, #:lower16:11123112	@ tmp141,
	movt	r3, #:upper16:11123112	@ tmp141,
	ldr	r4, [r0, r3]	@ D.42817, <variable>.DPB.size
	cmp	r4, #0	@ D.42817,
	beq	.L835	@,
	movw	ip, #:lower16:11122920	@ ivtmp.2605,
	movt	ip, #:upper16:11122920	@ ivtmp.2605,
	add	r3, r0, ip	@ ivtmp.2605, pMvcCtx, ivtmp.2605
	sub	r2, r4, #1	@ tmp144, D.42817,
	and	r0, r2, #1	@ tmp146, tmp144,
	ldr	r2, [r3, #0]	@ D.42812, <variable>.DPB.fs
	cmp	r2, #0	@ D.42812,
	beq	.L841	@,
	cmp	r1, r2	@ pFrameStore, D.42812
	beq	.L851	@,
.L841:
	mov	r2, #1	@ i,
	cmp	r4, r2	@ D.42817, i
	add	r3, r3, #4	@ ivtmp.2605, ivtmp.2605,
	bls	.L835	@,
	cmp	r0, #0	@ tmp146,
	beq	.L838	@,
	ldr	r0, [r3, #0]	@ D.42812, <variable>.DPB.fs
	cmp	r0, #0	@ D.42812,
	beq	.L843	@,
	cmp	r1, r0	@ pFrameStore, D.42812
	beq	.L851	@,
.L843:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2605, ivtmp.2605,
	cmp	r4, r2	@ D.42817, i
	bls	.L835	@,
.L838:
	ldr	r0, [r3, #0]	@ D.42812, <variable>.DPB.fs
	add	r2, r2, #1	@ tmp147, i,
	add	ip, r3, #4	@ tmp148, ivtmp.2605,
	cmp	r0, #0	@ D.42812,
	beq	.L836	@,
	cmp	r1, r0	@ pFrameStore, D.42812
	beq	.L851	@,
.L836:
	ldr	r3, [r3, #4]	@ D.42812, <variable>.DPB.fs
	cmp	r3, #0	@ D.42812,
	beq	.L846	@,
	cmp	r1, r3	@ pFrameStore, D.42812
	beq	.L851	@,
.L846:
	add	r2, r2, #1	@ i, tmp147,
	add	r3, ip, #4	@ ivtmp.2605, tmp148,
	cmp	r4, r2	@ D.42817, i
	bhi	.L838	@,
.L835:
	mov	r0, #1	@ D.42810,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L851:
	mov	r0, #0	@ D.42810,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_IsOutDPB, .-MVC_IsOutDPB
	.align	2
	.global	mvc_combine_scalinglist
	.type	mvc_combine_scalinglist, %function
mvc_combine_scalinglist:
	.fnstart
.LFB1624:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #0	@ sizeOfScalingList
	ldmlefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r5, #:lower16:.LANCHOR0	@ tmp155,
	movt	r5, #:upper16:.LANCHOR0	@ tmp155,
	cmp	r2, #16	@ sizeOfScalingList,
	add	r4, r5, #16	@ tmp156, tmp155,
	sub	r9, r2, #1	@ tmp158, sizeOfScalingList,
	mov	ip, #255	@ tmp157,
	and	r9, r9, #1	@ tmp160, tmp158,
	ldrneb	r3, [r4, #0]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	beq	.L873	@,
.L869:
	and	r6, r3, #252	@ tmp167, scani,
	and	r7, r3, #3	@ tmp169, scani,
	add	r6, r1, r6	@ D.43100, scalingList, tmp167
	ldrb	sl, [r0, r3, asl #2]	@ zero_extendqisi2	@ tmp177,* scalingList_Org
	mov	r7, r7, asl #3	@ D.43103, tmp169,
	mov	r3, #1	@ i,
	ldr	r8, [r6, #0]	@ tmp174,* D.43100
	cmp	r3, r2	@ i, sizeOfScalingList
	bic	r8, r8, ip, asl r7	@ tmp175, tmp174, tmp157,
	orr	r7, r8, sl, asl r7	@, tmp179, tmp175, tmp177,
	str	r7, [r6, #0]	@ tmp179,* D.43100
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r9, #0	@ tmp160,
	beq	.L856	@,
	cmp	r2, #16	@ sizeOfScalingList,
	ldrneb	r6, [r4, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	ldreqb	r6, [r5, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	add	r3, r3, #1	@ i, i,
	cmp	r3, r2	@ i, sizeOfScalingList
	and	sl, r6, #252	@ tmp183, scani,
	and	r8, r6, #3	@ tmp185, scani,
	add	r7, r1, sl	@ D.43100, scalingList, tmp183
	ldrb	sl, [r0, r6, asl #2]	@ zero_extendqisi2	@ tmp193,* scalingList_Org
	mov	r6, r8, asl #3	@ D.43103, tmp185,
	ldr	r8, [r7, #0]	@ tmp190,* D.43100
	bic	r8, r8, ip, asl r6	@ tmp191, tmp190, tmp157,
	orr	r6, r8, sl, asl r6	@, tmp195, tmp191, tmp193,
	str	r6, [r7, #0]	@ tmp195,* D.43100
	bne	.L856	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L872:
	mov	r7, r6, lsr #2	@ tmp198, scani,
	and	r8, r6, #3	@ tmp201, scani,
	ldrb	sl, [r0, r6, asl #2]	@ zero_extendqisi2	@ tmp209,* scalingList_Org
	add	r3, r3, #1	@ i, tmp161,
	mov	r6, r8, asl #3	@ D.43103, tmp201,
	ldr	r8, [r1, r7, asl #2]	@ tmp206,* scalingList
	cmp	r3, r2	@ i, sizeOfScalingList
	bic	r8, r8, ip, asl r6	@ tmp207, tmp206, tmp157,
	orr	r6, r8, sl, asl r6	@, tmp211, tmp207, tmp209,
	str	r6, [r1, r7, asl #2]	@ tmp211,* scalingList
	beq	.L874	@,
.L856:
	cmp	r2, #16	@ sizeOfScalingList,
	ldreqb	r6, [r5, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	ldrneb	r6, [r4, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	cmp	r2, #16	@ sizeOfScalingList,
	add	r3, r3, #1	@ tmp161, i,
	and	r8, r6, #3	@ tmp145, scani,
	mov	r7, r6, lsr #2	@ tmp143, scani,
	ldrb	sl, [r0, r6, asl #2]	@ zero_extendqisi2	@ tmp151,* scalingList_Org
	mov	r6, r8, asl #3	@ D.43103, tmp145,
	ldr	r8, [r1, r7, asl #2]	@ tmp150,* scalingList
	bic	r8, r8, ip, asl r6	@ tmp149, tmp150, tmp157,
	orr	r6, r8, sl, asl r6	@, tmp154, tmp149, tmp151,
	str	r6, [r1, r7, asl #2]	@ tmp154,* scalingList
	ldrneb	r6, [r4, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	ldreqb	r6, [r5, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	b	.L872	@
.L874:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L873:
	ldrb	r3, [r5, #0]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	b	.L869	@
	.fnend
	.size	mvc_combine_scalinglist, .-mvc_combine_scalinglist
	.align	2
	.global	MVC_UpdatePicQpInf
	.type	MVC_UpdatePicQpInf, %function
MVC_UpdatePicQpInf:
	.fnstart
.LFB1629:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r1, #28]	@ <variable>.MaxQp, <variable>.MaxQp
	ldr	r3, [r1, #32]	@ <variable>.MinQp, <variable>.MinQp
	cmp	r2, r0	@ <variable>.MaxQp, SlcQp
	strge	r2, [r1, #28]	@, <variable>.MaxQp, <variable>.MaxQp
	strlt	r0, [r1, #28]	@, SlcQp, <variable>.MaxQp
	cmp	r3, r0	@ <variable>.MinQp, SlcQp
	strle	r3, [r1, #32]	@, <variable>.MinQp, <variable>.MinQp
	strgt	r0, [r1, #32]	@, SlcQp, <variable>.MinQp
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_UpdatePicQpInf, .-MVC_UpdatePicQpInf
	.align	2
	.global	MVC_StopPicNum
	.type	MVC_StopPicNum, %function
MVC_StopPicNum:
	.fnstart
.LFB1631:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_StopPicNum, .-MVC_StopPicNum
	.align	2
	.global	MVC_GetPicStreamSize
	.type	MVC_GetPicStreamSize, %function
MVC_GetPicStreamSize:
	.fnstart
.LFB1633:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11154924	@ tmp138,
	movt	r3, #:upper16:11154924	@ tmp138,
	ldr	r3, [r0, r3]	@ pMVCSliceParam, <variable>.DecPicPara.pFirstSlice
	cmp	r3, #0	@ pMVCSliceParam,
	moveq	r0, r3	@ TotalSize, pMVCSliceParam
	ldmeqfd	sp, {fp, sp, pc}	@
	mov	r0, #0	@ TotalSize,
.L882:
	ldr	r2, [r3, #12]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r1, [r3, #8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r3, #4056]	@ pMVCSliceParam, <variable>.pNextSlice
	add	ip, r1, r2	@ tmp139, <variable>.valid_bitlen, <variable>.valid_bitlen
	add	r2, ip, #7	@ tmp142, tmp139,
	cmp	r3, #0	@ pMVCSliceParam,
	add	r0, r0, r2, lsr #3	@, TotalSize, TotalSize, tmp142,
	bne	.L882	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetPicStreamSize, .-MVC_GetPicStreamSize
	.align	2
	.global	MVC_ExitSlice
	.type	MVC_ExitSlice, %function
MVC_ExitSlice:
	.fnstart
.LFB1644:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11117176	@ tmp137,
	movt	r4, #:upper16:11117176	@ tmp137,
	movw	r2, #:lower16:11117161	@ tmp148,
	movt	r2, #:upper16:11117161	@ tmp148,
	movw	r7, #:lower16:11118828	@ tmp136,
	ldr	r6, [r0, r4]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r7, #:upper16:11118828	@ tmp136,
	ldr	r4, [r0, #236]	@ sps, <variable>.pCurrSPS
	movw	r3, #:lower16:11117216	@ tmp142,
	movw	r8, #:lower16:11117188	@ tmp145,
	movt	r3, #:upper16:11117216	@ tmp142,
	movt	r8, #:upper16:11117188	@ tmp145,
	ldrb	r5, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	str	r6, [r0, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movw	ip, #:lower16:11118824	@ tmp139,
	ldr	r7, [r0, r3]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movt	ip, #:upper16:11118824	@ tmp139,
	ldr	r6, [r0, r8]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movw	r1, #:lower16:11118856	@ tmp141,
	ldr	r8, [r4, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movt	r1, #:upper16:11118856	@ tmp141,
	movw	r2, #:lower16:11118832	@ tmp144,
	movw	r3, #:lower16:11118816	@ tmp147,
	movt	r2, #:upper16:11118832	@ tmp144,
	movt	r3, #:upper16:11118816	@ tmp147,
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r8, [r0, ip]	@ <variable>.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	str	r7, [r0, r1]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	str	r6, [r0, r2]	@ <variable>.CurrSlice.frame_num, <variable>.PrevSlice.frame_num
	strb	r5, [r0, r3]	@ <variable>.CurrSlice.field_pic_flag, <variable>.PrevSlice.field_pic_flag
	beq	.L886	@,
	movw	r3, #:lower16:11117162	@ tmp154,
	movt	r3, #:upper16:11117162	@ tmp154,
	movw	ip, #:lower16:11118817	@ tmp153,
	movt	ip, #:upper16:11118817	@ tmp153,
	ldrb	r1, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	strb	r1, [r0, ip]	@ <variable>.CurrSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
.L886:
	movw	r2, #:lower16:11117163	@ tmp162,
	movt	r2, #:upper16:11117163	@ tmp162,
	movw	r3, #:lower16:11117168	@ tmp158,
	movt	r3, #:upper16:11117168	@ tmp158,
	ldrb	r1, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r2, #:lower16:11118819	@ tmp157,
	ldrb	ip, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movt	r2, #:upper16:11118819	@ tmp157,
	movw	r3, #:lower16:11118818	@ tmp161,
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	movt	r3, #:upper16:11118818	@ tmp161,
	strb	ip, [r0, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevSlice.nal_ref_idc
	strb	r1, [r0, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.PrevSlice.nal_unit_type
	beq	.L892	@,
.L887:
	ldr	r3, [r4, #2900]	@ prephitmp.2741, <variable>.pic_order_cnt_type
	cmp	r3, #0	@ prephitmp.2741,
	bne	.L888	@,
	movw	r1, #:lower16:11116028	@ tmp171,
	movw	r3, #:lower16:11116032	@ tmp174,
	movt	r1, #:upper16:11116028	@ tmp171,
	movt	r3, #:upper16:11116032	@ tmp174,
	movw	r2, #:lower16:11118840	@ tmp170,
	movt	r2, #:upper16:11118840	@ tmp170,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r3, #:lower16:11118844	@ tmp173,
	movt	r3, #:upper16:11118844	@ tmp173,
	str	ip, [r0, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.PrevSlice.pic_oder_cnt_lsb
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	r3, [r4, #2900]	@ prephitmp.2741, <variable>.pic_order_cnt_type
.L888:
	cmp	r3, #1	@ prephitmp.2741,
	beq	.L893	@,
.L889:
	movw	ip, #:lower16:11117171	@ tmp182,
	movt	ip, #:upper16:11117171	@ tmp182,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L890	@,
	movw	r4, #:lower16:11118800	@ tmp185,
	movw	ip, #:lower16:11117169	@ tmp188,
	movt	r4, #:upper16:11118800	@ tmp185,
	movt	ip, #:upper16:11117169	@ tmp188,
	movw	r3, #:lower16:11117170	@ tmp192,
	movt	r3, #:upper16:11117170	@ tmp192,
	ldr	r5, [r0, r4]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r1, #:lower16:11118860	@ tmp184,
	ldrb	r4, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r1, #:upper16:11118860	@ tmp184,
	ldrb	ip, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	movw	r2, #:lower16:11118820	@ tmp187,
	movw	r3, #:lower16:11118821	@ tmp191,
	movt	r2, #:upper16:11118820	@ tmp187,
	movt	r3, #:upper16:11118821	@ tmp191,
	str	r5, [r0, r1]	@ <variable>.CurrSlice.view_id, <variable>.PrevSlice.view_id
	strb	r4, [r0, r2]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.PrevSlice.anchor_pic_flag
	strb	ip, [r0, r3]	@ <variable>.CurrSlice.inter_view_flag, <variable>.PrevSlice.inter_view_flag
.L890:
	ldr	r1, [r0, #80]	@ <variable>.TotalSlice, <variable>.TotalSlice
	add	r2, r1, #1	@ tmp196, <variable>.TotalSlice,
	str	r2, [r0, #80]	@ tmp196, <variable>.TotalSlice
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L893:
	movw	r1, #:lower16:11116064	@ tmp177,
	movw	r3, #:lower16:11116068	@ tmp180,
	movt	r1, #:upper16:11116064	@ tmp177,
	movt	r3, #:upper16:11116068	@ tmp180,
	movw	r2, #:lower16:11118848	@ tmp176,
	movt	r2, #:upper16:11118848	@ tmp176,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r3, #:lower16:11118852	@ tmp179,
	movt	r3, #:upper16:11118852	@ tmp179,
	str	ip, [r0, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	b	.L889	@
.L892:
	movw	r3, #:lower16:11117204	@ tmp168,
	movt	r3, #:upper16:11117204	@ tmp168,
	movw	ip, #:lower16:11118836	@ tmp167,
	movt	ip, #:upper16:11118836	@ tmp167,
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	str	r1, [r0, ip]	@ <variable>.CurrSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	b	.L887	@
	.fnend
	.size	MVC_ExitSlice, .-MVC_ExitSlice
	.align	2
	.global	MVC_PicTypeStatistic
	.type	MVC_PicTypeStatistic, %function
MVC_PicTypeStatistic:
	.fnstart
.LFB1645:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117160	@ tmp134,
	movt	r3, #:upper16:11117160	@ tmp134,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L897	@,
	bcs	.L902	@,
	movw	ip, #:lower16:11151972	@ tmp142,
	movt	ip, #:upper16:11151972	@ tmp142,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r2, #2	@ <variable>.CurrPic.pic_type,
	movne	r2, #1	@ tmp145,
	strneb	r2, [r0, ip]	@ tmp145, <variable>.CurrPic.pic_type
.L900:
	movw	r3, #:lower16:11151973	@ tmp155,
	movt	r3, #:upper16:11151973	@ tmp155,
	mov	r1, #0	@ tmp156,
	strb	r1, [r0, r3]	@ tmp156, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
.L902:
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmnefd	sp, {fp, sp, pc}	@
	movw	r3, #:lower16:11117163	@ tmp150,
	movt	r3, #:upper16:11117163	@ tmp150,
	ldrb	r1, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	bne	.L900	@,
	movw	ip, #:lower16:11151973	@ tmp152,
	movt	ip, #:upper16:11151973	@ tmp152,
	mov	r2, #1	@ tmp153,
	strb	r2, [r0, ip]	@ tmp153, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
.L897:
	movw	r3, #:lower16:11151972	@ tmp136,
	movw	ip, #:lower16:11151973	@ tmp139,
	movt	r3, #:upper16:11151972	@ tmp136,
	movt	ip, #:upper16:11151973	@ tmp139,
	mov	r1, #2	@ tmp137,
	mov	r2, #0	@ tmp140,
	strb	r1, [r0, r3]	@ tmp137, <variable>.CurrPic.pic_type
	strb	r2, [r0, ip]	@ tmp140, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_PicTypeStatistic, .-MVC_PicTypeStatistic
	.align	2
	.global	MVC_FreeMvcExtMem
	.type	MVC_FreeMvcExtMem, %function
MVC_FreeMvcExtMem:
	.fnstart
.LFB1657:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r0, #0	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FreeMvcExtMem, .-MVC_FreeMvcExtMem
	.align	2
	.global	MVC_FreeMvcVuiExtMem
	.type	MVC_FreeMvcVuiExtMem, %function
MVC_FreeMvcVuiExtMem:
	.fnstart
.LFB1658:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r0, #0	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FreeMvcVuiExtMem, .-MVC_FreeMvcVuiExtMem
	.align	2
	.global	MVC_PassBytes
	.type	MVC_PassBytes, %function
MVC_PassBytes:
	.fnstart
.LFB1662:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #232]	@ D.46801, <variable>.pCurrNal
	cmp	r3, #0	@ D.46801,
	cmpne	r1, #0	@, len,
	bne	.L914	@,
.L908:
	mvn	r0, #0	@ D.46807,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L914:
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.46808, <variable>.nal_used_segment
	rsb	ip, r2, r2, asl #3	@, tmp155, D.46808, D.46808,
	add	ip, r3, ip, asl #2	@, tmp157, D.46801, tmp155,
	ldr	ip, [ip, #8]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	ip, #0	@ <variable>.streamBuffer,
	beq	.L908	@,
	ldr	ip, [r3, #68]	@ D.46815, <variable>.nal_segment
	cmp	ip, #2	@ D.46815,
	bhi	.L908	@,
	cmp	r2, #1	@ D.46808,
	bhi	.L908	@,
	cmp	ip, r2	@ D.46815, segment_idx
	bls	.L908	@,
	mov	r4, r1, asl #3	@ len.2852, len,
	mov	r6, #28	@ tmp188,
.L912:
	mla	r3, r6, r2, r3	@ tmp163, tmp188, segment_idx, D.46801
	add	r2, r2, #1	@ segment_idx, segment_idx,
	add	r5, r3, #24	@ tmp164, tmp163,
	ldr	r1, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	mov	r1, r1, asl #3	@ D.46823, <variable>.bitstream_length,
	add	ip, r4, ip	@ D.46821, len.2852, <variable>.bitsoffset
	cmp	ip, r1	@ D.46821, D.46823
	rsb	r4, r1, ip	@ len.2852, D.46823, D.46821
	bls	.L915	@,
	str	r1, [r3, #24]	@ D.46823, <variable>.bitsoffset
	ldr	r3, [r0, #232]	@ temp.2853, <variable>.pCurrNal
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	ip, r1, #1	@ tmp184, <variable>.nal_used_segment,
	strb	ip, [r3, #0]	@ tmp184, <variable>.nal_used_segment
	ldr	r3, [r0, #232]	@ D.46801, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r2	@ <variable>.nal_segment, segment_idx
	bhi	.L912	@,
	mov	r0, #0	@ D.46807,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L915:
	str	ip, [r5, #0]	@ D.46821, <variable>.bitsoffset
	mov	r0, #1	@ D.46807,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_PassBytes, .-MVC_PassBytes
	.align	2
	.global	MVC_GetBytes
	.type	MVC_GetBytes, %function
MVC_GetBytes:
	.fnstart
.LFB1663:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pdes
	bne	.L925	@,
.L917:
	mvn	r0, #0	@ D.46849,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L925:
	ldr	r5, [r0, #232]	@ D.46845, <variable>.pCurrNal
	cmp	r5, #0	@ D.46845,
	cmpne	r2, #0	@, len,
	movne	r4, #0	@, tmp158
	moveq	r4, #1	@, tmp158
	beq	.L917	@,
	ldrb	ip, [r5, #0]	@ zero_extendqisi2	@ D.46850, <variable>.nal_used_segment
	rsb	r3, ip, ip, asl #3	@, tmp162, D.46850, D.46850,
	add	r3, r5, r3, asl #2	@, tmp164, D.46845, tmp162,
	ldr	r3, [r3, #8]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r3, #0	@ <variable>.streamBuffer,
	beq	.L917	@,
	ldr	r3, [r5, #68]	@ D.46857, <variable>.nal_segment
	cmp	r3, #2	@ D.46857,
	bhi	.L917	@,
	cmp	ip, #1	@ D.46850,
	bhi	.L917	@,
	cmp	r3, ip	@ D.46857, segment_idx
	bls	.L917	@,
	mov	r9, #28	@ tmp208,
.L922:
	mul	r8, r9, ip	@ tmp168, tmp208, segment_idx
	mov	r3, #0	@ ivtmp.2883,
	add	sl, r8, r5	@ tmp170, tmp168, D.46845
	ldr	r6, [sl, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	r5, [sl, #8]	@ D.46862, <variable>.streamBuffer
	ldr	r7, [sl, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r6, r6, #7	@ tmp177, <variable>.bitsoffset,
	add	r7, r5, r7	@ end_byte, D.46862, <variable>.bitstream_length
	add	r5, r5, r6, lsr #3	@, byte_pos, D.46862, tmp177,
.L918:
	add	sl, r3, r5	@ D.50823, ivtmp.2883, byte_pos
	add	r6, r3, r1	@ D.50821, ivtmp.2883, pdes
	cmp	r7, sl	@ end_byte, D.50823
	bls	.L926	@,
	ldrb	sl, [r5, r3]	@ zero_extendqisi2	@ tmp186,* ivtmp.2883
	add	r4, r4, #1	@ cnt, cnt,
	cmp	r2, r4	@ len, cnt
	strb	sl, [r1, r3]	@ tmp186,* ivtmp.2883
	add	r3, r3, #1	@ ivtmp.2883, ivtmp.2883,
	ldr	r6, [r0, #232]	@ temp.2901, <variable>.pCurrNal
	add	r6, r8, r6	@ tmp191, tmp207, temp.2901
	ldr	sl, [r6, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	sl, sl, #8	@ tmp199, <variable>.bitsoffset,
	str	sl, [r6, #24]	@ tmp199, <variable>.bitsoffset
	bhi	.L918	@,
	mov	r0, r2	@ D.46849, len
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L926:
	ldr	r3, [r0, #232]	@ temp.2903, <variable>.pCurrNal
	add	ip, ip, #1	@ segment_idx, segment_idx,
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r5, r1, #1	@ tmp202, <variable>.nal_used_segment,
	strb	r5, [r3, #0]	@ tmp202, <variable>.nal_used_segment
	ldr	r5, [r0, #232]	@ D.46845, <variable>.pCurrNal
	ldr	r1, [r5, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, ip	@ <variable>.nal_segment, segment_idx
	movhi	r1, r6	@ pdes, D.50821
	bhi	.L922	@
.L921:
	mov	r0, r4	@ D.46849, cnt
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_GetBytes, .-MVC_GetBytes
	.align	2
	.global	MVC_InitOldSlice
	.type	MVC_InitOldSlice, %function
MVC_InitOldSlice:
	.fnstart
.LFB1667:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11118856	@,
	movt	r3, #:upper16:11118856	@,
	str	r3, [fp, #-56]	@, %sfp
	ldr	r3, [r0, #40]	@, <variable>.MaxPpsNum
	movw	r2, #:lower16:11118828	@,
	movt	r2, #:upper16:11118828	@,
	movw	r7, #:lower16:11118832	@ tmp161,
	movw	r9, #:lower16:11118816	@ tmp163,
	movt	r7, #:upper16:11118832	@ tmp161,
	str	r3, [r0, r2]	@, <variable>.PrevSlice.pic_parameter_set_id
	movt	r9, #:upper16:11118816	@ tmp163,
	ldr	r2, [fp, #-56]	@, %sfp
	movw	r6, #:lower16:11118817	@ tmp164,
	movw	r5, #:lower16:11118819	@ tmp165,
	movt	r6, #:upper16:11118817	@ tmp164,
	movt	r5, #:upper16:11118819	@ tmp165,
	movw	r4, #:lower16:11118818	@ tmp166,
	movw	ip, #:lower16:11118840	@ tmp167,
	movt	r4, #:upper16:11118818	@ tmp166,
	movt	ip, #:upper16:11118840	@ tmp167,
	movw	r1, #:lower16:11118844	@ tmp168,
	movw	r8, #:lower16:11118848	@ tmp169,
	movt	r1, #:upper16:11118844	@ tmp168,
	movt	r8, #:upper16:11118848	@ tmp169,
	movw	sl, #:lower16:11118852	@ tmp170,
	movt	sl, #:upper16:11118852	@ tmp170,
	mov	r3, #0	@ tmp139,
	str	r3, [r0, r8]	@ tmp139, <variable>.PrevSlice.delta_pic_order_cnt
	movw	r8, #:lower16:88888	@ tmp162,
	str	r3, [r0, sl]	@ tmp139, <variable>.PrevSlice.delta_pic_order_cnt
	movt	r8, #:upper16:88888	@ tmp162,
	strb	r3, [r0, r9]	@ tmp139, <variable>.PrevSlice.field_pic_flag
	str	r8, [r0, r7]	@ tmp162, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp142,
	strb	r7, [r0, r6]	@ tmp142, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp145,
	strb	r6, [r0, r5]	@ tmp145, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp148,
	strb	r5, [r0, r4]	@ tmp148, <variable>.PrevSlice.nal_unit_type
	mov	r4, #3	@ tmp151,
	str	r4, [r0, ip]	@ tmp151, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	ip, #0	@ tmp153,
	str	ip, [r0, r1]	@ tmp153, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r1, #262144	@ tmp159,
	str	r1, [r0, r2]	@ tmp159, <variable>.PrevSlice.first_mb_in_slice
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	MVC_InitOldSlice, .-MVC_InitOldSlice
	.align	2
	.global	MVC_FindNaluArraySlot
	.type	MVC_FindNaluArraySlot, %function
MVC_FindNaluArraySlot:
	.fnstart
.LFB1675:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r0, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r2, r0, #88	@ ivtmp.2961, pMvcCtx,
	movne	r3, #1	@ Pos,
	bne	.L931	@,
	b	.L930	@
.L940:
	ldrb	ip, [r2, #1025]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r2, r2, #176	@ ivtmp.2961, ivtmp.2961,
	cmp	ip, #0	@ <variable>.is_valid,
	beq	.L930	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L932	@,
.L931:
	ldrb	r1, [r2, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L940	@,
.L930:
	cmp	r3, #136	@ Pos,
	bhi	.L932	@,
	mov	r1, #88	@ tmp150,
	mov	r2, r3	@ D.47855, Pos
	mla	r3, r1, r3, r0	@ tmp151, tmp150, Pos, pMvcCtx
	mov	r0, #1	@ tmp153,
	strb	r0, [r3, #937]	@ tmp153, <variable>.is_valid
	mov	r0, r2	@, D.47855
	ldmfd	sp, {fp, sp, pc}	@
.L932:
	mvn	r2, #0	@ D.47855,
	mov	r0, r2	@, D.47855
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FindNaluArraySlot, .-MVC_FindNaluArraySlot
	.align	2
	.global	MVC_HaveSliceToDec
	.type	MVC_HaveSliceToDec, %function
MVC_HaveSliceToDec:
	.fnstart
.LFB1677:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #64]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #0	@ <variable>.SliceParaNum,
	mvneq	r0, #0	@,,
	movne	r0, #0	@,,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_HaveSliceToDec, .-MVC_HaveSliceToDec
	.global	__aeabi_idiv
	.align	2
	.global	MVC_GetDar
	.type	MVC_GetDar, %function
MVC_GetDar:
	.fnstart
.LFB1654:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ ar_idc
	mov	ip, r1	@ sar_width, sar_width
	beq	.L946	@,
	subs	r1, r0, #255	@ D.45951, ar_idc,
	movne	r1, #1	@ D.45951
	cmp	r0, #255	@ ar_idc,
	cmpne	r0, #16	@, ar_idc,
	bgt	.L946	@,
	cmp	ip, #0	@ sar_width,
	cmpne	r2, #0	@, sar_height,
	beq	.L963	@,
.L947:
	cmp	r0, #1	@ ar_idc,
	moveq	r4, #5	@ final_dar,
	beq	.L949	@,
	cmp	r1, #0	@ D.45951,
	beq	.L950	@,
	movw	r2, #:lower16:.LANCHOR0	@ tmp162,
	movt	r2, #:upper16:.LANCHOR0	@ tmp162,
	add	r1, r2, r0, asl #3	@, tmp171, tmp162, ar_idc,
	ldr	r2, [r1, #84]	@ sar_height, MVC_SarTable
	ldr	ip, [r1, #80]	@ sar_width, MVC_SarTable
.L950:
	ldr	r0, [fp, #4]	@ img_height, img_height
	mov	lr, r3, asl #10	@ tmp174, img_width,
	mul	r1, r0, r2	@, img_height, sar_height
	mul	r0, ip, lr	@, sar_width, tmp174
	bl	__aeabi_idiv	@
	sub	r1, r0, #2400	@ iftmp.788, dar,
	sub	r3, r0, #2256	@ iftmp.3012, dar,
	sub	ip, r1, #6	@ iftmp.788, iftmp.788,
	sub	r3, r3, #7	@ iftmp.3012, iftmp.3012,
	cmp	ip, #0	@ iftmp.788,
	rsblt	ip, r0, #2400	@ tmp181, dar,
	addlt	ip, ip, #6	@ iftmp.788, tmp181,
	cmp	r3, #0	@ iftmp.3012,
	rsblt	r1, r0, #2256	@ tmp183, dar,
	addlt	r1, r1, #7	@ iftmp.789, tmp183,
	movge	r1, r3	@ iftmp.789, iftmp.3012
	cmp	ip, r1	@ iftmp.788, iftmp.789
	movlt	r4, #4	@ final_dar,
	blt	.L949	@,
	cmp	r3, #0	@ iftmp.3012,
	sub	r2, r0, #1808	@ iftmp.3013, dar,
	rsblt	r3, r0, #2256	@ tmp184, dar,
	sub	r2, r2, #12	@ iftmp.3013, iftmp.3013,
	addlt	r3, r3, #7	@ iftmp.3012, tmp184,
	cmp	r2, #0	@ iftmp.3013,
	rsblt	r1, r0, #1808	@ tmp186, dar,
	addlt	r1, r1, #12	@ iftmp.791, tmp186,
	movge	r1, r2	@ iftmp.791, iftmp.3013
	cmp	r3, r1	@ iftmp.3012, iftmp.791
	movlt	r4, #3	@ final_dar,
	blt	.L949	@,
	cmp	r2, #0	@ iftmp.3013,
	sub	r4, r0, #1360	@ iftmp.793, dar,
	sub	r4, r4, #5	@ iftmp.793, iftmp.793,
	rsblt	r2, r0, #1808	@ tmp187, dar,
	addlt	r2, r2, #12	@ iftmp.3013, tmp187,
	cmp	r4, #0	@ iftmp.793,
	rsblt	r4, r0, #1360	@ tmp189, dar,
	addlt	r4, r4, #5	@ iftmp.793, tmp189,
	cmp	r4, r2	@ iftmp.793, iftmp.3013
	movgt	r4, #2	@ final_dar,
	movle	r4, #1	@ final_dar,
	b	.L949	@
.L963:
	cmp	r0, #255	@ ar_idc,
	bne	.L947	@,
.L946:
	mov	r4, #0	@ final_dar,
.L949:
	mov	r2, r4	@, final_dar
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC0	@,
	movt	r1, #:upper16:.LC0	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, final_dar
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_GetDar, .-MVC_GetDar
	.align	2
	.global	MVC_SPSEqual
	.type	MVC_SPSEqual, %function
MVC_SPSEqual:
	.fnstart
.LFB1653:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r3, r0, #0	@ pSPS1, pSPS1
	beq	.L996	@,
	cmp	r1, #0	@ pSPS2,
	beq	.L997	@,
	ldr	r6, [r3, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldr	r4, [r1, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldrb	r7, [r3, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r2, [r1, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r5, [r3, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	cmp	r6, r4	@ <variable>.profile_idc, <variable>.profile_idc
	cmpeq	r7, r2	@, <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	ldrb	r4, [r3, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	ldrb	r7, [r1, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	ip, #0	@, equal.3111
	moveq	ip, #1	@, equal.3111
	ldr	r6, [r1, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r5, r0	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	movne	r0, #0	@, equal.3112
	andeq	r0, ip, #1	@,, equal.3112, equal.3111
	ldr	r5, [r3, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r4, r7	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	r2, #0	@, equal.3113
	andeq	r2, r0, #1	@,, equal.3113, equal.3112
	ldr	r4, [r3, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r7, [r1, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r5, r6	@ <variable>.level_idc, <variable>.level_idc
	movne	ip, #0	@, equal.3114
	andeq	ip, r2, #1	@,, equal.3114, equal.3113
	ldrb	r2, [r3, #27]	@ zero_extendqisi2	@ D.45843, <variable>.seq_scaling_matrix_present_flag
	ldrb	r6, [r1, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r4, r7	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movne	r0, #0	@, equal.3115
	andeq	r0, ip, #1	@,, equal.3115, equal.3114
	cmp	r6, r2	@ <variable>.seq_scaling_matrix_present_flag, D.45843
	movne	r6, #0	@, equal
	andeq	r6, r0, #1	@,, equal, equal.3115
	cmp	r2, #0	@ D.45843,
	beq	.L968	@,
	mov	r9, r3	@ ivtmp.3074, pSPS1
	mov	r8, r1	@ ivtmp.3076, pSPS2
	mov	sl, #0	@ i,
	str	r3, [fp, #-48]	@ pSPS1, %sfp
	str	r1, [fp, #-52]	@ pSPS2, %sfp
	b	.L972	@
.L999:
	ldr	r7, [fp, #-48]	@, %sfp
	mov	r4, sl, asl #6	@ tmp291, i,
	ldr	ip, [r9, #760]	@ tmp235, <variable>.ScalingList4x4
	add	r2, r4, r1	@, tmp291,
	ldr	r0, [r8, #760]	@ tmp236, <variable>.ScalingList4x4
	add	r5, r4, r7	@, tmp291,
	str	r2, [fp, #-60]	@, %sfp
	ldr	r1, [r9, #756]	@ tmp239, <variable>.ScalingList4x4
	str	r5, [fp, #-56]	@, %sfp
	ldr	r3, [r8, #756]	@ tmp240, <variable>.ScalingList4x4
	ldr	r5, [r9, #764]	@ tmp243, <variable>.ScalingList4x4
	cmp	ip, r0	@ tmp235, tmp236
	cmpeq	r1, r3	@, tmp239, tmp240
	ldr	r4, [r8, #764]	@ tmp244, <variable>.ScalingList4x4
	ldr	r7, [r9, #768]	@ tmp247, <variable>.ScalingList4x4
	ldr	r1, [r8, #768]	@ tmp248, <variable>.ScalingList4x4
	movne	r2, #0	@, equal.3132
	moveq	r2, #1	@, equal.3132
	ldr	ip, [r9, #772]	@ tmp251, <variable>.ScalingList4x4
	cmp	r5, r4	@ tmp243, tmp244
	movne	r3, #0	@, equal.3136
	andeq	r3, r2, #1	@,, equal.3136, equal.3132
	ldr	r0, [r8, #772]	@ tmp252, <variable>.ScalingList4x4
	cmp	r7, r1	@ tmp247, tmp248
	movne	r5, #0	@, equal.3140
	andeq	r5, r3, #1	@,, equal.3140, equal.3136
	ldr	r4, [r9, #776]	@ tmp255, <variable>.ScalingList4x4
	ldr	r3, [r8, #776]	@ tmp256, <variable>.ScalingList4x4
	cmp	ip, r0	@ tmp251, tmp252
	movne	r1, #0	@, equal.3144
	andeq	r1, r5, #1	@,, equal.3144, equal.3140
	ldr	r7, [r9, #780]	@ tmp259, <variable>.ScalingList4x4
	ldr	r2, [r8, #780]	@ tmp260, <variable>.ScalingList4x4
	cmp	r4, r3	@ tmp255, tmp256
	movne	r0, #0	@, equal.3148
	andeq	r0, r1, #1	@,, equal.3148, equal.3144
	ldr	r5, [r9, #784]	@ tmp263, <variable>.ScalingList4x4
	ldr	r3, [r8, #784]	@ tmp264, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp259, tmp260
	movne	ip, #0	@, equal.3152
	andeq	ip, r0, #1	@,, equal.3152, equal.3148
	ldr	r4, [r8, #788]	@ tmp268, <variable>.ScalingList4x4
	ldr	r7, [r9, #788]	@ tmp267, <variable>.ScalingList4x4
	cmp	r5, r3	@ tmp263, tmp264
	movne	r1, #0	@, equal.3156
	andeq	r1, ip, #1	@,, equal.3156, equal.3152
	ldr	ip, [r9, #792]	@ tmp271, <variable>.ScalingList4x4
	ldr	r5, [r8, #792]	@ tmp272, <variable>.ScalingList4x4
	cmp	r7, r4	@ tmp267, tmp268
	movne	r0, #0	@, equal.3160
	andeq	r0, r1, #1	@,, equal.3160, equal.3156
	ldr	r7, [r9, #796]	@ tmp275, <variable>.ScalingList4x4
	ldr	r4, [r8, #796]	@ tmp276, <variable>.ScalingList4x4
	cmp	ip, r5	@ tmp271, tmp272
	movne	r2, #0	@, equal.3164
	andeq	r2, r0, #1	@,, equal.3164, equal.3160
	ldr	r3, [r8, #800]	@ tmp280, <variable>.ScalingList4x4
	ldr	r5, [r9, #800]	@ tmp279, <variable>.ScalingList4x4
	cmp	r7, r4	@ tmp275, tmp276
	movne	r1, #0	@, equal.3168
	andeq	r1, r2, #1	@,, equal.3168, equal.3164
	ldr	ip, [r9, #804]	@ tmp283, <variable>.ScalingList4x4
	ldr	r2, [r8, #804]	@ tmp284, <variable>.ScalingList4x4
	cmp	r5, r3	@ tmp279, tmp280
	movne	r0, #0	@, equal.3172
	andeq	r0, r1, #1	@,, equal.3172, equal.3168
	ldr	r4, [fp, #-56]	@, %sfp
	cmp	ip, r2	@ tmp283, tmp284
	movne	r5, #0	@, equal.3176
	andeq	r5, r0, #1	@,, equal.3176, equal.3172
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r7, [r8, #808]	@ tmp288, <variable>.ScalingList4x4
	ldr	r1, [r9, #808]	@ tmp287, <variable>.ScalingList4x4
	ldr	r0, [r4, #752]	@ tmp299, <variable>.ScalingList4x4
	cmp	r1, r7	@ tmp287, tmp288
	movne	r5, #0	@, equal.3180
	andeq	r5, r5, #1	@,, equal.3180, equal.3176
	ldr	r3, [ip, #752]	@ tmp300, <variable>.ScalingList4x4
	and	r6, r6, r5	@ equal.3184, equal, equal.3180
	ldr	r7, [r9, #812]	@ tmp303, <variable>.ScalingList4x4
	ldr	r2, [r8, #812]	@ tmp304, <variable>.ScalingList4x4
	cmp	r0, r3	@ tmp299, tmp300
	movne	r4, #0	@, equal.3188
	andeq	r4, r6, #1	@,, equal.3188, equal.3184
	cmp	r7, r2	@ tmp303, tmp304
	movne	r6, #0	@, equal
	andeq	r6, r4, #1	@,, equal, equal.3188
.L969:
	add	sl, sl, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.3074, ivtmp.3074,
	cmp	sl, #8	@ i,
	add	r8, r8, #64	@ ivtmp.3076, ivtmp.3076,
	beq	.L998	@,
.L972:
	ldr	r1, [fp, #-48]	@, %sfp
	add	ip, r1, sl	@ tmp228,, i
	ldr	r1, [fp, #-52]	@, %sfp
	add	r5, r1, sl	@ tmp229,, i
	ldrb	r3, [ip, #6]	@ zero_extendqisi2	@ D.45849, <variable>.seq_scaling_list_present_flag
	ldrb	r0, [r5, #6]	@ zero_extendqisi2	@ D.45849, <variable>.seq_scaling_list_present_flag
	cmp	r3, r0	@ D.45849, D.45849
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r3, #0	@ D.45849,
	beq	.L969	@,
	cmp	sl, #5	@ i,
	bls	.L999	@,
	ldr	r0, [fp, #-52]	@, %sfp
	mov	r5, sl, asl #8	@ tmp306, i,
	ldr	r4, [fp, #-48]	@, %sfp
	sub	r1, r5, #400	@ tmp307, tmp306,
	ldr	r7, [fp, #-48]	@, %sfp
	add	r3, r0, r1	@ ivtmp.3061,, tmp307
	add	r2, r4, r1	@ ivtmp.3058,, tmp307
	ldr	r5, [r0, r1]	@ tmp312, <variable>.ScalingList8x8
	add	r0, r2, #8	@ ivtmp.3058, ivtmp.3058,
	mov	ip, #2	@ j,
	ldr	r4, [r7, r1]	@ tmp311, <variable>.ScalingList8x8
	add	r1, r3, #8	@ ivtmp.3061, ivtmp.3061,
	ldr	r7, [r2, #4]	@ tmp440, <variable>.ScalingList8x8
	ldr	r3, [r3, #4]	@ tmp441, <variable>.ScalingList8x8
	cmp	r4, r5	@ tmp311, tmp312
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r7, r3	@ tmp440, tmp441
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
.L971:
	mov	r2, r0	@ tmp406, ivtmp.3058
	mov	r3, r1	@ tmp407, ivtmp.3061
	ldr	r7, [r2], #4	@ tmp412, <variable>.ScalingList8x8
	add	ip, ip, #2	@ j, j,
	ldr	r5, [r3], #4	@ tmp413, <variable>.ScalingList8x8
	ldr	r4, [r0, #4]	@ tmp419, <variable>.ScalingList8x8
	add	r0, r2, #4	@ ivtmp.3058, tmp406,
	ldr	r2, [r1, #4]	@ tmp420, <variable>.ScalingList8x8
	cmp	r7, r5	@ tmp412, tmp413
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	add	r1, r3, #4	@ ivtmp.3061, tmp407,
	cmp	r4, r2	@ tmp419, tmp420
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	ip, #64	@ j,
	bne	.L971	@,
	add	sl, sl, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.3074, ivtmp.3074,
	cmp	sl, #8	@ i,
	add	r8, r8, #64	@ ivtmp.3076, ivtmp.3076,
	bne	.L972	@,
.L998:
	ldr	r3, [fp, #-48]	@ pSPS1, %sfp
	ldr	r1, [fp, #-52]	@ pSPS2, %sfp
.L968:
	ldr	r2, [r3, #2900]	@ D.45868, <variable>.pic_order_cnt_type
	ldr	r4, [r1, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r0, [r3, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	ldr	r5, [r1, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, r4	@ D.45868, <variable>.pic_order_cnt_type
	cmpeq	r0, r5	@, <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	movne	ip, #0	@, equal.3116
	moveq	ip, #1	@, equal.3116
	cmp	r2, #0	@ D.45868,
	and	r6, ip, r6	@ equal.3106, equal.3116, equal
	bne	.L1000	@,
	ldr	r7, [r3, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	ldr	r2, [r1, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	cmp	r7, r2	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	movne	r6, #0	@, equal.3106
	andeq	r6, r6, #1	@,, equal.3106, equal.3106
.L973:
	ldrb	r2, [r1, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	r5, [r3, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r0, [r1, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r7, [r3, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	ip, [r1, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	cmp	r7, r2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	cmpeq	r5, r0	@, <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r4, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r5, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r0, [r1, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r2, #0	@, equal.3120
	moveq	r2, #1	@, equal.3120
	cmp	r4, ip	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movne	r4, #0	@, equal.3121
	andeq	r4, r2, #1	@,, equal.3121, equal.3120
	ldrb	r2, [r3, #20]	@ zero_extendqisi2	@ D.45901, <variable>.frame_mbs_only_flag
	ldrb	ip, [r1, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r5, r0	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r0, #0	@, equal.3122
	andeq	r0, r4, #1	@,, equal.3122, equal.3121
	cmp	ip, r2	@ <variable>.frame_mbs_only_flag, D.45901
	movne	r0, #0	@, equal.3123
	andeq	r0, r0, #1	@,, equal.3123, equal.3122
	cmp	r2, #0	@ D.45901,
	and	r6, r0, r6	@ equal.3107, equal.3123, equal.3106
	bne	.L977	@,
	ldrb	r4, [r3, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	ldrb	ip, [r1, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	cmp	r4, ip	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movne	r6, #0	@, equal.3107
	andeq	r6, r6, #1	@,, equal.3107, equal.3107
.L977:
	ldrb	r2, [r3, #23]	@ zero_extendqisi2	@ D.45912, <variable>.frame_cropping_flag
	ldrb	r0, [r3, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldrb	r4, [r1, #23]	@ zero_extendqisi2	@ <variable>.frame_cropping_flag, <variable>.frame_cropping_flag
	ldrb	ip, [r1, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	cmp	r4, r2	@ <variable>.frame_cropping_flag, D.45912
	cmpeq	r0, ip	@, <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	movne	r0, #0	@, equal.3124
	moveq	r0, #1	@, equal.3124
	cmp	r2, #0	@ D.45912,
	and	r2, r0, r6	@ equal.3108, equal.3124, equal.3107
	beq	.L978	@,
	ldr	r5, [r1, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r4, [r3, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r0, [r1, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r7, [r3, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r6, [r3, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	cmp	r7, r5	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	cmpeq	r4, r0	@, <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	ip, [r1, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r4, [r3, #3968]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	ldr	r0, [r1, #3968]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r5, #0	@, equal.3125
	moveq	r5, #1	@, equal.3125
	cmp	r6, ip	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	movne	ip, #0	@, equal.3126
	andeq	ip, r5, #1	@,, equal.3126, equal.3125
	cmp	r4, r0	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r0, #0	@, equal.3127
	andeq	r0, ip, #1	@,, equal.3127, equal.3126
	and	r2, r2, r0	@ equal.3108, equal.3108, equal.3127
.L978:
	ldrb	ip, [r3, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	ldrb	r3, [r1, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	ip, r3	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	movne	r2, #0	@, tmp396
	andeq	r2, r2, #1	@,, tmp396, equal.3108
	cmp	r2, #0	@ tmp396,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L966:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1000:
	cmp	r2, #1	@ D.45868,
	bne	.L973	@,
	ldr	r7, [r3, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldr	ip, [r1, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldrb	r5, [r3, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldrb	r0, [r1, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r4, [r3, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	cmp	r7, ip	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	cmpeq	r5, r0	@, <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r2, [r1, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	ldr	r7, [r3, #2916]	@ D.45883, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	ldr	r0, [r1, #2916]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	ip, #0	@, equal.3117
	moveq	ip, #1	@, equal.3117
	cmp	r4, r2	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movne	r5, #0	@, equal.3118
	andeq	r5, ip, #1	@,, equal.3118, equal.3117
	cmp	r7, r0	@ D.45883, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	r5, #0	@, equal.3119
	andeq	r5, r5, #1	@,, equal.3119, equal.3118
	cmp	r7, #0	@ D.45883,
	and	r6, r6, r5	@ equal.3106, equal.3106, equal.3119
	beq	.L973	@,
	ldr	r4, [r3, #2920]	@ tmp343, <variable>.offset_for_ref_frame
	mov	r7, r7, asl #2	@ D.50983, D.45883,
	ldr	r5, [r1, #2920]	@ tmp344, <variable>.offset_for_ref_frame
	mov	r2, #4	@ ivtmp.3049,
	sub	r0, r7, #4	@ tmp401, D.50983,
	cmp	r4, r5	@ tmp343, tmp344
	movne	r6, #0	@, equal.3106
	andeq	r6, r6, #1	@,, equal.3106, equal.3106
	cmp	r2, r7	@ ivtmp.3049, D.50983
	ubfx	r0, r0, #2, #1	@ tmp402, tmp401,,
	beq	.L973	@,
	cmp	r0, #0	@ tmp402,
	beq	.L976	@,
	ldr	r4, [r3, #2924]	@ tmp437, <variable>.offset_for_ref_frame
	mov	r2, #8	@ ivtmp.3049,
	ldr	r0, [r1, #2924]	@ tmp438, <variable>.offset_for_ref_frame
	cmp	r4, r0	@ tmp437, tmp438
	movne	r6, #0	@, equal.3106
	andeq	r6, r6, #1	@,, equal.3106, equal.3106
	cmp	r2, r7	@ ivtmp.3049, D.50983
	beq	.L973	@,
.L976:
	add	r0, r2, #4	@ tmp403, ivtmp.3049,
	add	r4, r3, r2	@ tmp423, pSPS1, ivtmp.3049
	add	r2, r1, r2	@ tmp424, pSPS2, ivtmp.3049
	add	ip, r3, r0	@ tmp430, pSPS1, tmp403
	add	r8, r1, r0	@ tmp431, pSPS2, tmp403
	ldr	r5, [r4, #2920]	@ tmp425, <variable>.offset_for_ref_frame
	ldr	r4, [r2, #2920]	@ tmp426, <variable>.offset_for_ref_frame
	add	r2, r0, #4	@ ivtmp.3049, tmp403,
	ldr	ip, [ip, #2920]	@ tmp432, <variable>.offset_for_ref_frame
	ldr	r0, [r8, #2920]	@ tmp433, <variable>.offset_for_ref_frame
	cmp	r5, r4	@ tmp425, tmp426
	movne	r6, #0	@, equal.3106
	andeq	r6, r6, #1	@,, equal.3106, equal.3106
	cmp	ip, r0	@ tmp432, tmp433
	movne	r6, #0	@, equal.3106
	andeq	r6, r6, #1	@,, equal.3106, equal.3106
	cmp	r2, r7	@ ivtmp.3049, D.50983
	bne	.L976	@,
	b	.L973	@
.L997:
	mov	r0, r1	@, pSPS2
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #9918	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L966	@
.L996:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #9917	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L966	@
	.fnend
	.size	MVC_SPSEqual, .-MVC_SPSEqual
	.align	2
	.global	MVC_PPSEqual
	.type	MVC_PPSEqual, %function
MVC_PPSEqual:
	.fnstart
.LFB1651:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r3, r0, #0	@ pPPS1, pPPS1
	beq	.L1022	@,
	cmp	r1, #0	@ pPPS2,
	beq	.L1023	@,
	ldr	r4, [r3, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	ip, [r1, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r2, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r6, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r0, [r1, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r4, ip	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmpeq	r6, r2	@, <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r5, [r3, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	ldrb	r4, [r3, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	ip, #0	@, equal.3279
	moveq	ip, #1	@, equal.3279
	cmp	r5, r0	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	movne	r5, #0	@, equal.3280
	andeq	r5, ip, #1	@,, equal.3280, equal.3279
	ldr	ip, [r1, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldr	r0, [r3, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	cmp	r4, r2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	r4, #0	@, equal.3281
	andeq	r4, r5, #1	@,, equal.3281, equal.3280
	ldr	r5, [r1, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	ldr	r2, [r3, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r0, ip	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movne	r0, #0	@, equal.3282
	andeq	r0, r4, #1	@,, equal.3282, equal.3281
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	ldrb	ip, [r3, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r2, r5	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movne	r2, #0	@, equal.3283
	andeq	r2, r0, #1	@,, equal.3283, equal.3282
	ldr	r0, [r1, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	ldr	r5, [r3, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	ip, r4	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	movne	ip, #0	@, equal.3284
	andeq	ip, r2, #1	@,, equal.3284, equal.3283
	ldr	r2, [r1, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	ldr	r4, [r3, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	cmp	r5, r0	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	movne	r5, #0	@, equal.3285
	andeq	r5, ip, #1	@,, equal.3285, equal.3284
	ldr	ip, [r1, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	ldr	r0, [r3, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	cmp	r4, r2	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	movne	r4, #0	@, equal.3286
	andeq	r4, r5, #1	@,, equal.3286, equal.3285
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	ldrb	r2, [r3, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r0, ip	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movne	r0, #0	@, equal.3287
	andeq	r0, r4, #1	@,, equal.3287, equal.3286
	ldrb	r4, [r1, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	cmp	r2, r5	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	movne	r2, #0	@, equal.3288
	andeq	r2, r0, #1	@,, equal.3288, equal.3287
	ldr	r0, [r3, #60]	@ D.45586, <variable>.transform_8x8_mode_flag
	ldr	r5, [r1, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	cmp	ip, r4	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	movne	ip, #0	@, equal.3289
	andeq	ip, r2, #1	@,, equal.3289, equal.3288
	ldrb	r2, [r3, #18]	@ zero_extendqisi2	@ D.45589, <variable>.pic_scaling_matrix_present_flag
	ldrb	r4, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r0, r5	@ D.45586, <variable>.transform_8x8_mode_flag
	movne	ip, #0	@, equal.3290
	andeq	ip, ip, #1	@,, equal.3290, equal.3289
	cmp	r4, r2	@ <variable>.pic_scaling_matrix_present_flag, D.45589
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal.3290
	cmp	r2, #0	@ D.45589,
	beq	.L1005	@,
	mov	r2, r0, asl #1	@ tmp242, D.45586,
	adds	r0, r2, #6	@, tmp242,
	str	r0, [fp, #-64]	@, %sfp
	beq	.L1005	@,
	mov	r8, r3	@ ivtmp.3238, pPPS1
	mov	sl, r1	@ ivtmp.3337, pPPS2
	mov	r9, #0	@ i,
	str	r1, [fp, #-52]	@ pPPS2, %sfp
	str	r3, [fp, #-48]	@ pPPS1, %sfp
	str	r3, [fp, #-56]	@ pPPS1, %sfp
	str	r1, [fp, #-60]	@ pPPS2, %sfp
.L1009:
	ldr	r3, [fp, #-56]	@, %sfp
	ldr	r4, [fp, #-60]	@, %sfp
	add	r2, r3, r9	@ tmp243,, i
	add	r0, r4, r9	@ tmp244,, i
	ldrb	r3, [r2, #5]	@ zero_extendqisi2	@ D.45595, <variable>.pic_scaling_list_present_flag
	ldrb	r1, [r0, #5]	@ zero_extendqisi2	@ D.45595, <variable>.pic_scaling_list_present_flag
	cmp	r3, r1	@ D.45595, D.45595
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r3, #0	@ D.45595,
	beq	.L1021	@,
	cmp	r9, #5	@ i,
	bhi	.L1007	@,
	ldr	r4, [fp, #-48]	@, %sfp
	ldr	r2, [fp, #-52]	@, %sfp
	ldr	r0, [r4, #1984]	@ D.45602, <variable>.UseDefaultScalingMatrix4x4Flag
	ldr	r1, [r2, #1984]	@ tmp250, <variable>.UseDefaultScalingMatrix4x4Flag
	cmp	r0, r1	@ D.45602, tmp250
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r0, #0	@ D.45602,
	beq	.L1019	@,
.L1021:
	add	r9, r9, #1	@ i, i,
.L1006:
	ldr	r4, [fp, #-64]	@, %sfp
	add	r8, r8, #64	@ ivtmp.3238, ivtmp.3238,
	ldr	r2, [fp, #-48]	@, %sfp
	add	sl, sl, #64	@ ivtmp.3337, ivtmp.3337,
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r4, r9	@, i
	add	r3, r2, #4	@,,
	str	r3, [fp, #-48]	@, %sfp
	add	r0, r1, #4	@,,
	str	r0, [fp, #-52]	@, %sfp
	bhi	.L1009	@,
	ldr	r3, [fp, #-56]	@ pPPS1, %sfp
	ldr	r1, [fp, #-60]	@ pPPS2, %sfp
.L1005:
	ldr	r0, [r3, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r3, [r1, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	cmp	r0, r3	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	movne	ip, #0	@, tmp333
	andeq	ip, ip, #1	@,, tmp333, equal
	cmp	ip, #0	@ tmp333,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L1003:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1007:
	ldr	r2, [fp, #-48]	@, %sfp
	ldr	r1, [fp, #-52]	@, %sfp
	ldr	r4, [r2, #1984]	@ D.45613, <variable>.UseDefaultScalingMatrix8x8Flag
	sub	r2, r9, #6	@ D.45612, i,
	ldr	r0, [r1, #1984]	@ tmp319, <variable>.UseDefaultScalingMatrix8x8Flag
	cmp	r4, r0	@ D.45613, tmp319
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r4, #0	@ D.45613,
	bne	.L1021	@,
	mov	r3, r2, asl #8	@ tmp321, D.45612,
	ldr	r5, [fp, #-60]	@, %sfp
	ldr	r7, [fp, #-56]	@, %sfp
	add	r6, r3, #448	@ tmp322, tmp321,
	add	r0, r5, r6	@ ivtmp.3228,, tmp322
	add	r1, r7, r6	@ ivtmp.3225,, tmp322
.L1008:
	mov	r2, r1	@ tmp337, ivtmp.3225
	mov	r3, r0	@ tmp338, ivtmp.3228
	ldr	r7, [r2], #4	@ tmp326, <variable>.ScalingList8x8
	add	r4, r4, #2	@ j, j,
	ldr	r6, [r3], #4	@ tmp327, <variable>.ScalingList8x8
	ldr	r5, [r1, #4]	@ tmp343, <variable>.ScalingList8x8
	add	r1, r2, #4	@ ivtmp.3225, tmp337,
	ldr	r2, [r0, #4]	@ tmp344, <variable>.ScalingList8x8
	cmp	r7, r6	@ tmp326, tmp327
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	add	r0, r3, #4	@ ivtmp.3228, tmp338,
	cmp	r5, r2	@ tmp343, tmp344
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r4, #64	@ j,
	bne	.L1008	@,
	b	.L1021	@
.L1019:
	ldr	r0, [r8, #72]	@ tmp253, <variable>.ScalingList4x4
	add	r9, r9, #1	@ i, i,
	ldr	r1, [sl, #72]	@ tmp254, <variable>.ScalingList4x4
	ldr	r2, [r8, #68]	@ tmp257, <variable>.ScalingList4x4
	ldr	r3, [sl, #68]	@ tmp258, <variable>.ScalingList4x4
	ldr	r5, [r8, #76]	@ tmp261, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp253, tmp254
	cmpeq	r2, r3	@, tmp257, tmp258
	ldr	r6, [sl, #76]	@ tmp262, <variable>.ScalingList4x4
	ldr	r4, [sl, #80]	@ tmp266, <variable>.ScalingList4x4
	ldr	r1, [r8, #80]	@ tmp265, <variable>.ScalingList4x4
	movne	r3, #0	@, equal.3295
	moveq	r3, #1	@, equal.3295
	ldr	r0, [r8, #84]	@ tmp269, <variable>.ScalingList4x4
	cmp	r5, r6	@ tmp261, tmp262
	movne	r3, #0	@, equal.3299
	andeq	r3, r3, #1	@,, equal.3299, equal.3295
	ldr	r5, [sl, #84]	@ tmp270, <variable>.ScalingList4x4
	cmp	r1, r4	@ tmp265, tmp266
	movne	r1, #0	@, equal.3303
	andeq	r1, r3, #1	@,, equal.3303, equal.3299
	ldr	r2, [r8, #88]	@ tmp273, <variable>.ScalingList4x4
	ldr	r3, [sl, #88]	@ tmp274, <variable>.ScalingList4x4
	cmp	r0, r5	@ tmp269, tmp270
	movne	r1, #0	@, equal.3307
	andeq	r1, r1, #1	@,, equal.3307, equal.3303
	ldr	r4, [r8, #92]	@ tmp277, <variable>.ScalingList4x4
	ldr	r5, [sl, #92]	@ tmp278, <variable>.ScalingList4x4
	cmp	r2, r3	@ tmp273, tmp274
	movne	r3, #0	@, equal.3311
	andeq	r3, r1, #1	@,, equal.3311, equal.3307
	ldr	r0, [r8, #96]	@ tmp281, <variable>.ScalingList4x4
	ldr	r1, [sl, #96]	@ tmp282, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp277, tmp278
	movne	r3, #0	@, equal.3315
	andeq	r3, r3, #1	@,, equal.3315, equal.3311
	ldr	r4, [r8, #100]	@ tmp285, <variable>.ScalingList4x4
	ldr	r5, [sl, #100]	@ tmp286, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp281, tmp282
	movne	r1, #0	@, equal.3319
	andeq	r1, r3, #1	@,, equal.3319, equal.3315
	ldr	r2, [r8, #104]	@ tmp289, <variable>.ScalingList4x4
	ldr	r0, [sl, #104]	@ tmp290, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp285, tmp286
	movne	r1, #0	@, equal.3323
	andeq	r1, r1, #1	@,, equal.3323, equal.3319
	ldr	r4, [r8, #108]	@ tmp293, <variable>.ScalingList4x4
	ldr	r5, [sl, #108]	@ tmp294, <variable>.ScalingList4x4
	cmp	r2, r0	@ tmp289, tmp290
	movne	r3, #0	@, equal.3327
	andeq	r3, r1, #1	@,, equal.3327, equal.3323
	ldr	r0, [r8, #112]	@ tmp297, <variable>.ScalingList4x4
	ldr	r1, [sl, #112]	@ tmp298, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp293, tmp294
	movne	r3, #0	@, equal.3331
	andeq	r3, r3, #1	@,, equal.3331, equal.3327
	ldr	r4, [r8, #116]	@ tmp301, <variable>.ScalingList4x4
	ldr	r5, [sl, #116]	@ tmp302, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp297, tmp298
	movne	r1, #0	@, equal.3336
	andeq	r1, r3, #1	@,, equal.3336, equal.3331
	ldr	r2, [r8, #120]	@ tmp305, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp301, tmp302
	movne	r1, #0	@, equal.3341
	andeq	r1, r1, #1	@,, equal.3341, equal.3336
	ldr	r4, [fp, #-56]	@, %sfp
	ldr	r3, [sl, #120]	@ tmp306, <variable>.ScalingList4x4
	ldr	r0, [r4, r9, asl #6]	@ tmp311, <variable>.ScalingList4x4
	cmp	r2, r3	@ tmp305, tmp306
	movne	r4, #0	@, equal.3345
	andeq	r4, r1, #1	@,, equal.3345, equal.3341
	ldr	r2, [fp, #-60]	@, %sfp
	and	ip, ip, r4	@ equal.3349, equal, equal.3345
	ldr	r3, [sl, #124]	@ tmp316, <variable>.ScalingList4x4
	ldr	r1, [r2, r9, asl #6]	@ tmp312, <variable>.ScalingList4x4
	ldr	r2, [r8, #124]	@ tmp315, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp311, tmp312
	movne	ip, #0	@, equal.3353
	andeq	ip, ip, #1	@,, equal.3353, equal.3349
	cmp	r2, r3	@ tmp315, tmp316
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal.3353
	b	.L1006	@
.L1022:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #9699	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L1003	@
.L1023:
	mov	r0, r1	@, pPPS2
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #9700	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L1003	@
	.fnend
	.size	MVC_PPSEqual, .-MVC_PPSEqual
	.align	2
	.global	MVC_CalcStreamBits
	.type	MVC_CalcStreamBits, %function
MVC_CalcStreamBits:
	.fnstart
.LFB1646:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11113784	@ tmp169,
	movt	r1, #:upper16:11113784	@ tmp169,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	cmp	r3, #0	@ <variable>.CurrPPS.entropy_coding_mode_flag,
	beq	.L1025	@,
	ldr	lr, [r0, #232]	@ D.45075, <variable>.pCurrNal
	ldr	r1, [lr, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r3, r1, #7	@ tmp171, <variable>.nal_bitoffset,
	bic	ip, r3, #7	@ tmp173, tmp171,
	str	ip, [lr, #64]	@ tmp173, <variable>.nal_bitoffset
	ldr	r0, [r0, #232]	@ temp.3400, <variable>.pCurrNal
	ldr	r5, [r0, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	sub	r2, r5, #1	@ tmp175, <variable>.nal_trail_zero_bit_num,
	str	r2, [r0, #72]	@ tmp175, <variable>.nal_trail_zero_bit_num
.L1025:
	ldr	ip, [r4, #232]	@ temp.3401, <variable>.pCurrNal
	ldrb	r5, [ip, #0]	@ zero_extendqisi2	@ temp.3449, <variable>.nal_used_segment
	cmp	r5, #0	@ temp.3449,
	moveq	r6, r5	@ code_len_byte, temp.3449
	moveq	r7, r5	@ temp.3449, temp.3449
	beq	.L1027	@,
	mov	r7, r5, asl #3	@ temp.3449, temp.3449,
	mov	r3, #28	@ ivtmp.3398,
	rsb	lr, r5, r7	@ tmp178, temp.3449, temp.3449
	ldr	r6, [ip, #12]	@ code_len_byte, <variable>.bitstream_length
	add	r2, ip, r3	@ ivtmp.3399, temp.3401,
	mov	r1, lr, asl #2	@ D.51341, tmp178,
	cmp	r3, r1	@ ivtmp.3398, D.51341
	sub	r0, r1, #28	@ tmp367, D.51341,
	ubfx	r0, r0, #2, #1	@ tmp371, tmp367,,
	beq	.L1027	@,
	cmp	r0, #0	@ tmp371,
	beq	.L1028	@,
	ldr	lr, [r2, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r3, #56	@ ivtmp.3398,
	cmp	r3, r1	@ ivtmp.3398, D.51341
	add	r2, ip, r3	@ ivtmp.3399, temp.3401,
	add	r6, r6, lr	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	beq	.L1027	@,
.L1028:
	ldr	lr, [r2, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r3, r3, #56	@ ivtmp.3398, ivtmp.3398,
	ldr	r0, [r2, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, r1	@ ivtmp.3398, D.51341
	add	r6, r6, lr	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	add	r2, r2, #56	@ ivtmp.3399, ivtmp.3399,
	add	r6, r6, r0	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	bne	.L1028	@,
.L1027:
	rsb	r1, r5, r7	@ tmp186, temp.3449, temp.3449
	ldr	r2, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	mov	r3, r6	@, code_len_byte
	mov	r0, #7	@,
	mov	r7, r1, asl #2	@ tmp187, tmp186,
	movw	r1, #:lower16:.LC3	@,
	add	lr, r7, ip	@ tmp188, tmp187, temp.3401
	movt	r1, #:upper16:.LC3	@,
	ldr	lr, [lr, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	str	lr, [sp, #0]	@ <variable>.bitstream_length,
	ldr	lr, [ip, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	str	lr, [sp, #4]	@ <variable>.nal_trail_zero_bit_num,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #232]	@ temp.3404, <variable>.pCurrNal
	mov	r0, #7	@,
	mov	r2, r5	@, temp.3449
	movw	r1, #:lower16:.LC4	@,
	movt	r1, #:upper16:.LC4	@,
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	ip, ip, ip, asl #3	@, tmp196, <variable>.nal_used_segment, <variable>.nal_used_segment,
	and	lr, lr, r0	@ tmp201, <variable>.nal_bitoffset,
	add	r3, r3, ip, asl #2	@, tmp198, temp.3404, tmp196,
	str	lr, [r3, #24]	@ tmp201, <variable>.bitsoffset
	ldr	r3, [r4, #232]	@ temp.3407, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ temp.3410, <variable>.nal_used_segment
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	ip, ip, ip, asl #3	@, tmp205, temp.3410, temp.3410,
	add	r3, r3, ip, asl #2	@, tmp207, temp.3407, tmp205,
	ldr	ip, [r3, #16]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	add	ip, ip, lr, lsr #3	@, tmp218, <variable>.stream_phy_addr, <variable>.nal_bitoffset,
	rsb	lr, r6, ip	@ tmp220, code_len_byte, tmp218
	str	lr, [r3, #28]	@ tmp220, <variable>.bytespos
	ldr	r3, [r4, #232]	@ temp.3411, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ temp.3413, <variable>.nal_used_segment
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	ip, ip, ip, asl #3	@, tmp224, temp.3413, temp.3413,
	add	r3, r3, ip, asl #2	@, tmp226, temp.3411, tmp224,
	ldr	ip, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r6, r6, ip	@ tmp235, code_len_byte, <variable>.bitstream_length
	rsb	r6, lr, r6, asl #3	@, tmp239, <variable>.nal_bitoffset, tmp235,
	str	r6, [r3, #20]	@ tmp239, <variable>.valid_bitlen
	ldr	lr, [r4, #232]	@ temp.3416, <variable>.pCurrNal
	ldrb	ip, [lr, #0]	@ zero_extendqisi2	@ temp.3418, <variable>.nal_used_segment
	rsb	r3, ip, ip, asl #3	@, tmp243, temp.3418, temp.3418,
	add	r3, lr, r3, asl #2	@, tmp245, temp.3416, tmp243,
	ldr	ip, [r3, #28]	@ <variable>.bytespos, <variable>.bytespos
	ldr	lr, [r3, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	and	ip, ip, #3	@ tmp254, <variable>.bytespos,
	add	ip, lr, ip, asl #3	@, tmp265, <variable>.bitsoffset, tmp254,
	str	ip, [r3, #24]	@ tmp265, <variable>.bitsoffset
	ldr	ip, [r4, #232]	@ temp.3419, <variable>.pCurrNal
	ldrb	r3, [ip, #0]	@ zero_extendqisi2	@ temp.3421, <variable>.nal_used_segment
	rsb	lr, r3, r3, asl #3	@, tmp269, temp.3421, temp.3421,
	add	r3, ip, lr, asl #2	@, tmp271, temp.3419, tmp269,
	add	r3, r3, #24	@ tmp272, tmp271,
	ldr	lr, [r3, #4]	@ <variable>.bytespos, <variable>.bytespos
	bic	ip, lr, #3	@ tmp281, <variable>.bytespos,
	str	ip, [r3, #4]	@ tmp281, <variable>.bytespos
	ldr	ip, [r4, #232]	@ temp.3423, <variable>.pCurrNal
	add	r7, r7, ip	@ tmp288, tmp187, temp.3423
	ldr	lr, [r7, #20]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r7, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	lr, [sp, #0]	@ <variable>.valid_bitlen,
	ldrb	lr, [ip, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	rsb	lr, lr, lr, asl #3	@, tmp303, <variable>.nal_used_segment, <variable>.nal_used_segment,
	add	ip, ip, lr, asl #2	@, tmp305, temp.3423, tmp303,
	ldr	ip, [ip, #28]	@ <variable>.bytespos, <variable>.bytespos
	str	ip, [sp, #4]	@ <variable>.bytespos,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #232]	@ temp.3427, <variable>.pCurrNal
	ldr	r2, [r3, #68]	@ temp.3428, <variable>.nal_segment
	sub	r1, r2, #1	@ prephitmp.3375, temp.3428,
	cmp	r1, #1	@ prephitmp.3375,
	bhi	.L1043	@,
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r0, ip, #1	@ i.3431, <variable>.nal_used_segment,
	cmp	r2, r0	@ temp.3428, i.3431
	movls	ip, #0	@,
	movhi	ip, #1	@,
	cmp	r0, #1	@ i.3431,
	movhi	ip, #0	@,,
	cmp	ip, #0	@ tmp316,
	beq	.L1031	@,
	mov	r2, #0	@ tmp317,
	str	r2, [r3, #52]	@ tmp317, <variable>.bitsoffset
	ldr	r3, [r4, #232]	@ temp.3433, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC6	@,
	mov	r2, #1	@,
	movt	r1, #:upper16:.LC6	@,
	ldr	lr, [r3, #44]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	lr, [r3, #56]	@ <variable>.stream_phy_addr, <variable>.bytespos
	ldr	r3, [r4, #232]	@ temp.3434, <variable>.pCurrNal
	ldr	ip, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	lr, ip, asl #3	@ tmp320, <variable>.bitstream_length,
	str	lr, [r3, #48]	@ tmp320, <variable>.valid_bitlen
	ldr	r3, [r4, #232]	@ temp.3436, <variable>.pCurrNal
	ldr	ip, [r3, #56]	@ <variable>.bytespos, <variable>.bytespos
	ldr	lr, [r3, #52]	@ <variable>.bitsoffset, <variable>.bitsoffset
	and	ip, ip, #3	@ tmp321, <variable>.bytespos,
	add	ip, lr, ip, asl #3	@, tmp325, <variable>.bitsoffset, tmp321,
	str	ip, [r3, #52]	@ tmp325, <variable>.bitsoffset
	ldr	r3, [r4, #232]	@ temp.3438, <variable>.pCurrNal
	ldr	ip, [r3, #56]	@ <variable>.bytespos, <variable>.bytespos
	bic	lr, ip, #3	@ tmp327, <variable>.bytespos,
	str	lr, [r3, #56]	@ tmp327, <variable>.bytespos
	ldr	ip, [r4, #232]	@ temp.3440, <variable>.pCurrNal
	ldr	lr, [ip, #48]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [ip, #52]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	lr, [sp, #0]	@ <variable>.valid_bitlen,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #232]	@ temp.3427, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	sub	r1, r1, #1	@ prephitmp.3375, <variable>.nal_segment,
.L1031:
	rsb	r0, r1, r1, asl #3	@, tmp335, prephitmp.3375, prephitmp.3375,
	ldr	r2, [r3, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r3, r3, r0, asl #2	@, tmp337, temp.3427, tmp335,
	add	ip, r3, #16	@ tmp338, tmp337,
	ldr	r1, [ip, #4]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	rsb	r0, r2, r1	@ tmp348, <variable>.nal_trail_zero_bit_num, <variable>.valid_bitlen
	str	r0, [ip, #4]	@ tmp348, <variable>.valid_bitlen
	ldr	r2, [r4, #232]	@ temp.3444, <variable>.pCurrNal
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ i, <variable>.nal_used_segment
	ldr	r0, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r0, r3	@ <variable>.nal_segment, i
	bls	.L1034	@,
	movw	r1, #:lower16:11152576	@ tmp364,
	movt	r1, #:upper16:11152576	@ tmp364,
.L1035:
	rsb	ip, r3, r3, asl #3	@, tmp353, i, i,
	ldr	r5, [r4, r1]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	add	r3, r3, #1	@ i, i,
	add	ip, r2, ip, asl #2	@, tmp355, temp.3444, tmp353,
	ldr	ip, [ip, #28]	@ temp.3447, <variable>.bytespos
	cmp	ip, r5	@ temp.3447, <variable>.CurrPic.stream_base_addr
	strcc	ip, [r4, r1]	@ temp.3447, <variable>.CurrPic.stream_base_addr
	ldrcc	r0, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r0, r3	@ <variable>.nal_segment, i
	bhi	.L1035	@,
.L1034:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L1043:
	movw	r1, #:lower16:.LC5	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC5	@,
	bl	dprint_vfmw	@
	b	.L1034	@
	.fnend
	.size	MVC_CalcStreamBits, .-MVC_CalcStreamBits
	.align	2
	.global	MVC_IsNewPic
	.type	MVC_IsNewPic, %function
MVC_IsNewPic:
	.fnstart
.LFB1637:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r5, [r0, #236]	@ D.44330, <variable>.pCurrSPS
	movw	r7, #:lower16:11118824	@ tmp154,
	movw	r6, #:lower16:11118828	@ tmp159,
	movt	r7, #:upper16:11118824	@ tmp154,
	movt	r6, #:upper16:11118828	@ tmp159,
	movw	sl, #:lower16:11117176	@ tmp160,
	movt	sl, #:upper16:11117176	@ tmp160,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	movw	ip, #:lower16:11118832	@ tmp165,
	ldr	r8, [r3, r7]	@ <variable>.PrevSlice.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	movt	ip, #:upper16:11118832	@ tmp165,
	ldr	r7, [r3, r6]	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movw	r0, #:lower16:11117188	@ tmp166,
	ldr	r6, [r3, sl]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r0, #:upper16:11117188	@ tmp166,
	ldr	sl, [r5, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r1, #:lower16:11118816	@ tmp171,
	movw	r2, #:lower16:11117161	@ tmp172,
	movt	r1, #:upper16:11118816	@ tmp171,
	movt	r2, #:upper16:11117161	@ tmp172,
	cmp	r7, r6	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmpeq	r8, sl	@, <variable>.PrevSlice.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r4, [r3, ip]	@ <variable>.PrevSlice.frame_num, <variable>.PrevSlice.frame_num
	ldr	lr, [r3, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	moveq	ip, #0	@, result.3475
	movne	ip, #1	@, result.3475
	ldrb	r1, [r3, r1]	@ zero_extendqisi2	@ D.44336, <variable>.PrevSlice.field_pic_flag
	ldrb	r2, [r3, r2]	@ zero_extendqisi2	@ D.44337, <variable>.CurrSlice.field_pic_flag
	cmp	r4, lr	@ <variable>.PrevSlice.frame_num, <variable>.CurrSlice.frame_num
	moveq	r0, ip	@, result.3476, result.3475
	orrne	r0, ip, #1	@,, result.3476, result.3475
	cmp	r1, r2	@ D.44336, D.44337
	orrne	r0, r0, #1	@,, result, result.3476
	cmp	r1, #0	@ D.44336,
	beq	.L1045	@,
	cmp	r2, #0	@ D.44337,
	bne	.L1055	@,
.L1045:
	movw	r4, #:lower16:11118819	@ tmp181,
	movw	ip, #:lower16:11117168	@ tmp182,
	movt	r4, #:upper16:11118819	@ tmp181,
	movt	ip, #:upper16:11117168	@ tmp182,
	ldrb	r1, [r3, r4]	@ zero_extendqisi2	@ D.44350, <variable>.PrevSlice.nal_ref_idc
	ldrb	r4, [r3, ip]	@ zero_extendqisi2	@ D.44351, <variable>.CurrSlice.nal_ref_idc
	cmp	r1, r4	@ D.44350, D.44351
	moveq	r4, #0	@ prephitmp.3463,
	beq	.L1047	@,
	cmp	r1, #0	@ D.44350,
	moveq	r4, #1	@ prephitmp.3463,
	bne	.L1056	@,
.L1047:
	movw	r1, #:lower16:11118818	@ tmp185,
	movw	r2, #:lower16:11117163	@ tmp186,
	movt	r1, #:upper16:11118818	@ tmp185,
	movt	r2, #:upper16:11117163	@ tmp186,
	ldrb	r1, [r3, r1]	@ zero_extendqisi2	@ D.44355, <variable>.PrevSlice.nal_unit_type
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ D.44356, <variable>.CurrSlice.nal_unit_type
	cmp	r1, lr	@ D.44355, D.44356
	orrne	r0, r0, #1	@,, result.3477, result
	cmp	lr, #5	@ D.44356,
	orr	r4, r0, r4	@ result.3474, result.3477, prephitmp.3463
	beq	.L1057	@,
.L1049:
	ldr	r2, [r5, #2900]	@ D.44365, <variable>.pic_order_cnt_type
	cmp	r2, #0	@ D.44365,
	bne	.L1050	@,
	movw	ip, #:lower16:11118844	@ tmp195,
	movw	r0, #:lower16:11116032	@ tmp196,
	movw	r1, #:lower16:11118840	@ tmp201,
	movw	r2, #:lower16:11116028	@ tmp202,
	movt	ip, #:upper16:11118844	@ tmp195,
	movt	r0, #:upper16:11116032	@ tmp196,
	movt	r1, #:upper16:11118840	@ tmp201,
	movt	r2, #:upper16:11116028	@ tmp202,
.L1054:
	ldr	lr, [r3, ip]	@ <variable>.PrevSlice.delta_pic_order_cnt,
	ldr	ip, [r3, r0]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	ldr	r0, [r3, r1]	@ <variable>.PrevSlice.delta_pic_order_cnt,
	ldr	r1, [r3, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	cmp	r0, r1	@ <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	cmpeq	lr, ip	@, <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	moveq	r1, #0	@, result.3479
	movne	r1, #1	@, result.3479
	orr	r4, r4, r1	@ result.3474, result.3474, result.3479
.L1051:
	movw	r0, #:lower16:11117171	@ tmp219,
	movt	r0, #:upper16:11117171	@ tmp219,
	ldrb	r2, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	beq	.L1052	@,
	movw	r5, #:lower16:11118820	@ tmp221,
	movw	lr, #:lower16:11117169	@ tmp222,
	movt	r5, #:upper16:11118820	@ tmp221,
	movt	lr, #:upper16:11117169	@ tmp222,
	movw	ip, #:lower16:11118860	@ tmp227,
	movw	r0, #:lower16:11118800	@ tmp228,
	movt	ip, #:upper16:11118860	@ tmp227,
	movt	r0, #:upper16:11118800	@ tmp228,
	ldrb	r7, [r3, r5]	@ zero_extendqisi2	@ <variable>.PrevSlice.anchor_pic_flag, <variable>.PrevSlice.anchor_pic_flag
	movw	r1, #:lower16:11118821	@ tmp233,
	ldrb	r6, [r3, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r1, #:upper16:11118821	@ tmp233,
	ldr	lr, [r3, r0]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r2, #:lower16:11117170	@ tmp234,
	ldr	r5, [r3, ip]	@ <variable>.PrevSlice.view_id, <variable>.PrevSlice.view_id
	movt	r2, #:upper16:11117170	@ tmp234,
	ldrb	ip, [r3, r1]	@ zero_extendqisi2	@ <variable>.PrevSlice.inter_view_flag, <variable>.PrevSlice.inter_view_flag
	cmp	r5, lr	@ <variable>.PrevSlice.view_id, <variable>.CurrSlice.view_id
	cmpeq	r7, r6	@, <variable>.PrevSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	ldrb	r0, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	moveq	r1, #0	@, result.3480
	movne	r1, #1	@, result.3480
	cmp	ip, r0	@ <variable>.PrevSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	moveq	lr, r1	@, result.3481, result.3480
	orrne	lr, r1, #1	@,, result.3481, result.3480
	orr	r4, r4, lr	@ result.3474, result.3474, result.3481
.L1052:
	movw	r2, #:lower16:11117216	@ tmp239,
	movt	r2, #:upper16:11117216	@ tmp239,
	mov	r0, #19	@,
	movw	r1, #:lower16:.LC7	@,
	ldr	r3, [r3, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movt	r1, #:upper16:.LC7	@,
	cmp	r3, #0	@ <variable>.CurrSlice.first_mb_in_slice,
	orreq	r4, r4, #1	@,, result.3482, result.3474
	mov	r2, r4	@, result.3482
	bl	dprint_vfmw	@
	mov	r0, r4	@, result.3482
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1050:
	cmp	r2, #1	@ D.44365,
	bne	.L1051	@,
	movw	ip, #:lower16:11118852	@ tmp207,
	movw	r0, #:lower16:11116068	@ tmp208,
	movw	r1, #:lower16:11118848	@ tmp213,
	movw	r2, #:lower16:11116064	@ tmp214,
	movt	ip, #:upper16:11118852	@ tmp207,
	movt	r0, #:upper16:11116068	@ tmp208,
	movt	r1, #:upper16:11118848	@ tmp213,
	movt	r2, #:upper16:11116064	@ tmp214,
	b	.L1054	@
.L1056:
	rsbs	r4, r4, #1	@ prephitmp.3463, D.44351
	movcc	r4, #0	@ prephitmp.3463
	b	.L1047	@
.L1055:
	movw	r1, #:lower16:11118817	@ tmp175,
	movw	r2, #:lower16:11117162	@ tmp176,
	movt	r1, #:upper16:11118817	@ tmp175,
	movt	r2, #:upper16:11117162	@ tmp176,
	ldrb	r4, [r3, r1]	@ zero_extendqisi2	@ <variable>.PrevSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, lr	@ <variable>.PrevSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	orrne	r0, r0, #1	@,, result, result
	b	.L1045	@
.L1057:
	cmp	r1, #5	@ D.44355,
	bne	.L1049	@,
	movw	r2, #:lower16:11118836	@ tmp189,
	movw	lr, #:lower16:11117204	@ tmp190,
	movt	r2, #:upper16:11118836	@ tmp189,
	movt	lr, #:upper16:11117204	@ tmp190,
	ldr	r0, [r3, r2]	@ <variable>.PrevSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	ldr	ip, [r3, lr]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	cmp	r0, ip	@ <variable>.PrevSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	orrne	r4, r4, #1	@,, result.3474, result.3474
	b	.L1049	@
	.fnend
	.size	MVC_IsNewPic, .-MVC_IsNewPic
	.align	2
	.global	MVC_PPSSPSCheckTmpId
	.type	MVC_PPSSPSCheckTmpId, %function
MVC_PPSSPSCheckTmpId:
	.fnstart
.LFB1636:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ tmp_pic_parameter_set_id, tmp_pic_parameter_set_id
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r2, r5	@, tmp_pic_parameter_set_id
	movw	r1, #:lower16:.LC8	@,
	mov	r0, #19	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	mov	r0, #2240	@ tmp141,
	mla	r3, r0, r5, r3	@ pPPS, tmp141, tmp_pic_parameter_set_id, <variable>.PPS
	ldrb	r2, [r3, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	beq	.L1064	@,
	ldr	r1, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	ldr	r2, [r3, #28]	@ D.44306, <variable>.seq_parameter_set_id
	sub	ip, r1, #1	@ tmp145, <variable>.MaxSpsNum,
	cmp	r2, ip	@ D.44306, tmp145
	bhi	.L1065	@,
	movw	lr, #:lower16:11117172	@ tmp148,
	movt	lr, #:upper16:11117172	@ tmp148,
	ldrsb	r5, [r4, lr]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	cmn	r5, #1	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1066	@,
.L1062:
	mov	r0, #0	@ D.44305,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1066:
	ldr	ip, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	movw	r1, #3992	@ tmp152,
	mla	r0, r1, r2, ip	@ tmp153, tmp152, D.44306, <variable>.SPS
	ldrb	r3, [r0, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L1062	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC11	@,
	movt	r1, #:upper16:.LC11	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.44305, <variable>.CurrSlice.svc_extension_flag
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1064:
	mov	r2, r5	@, tmp_pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC9	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44305,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1065:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC10	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44305,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_PPSSPSCheckTmpId, .-MVC_PPSSPSCheckTmpId
	.align	2
	.global	MVC_PPSSPSCheck
	.type	MVC_PPSSPSCheck, %function
MVC_PPSSPSCheck:
	.fnstart
.LFB1635:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:11117176	@ tmp143,
	movt	r5, #:upper16:11117176	@ tmp143,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r1, #:lower16:.LC12	@,
	mov	r0, #19	@,
	movt	r1, #:upper16:.LC12	@,
	ldr	r2, [r4, r5]	@, <variable>.CurrSlice.pic_parameter_set_id
	bl	dprint_vfmw	@
	ldr	r2, [r4, r5]	@ temp.3529, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r0, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	mov	r1, #2240	@ tmp147,
	mla	r1, r1, r2, r0	@ pPPS, tmp147, temp.3529, <variable>.PPS
	ldrb	r3, [r1, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L1075	@,
	movw	r2, #:lower16:11117172	@ tmp151,
	movt	r2, #:upper16:11117172	@ tmp151,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ D.44269, <variable>.CurrSlice.svc_extension_flag
	sxtb	r5, r3	@ D.44269, D.44269
	cmn	r5, #1	@ D.44269,
	beq	.L1076	@,
	cmp	r3, #0	@ D.44269,
	bne	.L1072	@,
	ldr	r2, [r1, #28]	@ temp.3530, <variable>.seq_parameter_set_id
	movw	ip, #:lower16:336180	@ tmp159,
	movt	ip, #:upper16:336180	@ tmp159,
	mul	r3, ip, r2	@ tmp158, tmp159, temp.3530
	add	ip, r3, r4	@ tmp166, tmp158, pMvcCtx
	add	lr, ip, #12992	@ tmp167, tmp166,
	add	r3, ip, #286720	@ pSPS, tmp162,
	add	r0, lr, #8	@ tmp167, tmp167,
	add	r3, r3, #932	@ pSPS, pSPS,
	ldrb	lr, [r0, #4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	beq	.L1073	@,
	add	lr, ip, #286720	@ tmp173, tmp166,
	add	r0, lr, #952	@ tmp173, tmp173,
	ldrb	lr, [r0, #5]	@ zero_extendqisi2	@ <variable>.sps.is_valid, <variable>.sps.is_valid
	cmp	lr, #0	@ <variable>.sps.is_valid,
	beq	.L1073	@,
.L1071:
	mov	r0, #0	@ D.44268,
	str	r3, [r4, #240]	@ pSPS, <variable>.pSPS
	str	r1, [r4, #244]	@ pPPS, <variable>.pPPS
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1076:
	ldr	r2, [r1, #28]	@ D.44273, <variable>.seq_parameter_set_id
	movw	r0, #3992	@ tmp154,
	ldr	lr, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r0, r2, lr	@ pSPS, tmp154, D.44273, <variable>.SPS
	ldrb	ip, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	ip, #0	@ <variable>.is_valid,
	bne	.L1071	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC14	@,
	movt	r1, #:upper16:.LC14	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.44268, D.44269
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1073:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC15	@,
	movt	r1, #:upper16:.LC15	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44268,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1075:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC13	@,
	movt	r1, #:upper16:.LC13	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44268,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1072:
	mov	r2, r5	@, D.44269
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC16	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44268,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_PPSSPSCheck, .-MVC_PPSSPSCheck
	.align	2
	.global	MVC_WriteCurrPicYUV
	.type	MVC_WriteCurrPicYUV, %function
MVC_WriteCurrPicYUV:
	.fnstart
.LFB1627:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11151963	@ tmp136,
	movw	ip, #:lower16:11152504	@ tmp139,
	movt	r2, #:upper16:11151963	@ tmp136,
	movt	ip, #:upper16:11152504	@ tmp139,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r5, [r0, r2]	@ zero_extendqisi2	@ structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:.LC17	@,
	ldr	lr, [r0, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r1, #:upper16:.LC17	@,
	mov	r0, #2	@,
	mov	r2, r5	@, structure
	ldr	r3, [lr, #268]	@, <variable>.fs_image.image_id
	bl	dprint_vfmw	@
	movw	r1, #:lower16:11152564	@ tmp151,
	movt	r1, #:upper16:11152564	@ tmp151,
	cmp	r5, #3	@ structure,
	cmpne	r5, #0	@, structure,
	movw	r3, #:lower16:11152560	@ tmp149,
	movt	r3, #:upper16:11152560	@ tmp149,
	ldr	ip, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	moveq	r2, #1	@ PicStructure,
	ldr	r3, [r4, r3]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	addne	r2, r5, #1	@ PicStructure, structure,
	movw	r1, #:lower16:.LC18	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC18	@,
	str	ip, [sp, #0]	@ <variable>.CurrPic.pic_height_in_mb,
	bl	dprint_vfmw	@
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
	.fnend
	.size	MVC_WriteCurrPicYUV, .-MVC_WriteCurrPicYUV
	.align	2
	.global	MVC_GetReRangeFlag
	.type	MVC_GetReRangeFlag, %function
MVC_GetReRangeFlag:
	.fnstart
.LFB1618:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117172	@ tmp156,
	movt	r3, #:upper16:11117172	@ tmp156,
	movw	r2, #:lower16:11117176	@ tmp151,
	movt	r2, #:upper16:11117176	@ tmp151,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ D.42436, <variable>.CurrSlice.svc_extension_flag
	mov	r6, r1	@ p_dpb_changed, p_dpb_changed
	ldr	ip, [r4, r2]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r1, #2240	@ tmp154,
	ldr	r0, [r0, #252]	@ <variable>.PPS, <variable>.PPS
	sxtb	r2, r3	@ D.42436, D.42436
	cmn	r2, #1	@ D.42436,
	mla	r0, r1, ip, r0	@ pPPS, tmp154, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L1099	@,
	cmp	r3, #0	@ D.42436,
	bne	.L1084	@,
	ldrb	r1, [r4, #2]	@ zero_extendqisi2	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r1, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L1100	@,
	ldr	r1, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r0, [r4, #28]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r0, r1	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	movweq	r5, #:lower16:11045412	@ pSPS,
	movteq	r5, #:upper16:11045412	@ pSPS,
	addeq	r5, r4, r5	@ pSPS, pMvcCtx, pSPS
	bne	.L1101	@,
.L1083:
	ldrb	r3, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r2, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	ip, r3, #2	@ tmp177, <variable>.frame_mbs_only_flag,
	ldr	r7, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r0, [r4, #12]	@ oldw, <variable>.CurWidthInMb
	mla	r3, r2, ip, ip	@ newh, <variable>.pic_height_in_map_units_minus1, tmp177, tmp177
	ldr	r1, [r4, #16]	@ oldh, <variable>.CurHeightInMb
	add	r2, r7, #1	@ neww, <variable>.pic_width_in_mbs_minus1,
	cmp	r2, r0	@ neww, oldw
	cmpeq	r3, r1	@, newh, oldh
	moveq	r7, #0	@, tmp186
	movne	r7, #1	@, tmp186
	beq	.L1102	@,
.L1088:
	movw	ip, #:lower16:g_event_report	@ tmp191,
	movt	ip, #:upper16:g_event_report	@ tmp191,
	ldr	ip, [ip, #0]	@ g_event_report.663, g_event_report
	cmp	ip, #0	@ g_event_report.663,
	beq	.L1097	@,
	mov	lr, r0, asl #4	@ tmp193, oldw,
	mov	r1, r1, asl #4	@ tmp195, oldh,
	mov	r0, r2, asl #4	@ tmp197, neww,
	strh	lr, [fp, #-44]	@ movhi	@ tmp193, para
	strh	r1, [fp, #-42]	@ movhi	@ tmp195, para
	mov	lr, r3, asl #4	@ tmp199, newh,
	strh	r0, [fp, #-40]	@ movhi	@ tmp197, para
	mov	r1, #2	@,
	strh	lr, [fp, #-38]	@ movhi	@ tmp199, para
	sub	r2, fp, #44	@,,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #8	@,
	blx	ip	@ g_event_report.663
.L1097:
	movw	r3, #:lower16:11117171	@ tmp202,
	movt	r3, #:upper16:11117171	@ tmp202,
	mov	r0, #1	@ ReRangeFlg,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	beq	.L1103	@,
.L1091:
	ldr	r1, [r5, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	sub	r3, r1, #1	@ dpb_size.3619, <variable>.dpb_size_plus1,
.L1094:
	ldr	ip, [r4, #44]	@ <variable>.CurrDPBSize, <variable>.CurrDPBSize
	cmp	ip, r3	@ <variable>.CurrDPBSize, dpb_size.3619
	moveq	r2, r0	@, tmp213, ReRangeFlg
	orrne	r2, r0, #1	@,, tmp213, ReRangeFlg
	str	r2, [r6, #0]	@ tmp213,* p_dpb_changed
	str	r3, [r4, #44]	@ dpb_size.3619, <variable>.CurrDPBSize
.L1087:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L1102:
	movw	ip, #:lower16:11123112	@ tmp187,
	movt	ip, #:upper16:11123112	@ tmp187,
	ldr	r8, [r5, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	ldr	ip, [r4, ip]	@ <variable>.DPB.size, <variable>.DPB.size
	add	ip, ip, #1	@ tmp188, <variable>.DPB.size,
	cmp	r8, ip	@ <variable>.dpb_size_plus1, tmp188
	movls	r0, r7	@ ReRangeFlg, tmp186
	bhi	.L1088	@,
	movw	r3, #:lower16:11117171	@ tmp202,
	movt	r3, #:upper16:11117171	@ tmp202,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L1091	@,
.L1103:
	mov	r3, #0	@ ivtmp.3617,
	movw	ip, #:lower16:10757760	@ tmp220,
	movt	ip, #:upper16:10757760	@ tmp220,
	mov	r1, r3	@ dpb_size, ivtmp.3617
.L1093:
	add	r2, r4, r3	@ tmp204, pMvcCtx, ivtmp.3617
	add	r3, r3, #335872	@ ivtmp.3617, ivtmp.3617,
	add	r2, r2, #290816	@ tmp205, tmp204,
	add	r3, r3, #308	@ ivtmp.3617, ivtmp.3617,
	add	r2, r2, #808	@ tmp205, tmp205,
	ldr	r2, [r2, #0]	@ D.42491, <variable>.sps.dpb_size_plus1
	cmp	r2, r1	@ D.42491, dpb_size
	subhi	r1, r2, #1	@ dpb_size, D.42491,
	cmp	r3, ip	@ ivtmp.3617, tmp220
	bne	.L1093	@,
	add	ip, r1, #1	@ D.42495, dpb_size,
	mov	r3, ip, asl #1	@ dpb_size.3622, D.42495,
	cmp	r3, #16	@ dpb_size.3622,
	movcs	r3, #16	@ dpb_size.3619,
	b	.L1094	@
.L1099:
	ldr	r7, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r5, #3992	@ tmp160,
	ldr	r0, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mla	r5, r5, r7, r0	@ pSPS, tmp160, <variable>.seq_parameter_set_id, <variable>.SPS
	b	.L1083	@
.L1100:
	ldr	r5, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r3, #:lower16:336180	@ tmp164,
	movt	r3, #:upper16:336180	@ tmp164,
	mla	r2, r5, r3, r4	@ tmp168, <variable>.seq_parameter_set_id, tmp164, pMvcCtx
	add	ip, r2, #286720	@ pSPS, tmp168,
	add	r5, ip, #932	@ pSPS, pSPS,
	b	.L1083	@
.L1101:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ReRangeFlg,
	b	.L1087	@
.L1084:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC16	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ReRangeFlg,
	b	.L1087	@
	.fnend
	.size	MVC_GetReRangeFlag, .-MVC_GetReRangeFlag
	.align	2
	.global	MVC_DumpList
	.type	MVC_DumpList, %function
MVC_DumpList:
	.fnstart
.LFB1609:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:g_PrintEnable	@ tmp140,
	movt	r1, #:upper16:g_PrintEnable	@ tmp140,
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #8192	@ g_PrintEnable,
	beq	.L1109	@,
	movw	r6, #:lower16:11117208	@ ivtmp.3665,
	movt	r6, #:upper16:11117208	@ ivtmp.3665,
	add	r6, r0, r6	@ ivtmp.3665, pMvcCtx, ivtmp.3665
	mov	r7, #0	@ j,
.L1106:
	ldr	r2, [r6, #0]	@ tmp148, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ tmp148,
	beq	.L1108	@,
	add	r3, r7, r7, asl #5	@, tmp151, j, j,
	mov	r4, #0	@ i,
	add	r5, r8, r3, asl #2	@, tmp153, pMvcCtx, tmp151,
	add	r5, r5, #256	@ ivtmp.3657, tmp153,
.L1107:
	ldr	ip, [r5], #4	@ tmp144, <variable>.pListX
	mov	r3, r4	@, i
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC20	@,
	mov	r2, r7	@, j
	movt	r1, #:upper16:.LC20	@,
	ldr	ip, [ip, #4]	@ D.42191, <variable>.frame_store
	add	r4, r4, #1	@ i, i,
	ldr	lr, [ip, #20]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.frame_num,
	ldr	ip, [ip, #32]	@ <variable>.poc, <variable>.poc
	str	ip, [sp, #4]	@ <variable>.poc,
	bl	dprint_vfmw	@
	ldr	r0, [r6, #0]	@ tmp147, <variable>.CurrSlice.listXsize
	cmp	r0, r4	@ tmp147, i
	bhi	.L1107	@,
.L1108:
	add	r7, r7, #1	@ j, j,
	add	r6, r6, #4	@ ivtmp.3665, ivtmp.3665,
	cmp	r7, #2	@ j,
	bne	.L1106	@,
.L1109:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
	.fnend
	.size	MVC_DumpList, .-MVC_DumpList
	.align	2
	.global	MVC_DumpDPB
	.type	MVC_DumpDPB, %function
MVC_DumpDPB:
	.fnstart
.LFB1573:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:g_PrintEnable	@ tmp144,
	movt	r1, #:upper16:g_PrintEnable	@ tmp144,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #16384	@ g_PrintEnable,
	beq	.L1117	@,
	movw	r7, #:lower16:11123116	@ tmp147,
	movt	r7, #:upper16:11123116	@ tmp147,
	ldr	r0, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	beq	.L1113	@,
	movw	r6, #:lower16:11122920	@ ivtmp.3711,
	movt	r6, #:upper16:11122920	@ ivtmp.3711,
	add	r6, r5, r6	@ ivtmp.3711, pMvcCtx, ivtmp.3711
	mov	r4, #0	@ i,
.L1114:
	ldr	ip, [r6], #4	@ D.40438, <variable>.DPB.fs
	mov	r2, r4	@, i
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC21	@,
	movt	r1, #:upper16:.LC21	@,
	add	r4, r4, #1	@ i, i,
	ldr	lr, [ip, #32]	@ <variable>.poc, <variable>.poc
	ldr	r3, [ip, #20]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.poc,
	ldrb	ip, [ip, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	str	ip, [sp, #4]	@ <variable>.is_reference,
	bl	dprint_vfmw	@
	ldr	r2, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, r4	@ <variable>.DPB.used_size, i
	bhi	.L1114	@,
.L1113:
	movw	r7, #:lower16:11123120	@ tmp155,
	movt	r7, #:upper16:11123120	@ tmp155,
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC22	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1115	@,
	movw	r4, #:lower16:11122984	@ ivtmp.3706,
	movt	r4, #:upper16:11122984	@ ivtmp.3706,
	add	r6, r5, r4	@ ivtmp.3706, pMvcCtx, ivtmp.3706
	mov	r4, #0	@ i.3716,
.L1116:
	ldr	ip, [r6, #0]	@ D.40446, <variable>.DPB.fs_ref
	mov	r2, r4	@, i.3716
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC23	@,
	movt	r1, #:upper16:.LC23	@,
	ldr	lr, [ip, #32]	@ <variable>.poc, <variable>.poc
	ldr	r3, [ip, #20]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.poc,
	ldrb	lr, [ip, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	str	lr, [sp, #4]	@ <variable>.is_reference,
	bl	dprint_vfmw	@
	ldr	ip, [r6], #4	@ tmp161, <variable>.DPB.fs_ref
	mov	r2, r4	@, i.3716
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC24	@,
	movt	r1, #:upper16:.LC24	@,
	add	r4, r4, #1	@ i.3716, i.3716,
	ldr	r3, [ip, #616]	@, <variable>.frame.poc
	bl	dprint_vfmw	@
	ldr	r1, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r4	@ <variable>.DPB.ref_frames_in_buffer, i.3716
	bhi	.L1116	@,
.L1115:
	movw	r1, #:lower16:.LC22	@,
	mov	r0, #14	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
.L1117:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
	.fnend
	.size	MVC_DumpDPB, .-MVC_DumpDPB
	.align	2
	.global	MVC_IsRefListWrong
	.type	MVC_IsRefListWrong, %function
MVC_IsRefListWrong:
	.fnstart
.LFB1678:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11117208	@ tmp143,
	movt	r8, #:upper16:11117208	@ tmp143,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1121	@,
	mov	r7, r0	@ ivtmp.3763, pMvcCtx
	mov	r5, r0	@ ivtmp.3770, pMvcCtx
	mov	r6, #0	@ i.3765,
	b	.L1123	@
.L1130:
	ldr	ip, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	ip, #0	@ <variable>.pstDecodeFs,
	beq	.L1122	@,
	ldr	r3, [r4, r8]	@ temp.3764, <variable>.CurrSlice.listXsize
	cmp	r3, r6	@ temp.3764, i.3765
	bls	.L1129	@,
.L1123:
	ldr	r1, [r5, #256]	@ tmp146, <variable>.pListX
	add	r6, r6, #1	@ i.3765, i.3765,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3770, ivtmp.3770,
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrsb	r1, [r2, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	bne	.L1130	@,
.L1122:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1121:
	mov	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1129:
	cmp	r3, #0	@ temp.3764,
	beq	.L1121	@,
	movw	r6, #:lower16:11117212	@ tmp151,
	movt	r6, #:upper16:11117212	@ tmp151,
	ldr	r0, [r4, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1121	@,
	mov	r5, #0	@ i,
	b	.L1124	@
.L1131:
	ldr	r2, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r2, #0	@ <variable>.pstDecodeFs,
	beq	.L1122	@,
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r5	@ <variable>.CurrSlice.listXsize, i
	bls	.L1121	@,
.L1124:
	ldr	r3, [r7, #388]	@ tmp154, <variable>.pListX
	add	r5, r5, #1	@ i, i,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	add	r7, r7, #4	@ ivtmp.3763, ivtmp.3763,
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs.3768
	bne	.L1131	@,
	b	.L1122	@
	.fnend
	.size	MVC_IsRefListWrong, .-MVC_IsRefListWrong
	.align	2
	.global	MVC_WriteSliceMsg
	.type	MVC_WriteSliceMsg, %function
MVC_WriteSliceMsg:
	.fnstart
.LFB1630:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, #64]	@, <variable>.SliceParaNum
	movw	r2, #4060	@ tmp197,
	add	r3, r0, #1	@ D.43877,,
	str	r0, [fp, #-52]	@, %sfp
	ldr	r4, [r6, #32]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	ldr	r5, [r6, #544]	@ D.43878, <variable>.DecSlicePara
	sub	r1, r4, #1	@ tmp198, <variable>.MaxSliceNum,
	str	r3, [r6, #64]	@ D.43877, <variable>.SliceParaNum
	cmp	r0, r1	@, tmp198
	mul	r8, r2, r0	@ tmp196, tmp197,
	movcs	r3, #0	@ tmp203,
	mlacc	r3, r2, r3, r5	@ tmp202, tmp197, D.43877, D.43878
	add	r7, r5, r8	@ pCurrSlicePara, D.43878, tmp196
	str	r3, [r7, #4056]	@ tmp203, <variable>.pNextSlice
	ldr	r1, [r6, #232]	@ D.43889, <variable>.pCurrNal
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ i, <variable>.nal_used_segment
	ldr	r0, [r1, #68]	@ i.4083, <variable>.nal_segment
	cmp	r3, #1	@ i,
	cmpls	r3, r0	@, i, i.4083
	bcs	.L1135	@,
	add	sl, r3, #4	@ tmp211, i,
	add	r2, r7, sl, asl #2	@, ivtmp.3972, pCurrSlicePara, tmp211,
.L1136:
	rsb	r0, r3, r3, asl #3	@, tmp216, i, i,
	add	r3, r3, #1	@ i, i,
	mov	r4, r0, asl #2	@ tmp217, tmp216,
	add	r1, r4, r1	@ tmp218, tmp217, D.43889
	ldr	ip, [r1, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	ip, [r2, #0]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	sl, [r6, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r1, r4, sl	@ tmp227, tmp217, <variable>.pCurrNal
	ldr	ip, [r1, #20]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	str	ip, [r2, #-8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	cmp	r3, #1	@ i,
	movhi	ip, #0	@, tmp245
	movls	ip, #1	@, tmp245
	ldr	sl, [r6, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r0, r4, sl	@ tmp236, tmp217, <variable>.pCurrNal
	ldr	r1, [r0, #28]	@ <variable>.bytespos, <variable>.bytespos
	str	r1, [r2, #8]	@ <variable>.bytespos, <variable>.bytespos
	add	r2, r2, #4	@ ivtmp.3972, ivtmp.3972,
	ldr	r1, [r6, #232]	@ D.43889, <variable>.pCurrNal
	ldr	r0, [r1, #68]	@ i.4083, <variable>.nal_segment
	cmp	r0, r3	@ i.4083, i
	movls	ip, #0	@, tmp245,
	cmp	ip, #0	@ tmp245,
	bne	.L1136	@,
.L1135:
	cmp	r0, #1	@ i.4083,
	bhi	.L1137	@,
	add	r3, r0, #4	@ tmp246, i.4083,
	add	r1, r7, #24	@ D.51929, pCurrSlicePara,
	mov	r2, #0	@ tmp587,
	add	r4, r7, r3, asl #2	@, ivtmp.3965, pCurrSlicePara, tmp246,
	add	r3, r4, #4	@ ivtmp.3965, ivtmp.3965,
	rsb	ip, r4, r1	@ tmp600, ivtmp.3965, D.51929
	cmp	r3, r1	@ ivtmp.3965, D.51929
	sub	sl, ip, #4	@ tmp601, tmp600,
	ubfx	ip, sl, #2, #1	@ tmp602, tmp601,,
	str	r2, [r4, #0]	@ tmp587, <variable>.bitsoffset
	str	r2, [r4, #-8]	@ tmp587, <variable>.valid_bitlen
	str	r2, [r4, #8]	@ tmp587, <variable>.bytespos
	beq	.L1137	@,
	cmp	ip, #0	@ tmp602,
	beq	.L1138	@,
	str	r2, [r3, #0]	@ tmp587, <variable>.bitsoffset
	str	r2, [r3, #-8]	@ tmp587, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp587, <variable>.bytespos
	add	r3, r3, #4	@ ivtmp.3965, ivtmp.3965,
	cmp	r3, r1	@ ivtmp.3965, D.51929
	beq	.L1137	@,
.L1138:
	add	r0, r3, #4	@ tmp603, ivtmp.3965,
	str	r2, [r3, #-8]	@ tmp587, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp587, <variable>.bytespos
	str	r2, [r3, #4]	@ tmp587, <variable>.bitsoffset
	str	r2, [r3, #0]	@ tmp587, <variable>.bitsoffset
	add	r3, r0, #4	@ ivtmp.3965, tmp603,
	cmp	r3, r1	@ ivtmp.3965, D.51929
	str	r2, [r0, #-8]	@ tmp587, <variable>.valid_bitlen
	str	r2, [r0, #8]	@ tmp587, <variable>.bytespos
	bne	.L1138	@,
.L1137:
	movw	r0, #:lower16:11151969	@ tmp251,
	movt	r0, #:upper16:11151969	@ tmp251,
	movw	ip, #:lower16:11113832	@ tmp254,
	movw	sl, #:lower16:11118776	@ tmp255,
	ldrb	r1, [r6, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	movt	ip, #:upper16:11113832	@ tmp254,
	movt	sl, #:upper16:11118776	@ tmp255,
	ldr	r3, [fp, #-52]	@, %sfp
	strb	r1, [r7, #1]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	cmp	r3, #0	@,
	ldr	r2, [r6, ip]	@ <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrPPS.pic_init_qp_minus26
	ldr	r4, [r6, sl]	@ <variable>.CurrSlice.slice_qp_delta, <variable>.CurrSlice.slice_qp_delta
	add	r1, r2, r4	@ tmp256, <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrSlice.slice_qp_delta
	add	r3, r1, #26	@ D.43903, tmp256,
	str	r3, [r7, #32]	@ D.43903, <variable>.SliceQPy
	bne	.L1139	@,
	movw	r2, #:lower16:11152504	@ tmp260,
	movt	r2, #:upper16:11152504	@ tmp260,
	ldr	ip, [r6, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r3, [ip, #628]	@ D.43903, <variable>.frame.MaxQp
	ldr	sl, [r6, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r4, [r7, #32]	@ <variable>.SliceQPy, <variable>.SliceQPy
	str	r4, [sl, #632]	@ <variable>.SliceQPy, <variable>.frame.MinQp
.L1140:
	movw	r3, #:lower16:11118772	@ tmp269,
	movt	r3, #:upper16:11118772	@ tmp269,
	movw	r2, #:lower16:11117224	@ tmp271,
	movt	r2, #:upper16:11117224	@ tmp271,
	ldr	sl, [r6, r3]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.CurrSlice.cabac_init_idc
	movw	r4, #:lower16:11117220	@ tmp273,
	movt	r4, #:upper16:11117220	@ tmp273,
	movw	r3, #:lower16:11117160	@ tmp275,
	movt	r3, #:upper16:11117160	@ tmp275,
	movw	ip, #:lower16:11117216	@ tmp278,
	str	sl, [r7, #36]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.cabac_init_idc
	movt	ip, #:upper16:11117216	@ tmp278,
	ldr	sl, [r6, r2]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	movw	r0, #:lower16:11117166	@ tmp280,
	movt	r0, #:upper16:11117166	@ tmp280,
	movw	r1, #:lower16:11117208	@ tmp286,
	movt	r1, #:upper16:11117208	@ tmp286,
	movw	r2, #:lower16:11117212	@ tmp288,
	str	sl, [r7, #40]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movt	r2, #:upper16:11117212	@ tmp288,
	ldr	r4, [r6, r4]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	str	r4, [r7, #44]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldrb	r4, [r6, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	strb	r4, [r5, r8]	@ <variable>.CurrSlice.slice_type, <variable>.slice_type
	ldr	ip, [r6, ip]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	str	ip, [r7, #48]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.first_mb_in_slice
	ldrb	r0, [r6, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	strb	r0, [r7, #2]	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.direct_spatial_mv_pred_flag
	ldr	ip, [r6, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldrb	r0, [ip, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	strb	r0, [r7, #3]	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldr	ip, [r6, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	ip, [r7, #52]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldr	r2, [r6, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	r2, [r7, #56]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldrb	r3, [r6, r3]	@ zero_extendqisi2	@ temp.3985, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ temp.3985,
	beq	.L1224	@,
	cmp	r3, #0	@ temp.3985,
	movweq	r3, #:lower16:11113786	@ tmp294,
	movteq	r3, #:upper16:11113786	@ tmp294,
	movne	r3, #0	@ tmp297,
	ldreqb	r3, [r6, r3]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_pred_flag, <variable>.CurrPPS.weighted_pred_flag
	strb	r3, [r7, #4]	@ tmp297, <variable>.weight_flag
.L1142:
	movw	r2, #:lower16:11113836	@ tmp299,
	movt	r2, #:upper16:11113836	@ tmp299,
	movw	r3, #:lower16:11113840	@ tmp301,
	movt	r3, #:upper16:11113840	@ tmp301,
	ldr	ip, [r6, r2]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.CurrPPS.chroma_qp_index_offset
	movw	r0, #:lower16:11118784	@ tmp303,
	movt	r0, #:upper16:11118784	@ tmp303,
	movw	r1, #:lower16:11118788	@ tmp305,
	movt	r1, #:upper16:11118788	@ tmp305,
	movw	r2, #:lower16:11118780	@ tmp307,
	str	ip, [r7, #60]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movt	r2, #:upper16:11118780	@ tmp307,
	ldr	ip, [r6, r3]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.CurrPPS.second_chroma_qp_index_offset
	movw	r3, #:lower16:11117160	@ tmp309,
	movt	r3, #:upper16:11117160	@ tmp309,
	str	ip, [r7, #64]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r0, [r6, r0]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r7, #68]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.slice_alpha_c0_offset_div2
	ldr	r1, [r6, r1]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.CurrSlice.slice_beta_offset_div2
	str	r1, [r7, #72]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.slice_beta_offset_div2
	ldr	r2, [r6, r2]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r2, [r7, #76]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.disable_deblocking_filter_idc
	ldrb	ip, [r6, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1144	@,
	movw	r1, #:lower16:11117208	@ tmp311,
	movt	r1, #:upper16:11117208	@ tmp311,
	ldr	r4, [r6, r1]	@ temp.4149, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4149,
	beq	.L1145	@,
	ldr	r3, [r6, #256]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4084, <variable>.frame_store
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r0, #0	@ <variable>.non_existing,
	beq	.L1146	@,
	tst	r4, #1	@ temp.4149,
	mov	r2, r6	@ ivtmp.3961, pMvcCtx
	mov	r0, #0	@ i.3988,
	bne	.L1148	@,
	ldr	r3, [r6, #260]	@ tmp622, <variable>.pListX
	mov	r0, #1	@ i.3988,
	add	r2, r6, #4	@ ivtmp.3961, pMvcCtx,
	ldr	r3, [r3, #4]	@ temp.4084, <variable>.frame_store
	ldrb	r1, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r1, #0	@ <variable>.non_existing,
	bne	.L1148	@,
.L1146:
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLogicFs,
	beq	.L1225	@,
	ldr	r4, [r3, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	lr, [r4, #4]	@, <variable>.PhyFsID
	str	lr, [fp, #-48]	@, %sfp
	b	.L1151	@
.L1152:
	ldr	r3, [r2, #260]	@ tmp314, <variable>.pListX
	add	r2, r1, #4	@ ivtmp.3961, tmp598,
	ldr	r3, [r3, #4]	@ temp.4084, <variable>.frame_store
	ldrb	ip, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1146	@,
	ldr	r3, [r1, #260]	@ tmp624, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4084, <variable>.frame_store
	ldrb	ip, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1146	@,
.L1148:
	add	ip, r0, #1	@ tmp597, i.3988,
	add	r1, r2, #4	@ tmp598, ivtmp.3961,
	cmp	ip, r4	@ tmp597, temp.4149
	add	r0, ip, #1	@ i.3988, tmp597,
	bcc	.L1152	@,
.L1145:
	mov	r2, #0	@,
	str	r2, [fp, #-48]	@, %sfp
.L1151:
	movw	r1, #:lower16:11117212	@ tmp323,
	movt	r1, #:upper16:11117212	@ tmp323,
	ldr	r4, [r6, r1]	@ temp.4146, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4146,
	beq	.L1153	@,
	ldr	r3, [r6, #388]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r3, #4]	@ D.43953, <variable>.frame_store
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r0, #0	@ <variable>.non_existing,
	beq	.L1154	@,
	tst	r4, #1	@ temp.4146,
	mov	r2, r6	@ ivtmp.3956, pMvcCtx
	mov	r0, #0	@ i.3994,
	bne	.L1156	@,
	ldr	r3, [r6, #392]	@ tmp618, <variable>.pListX
	mov	r0, #1	@ i.3994,
	add	r2, r6, #4	@ ivtmp.3956, pMvcCtx,
	ldr	r3, [r3, #4]	@ D.43953, <variable>.frame_store
	ldrb	ip, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	bne	.L1156	@,
	b	.L1154	@
.L1159:
	ldr	r3, [r2, #392]	@ tmp326, <variable>.pListX
	add	r2, r1, #4	@ ivtmp.3956, tmp592,
	ldr	r3, [r3, #4]	@ D.43953, <variable>.frame_store
	ldrb	ip, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1154	@,
	ldr	ip, [r1, #392]	@ tmp620, <variable>.pListX
	ldr	r3, [ip, #4]	@ D.43953, <variable>.frame_store
	ldrb	r1, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r1, #0	@ <variable>.non_existing,
	beq	.L1154	@,
.L1156:
	add	ip, r0, #1	@ tmp593, i.3994,
	add	r1, r2, #4	@ tmp592, ivtmp.3956,
	cmp	ip, r4	@ tmp593, temp.4146
	add	r0, ip, #1	@ i.3994, tmp593,
	bcc	.L1159	@,
.L1153:
	mov	r2, #0	@,
	str	r2, [fp, #-56]	@, %sfp
.L1158:
	movw	r1, #:lower16:11151963	@ tmp335,
	movt	r1, #:upper16:11151963	@ tmp335,
	ldrb	r8, [r6, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r8, #0	@ <variable>.CurrPic.structure,
	beq	.L1160	@,
	movw	sl, #:lower16:11117208	@ tmp337,
	movt	sl, #:upper16:11117208	@ tmp337,
	ldr	r0, [r6, sl]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	movne	r4, r6	@ ivtmp.3936, pMvcCtx
	movne	r5, r7	@ ivtmp.3939, pCurrSlicePara
	movne	r8, #0	@ i.4092,
	bne	.L1178	@,
	b	.L1162	@
.L1176:
	strb	r3, [r5, #1630]	@ temp.4082, <variable>.btm_structure
	add	r8, r8, #1	@ i.4092, i.4092,
	ldr	r1, [r4, #256]	@ tmp463, <variable>.pListX
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r5, #1631]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r2, [r4, #256]	@ tmp466, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3936, ivtmp.3936,
	ldr	lr, [r2, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r5, #1656]	@ <variable>.poc, <variable>.btm_poc
	add	r5, r5, #36	@ ivtmp.3939, ivtmp.3939,
	ldr	r3, [r6, sl]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, r8	@ <variable>.CurrSlice.listXsize, i.4092
	bls	.L1162	@,
.L1178:
	ldr	r2, [r4, #256]	@ tmp427, <variable>.pListX
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	ip, [r4, #256]	@ tmp430, <variable>.pListX
	ldr	r3, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r3, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r1, [r5, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r2, [r4, #256]	@ tmp433, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r3, [r5, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	r1, [r4, #256]	@ tmp437, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [fp, #-48]	@ ExistImgIdc_0.3976, %sfp
	beq	.L1174	@,
	cmp	r0, #0	@ pstLogicFs.4059,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0.3976, <variable>.PhyFsID
.L1174:
	str	r0, [r5, #1640]	@ ExistImgIdc_0.3976, <variable>.img_idc
	ldr	r2, [r4, #256]	@ tmp441, <variable>.pListX
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	str	ip, [r5, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r3, [r4, #256]	@ tmp444, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r1, #32]	@ <variable>.poc, <variable>.poc
	str	r0, [r5, #1632]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r4, #256]	@ tmp447, <variable>.pListX
	ldrb	lr, [r2, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r5, #1624]	@ <variable>.structure, <variable>.list_structure
	ldr	ip, [r4, #256]	@ tmp450, <variable>.pListX
	ldr	r3, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r3, #600]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r1, [r5, #1626]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #256]	@ tmp454, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.4082, <variable>.structure
	cmp	r3, #1	@ temp.4082,
	bne	.L1176	@,
	strb	r3, [r5, #1628]	@ temp.4082, <variable>.top_structure
	add	r8, r8, #1	@ i.4092, i.4092,
	ldr	ip, [r4, #256]	@ tmp457, <variable>.pListX
	ldrb	r3, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r3, [r5, #1629]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r1, [r4, #256]	@ tmp460, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3936, ivtmp.3936,
	ldr	r0, [r1, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r5, #1652]	@ <variable>.poc, <variable>.top_poc
	add	r5, r5, #36	@ ivtmp.3939, ivtmp.3939,
	ldr	r3, [r6, sl]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, r8	@ <variable>.CurrSlice.listXsize, i.4092
	bhi	.L1178	@,
.L1162:
	movw	ip, #:lower16:11117160	@ tmp470,
	movt	ip, #:upper16:11117160	@ tmp470,
	ldrb	r4, [r6, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r4, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1226	@,
.L1168:
	mov	r1, #0	@ ivtmp.3872,
.L1185:
	add	ip, r6, r1	@ tmp520, pMvcCtx, ivtmp.3872
	movw	r4, #:lower16:11123348	@ tmp521,
	movt	r4, #:upper16:11123348	@ tmp521,
	add	r0, r1, #4	@ tmp588, ivtmp.3872,
	add	r2, ip, r4	@ tmp521, tmp520, tmp521
	movw	r3, #:lower16:11123348	@ tmp616,
	add	r4, r6, r0	@ tmp614, pMvcCtx, tmp588
	movt	r3, #:upper16:11123348	@ tmp616,
	ldr	ip, [r2, #0]	@ tmp523, <variable>.APC.RefIdx
	add	r3, r4, r3	@ tmp616, tmp614, tmp616
	add	r2, r7, r1	@ tmp519, pCurrSlicePara, ivtmp.3872
	add	r1, r0, #4	@ ivtmp.3872, tmp588,
	cmp	r1, #128	@ ivtmp.3872,
	add	r0, r7, r0	@ tmp613, pCurrSlicePara, tmp588
	str	ip, [r2, #3928]	@ tmp523, <variable>.Apc2RefIdx
	ldr	r2, [r3, #0]	@ tmp617, <variable>.APC.RefIdx
	str	r2, [r0, #3928]	@ tmp617, <variable>.Apc2RefIdx
	bne	.L1185	@,
	movw	r0, #:lower16:11113786	@ tmp524,
	movt	r0, #:upper16:11113786	@ tmp524,
	movw	ip, #:lower16:11113828	@ tmp527,
	movt	ip, #:upper16:11113828	@ tmp527,
	ldrb	r1, [r6, r0]	@ zero_extendqisi2	@ temp.4133, <variable>.CurrPPS.weighted_pred_flag
	movw	r2, #:lower16:11154084	@ tmp525,
	ldr	r0, [r6, ip]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	movt	r2, #:upper16:11154084	@ tmp525,
	movw	r3, #:lower16:11154088	@ tmp526,
	cmp	r1, #0	@ temp.4133,
	movt	r3, #:upper16:11154088	@ tmp526,
	str	r1, [r6, r2]	@ temp.4133, <variable>.DecPicPara.weighted_pred_flag
	str	r0, [r6, r3]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.DecPicPara.weighted_bipred_idc
	beq	.L1186	@,
	movw	r1, #:lower16:11117160	@ tmp529,
	movt	r1, #:upper16:11117160	@ tmp529,
	ldrb	r3, [r6, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1186	@,
.L1187:
	movw	r0, #:lower16:11117228	@ tmp535,
	movt	r0, #:upper16:11117228	@ tmp535,
	movw	r2, #:lower16:11117232	@ tmp537,
	movt	r2, #:upper16:11117232	@ tmp537,
	ldr	r1, [r6, r0]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.CurrSlice.luma_log2_weight_denom
	movw	r4, #:lower16:11117236	@ ivtmp.3851,
	movt	r4, #:upper16:11117236	@ ivtmp.3851,
	mov	r0, r7	@ ivtmp.3855, pCurrSlicePara
	add	r3, r6, r4	@ ivtmp.3851, pMvcCtx, ivtmp.3851
	movw	r4, #:lower16:11117220	@ tmp575,
	str	r1, [r7, #80]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.luma_log2_weight_denom
	movt	r4, #:upper16:11117220	@ tmp575,
	ldr	ip, [r6, r2]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	mov	r1, #0	@ i.4124,
	mov	r2, r7	@ ivtmp.4143, ivtmp.3855
	str	ip, [r7, #84]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.chroma_log2_weight_denom
.L1188:
	ldr	ip, [r3, #0]	@ tmp540, <variable>.CurrSlice.wp_weight_l0_y
	add	r1, r1, #1	@ i.4124, i.4124,
	str	ip, [r2, #88]	@ tmp540, <variable>.wp_weight_l0_y
	ldr	ip, [r3, #128]	@ tmp541, <variable>.CurrSlice.wp_weight_l0_u
	str	ip, [r2, #216]	@ tmp541, <variable>.wp_weight_l0_u
	ldr	ip, [r3, #256]	@ tmp542, <variable>.CurrSlice.wp_weight_l0_v
	str	ip, [r2, #344]	@ tmp542, <variable>.wp_weight_l0_v
	ldr	ip, [r3, #768]	@ tmp543, <variable>.CurrSlice.wp_offset_l0_y
	str	ip, [r2, #856]	@ tmp543, <variable>.wp_offset_l0_y
	ldr	ip, [r3, #896]	@ tmp544, <variable>.CurrSlice.wp_offset_l0_u
	str	ip, [r2, #984]	@ tmp544, <variable>.wp_offset_l0_u
	ldr	ip, [r3, #1024]	@ tmp545, <variable>.CurrSlice.wp_offset_l0_v
	add	r3, r3, #4	@ ivtmp.3851, ivtmp.3851,
	str	ip, [r2, #1112]	@ tmp545, <variable>.wp_offset_l0_v
	add	r2, r2, #4	@ ivtmp.4143, ivtmp.4143,
	ldr	ip, [r6, r4]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	ip, r1	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i.4124
	bcs	.L1188	@,
	movw	r2, #:lower16:11117160	@ tmp548,
	movt	r2, #:upper16:11117160	@ tmp548,
	ldrb	r3, [r6, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1227	@,
.L1144:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:2788312	@ tmp559,
	movt	r1, #:upper16:2788312	@ tmp559,
	ldr	ip, [r6, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r2, r0, r1	@ tmp559,, tmp559
	mov	r0, #0	@ tmp566,
	add	r3, r6, r2, asl #2	@, tmp563, pMvcCtx, tmp559,
	str	ip, [r3, #4]	@ <variable>.pCurrNal, <variable>.pSliceNal
	str	r0, [r6, #232]	@ tmp566, <variable>.pCurrNal
.L1190:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1139:
	movw	sl, #:lower16:11152504	@ tmp264,
	movt	sl, #:upper16:11152504	@ tmp264,
	ldr	r4, [r6, sl]	@ temp.3983, <variable>.CurrPic.frame_store
	ldr	r0, [r4, #628]	@ <variable>.frame.MaxQp, <variable>.frame.MaxQp
	ldr	r1, [r4, #632]	@ <variable>.frame.MinQp, <variable>.frame.MinQp
	cmp	r0, r3	@ <variable>.frame.MaxQp, D.43903
	strge	r0, [r4, #628]	@, <variable>.frame.MaxQp, <variable>.frame.MaxQp
	strlt	r3, [r4, #628]	@, D.43903, <variable>.frame.MaxQp
	cmp	r1, r3	@ <variable>.frame.MinQp, D.43903
	strle	r1, [r4, #632]	@, <variable>.frame.MinQp, <variable>.frame.MinQp
	strgt	r3, [r4, #632]	@, D.43903, <variable>.frame.MinQp
	b	.L1140	@
.L1186:
	movw	ip, #:lower16:11113828	@ tmp531,
	movt	ip, #:upper16:11113828	@ tmp531,
	ldr	r2, [r6, ip]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	cmp	r2, #1	@ <variable>.CurrPPS.weighted_bipred_idc,
	bne	.L1144	@,
	movw	r3, #:lower16:11117160	@ tmp533,
	movt	r3, #:upper16:11117160	@ tmp533,
	ldrb	r0, [r6, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L1144	@,
	b	.L1187	@
.L1160:
	movw	r9, #:lower16:11117208	@ tmp339,
	movt	r9, #:upper16:11117208	@ tmp339,
	ldr	r4, [r6, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1163	@,
	mov	r5, r6	@ ivtmp.3898, pMvcCtx
	mov	r4, r7	@ ivtmp.3901, pCurrSlicePara
	mov	sl, r8	@ tmp581, i.4022
.L1167:
	ldr	r3, [r5, #256]	@ tmp342, <variable>.pListX
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r1, [r5, #256]	@ tmp345, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r4, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r5, #256]	@ tmp348, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r2, [r4, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r5, #256]	@ tmp352, <variable>.pListX
	ldr	r3, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [fp, #-48]	@ ExistImgIdc_0, %sfp
	beq	.L1165	@,
	cmp	r0, #0	@ pstLogicFs.4000,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0, <variable>.PhyFsID
.L1165:
	str	r0, [r4, #1640]	@ ExistImgIdc_0, <variable>.img_idc
	add	r8, r8, #1	@ i.4022, i.4022,
	ldr	ip, [r5, #256]	@ tmp356, <variable>.pListX
	ldr	r0, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r0, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r3, [r4, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	lr, [r5, #256]	@ tmp359, <variable>.pListX
	ldr	r1, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r1, #32]	@ <variable>.poc, <variable>.poc
	str	r2, [r4, #1632]	@ <variable>.poc, <variable>.poc
	ldr	ip, [r5, #256]	@ tmp362, <variable>.pListX
	ldrb	r0, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r4, #1627]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r3, [r5, #256]	@ tmp365, <variable>.pListX
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r4, #1626]	@ <variable>.structure, <variable>.frame_structure
	ldr	r1, [r5, #256]	@ tmp368, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	str	ip, [r4, #1648]	@ <variable>.frame.poc, <variable>.frame_poc
	ldr	r0, [r5, #256]	@ tmp371, <variable>.pListX
	ldr	r3, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r3, #652]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	lr, [r4, #1652]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	r1, [r5, #256]	@ tmp374, <variable>.pListX
	add	r5, r5, #4	@ ivtmp.3898, ivtmp.3898,
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #688]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	sl, [r4, #1624]	@ tmp581, <variable>.list_structure
	str	ip, [r4, #1656]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3901, ivtmp.3901,
	ldr	r0, [r6, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.4022
	bhi	.L1167	@,
.L1163:
	movw	r2, #:lower16:11117160	@ tmp381,
	movt	r2, #:upper16:11117160	@ tmp381,
	ldrb	r4, [r6, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r4, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L1168	@,
	movw	r9, #:lower16:11117212	@ tmp383,
	movt	r9, #:upper16:11117212	@ tmp383,
	ldr	r1, [r6, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1168	@,
	add	r5, r7, #1632	@ ivtmp.3885, pCurrSlicePara,
	mov	r8, #0	@ i.4052,
	add	r4, r5, #8	@ ivtmp.3885, ivtmp.3885,
	mov	sl, r8	@ tmp578, i.4052
	mov	r5, r6	@ ivtmp.3880, pMvcCtx
.L1172:
	ldr	r3, [r5, #388]	@ tmp387, <variable>.pListX
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r1, [r5, #388]	@ tmp390, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r4, #1148]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r5, #388]	@ tmp393, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r2, [r4, #1137]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r5, #388]	@ tmp397, <variable>.pListX
	ldr	r3, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [fp, #-56]	@ ExistImgIdc_1, %sfp
	beq	.L1170	@,
	cmp	r0, #0	@ pstLogicFs.4030,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1, <variable>.PhyFsID
.L1170:
	str	r0, [r4, #0]	@ ExistImgIdc_1, <variable>.img_idc
	add	r8, r8, #1	@ i.4052, i.4052,
	ldr	ip, [r5, #388]	@ tmp401, <variable>.pListX
	ldr	r0, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r0, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r3, [r4, #1156]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	lr, [r5, #388]	@ tmp404, <variable>.pListX
	ldr	r1, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r1, #32]	@ <variable>.poc, <variable>.poc
	str	r2, [r4, #1144]	@ <variable>.poc, <variable>.poc
	ldr	ip, [r5, #388]	@ tmp407, <variable>.pListX
	ldrb	r0, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r4, #1139]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r3, [r5, #388]	@ tmp410, <variable>.pListX
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r4, #1138]	@ <variable>.structure, <variable>.frame_structure
	ldr	r1, [r5, #388]	@ tmp413, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	str	ip, [r4, #1160]	@ <variable>.frame.poc, <variable>.frame_poc
	ldr	r0, [r5, #388]	@ tmp416, <variable>.pListX
	ldr	r3, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r3, #652]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	lr, [r4, #1164]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	r1, [r5, #388]	@ tmp419, <variable>.pListX
	add	r5, r5, #4	@ ivtmp.3880, ivtmp.3880,
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #688]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	sl, [r4, #1136]	@ tmp578, <variable>.list_structure
	str	ip, [r4, #1168]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3885, ivtmp.3885,
	ldr	r0, [r6, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.4052
	bhi	.L1172	@,
	b	.L1168	@
.L1154:
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLogicFs.3990,
	beq	.L1228	@,
	ldr	lr, [r3, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r8, [lr, #4]	@, <variable>.PhyFsID
	str	r8, [fp, #-56]	@, %sfp
	b	.L1158	@
.L1224:
	movw	r0, #:lower16:11113828	@ tmp291,
	movt	r0, #:upper16:11113828	@ tmp291,
	ldr	r1, [r6, r0]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	strb	r1, [r7, #4]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.weight_flag
	b	.L1142	@
.L1226:
	movw	sl, #:lower16:11117212	@ tmp472,
	movt	sl, #:upper16:11117212	@ tmp472,
	ldr	r2, [r6, sl]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1168	@,
	add	r8, r7, #2800	@ ivtmp.3923, pCurrSlicePara,
	mov	r4, r6	@ ivtmp.3916, pMvcCtx
	add	r5, r8, #4	@ ivtmp.3923, ivtmp.3923,
	mov	r8, #0	@ i.4132,
	b	.L1184	@
.L1182:
	strb	r3, [r5, #-22]	@ temp.4123, <variable>.btm_structure
	ldr	r3, [r4, #388]	@ tmp512, <variable>.pListX
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r5, #-21]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r1, [r4, #388]	@ tmp515, <variable>.pListX
	ldr	lr, [r1, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r5, #4]	@ <variable>.poc, <variable>.btm_poc
.L1183:
	ldr	ip, [r6, sl]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r8, r8, #1	@ i.4132, i.4132,
	add	r4, r4, #4	@ ivtmp.3916, ivtmp.3916,
	add	r5, r5, #36	@ ivtmp.3923, ivtmp.3923,
	cmp	ip, r8	@ <variable>.CurrSlice.listXsize, i.4132
	bls	.L1168	@,
.L1184:
	ldr	r1, [r4, #388]	@ tmp476, <variable>.pListX
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r2, [r4, #388]	@ tmp479, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [ip, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r3, [r5, #-16]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r4, #388]	@ tmp482, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	ip, [r5, #-27]	@ <variable>.is_used, <variable>.is_used
	ldr	r3, [r4, #388]	@ tmp486, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [fp, #-56]	@ ExistImgIdc_1.3977, %sfp
	beq	.L1180	@,
	cmp	r0, #0	@ pstLogicFs.4100,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1.3977, <variable>.PhyFsID
.L1180:
	str	r0, [r5, #-12]	@ ExistImgIdc_1.3977, <variable>.img_idc
	ldr	r1, [r4, #388]	@ tmp490, <variable>.pListX
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r2, [r5, #-8]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	ip, [r4, #388]	@ tmp493, <variable>.pListX
	ldr	r3, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r3, #32]	@ <variable>.poc, <variable>.poc
	str	r0, [r5, #-20]	@ <variable>.poc, <variable>.poc
	ldr	r1, [r4, #388]	@ tmp496, <variable>.pListX
	ldrb	lr, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r5, #-28]	@ <variable>.structure, <variable>.list_structure
	ldr	r2, [r4, #388]	@ tmp499, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [ip, #600]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r3, [r5, #-26]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #388]	@ tmp503, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.4123, <variable>.structure
	cmp	r3, #1	@ temp.4123,
	bne	.L1182	@,
	strb	r3, [r5, #-24]	@ temp.4123, <variable>.top_structure
	ldr	r2, [r4, #388]	@ tmp506, <variable>.pListX
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r5, #-23]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r3, [r4, #388]	@ tmp509, <variable>.pListX
	ldr	r0, [r3, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r5, #0]	@ <variable>.poc, <variable>.top_poc
	b	.L1183	@
.L1227:
	movw	r1, #:lower16:11117620	@ ivtmp.3834,
	movt	r1, #:upper16:11117620	@ ivtmp.3834,
	movw	ip, #:lower16:11117224	@ tmp574,
	add	r3, r6, r1	@ ivtmp.3834, pMvcCtx, ivtmp.3834
	movt	ip, #:upper16:11117224	@ tmp574,
	mov	r2, #0	@ i.4141,
.L1189:
	ldr	r1, [r3, #0]	@ tmp551, <variable>.CurrSlice.wp_weight_l1_y
	add	r2, r2, #1	@ i.4141, i.4141,
	str	r1, [r0, #472]	@ tmp551, <variable>.wp_weight_l1_y
	ldr	r1, [r3, #128]	@ tmp552, <variable>.CurrSlice.wp_weight_l1_u
	str	r1, [r0, #600]	@ tmp552, <variable>.wp_weight_l1_u
	ldr	r1, [r3, #256]	@ tmp553, <variable>.CurrSlice.wp_weight_l1_v
	str	r1, [r0, #728]	@ tmp553, <variable>.wp_weight_l1_v
	ldr	r1, [r3, #768]	@ tmp554, <variable>.CurrSlice.wp_offset_l1_y
	str	r1, [r0, #1240]	@ tmp554, <variable>.wp_offset_l1_y
	ldr	r1, [r3, #896]	@ tmp555, <variable>.CurrSlice.wp_offset_l1_u
	str	r1, [r0, #1368]	@ tmp555, <variable>.wp_offset_l1_u
	ldr	r1, [r3, #1024]	@ tmp556, <variable>.CurrSlice.wp_offset_l1_v
	add	r3, r3, #4	@ ivtmp.3834, ivtmp.3834,
	str	r1, [r0, #1496]	@ tmp556, <variable>.wp_offset_l1_v
	add	r0, r0, #4	@ ivtmp.3855, ivtmp.3855,
	ldr	r1, [r6, ip]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r1, r2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.4141
	bcs	.L1189	@,
	b	.L1144	@
.L1225:
	movw	r1, #:lower16:.LC25	@,
	ldr	r2, .L1229	@,
	movt	r1, #:upper16:.LC25	@,
	movw	r3, #7631	@,
	bl	dprint_vfmw	@
	b	.L1190	@
.L1228:
	movw	r1, #:lower16:.LC25	@,
	ldr	r2, .L1229	@,
	movt	r1, #:upper16:.LC25	@,
	movw	r3, #7649	@,
	bl	dprint_vfmw	@
	b	.L1190	@
.L1230:
	.align	2
.L1229:
	.word	.LANCHOR0+216
	.fnend
	.size	MVC_WriteSliceMsg, .-MVC_WriteSliceMsg
	.align	2
	.global	MVC_GetAPC
	.type	MVC_GetAPC, %function
MVC_GetAPC:
	.fnstart
.LFB1567:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pFrameStore, pFrameStore
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	beq	.L1258	@,
	cmp	r2, #1	@ structure,
	beq	.L1235	@,
	cmp	r2, #2	@ structure,
	beq	.L1259	@,
	ldr	r7, [r5, #652]	@ toppoc, <variable>.top_field.poc
	ldr	r8, [r5, #688]	@ bottompoc, <variable>.bottom_field.poc
.L1237:
	movw	r3, #:lower16:11123340	@ tmp150,
	movt	r3, #:upper16:11123340	@ tmp150,
	ldr	r0, [r6, r3]	@ D.39950, <variable>.APC.size
	cmp	r0, #0	@ D.39950,
	beq	.L1238	@,
	movw	r1, #:lower16:11123132	@ tmp151,
	movt	r1, #:upper16:11123132	@ tmp151,
	ldrb	r4, [r6, r1]	@ zero_extendqisi2	@ <variable>.APC.is_used, <variable>.APC.is_used
	cmp	r4, #0	@ <variable>.APC.is_used,
	beq	.L1240	@,
	tst	r0, #1	@ D.39950,
	mov	r4, #0	@ i,
	bne	.L1241	@,
	movw	r4, #:lower16:11123133	@ tmp200,
	movt	r4, #:upper16:11123133	@ tmp200,
	add	r2, r6, r4	@ tmp200, pMvcCtx, tmp200
	mov	r4, #1	@ i,
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ tmp201, <variable>.APC.is_used
	cmp	r3, #0	@ tmp201,
	bne	.L1241	@,
	b	.L1240	@
.L1246:
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ tmp156, <variable>.APC.is_used
	cmp	ip, #0	@ tmp156,
	beq	.L1240	@,
	add	r4, r4, #1	@ i, i,
	add	r3, r6, r4	@ tmp202, pMvcCtx, i
	add	r1, r3, r2	@ tmp204, tmp202, tmp204
	ldrb	ip, [r1, #0]	@ zero_extendqisi2	@ tmp205, <variable>.APC.is_used
	cmp	ip, #0	@ tmp205,
	beq	.L1240	@,
.L1241:
	add	r4, r4, #1	@ i, i,
	movw	ip, #:lower16:11123132	@ tmp154,
	cmp	r4, r0	@ i, D.39950
	movt	ip, #:upper16:11123132	@ tmp154,
	add	r1, r6, r4	@ tmp153, pMvcCtx, i
	mov	r2, ip	@ tmp204, tmp154
	add	r3, r1, ip	@ tmp154, tmp153, tmp154
	bcc	.L1246	@,
.L1238:
	mvn	r0, #0	@ D.39918,
.L1233:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L1259:
	ldr	r7, [r5, #688]	@ toppoc, <variable>.bottom_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1237	@
.L1240:
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	ip, r0, #0	@ pstLogicFs,
	beq	.L1242	@,
	ldr	r0, [ip, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r0, #0	@ <variable>.pstDecodeFs,
	beq	.L1242	@,
	add	r2, r4, r6	@ tmp161, i, pMvcCtx
	movw	lr, #:lower16:11123128	@ tmp162,
	movt	lr, #:upper16:11123128	@ tmp162,
	mov	r1, #1	@ tmp163,
	add	r3, r2, lr	@ tmp162, tmp161, tmp162
	movw	r2, #:lower16:11123344	@ tmp185,
	movt	r2, #:upper16:11123344	@ tmp185,
	movw	r0, #:lower16:2780786	@ tmp165,
	strb	r1, [r3, #4]	@ tmp163, <variable>.APC.is_used
	movt	r0, #:upper16:2780786	@ tmp165,
	ldr	ip, [ip, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movw	lr, #:lower16:2780802	@ tmp173,
	movw	r3, #:lower16:2780818	@ tmp179,
	movt	lr, #:upper16:2780802	@ tmp173,
	movt	r3, #:upper16:2780818	@ tmp179,
	ldr	r2, [r6, r2]	@ D.39936, <variable>.APC.used_size
	add	r1, r4, lr	@ tmp173, i, tmp173
	add	r0, r4, r0	@ tmp165, i, tmp165
	add	lr, r4, r3	@ tmp179, i, tmp179
	ldr	ip, [ip, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	cmp	r2, #15	@ D.39936,
	add	r0, r6, r0, asl #2	@, tmp169, pMvcCtx, tmp165,
	add	r3, r6, lr, asl #2	@, tmp183, pMvcCtx, tmp179,
	add	r1, r6, r1, asl #2	@, tmp177, pMvcCtx, tmp173,
	movw	lr, #:lower16:11123344	@ tmp186,
	movt	lr, #:upper16:11123344	@ tmp186,
	str	r7, [r1, #4]	@ toppoc, <variable>.APC.poc
	movhi	r2, #16	@ iftmp.504,
	str	ip, [r0, #4]	@ <variable>.PhyFsID, <variable>.APC.idc
	addls	r2, r2, #1	@ iftmp.504, D.39936,
	str	r8, [r3, #4]	@ bottompoc, <variable>.APC.poc
	mov	r0, #13	@,
	str	r2, [r6, lr]	@ iftmp.504, <variable>.APC.used_size
	movw	r1, #:lower16:.LC26	@,
	ldr	r2, [r5, #268]	@, <variable>.fs_image.image_id
	movt	r1, #:upper16:.LC26	@,
	mov	r3, r4	@, i
	bl	dprint_vfmw	@
	str	r4, [r5, #52]	@ i, <variable>.apc_idc
	mov	r0, #0	@ D.39918,
	b	.L1233	@
.L1235:
	ldr	r7, [r5, #652]	@ toppoc, <variable>.top_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1237	@
.L1258:
	mov	r0, r5	@, pFrameStore
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #2049	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39918,
	b	.L1233	@
.L1242:
	mov	lr, #0	@ tmp189,
	ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ D.39945, <variable>.is_reference
	ldrsb	r2, [r5, #6]	@ D.39943, <variable>.logic_fs_id
	mov	r0, lr	@, tmp189
	movw	r1, #:lower16:.LC27	@,
	movt	r1, #:upper16:.LC27	@,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39918,
	b	.L1233	@
	.fnend
	.size	MVC_GetAPC, .-MVC_GetAPC
	.align	2
	.global	MVC_ExchangePts
	.type	MVC_ExchangePts, %function
MVC_ExchangePts:
	.fnstart
.LFB1560:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrd	r2, [r1, #80]	@ <variable>.fs_image.PTS, pFrameStore,
	mov	sl, r1	@ pFrameStore, pFrameStore
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mvn	r1, #0	@,
	mvn	r0, #0	@ tmp145,
	cmp	r3, r1	@ <variable>.fs_image.PTS, tmp145
	cmpeq	r2, r0	@ <variable>.fs_image.PTS, tmp145
	beq	.L1266	@,
	movw	r7, #:lower16:11123112	@ tmp146,
	movt	r7, #:upper16:11123112	@ tmp146,
	ldr	r3, [r4, r7]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L1266	@,
	movw	r5, #:lower16:11122920	@ ivtmp.4215,
	movt	r5, #:upper16:11122920	@ ivtmp.4215,
	add	r5, r4, r5	@ ivtmp.4215, pMvcCtx, ivtmp.4215
	mvn	r8, #1	@ MinPts.4222,
	mvn	r9, #0	@ MinPts.4222,
	mov	r6, #0	@ i,
	mvn	r0, #0	@,
	str	r0, [fp, #-56]	@, %sfp
.L1265:
	ldr	r3, [r5, #0]	@ D.39553, <variable>.DPB.fs
	cmp	r3, #0	@ D.39553,
	beq	.L1262	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1262	@,
	ldrsb	r1, [r0, #1]	@ D.39562, <variable>.s32DispState
	cmp	r1, #3	@ D.39562,
	cmpne	r1, #0	@, D.39562,
	beq	.L1262	@,
	ldr	r2, [r5, #0]	@ tmp160, <variable>.DPB.fs
	ldrd	r0, [r2, #80]	@, tmp160,
	cmp	r1, r9	@, MinPts.4222
	cmpeq	r0, r8	@, MinPts.4222
	strcc	r6, [fp, #-56]	@ i, %sfp
	strd	r0, [fp, #-52]	@,,
	bcc	.L1263	@,
.L1262:
	strd	r8, [fp, #-52]	@ MinPts.4222,,
.L1263:
	ldr	ip, [r4, r7]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r6, r6, #1	@ i, i,
	ldrd	r8, [fp, #-52]	@ MinPts.4222,,
	add	r5, r5, #4	@ ivtmp.4215, ivtmp.4215,
	cmp	r6, ip	@ i, <variable>.DPB.size
	bcc	.L1265	@,
	ldr	r3, [fp, #-56]	@, %sfp
	cmn	r3, #1	@,
	beq	.L1266	@,
	ldrd	r2, [sl, #80]	@ temp.4219, pFrameStore,
	mov	r6, r8	@, MinPts.4222
	mov	r7, r9	@, MinPts.4222
	cmp	r7, r3	@, temp.4219
	cmpeq	r6, r2	@, temp.4219
	bcc	.L1267	@,
.L1266:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1267:
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC28	@,
	movt	r1, #:upper16:.LC28	@,
	strd	r6, [sp]	@,
	bl	dprint_vfmw	@
	ldr	r7, [fp, #-56]	@, %sfp
	movw	r1, #:lower16:2780730	@ tmp164,
	movt	r1, #:upper16:2780730	@ tmp164,
	add	r3, r7, r1	@ tmp164,, tmp164
	ldrd	r0, [sl, #80]	@ <variable>.fs_image.PTS, pFrameStore,
	ldr	ip, [r4, r3, asl #2]	@ tmp166, <variable>.DPB.fs
	strd	r0, [ip, #80]	@ <variable>.fs_image.PTS, tmp166,
	ldrd	r0, [fp, #-52]	@,,
	strd	r0, [sl, #80]	@, pFrameStore,
	b	.L1266	@
	.fnend
	.size	MVC_ExchangePts, .-MVC_ExchangePts
	.align	2
	.global	MVC_CheckFrameStore
	.type	MVC_CheckFrameStore, %function
MVC_CheckFrameStore:
	.fnstart
.LFB1559:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #6]	@ zero_extendqisi2	@ <variable>.IDRFound, <variable>.IDRFound
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r4, r1	@ pFrameStore, pFrameStore
	cmp	r3, #0	@ <variable>.IDRFound,
	beq	.L1286	@,
.L1269:
	ldr	r0, [r5, #120]	@, <variable>.ChanID
	ldrsb	r1, [r4, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1272	@,
	ldrsb	r3, [r0, #1]	@ D.39485, <variable>.s32DispState
	cmp	r3, #3	@ D.39485,
	cmpne	r3, #0	@, D.39485,
	beq	.L1287	@,
	ldrb	r2, [r4, #2]	@ zero_extendqisi2	@ D.39504, <variable>.is_used
	cmp	r2, #0	@ D.39504,
	ldreqb	r3, [r4, #1]	@ zero_extendqisi2	@ prephitmp.4238, <variable>.non_existing
	beq	.L1282	@,
	ldrb	r3, [r4, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	beq	.L1282	@,
	cmp	r2, #3	@ D.39504,
	beq	.L1288	@,
	cmp	r2, #1	@ D.39504,
	beq	.L1289	@,
	cmp	r2, #2	@ D.39504,
	bne	.L1278	@,
	ldrb	r3, [r4, #4]	@ zero_extendqisi2	@ temp.4255, <variable>.mode_skip_flag
	tst	r3, #2	@ temp.4255,
	bne	.L1290	@,
.L1278:
	ldr	r1, [r5, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #208]	@ D.39530, <variable>.stDispImg.error_level
	ldr	r3, [r1, #4]	@ D.39532, <variable>.s32OutErrThr
	cmp	r2, r3	@ D.39530, D.39532
	movls	r0, #0	@ D.39478,
	bhi	.L1291	@,
.L1271:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L1289:
	ldrb	r3, [r4, #4]	@ zero_extendqisi2	@ D.39516, <variable>.mode_skip_flag
	tst	r3, #1	@ D.39516,
	beq	.L1278	@,
	mov	r0, r2	@, D.39504
	movw	r1, #:lower16:.LC33	@,
	movt	r1, #:upper16:.LC33	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39478,
	b	.L1271	@
.L1287:
	movw	r1, #:lower16:.LC29	@,
	ldrsb	r2, [r4, #6]	@, <variable>.logic_fs_id
	movt	r1, #:upper16:.LC29	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
.L1274:
	ldr	r0, [r4, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	moveq	r0, #2	@ tmp167,
	streq	r0, [r4, #16]	@ tmp167, <variable>.eFoState
	mvn	r0, #2	@ D.39478,
	b	.L1271	@
.L1288:
	ldrb	r2, [r4, #4]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r2, #3	@ <variable>.mode_skip_flag,
	bne	.L1278	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC32	@,
	mov	r3, r2	@,
	movt	r1, #:upper16:.LC32	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39478,
	b	.L1271	@
.L1286:
	ldrsb	r3, [r1, #8]	@ <variable>.as_first_out, <variable>.as_first_out
	cmp	r3, #1	@ <variable>.as_first_out,
	beq	.L1270	@,
	mvn	r0, #0	@ D.39478,
	b	.L1271	@
.L1272:
	ldrsb	ip, [r4, #6]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	movw	r1, #:lower16:.LC30	@,
	ldr	r3, [r4, #16]	@ <variable>.eFoState, <variable>.eFoState
	movt	r1, #:upper16:.LC30	@,
	mov	r2, r4	@, pFrameStore
	mov	r0, #1	@,
	str	ip, [sp, #0]	@ <variable>.logic_fs_id,
	bl	dprint_vfmw	@
	b	.L1274	@
.L1270:
	strb	r3, [r0, #6]	@ <variable>.as_first_out, <variable>.IDRFound
	b	.L1269	@
.L1282:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC31	@,
	movt	r1, #:upper16:.LC31	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39478,
	b	.L1271	@
.L1291:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39478,
	b	.L1271	@
.L1290:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39478,
	b	.L1271	@
	.fnend
	.size	MVC_CheckFrameStore, .-MVC_CheckFrameStore
	.align	2
	.global	MVC_GetMinPOC
	.type	MVC_GetMinPOC, %function
MVC_GetMinPOC:
	.fnstart
.LFB1539:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:11123112	@ tmp151,
	movt	r5, #:upper16:11123112	@ tmp151,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	ip, #:lower16:11123116	@ tmp152,
	movt	ip, #:upper16:11123116	@ tmp152,
	mvn	r7, #0	@ tmp149,
	mov	r8, r3	@ pos, pos
	str	r7, [r3, #0]	@ tmp149,* pos
	mvn	r0, #-2147483648	@ tmp150,
	str	r0, [r2, #0]	@ tmp150,* poc
	mov	r6, r2	@ poc, poc
	ldr	r3, [r4, r5]	@ D.38790, <variable>.DPB.size
	mov	r7, r1	@ CurrViewId, CurrViewId
	ldr	r2, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, r3	@ <variable>.DPB.used_size, D.38790
	strhi	r3, [r4, ip]	@ D.38790, <variable>.DPB.used_size
	cmp	r3, #0	@ D.38790,
	beq	.L1294	@,
	movw	r5, #:lower16:11122920	@ ivtmp.4283,
	movt	r5, #:upper16:11122920	@ ivtmp.4283,
	movw	r9, #:lower16:11123112	@ tmp179,
	mvn	r1, #0	@,
	add	r5, r4, r5	@ ivtmp.4283, pMvcCtx, ivtmp.4283
	movt	r9, #:upper16:11123112	@ tmp179,
	str	r1, [fp, #-48]	@, %sfp
	mov	sl, #0	@ i,
	b	.L1298	@
.L1296:
	ldr	r3, [r5, #0]	@ temp.4291, <variable>.DPB.fs
	ldr	lr, [r6, #0]	@ tmp166,* poc
	ldr	r2, [r3, #32]	@ temp.4292, <variable>.poc
	cmp	lr, r2	@ tmp166, temp.4292
	ble	.L1295	@,
	ldrb	ip, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	ip, #0	@ <variable>.is_in_dpb,
	beq	.L1295	@,
	ldrb	lr, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	sub	r1, lr, #1	@ tmp170, <variable>.s32DispState,
	uxtb	r0, r1	@ tmp171, tmp170
	cmp	r0, #1	@ tmp171,
	bls	.L1301	@,
.L1295:
	ldr	r2, [r4, r9]	@ <variable>.DPB.size, <variable>.DPB.size
	add	sl, sl, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.4283, ivtmp.4283,
	cmp	r2, sl	@ <variable>.DPB.size, i
	bls	.L1294	@,
.L1298:
	ldr	r3, [r5, #0]	@ D.38794, <variable>.DPB.fs
	cmp	r3, #0	@ D.38794,
	beq	.L1295	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pLogicfs
	beq	.L1295	@,
	cmn	r7, #1	@ CurrViewId,
	bne	.L1296	@,
	ldr	r3, [r5, #0]	@ temp.4287, <variable>.DPB.fs
	ldrb	lr, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	beq	.L1295	@,
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	sub	r2, r1, #1	@ tmp161, <variable>.s32DispState,
	uxtb	ip, r2	@ tmp162, tmp161
	cmp	ip, #1	@ tmp162,
	bhi	.L1295	@,
	ldr	r1, [r6, #0]	@ D.38813,* poc
	ldr	r2, [r3, #32]	@ D.38814, <variable>.poc
	cmp	r1, r2	@ D.38813, D.38814
	bgt	.L1302	@,
	bne	.L1295	@,
	ldr	ip, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	lr, [fp, #-48]	@, %sfp
	cmp	ip, lr	@ <variable>.view_id,
	bge	.L1295	@,
	str	r1, [r6, #0]	@ D.38813,* poc
	str	sl, [r8, #0]	@ i,* pos
	ldr	r1, [r5, #0]	@ tmp165, <variable>.DPB.fs
	ldr	r2, [r1, #56]	@, <variable>.view_id
	str	r2, [fp, #-48]	@, %sfp
	b	.L1295	@
.L1294:
	ldr	r0, [r8, #0]	@,* pos
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1301:
	ldr	r3, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r7, r3	@ CurrViewId, <variable>.view_id
	streq	r2, [r6, #0]	@ temp.4292,* poc
	streq	sl, [r8, #0]	@ i,* pos
	b	.L1295	@
.L1302:
	str	r2, [r6, #0]	@ D.38814,* poc
	str	sl, [r8, #0]	@ i,* pos
	ldr	r0, [r5, #0]	@ tmp163, <variable>.DPB.fs
	ldr	r3, [r0, #56]	@, <variable>.view_id
	str	r3, [fp, #-48]	@, %sfp
	b	.L1295	@
	.fnend
	.size	MVC_GetMinPOC, .-MVC_GetMinPOC
	.align	2
	.global	MVC_DEC_RecycleImage
	.type	MVC_DEC_RecycleImage, %function
MVC_DEC_RecycleImage:
	.fnstart
.LFB1682:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ PicID, PicID
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC36	@,
	movt	r1, #:upper16:.LC36	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, r5	@, PicID
	bl	FSP_GetLogicFs	@
	subs	r6, r0, #0	@ pstLogicFs,
	bne	.L1311	@,
.L1304:
	mvn	r0, #0	@ D.48313,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1311:
	ldrsb	r3, [r6, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r3, #0	@ <variable>.s32DispState,
	beq	.L1304	@,
	ldr	r1, [r6, #220]	@ D.48315, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ D.48315,
	beq	.L1305	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp147,
	str	r0, [r6, #220]	@ tmp147, <variable>.stDispImg.p_usrdat
.L1305:
	ldr	r1, [r6, #224]	@ temp.4329, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4329,
	beq	.L1306	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp149,
	str	r1, [r6, #224]	@ tmp149, <variable>.stDispImg.p_usrdat
.L1306:
	ldr	r1, [r6, #228]	@ temp.4331, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4331,
	beq	.L1307	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r2, #0	@ tmp151,
	str	r2, [r6, #228]	@ tmp151, <variable>.stDispImg.p_usrdat
.L1307:
	ldr	r1, [r6, #232]	@ temp.4325, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4325,
	beq	.L1308	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	ip, #0	@ tmp153,
	str	ip, [r6, #232]	@ tmp153, <variable>.stDispImg.p_usrdat
.L1308:
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, r5	@, PicID
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mov	r0, #0	@ D.48313,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_DEC_RecycleImage, .-MVC_DEC_RecycleImage
	.align	2
	.global	mvc_u_1
	.type	mvc_u_1, %function
mvc_u_1:
	.fnstart
.LFB1531:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ SE_TRACEstring, SE_TRACEstring
	add	r0, r0, #548	@, pMvcCtx,
	mov	r1, #1	@,
	bl	BsGet	@
	ldr	ip, [r5, #232]	@ D.38651, <variable>.pCurrNal
	mov	r2, r6	@, SE_TRACEstring
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	lr, lr, #1	@ tmp141, <variable>.nal_bitoffset,
	str	lr, [ip, #64]	@ tmp141, <variable>.nal_bitoffset
	mov	r4, r0	@ D.38650,
	mov	r0, #21	@,
	mov	r3, r4	@, D.38650
	bl	dprint_vfmw	@
	mov	r0, r4	@, D.38650
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	mvc_u_1, .-mvc_u_1
	.align	2
	.global	mvc_u_v
	.type	mvc_u_v, %function
mvc_u_v:
	.fnstart
.LFB1530:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	add	r0, r0, #548	@, pMvcCtx,
	mov	r7, r2	@ SE_TRACEstring, SE_TRACEstring
	mov	r5, r1	@ LenInBits, LenInBits
	bl	BsGet	@
	ldr	ip, [r6, #232]	@ D.38639, <variable>.pCurrNal
	mov	r2, r7	@, SE_TRACEstring
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp141, <variable>.nal_bitoffset, LenInBits
	str	r5, [ip, #64]	@ tmp141, <variable>.nal_bitoffset
	mov	r4, r0	@ INFO,
	mov	r0, #21	@,
	mov	r3, r4	@, INFO
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	mvc_u_v, .-mvc_u_v
	.align	2
	.global	MVC_DecPicTimingSEI
	.type	MVC_DecPicTimingSEI, %function
MVC_DecPicTimingSEI:
	.fnstart
.LFB1665:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11110536	@ tmp150,
	movt	r4, #:upper16:11110536	@ tmp150,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	movw	r1, #3992	@ tmp153,
	ldr	r0, [r0, r4]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	ldr	r4, [r5, #248]	@ pSPS, <variable>.SPS
	mla	r3, r1, r0, r4	@ pSPS.4409, tmp153, <variable>.CurrSPS.seq_parameter_set_id, pSPS
	ldrb	r2, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	movne	r4, r3	@ pSPS, pSPS.4409
	bne	.L1322	@,
	ldr	ip, [r5, #36]	@ D.46944, <variable>.MaxSpsNum
	cmp	ip, #0	@ D.46944,
	ble	.L1318	@,
	ldrb	r1, [r4, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L1319	@,
	tst	ip, #1	@ D.46944,
	add	r3, r4, #3984	@ ivtmp.4405, pSPS,
	add	r3, r3, #8	@ ivtmp.4405, ivtmp.4405,
	bne	.L1321	@,
	ldrb	r2, [r3, #25]	@ zero_extendqisi2	@ D.46941, <variable>.is_valid
	add	r0, r3, #3984	@ ivtmp.4405, ivtmp.4405,
	mov	r4, r3	@ pSPS, ivtmp.4405
	mov	r1, #1	@ i,
	cmp	r2, #0	@ D.46941,
	add	r3, r0, #8	@ ivtmp.4405, ivtmp.4405,
	beq	.L1321	@,
	b	.L1319	@
.L1323:
	ldrb	r0, [r4, #25]	@ zero_extendqisi2	@ D.46941, <variable>.is_valid
	add	r2, r2, #8	@ tmp178, tmp156,
	cmp	r0, #0	@ D.46941,
	bne	.L1319	@,
	ldrb	r0, [r2, #25]	@ zero_extendqisi2	@ D.46941, <variable>.is_valid
	mov	r4, r2	@ pSPS, tmp178
	cmp	r0, #0	@ D.46941,
	bne	.L1319	@,
.L1321:
	add	r0, r1, #1	@ tmp179, i,
	add	r2, r3, #3984	@ tmp156, pSPS,
	cmp	ip, r0	@ D.46944, tmp179
	mov	r4, r3	@ pSPS, ivtmp.4405
	add	r1, r0, #1	@ i, tmp179,
	add	r3, r2, #4000	@ ivtmp.4405, tmp156,
	bgt	.L1323	@,
.L1318:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.46948,
.L1324:
	mov	r0, r3	@, D.46948
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1319:
	cmp	r4, #0	@ pSPS,
	beq	.L1318	@,
.L1322:
	ldrb	ip, [r4, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	ip, #0	@ <variable>.vui_parameters_present_flag,
	beq	.L1325	@,
	ldrb	r2, [r4, #35]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag, <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag,
	beq	.L1340	@,
	ldr	lr, [r4, #388]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r6, [r4, #392]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, lr, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r6, #1	@ dpb_output_len, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1,
.L1328:
	mov	r0, r5	@, pMvcCtx
	movw	r2, #:lower16:.LC39	@,
	movt	r2, #:upper16:.LC39	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122912	@ tmp167,
	movt	r3, #:upper16:11122912	@ tmp167,
	mov	r1, r6	@, dpb_output_len
	movw	r2, #:lower16:.LC40	@,
	movt	r2, #:upper16:.LC40	@,
	str	r0, [r5, r3]	@, <variable>.PicTimingSEI.cpb_removal_delay
	mov	r0, r5	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11122916	@ tmp169,
	movt	ip, #:upper16:11122916	@ tmp169,
	str	r0, [r5, ip]	@, <variable>.PicTimingSEI.dpb_output_delay
.L1325:
	ldrb	r3, [r4, #39]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.pic_struct_present_flag, <variable>.vui_seq_parameters.pic_struct_present_flag
	cmp	r3, #0	@ <variable>.vui_seq_parameters.pic_struct_present_flag,
	beq	.L1324	@,
	mov	r0, r5	@, pMvcCtx
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC41	@,
	movt	r2, #:upper16:.LC41	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:11122908	@ tmp172,
	movt	r2, #:upper16:11122908	@ tmp172,
	mov	r3, #0	@ D.46948,
	strb	r0, [r5, r2]	@, <variable>.PicTimingSEI.pic_struct
	mov	r0, r3	@, D.46948
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1340:
	ldrb	r1, [r4, #38]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag, <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag
	cmp	r1, #0	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag,
	beq	.L1325	@,
	ldr	r0, [r4, #700]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r3, [r4, #704]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, r0, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r3, #1	@ dpb_output_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1,
	b	.L1328	@
	.fnend
	.size	MVC_DecPicTimingSEI, .-MVC_DecPicTimingSEI
	.align	2
	.global	MVC_GetBackPicFromVOQueue
	.type	MVC_GetBackPicFromVOQueue, %function
MVC_GetBackPicFromVOQueue:
	.fnstart
.LFB1615:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, #120]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	beq	.L1359	@,
.L1342:
	ldr	r3, [r6, #48]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L1343	@,
	movw	r4, #:lower16:11123482	@ ivtmp.4445,
	movt	r4, #:upper16:11123482	@ ivtmp.4445,
	mov	r7, #0	@ i,
	add	r4, r6, r4	@ ivtmp.4445, pMvcCtx, ivtmp.4445
	mov	r5, r7	@ tmp163, i
.L1348:
	ldr	r1, [r4, #282]	@ D.42394, <variable>.fs_image.p_usrdat
	add	r7, r7, #1	@ i, i,
	strb	r5, [r4, #0]	@ tmp163, <variable>.is_used
	cmp	r1, #0	@ D.42394,
	strb	r5, [r4, #1]	@ tmp163, <variable>.is_reference
	beq	.L1344	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #282]	@ tmp163, <variable>.fs_image.p_usrdat
.L1344:
	ldr	r1, [r4, #286]	@ temp.4458, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4458,
	beq	.L1345	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #286]	@ tmp163, <variable>.fs_image.p_usrdat
.L1345:
	ldr	r1, [r4, #290]	@ temp.4460, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4460,
	beq	.L1346	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #290]	@ tmp163, <variable>.fs_image.p_usrdat
.L1346:
	ldr	r1, [r4, #294]	@ temp.4453, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4453,
	beq	.L1347	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #294]	@ tmp163, <variable>.fs_image.p_usrdat
.L1347:
	ldr	r0, [r6, #48]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r4, r4, #712	@ ivtmp.4445, ivtmp.4445,
	cmp	r0, r7	@ <variable>.TotalFsNum, i
	bhi	.L1348	@,
.L1343:
	ldr	ip, [r6, #52]	@ D.42398, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.42398,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	mov	r2, #1	@ i.4455,
	cmp	r2, ip	@ i.4455, D.42398
	sub	r1, ip, #1	@ tmp164, D.42398,
	mov	r0, #0	@ tmp162,
	add	r3, r6, #4	@ ivtmp.4442, pMvcCtx,
	and	r1, r1, r2	@ tmp166, tmp164,
	str	r0, [r6, #148]	@ tmp162, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r1, #0	@ tmp166,
	beq	.L1350	@,
	mov	r2, #2	@ i.4455,
	cmp	r2, ip	@ i.4455, D.42398
	str	r0, [r3, #148]	@ tmp162, <variable>.PmvStoreUsedFlag
	add	r3, r3, #4	@ ivtmp.4442, ivtmp.4442,
	ldmcsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1350:
	add	r2, r2, #2	@ i.4455, i.4455,
	add	lr, r3, #4	@ tmp168, ivtmp.4442,
	cmp	r2, ip	@ i.4455, D.42398
	str	r0, [r3, #148]	@ tmp162, <variable>.PmvStoreUsedFlag
	str	r0, [lr, #148]	@ tmp162, <variable>.PmvStoreUsedFlag
	add	r3, lr, #4	@ ivtmp.4442, tmp168,
	bcc	.L1350	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1359:
	add	r0, r6, #584	@, pMvcCtx,
	bl	ResetVoQueue	@
	b	.L1342	@
	.fnend
	.size	MVC_GetBackPicFromVOQueue, .-MVC_GetBackPicFromVOQueue
	.align	2
	.global	MVC_ReleaseNAL
	.type	MVC_ReleaseNAL, %function
MVC_ReleaseNAL:
	.fnstart
.LFB1580:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r1, #0	@ pNalu, pNalu
	mov	r6, r0	@ ChanID, ChanID
	beq	.L1366	@,
	ldr	r3, [r4, #8]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r5, #0	@ tmp137,
	strb	r5, [r4, #1]	@ tmp137, <variable>.is_valid
	cmp	r3, r5	@ <variable>.streamBuffer,
	strb	r5, [r4, #3]	@ tmp137, <variable>.nal_integ
	beq	.L1363	@,
	ldr	r1, [r4, #32]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC42	@,
	ldr	r2, [r4, #8]	@, <variable>.streamBuffer
	movt	r1, #:upper16:.LC42	@,
	ldr	r3, [r4, #12]	@, <variable>.bitstream_length
	bl	dprint_vfmw	@
	str	r5, [r4, #12]	@ tmp137, <variable>.bitstream_length
	str	r5, [r4, #8]	@ tmp137, <variable>.streamBuffer
	str	r5, [r4, #24]	@ tmp137, <variable>.bitsoffset
.L1363:
	ldr	r0, [r4, #36]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r0, #0	@ <variable>.streamBuffer,
	beq	.L1364	@,
	ldr	r1, [r4, #60]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC42	@,
	ldr	r2, [r4, #36]	@, <variable>.streamBuffer
	movt	r1, #:upper16:.LC42	@,
	ldr	r3, [r4, #40]	@, <variable>.bitstream_length
	bl	dprint_vfmw	@
	mov	r1, #0	@ tmp154,
	str	r1, [r4, #40]	@ tmp154, <variable>.bitstream_length
	str	r1, [r4, #36]	@ tmp154, <variable>.streamBuffer
	str	r1, [r4, #52]	@ tmp154, <variable>.bitsoffset
.L1364:
	mov	r2, #0	@ tmp157,
	str	r2, [r4, #68]	@ tmp157, <variable>.nal_segment
	strb	r2, [r4, #0]	@ tmp157, <variable>.nal_used_segment
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1366:
	mov	r0, r4	@, pNalu
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #3821	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_ReleaseNAL, .-MVC_ReleaseNAL
	.align	2
	.global	MVC_ClearAllSlice
	.type	MVC_ClearAllSlice, %function
MVC_ClearAllSlice:
	.fnstart
.LFB1535:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11153252	@ ivtmp.4528,
	movw	r8, #:lower16:11153796	@ D.52502,
	movt	r4, #:upper16:11153252	@ ivtmp.4528,
	movt	r8, #:upper16:11153796	@ D.52502,
	add	r4, r0, r4	@ ivtmp.4528, pMvcCtx, ivtmp.4528
	add	r8, r0, r8	@ D.52502, pMvcCtx, D.52502
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	mov	r7, #0	@ tmp145,
.L1369:
	ldr	r1, [r4, #0]	@ D.38695, <variable>.pSliceNal
	add	r5, r4, #4	@ tmp146, ivtmp.4528,
	cmp	r1, #0	@ D.38695,
	beq	.L1368	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	str	r7, [r4, #0]	@ tmp145, <variable>.pSliceNal
.L1368:
	ldr	r1, [r4, #4]	@ D.38695, <variable>.pSliceNal
	cmp	r1, #0	@ D.38695,
	beq	.L1372	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	str	r7, [r4, #4]	@ tmp145, <variable>.pSliceNal
.L1372:
	add	r4, r5, #4	@ ivtmp.4528, tmp146,
	cmp	r4, r8	@ ivtmp.4528, D.52502
	bne	.L1369	@,
	mov	r0, #0	@ tmp142,
	str	r0, [r6, #104]	@ tmp142, <variable>.MaxBytesReceived
	str	r0, [r6, #64]	@ tmp142, <variable>.SliceParaNum
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_ClearAllSlice, .-MVC_ClearAllSlice
	.align	2
	.global	MVC_ClearCurrPic
	.type	MVC_ClearCurrPic, %function
MVC_ClearCurrPic:
	.fnstart
.LFB1536:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	sl, #:lower16:11118840	@,
	bl	MVC_ClearAllSlice	@
	movt	sl, #:upper16:11118840	@,
	movw	r9, #:lower16:11118852	@,
	str	sl, [fp, #-56]	@, %sfp
	movt	r9, #:upper16:11118852	@,
	str	r9, [fp, #-48]	@, %sfp
	movw	r0, #:lower16:11118828	@ tmp162,
	ldr	r2, [r4, #40]	@, <variable>.MaxPpsNum
	movt	r0, #:upper16:11118828	@ tmp162,
	movw	r6, #:lower16:11118832	@ tmp163,
	movw	r8, #:lower16:11118816	@ tmp165,
	movt	r6, #:upper16:11118832	@ tmp163,
	movt	r8, #:upper16:11118816	@ tmp165,
	movw	r5, #:lower16:11118817	@ tmp166,
	movw	ip, #:lower16:11118819	@ tmp167,
	movt	r5, #:upper16:11118817	@ tmp166,
	movt	ip, #:upper16:11118819	@ tmp167,
	movw	r1, #:lower16:11118818	@ tmp168,
	movw	r7, #:lower16:11118848	@ tmp171,
	movt	r1, #:upper16:11118818	@ tmp168,
	movt	r7, #:upper16:11118848	@ tmp171,
	mov	r3, #0	@ tmp140,
	str	r2, [r4, r0]	@, <variable>.PrevSlice.pic_parameter_set_id
	str	r3, [r4, r7]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	movw	r7, #:lower16:88888	@ tmp164,
	strb	r3, [r4, r8]	@ tmp140, <variable>.PrevSlice.field_pic_flag
	movt	r7, #:upper16:88888	@ tmp164,
	str	r7, [r4, r6]	@ tmp164, <variable>.PrevSlice.frame_num
	mov	r6, #2	@ tmp143,
	strb	r6, [r4, r5]	@ tmp143, <variable>.PrevSlice.bottom_field_flag
	mov	r5, #7	@ tmp146,
	strb	r5, [r4, ip]	@ tmp146, <variable>.PrevSlice.nal_ref_idc
	mov	ip, #32	@ tmp149,
	strb	ip, [r4, r1]	@ tmp149, <variable>.PrevSlice.nal_unit_type
	movw	sl, #:lower16:11118844	@ tmp170,
	ldr	r2, [fp, #-56]	@, %sfp
	movt	sl, #:upper16:11118844	@ tmp170,
	movw	r9, #:lower16:11118856	@ tmp173,
	movt	r9, #:upper16:11118856	@ tmp173,
	mov	r1, #3	@ tmp152,
	mvn	ip, #0	@ tmp154,
	str	r1, [r4, r2]	@ tmp152, <variable>.PrevSlice.pic_oder_cnt_lsb
	mov	r1, #262144	@ tmp160,
	str	ip, [r4, sl]	@ tmp154, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r0, r3	@, tmp140
	str	r1, [r4, r9]	@ tmp160, <variable>.PrevSlice.first_mb_in_slice
	ldr	r2, [fp, #-48]	@, %sfp
	str	r3, [r4, r2]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	MVC_ClearCurrPic, .-MVC_ClearCurrPic
	.align	2
	.global	MVC_ClearAllNal
	.type	MVC_ClearAllNal, %function
MVC_ClearAllNal:
	.fnstart
.LFB1533:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	mov	r7, #88	@ tmp144,
	cmp	r3, #1	@ <variable>.is_valid,
	beq	.L1390	@,
.L1383:
	mov	r3, #1	@ i,
	add	r2, r6, #88	@ ivtmp.4586, pMvcCtx,
	b	.L1380	@
.L1379:
	ldrb	r0, [r4, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	beq	.L1391	@,
.L1385:
	add	r3, r5, #1	@ i, tmp145,
	add	r2, r4, #88	@ ivtmp.4586, tmp146,
	cmp	r3, #137	@ i,
	beq	.L1392	@,
.L1380:
	add	r4, r2, #88	@ tmp146, ivtmp.4586,
	ldrb	r2, [r2, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r5, r3, #1	@ tmp145, i,
	cmp	r2, #1	@ <variable>.is_valid,
	bne	.L1379	@,
	mla	ip, r7, r3, r6	@ tmp142, tmp144, i, pMvcCtx
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	add	r1, ip, #936	@, tmp142,
	bl	MVC_ReleaseNAL	@
	ldrb	r0, [r4, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	bne	.L1385	@,
.L1391:
	mla	r1, r7, r5, r6	@ tmp162, tmp144, tmp145, pMvcCtx
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	add	r1, r1, #936	@, tmp162,
	bl	MVC_ReleaseNAL	@
	add	r3, r5, #1	@ i, tmp145,
	cmp	r3, #137	@ i,
	add	r2, r4, #88	@ ivtmp.4586, tmp146,
	bne	.L1380	@,
.L1392:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1390:
	ldr	r0, [r0, #120]	@, <variable>.ChanID
	add	r1, r6, #936	@, pMvcCtx,
	bl	MVC_ReleaseNAL	@
	b	.L1383	@
	.fnend
	.size	MVC_ClearAllNal, .-MVC_ClearAllNal
	.align	2
	.global	MVC_DEC_Destroy
	.type	MVC_DEC_Destroy, %function
MVC_DEC_Destroy:
	.fnstart
.LFB1680:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r6	@, pMvcCtx
	bl	MVC_ClearAllNal	@
	ldr	r3, [r6, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r3, #0	@ <variable>.TotalUsrDatNum,
	beq	.L1394	@,
	mov	r5, #0	@ i,
	mov	r4, r6	@ ivtmp.4632, pMvcCtx
	mov	r7, r5	@ tmp162, i
.L1396:
	ldr	r1, [r4, #528]	@ D.48140, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i, i,
	cmp	r1, #0	@ D.48140,
	beq	.L1395	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r3, [r6, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	str	r7, [r4, #528]	@ tmp162, <variable>.pUsrDatArray
.L1395:
	cmp	r3, r5	@ <variable>.TotalUsrDatNum, i
	add	r4, r4, #4	@ ivtmp.4632, ivtmp.4632,
	bhi	.L1396	@,
.L1394:
	movw	r4, #:lower16:11123764	@ ivtmp.4622,
	movw	r8, #:lower16:11152244	@ D.52602,
	movt	r4, #:upper16:11123764	@ ivtmp.4622,
	movt	r8, #:upper16:11152244	@ D.52602,
	add	r4, r6, r4	@ ivtmp.4622, pMvcCtx, ivtmp.4622
	add	r8, r6, r8	@ D.52602, pMvcCtx, D.52602
	mov	r7, #0	@ tmp161,
.L1397:
	ldr	r1, [r4, #0]	@ temp.4635, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4635,
	beq	.L1399	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #0]	@ tmp161, <variable>.fs_image.p_usrdat
.L1399:
	ldr	r1, [r4, #4]	@ temp.4637, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4637,
	beq	.L1400	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #4]	@ tmp161, <variable>.fs_image.p_usrdat
.L1400:
	ldr	r1, [r4, #8]	@ temp.4639, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4639,
	beq	.L1401	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #8]	@ tmp161, <variable>.fs_image.p_usrdat
.L1401:
	ldr	r1, [r4, #12]	@ D.48146, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.48146,
	beq	.L1403	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #12]	@ tmp161, <variable>.fs_image.p_usrdat
.L1403:
	ldr	r1, [r4, #712]	@ temp.4635, <variable>.fs_image.p_usrdat
	add	r5, r4, #712	@ tmp163, ivtmp.4622,
	cmp	r1, #0	@ temp.4635,
	beq	.L1407	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #712]	@ tmp161, <variable>.fs_image.p_usrdat
.L1407:
	ldr	r1, [r5, #4]	@ temp.4637, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4637,
	beq	.L1408	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r5, #4]	@ tmp161, <variable>.fs_image.p_usrdat
.L1408:
	ldr	r1, [r5, #8]	@ temp.4639, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4639,
	beq	.L1409	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r5, #8]	@ tmp161, <variable>.fs_image.p_usrdat
.L1409:
	ldr	r1, [r5, #12]	@ D.48146, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.48146,
	beq	.L1413	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r5, #12]	@ tmp161, <variable>.fs_image.p_usrdat
.L1413:
	add	r4, r5, #712	@ ivtmp.4622, tmp163,
	cmp	r4, r8	@ ivtmp.4622, D.52602
	bne	.L1397	@,
	movw	r1, #:lower16:.LC43	@,
	mov	r0, #2	@,
	movt	r1, #:upper16:.LC43	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_DEC_Destroy, .-MVC_DEC_Destroy
	.align	2
	.global	MVC_ClearCurrNal
	.type	MVC_ClearCurrNal, %function
MVC_ClearCurrNal:
	.fnstart
.LFB1532:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r1, [r0, #232]	@ D.38659, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ D.38659,
	beq	.L1415	@,
	ldr	r0, [r0, #120]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	mov	r3, #0	@ tmp137,
	str	r3, [r4, #232]	@ tmp137, <variable>.pCurrNal
.L1415:
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_ClearCurrNal, .-MVC_ClearCurrNal
	.align	2
	.global	MVC_ClearCurrSlice
	.type	MVC_ClearCurrSlice, %function
MVC_ClearCurrSlice:
	.fnstart
.LFB1534:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC44	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movt	r1, #:upper16:.LC44	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	ldr	r1, [r4, #80]	@ <variable>.TotalSlice, <variable>.TotalSlice
	mov	r0, #0	@,
	add	r3, r1, #1	@ tmp137, <variable>.TotalSlice,
	str	r3, [r4, #80]	@ tmp137, <variable>.TotalSlice
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_ClearCurrSlice, .-MVC_ClearCurrSlice
	.align	2
	.global	MVC_RepairList
	.type	MVC_RepairList, %function
MVC_RepairList:
	.fnstart
.LFB1582:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11117160	@ tmp157,
	movt	r2, #:upper16:11117160	@ tmp157,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1422	@,
	movcc	r9, #1	@ i_list_cnt,
	bcs	.L1460	@,
.L1425:
	movw	r6, #:lower16:11117208	@ ivtmp.4736,
	movt	r6, #:upper16:11117208	@ ivtmp.4736,
	mov	sl, #0	@ pRepairPic.4747,
	movw	r8, #:lower16:11152504	@ tmp189,
	add	r6, r3, r6	@ ivtmp.4736, pMvcCtx, ivtmp.4736
	movt	r8, #:upper16:11152504	@ tmp189,
	mov	r7, r3	@ ivtmp.4741, pMvcCtx
	mov	r5, sl	@ i_list, pRepairPic.4747
.L1439:
	ldr	r4, [r6, #0]	@ temp.4742, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4742,
	beq	.L1426	@,
	ldr	r1, [r7, #256]	@ pRepairPic.4748, <variable>.pListX
	cmp	r1, #0	@ pRepairPic.4748,
	movne	ip, r1	@ pRepairPic, pRepairPic.4748
	bne	.L1428	@,
	add	r2, r5, r5, asl #5	@, tmp161, i_list, i_list,
	tst	r4, #1	@ temp.4742,
	mov	r0, r1	@ i, pRepairPic.4748
	add	ip, r3, r2, asl #2	@, tmp163, pMvcCtx, tmp161,
	add	r2, ip, #256	@ ivtmp.4733, tmp163,
	bne	.L1429	@,
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	mov	r0, #1	@ i,
	cmp	ip, #0	@ pRepairPic,
	beq	.L1429	@,
	b	.L1428	@
.L1431:
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	cmp	ip, #0	@ pRepairPic,
	bne	.L1428	@,
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	cmp	ip, #0	@ pRepairPic,
	bne	.L1428	@,
.L1429:
	add	r0, r0, #1	@ tmp199, i,
	cmp	r4, r0	@ temp.4742, tmp199
	add	r0, r0, #1	@ i, tmp199,
	bhi	.L1431	@,
	mov	ip, sl	@ pRepairPic, pRepairPic.4747
	mov	r2, #1	@ prephitmp.4703,
.L1430:
	cmp	ip, #0	@ pRepairPic,
	orreq	r2, r2, #1	@,, tmp168, prephitmp.4703
	cmp	r2, #0	@ tmp168,
	beq	.L1432	@,
	ldr	r2, [r3, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1458	@,
	ldr	r0, [r3, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	ip, r0, #600	@ pRepairPic, <variable>.CurrPic.frame_store,
.L1432:
	add	r2, r5, r5, asl #5	@, tmp175, i_list, i_list,
	tst	r4, #1	@ temp.4742,
	mov	r0, #0	@ i.4743,
	add	r2, r3, r2, asl #2	@, tmp177, pMvcCtx, tmp175,
	add	r2, r2, #260	@ ivtmp.4721, tmp177,
	bne	.L1436	@,
	cmp	r1, #0	@ pRepairPic.4748,
	mov	r0, #1	@ i.4743,
	streq	ip, [r2, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r4, r0	@ temp.4742, i.4743
	add	r2, r2, #4	@ ivtmp.4721, ivtmp.4721,
	ldrhi	r1, [r2, #-4]	@ pRepairPic.4748, <variable>.pListX
	bhi	.L1436	@,
	b	.L1435	@
.L1445:
	mov	r2, r1	@ ivtmp.4721, tmp195
	add	r0, r0, #1	@ i.4743, tmp194,
	ldr	r1, [r2], #4	@ pRepairPic.4748, <variable>.pListX
.L1436:
	add	r0, r0, #1	@ tmp194, i.4743,
	cmp	r1, #0	@ pRepairPic.4748,
	streq	ip, [r2, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r4, r0	@ temp.4742, tmp194
	add	r1, r2, #4	@ tmp195, ivtmp.4721,
	bls	.L1435	@,
	ldr	r2, [r1, #-4]	@ pRepairPic.4748, <variable>.pListX
	cmp	r2, #0	@ pRepairPic.4748,
	streq	ip, [r1, #-4]	@ pRepairPic, <variable>.pListX
	b	.L1445	@
.L1426:
	ldr	ip, [r3, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r1, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1458	@,
	ldr	r2, [r3, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	ip, sl	@ pRepairPic, pRepairPic.4747
	mov	r1, #1	@,
	str	r1, [r6, #0]	@, <variable>.CurrSlice.listXsize
	add	r0, r2, #600	@ tmp183, <variable>.CurrPic.frame_store,
	str	r0, [r7, #256]	@ tmp183, <variable>.pListX
.L1435:
	add	r5, r5, #1	@ i_list, i_list,
	add	r6, r6, #4	@ ivtmp.4736, ivtmp.4736,
	cmp	r5, r9	@ i_list, i_list_cnt
	add	r7, r7, #132	@ ivtmp.4741, ivtmp.4741,
	bcs	.L1423	@,
	mov	sl, ip	@ pRepairPic.4747, pRepairPic
	b	.L1439	@
.L1428:
	mov	r2, #0	@ prephitmp.4703,
	b	.L1430	@
.L1460:
	cmp	r2, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1423	@,
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.41075,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1423:
	mov	r0, #0	@ D.41075,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1458:
	mov	r0, r3	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.41075,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1422:
	mov	r9, #2	@ i_list_cnt,
	b	.L1425	@
	.fnend
	.size	MVC_RepairList, .-MVC_RepairList
	.align	2
	.global	MVC_CombinePacket
	.type	MVC_CombinePacket, %function
MVC_CombinePacket:
	.fnstart
.LFB1673:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r3, [r0, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, #4096	@ <variable>.bitstream_length,
	bcs	.L1463	@,
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC45	@,
	movt	r1, #:upper16:.LC45	@,
	mov	r5, #0	@ tmp162,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #232]	@ temp.4774, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC46	@,
	movt	r1, #:upper16:.LC46	@,
	ldr	r6, [ip, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [ip, #16]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	ldr	r3, [ip, #44]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	r6, [sp, #0]	@ <variable>.bitstream_length,
	ldr	lr, [ip, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	str	lr, [sp, #4]	@ <variable>.bitstream_length,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #232]	@ temp.4776, <variable>.pCurrNal
	ldr	r3, [r0, #12]	@ temp.4777, <variable>.bitstream_length
	ldr	r6, [r0, #36]	@ <variable>.streamBuffer, <variable>.streamBuffer
	ldr	r1, [r0, #8]	@, <variable>.streamBuffer
	mov	r2, r3	@, temp.4777
	rsb	r0, r3, r6	@, temp.4777, <variable>.streamBuffer
	bl	memcpy	@
	ldr	ip, [r4, #232]	@ temp.4778, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC47	@,
	movt	r1, #:upper16:.LC47	@,
	ldr	r2, [ip, #60]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r6, [ip, #32]	@ StreamId, <variable>.StreamID
	str	r2, [ip, #32]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r3, #24]	@ tmp162, <variable>.bitsoffset
	ldr	r3, [r4, #232]	@ temp.4780, <variable>.pCurrNal
	ldr	r2, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #36]	@ <variable>.streamBuffer, <variable>.streamBuffer
	rsb	r2, r2, ip	@ tmp166, <variable>.bitstream_length, <variable>.streamBuffer
	str	r2, [r3, #8]	@ tmp166, <variable>.streamBuffer
	ldr	r3, [r4, #232]	@ temp.4785, <variable>.pCurrNal
	ldr	r2, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #44]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	rsb	r2, r2, ip	@ tmp169, <variable>.bitstream_length, <variable>.stream_phy_addr
	str	r2, [r3, #16]	@ tmp169, <variable>.stream_phy_addr
	ldr	r3, [r4, #232]	@ temp.4788, <variable>.pCurrNal
	ldr	ip, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r2, ip, r2	@ tmp172, <variable>.bitstream_length, <variable>.bitstream_length
	str	r2, [r3, #12]	@ tmp172, <variable>.bitstream_length
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #1	@ tmp174,
	str	ip, [r3, #68]	@ tmp174, <variable>.nal_segment
	ldr	r2, [r4, #232]	@ temp.4792, <variable>.pCurrNal
	ldr	r3, [r2, #12]	@, <variable>.bitstream_length
	ldr	r2, [r2, #16]	@, <variable>.stream_phy_addr
	bl	dprint_vfmw	@
	mov	r1, r6	@, StreamId
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [ip, #36]	@ tmp162, <variable>.streamBuffer
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r2, #52]	@ tmp162, <variable>.bitsoffset
	ldr	r1, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r1, #40]	@ tmp162, <variable>.bitstream_length
.L1463:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
	.fnend
	.size	MVC_CombinePacket, .-MVC_CombinePacket
	.align	2
	.global	MVC_FindZeroBitsInSeg
	.type	MVC_FindZeroBitsInSeg, %function
MVC_FindZeroBitsInSeg:
	.fnstart
.LFB1671:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ ptr,
	cmpne	r1, #0	@, len,
	str	r1, [fp, #-48]	@ len, %sfp
	mov	r8, r0	@ ptr, ptr
	movgt	r4, #0	@, tmp159
	movle	r4, #1	@, tmp159
	ble	.L1491	@,
	ldr	r2, [fp, #-48]	@, %sfp
	ands	r3, r2, #63	@ tmp163,,
	movne	r3, #1	@, tmp163,
	adds	sl, r3, r2, asr #6	@, nRound, tmp163,,
	moveq	r4, sl	@ zero_byte, nRound
	beq	.L1468	@,
	movw	r5, #:lower16:.LANCHOR1	@ tmp198,
	ldr	r7, [fp, #-48]	@ ivtmp.4848, %sfp
	movt	r5, #:upper16:.LANCHOR1	@ tmp198,
	mov	r9, r5	@ tmp199, tmp198
.L1473:
	cmp	r7, #64	@ ivtmp.4848,
	movcc	r6, r7	@ ThisRoundSize, ivtmp.4848
	movcs	r6, #64	@ ThisRoundSize,
	movw	r0, #:lower16:.LANCHOR1	@,
	rsb	r1, r6, r7	@ tmp166, ThisRoundSize, ivtmp.4848
	movt	r0, #:upper16:.LANCHOR1	@,
	mov	r2, r6	@, ThisRoundSize
	sub	r6, r6, #1	@ tmp173, ThisRoundSize,
	add	r1, r8, r1	@, ptr, tmp166
	bl	memcpy	@
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ tmp174,
	add	r3, r5, r6	@ pLastByte, tmp198, tmp173
	cmp	r0, #0	@ tmp174,
	bne	.L1469	@,
	cmp	r3, r9	@ pLastByte, tmp199
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1470	@,
	ldrb	r2, [r3, #-1]	@ zero_extendqisi2	@ tmp177,
	rsb	lr, r3, r5	@ tmp201, pLastByte, tmp198
	cmp	r2, #0	@ tmp177,
	mvn	ip, lr	@ tmp200, tmp201
	and	r2, ip, #1	@ tmp202, tmp200,
	bne	.L1469	@,
	sub	r3, r3, #1	@ ivtmp.4839, pLastByte,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4839, tmp198
	beq	.L1470	@,
	cmp	r2, #0	@ tmp202,
	beq	.L1471	@,
	ldrb	lr, [r3, #-1]	@ zero_extendqisi2	@ tmp209,
	cmp	lr, #0	@ tmp209,
	bne	.L1469	@,
	sub	r3, r3, #1	@ ivtmp.4839, ivtmp.4839,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4839, tmp198
	bne	.L1471	@,
	b	.L1470	@
.L1472:
	ldrb	r0, [r2, #-1]	@ zero_extendqisi2	@ tmp207,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r0, #0	@ tmp207,
	bne	.L1469	@,
	cmp	r3, r5	@ ivtmp.4839, tmp198
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1470	@,
.L1471:
	ldrb	r1, [r3, #-1]	@ zero_extendqisi2	@ tmp208,
	sub	r2, r3, #1	@ tmp204, ivtmp.4839,
	sub	r3, r2, #1	@ ivtmp.4839, tmp204,
	cmp	r1, #0	@ tmp208,
	beq	.L1472	@,
.L1469:
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	r4, r3	@ zero_byte,
	blt	.L1468	@,
.L1490:
	mov	r3, #0	@ zero_bit,
.L1474:
	add	r0, r3, r4, asl #3	@, D.47685, zero_bit, zero_byte,
.L1466:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1470:
	subs	sl, sl, #1	@ r, r,
	sub	r7, r7, #64	@ ivtmp.4848, ivtmp.4848,
	bne	.L1473	@,
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	r4, r3	@ zero_byte,
	bge	.L1490	@,
.L1468:
	ldr	r2, [fp, #-48]	@, %sfp
	sub	r0, r2, #1	@ tmp179,,
	rsb	ip, r4, r0	@ tmp178, zero_byte, tmp179
	ldrb	r3, [r8, ip]	@ zero_extendqisi2	@ Byte,
	tst	r3, #1	@ Byte,
	bne	.L1490	@,
	mov	r3, r3, lsr #1	@ Byte.4852, Byte,
	tst	r3, #1	@ Byte.4852,
	movne	r3, #1	@ zero_bit,
	bne	.L1474	@,
	mov	r3, r3, lsr #1	@ Byte.4855, Byte.4852,
	tst	r3, #1	@ Byte.4855,
	movne	r3, #2	@ zero_bit,
	bne	.L1474	@,
	mov	r3, r3, lsr #1	@ Byte.4858, Byte.4855,
	tst	r3, #1	@ Byte.4858,
	movne	r3, #3	@ zero_bit,
	bne	.L1474	@,
	mov	r3, r3, lsr #1	@ Byte.4861, Byte.4858,
	tst	r3, #1	@ Byte.4861,
	movne	r3, #4	@ zero_bit,
	bne	.L1474	@,
	mov	r3, r3, lsr #1	@ Byte.4864, Byte.4861,
	tst	r3, #1	@ Byte.4864,
	movne	r3, #5	@ zero_bit,
	bne	.L1474	@,
	mov	r3, r3, lsr #1	@ Byte.4867, Byte.4864,
	tst	r3, #1	@ Byte.4867,
	movne	r3, #6	@ zero_bit,
	bne	.L1474	@,
	movs	r3, r3, lsr #1	@, Byte.4867,
	movne	r3, #7	@, zero_bit,
	moveq	r3, #8	@, zero_bit,
	b	.L1474	@
.L1491:
	mov	r2, r1	@, len
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC48	@,
	movt	r1, #:upper16:.LC48	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.47685,
	b	.L1466	@
	.fnend
	.size	MVC_FindZeroBitsInSeg, .-MVC_FindZeroBitsInSeg
	.align	2
	.global	MVC_FindTrailZeros
	.type	MVC_FindTrailZeros, %function
MVC_FindTrailZeros:
	.fnstart
.LFB1672:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pMvcCtx, pMvcCtx
	mvneq	r0, #0	@ D.47716,
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	ldr	r3, [r4, #232]	@ prephitmp.4895, <variable>.pCurrNal
	ldr	r2, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r2, #1	@ <variable>.nal_segment,
	bls	.L1495	@,
	ldr	r1, [r3, #40]	@, <variable>.bitstream_length
	ldr	r0, [r3, #36]	@, <variable>.streamBuffer
	bl	MVC_FindZeroBitsInSeg	@
	ldr	r3, [r4, #232]	@ prephitmp.4895, <variable>.pCurrNal
	ldr	r1, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r0, r1, asl #3	@ zero_bit, <variable>.bitstream_length,
	bcs	.L1500	@,
	cmn	r0, #1	@ zero_bit,
	beq	.L1495	@,
.L1497:
	add	r1, r0, #1	@ tmp152, zero_bit,
	str	r1, [r3, #72]	@ tmp152, <variable>.nal_trail_zero_bit_num
	ldr	r3, [r4, #232]	@ temp.4910, <variable>.pCurrNal
	ldr	lr, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	lr, #1	@ <variable>.nal_segment,
	bls	.L1498	@,
	ldr	r0, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	cmp	ip, r0, asl #3	@ <variable>.nal_trail_zero_bit_num, <variable>.bitstream_length,
	bcs	.L1501	@,
.L1498:
	mov	r0, #0	@ D.47716,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1501:
	ldr	r1, [r3, #60]	@, <variable>.StreamID
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp160,
	mov	r1, #1	@ tmp162,
	mov	r0, r3	@ D.47716, tmp160
	str	r3, [r2, #36]	@ tmp160, <variable>.streamBuffer
	ldr	ip, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r1, [ip, #68]	@ tmp162, <variable>.nal_segment
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r3, [r2, #72]	@ tmp160, <variable>.nal_trail_zero_bit_num
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1500:
	ldr	r1, [r3, #60]	@, <variable>.StreamID
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #0	@ tmp147,
	mov	r0, #1	@ tmp149,
	str	ip, [r2, #36]	@ tmp147, <variable>.streamBuffer
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [r3, #68]	@ tmp149, <variable>.nal_segment
	ldr	r3, [r4, #232]	@ prephitmp.4895, <variable>.pCurrNal
.L1495:
	ldr	r1, [r3, #12]	@, <variable>.bitstream_length
	ldr	r0, [r3, #8]	@, <variable>.streamBuffer
	bl	MVC_FindZeroBitsInSeg	@
	ldr	r3, [r4, #232]	@ prephitmp.4895, <variable>.pCurrNal
	b	.L1497	@
	.fnend
	.size	MVC_FindTrailZeros, .-MVC_FindTrailZeros
	.align	2
	.global	mvc_assign_quant_params
	.type	mvc_assign_quant_params, %function
mvc_assign_quant_params:
	.fnstart
.LFB1625:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #44
	sub	sp, sp, #44	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r2, r0, #0	@, pSPS
	mov	r8, r1	@ pPPS, pPPS
	str	r2, [fp, #-56]	@, %sfp
	beq	.L1525	@,
	cmp	r1, #0	@ pPPS,
	beq	.L1526	@,
	ldrb	r3, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r3, #0	@ <variable>.pic_scaling_matrix_present_flag,
	beq	.L1506	@,
	ldr	sl, [fp, #-56]	@, %sfp
	add	r7, r1, #2016	@, pPPS,
	str	r7, [fp, #-60]	@, %sfp
	add	r7, r1, #1728	@ ivtmp.4950, pPPS,
	add	r9, sl, #2672	@,,
	str	r9, [fp, #-64]	@, %sfp
	ldr	r9, [fp, #-60]	@ ivtmp.4958, %sfp
	add	r6, r1, #2064	@, pPPS,
	ldr	r5, [fp, #-56]	@, %sfp
	mov	sl, r7	@ ivtmp.4972, ivtmp.4950
	str	r6, [fp, #-68]	@, %sfp
	mov	r6, r1	@ ivtmp.4949, pPPS
	ldr	r1, [fp, #-56]	@, %sfp
	add	r4, r5, #2720	@,,
	str	r8, [fp, #-52]	@ pPPS, %sfp
	mov	r5, #1	@ ivtmp.4946,
	str	r4, [fp, #-72]	@, %sfp
	mov	r8, r9	@ ivtmp.4971, ivtmp.4971
	mov	r4, #0	@ ivtmp.4945,
	add	r0, r1, #2384	@ ivtmp.4953,,
	str	r7, [fp, #-48]	@ ivtmp.4950, %sfp
	str	r0, [fp, #-80]	@ ivtmp.4953, %sfp
.L1507:
	cmp	r4, #5	@ ivtmp.4945,
	bhi	.L1508	@,
	ldr	r3, [fp, #-52]	@, %sfp
	add	r2, r3, r4	@ tmp164,, ivtmp.4945
	ldrsb	r1, [r2, #5]	@ tmp165, <variable>.pic_scaling_list_present_flag
	cmp	r1, #0	@ tmp165,
	bne	.L1509	@,
	cmp	r4, #0	@ ivtmp.4945,
	bne	.L1510	@,
	ldr	ip, [fp, #-56]	@, %sfp
	ldrb	r0, [ip, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r0, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1511	@,
	movw	ip, #:lower16:.LANCHOR2	@,
	movt	ip, #:upper16:.LANCHOR2	@,
	ldmia	ip, {r0, r1, r2, r3}	@,,,,
	ldr	ip, [fp, #-60]	@, %sfp
	stmia	ip, {r0, r1, r2, r3}	@,,,,
	b	.L1512	@
.L1508:
	ldr	ip, [fp, #-52]	@, %sfp
	add	r1, ip, r4	@ tmp195,, ivtmp.4945
	ldrsb	r0, [r1, #5]	@ tmp196, <variable>.pic_scaling_list_present_flag
	cmp	r0, #0	@ tmp196,
	bne	.L1518	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldrb	lr, [r2, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1519	@,
	ldr	r3, .L1528	@,
	cmp	r4, #6	@ ivtmp.4945,
	ldr	r1, .L1528+4	@,
	mov	r0, sl	@, ivtmp.4972
	mov	r2, #64	@,
	moveq	r1, r3	@,
	bl	memcpy	@
.L1513:
	cmp	r5, #7	@ ivtmp.4946,
	bhi	.L1506	@,
.L1512:
	ldr	ip, [fp, #-48]	@, %sfp
	add	r4, r4, #1	@ ivtmp.4945, ivtmp.4945,
	ldr	r3, [fp, #-80]	@, %sfp
	add	r5, r5, #1	@ ivtmp.4946, ivtmp.4946,
	add	r0, ip, #64	@,,
	add	r6, r6, #4	@ ivtmp.4949, ivtmp.4949,
	add	r2, r3, #64	@,,
	str	r0, [fp, #-48]	@, %sfp
	str	r2, [fp, #-80]	@, %sfp
	add	r7, r7, #64	@ ivtmp.4950, ivtmp.4950,
	add	r9, r9, #16	@ ivtmp.4958, ivtmp.4958,
	add	r8, r8, #16	@ ivtmp.4971, ivtmp.4971,
	add	sl, sl, #64	@ ivtmp.4972, ivtmp.4972,
	b	.L1507	@
.L1509:
	ldr	r2, [r6, #1984]	@ tmp188, <variable>.UseDefaultScalingMatrix4x4Flag
	cmp	r2, #0	@ tmp188,
	beq	.L1513	@,
	cmp	r4, #2	@ ivtmp.4945,
	movw	r3, #:lower16:.LANCHOR2	@,
	movt	r3, #:upper16:.LANCHOR2	@,
	ldr	r1, .L1528+8	@,
	mov	r0, r8	@, ivtmp.4971
	mov	r2, #16	@,
	movls	r1, r3	@,
	bl	memcpy	@
	cmp	r5, #7	@ ivtmp.4946,
	bls	.L1512	@,
.L1506:
	mov	r0, #0	@ D.43125,
.L1504:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1518:
	ldr	r0, [r6, #1984]	@ tmp208, <variable>.UseDefaultScalingMatrix8x8Flag
	cmp	r0, #0	@ tmp208,
	beq	.L1513	@,
	ldr	ip, .L1528	@,
	cmp	r4, #6	@ ivtmp.4945,
	ldr	r1, .L1528+4	@,
	mov	r0, r7	@, ivtmp.4950
	mov	r2, #64	@,
	moveq	r1, ip	@,
	bl	memcpy	@
	b	.L1513	@
.L1510:
	cmp	r4, #3	@ ivtmp.4945,
	beq	.L1527	@,
	mov	r0, r9	@, ivtmp.4958
	sub	r1, r9, #16	@, ivtmp.4958,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L1513	@
.L1511:
	ldr	ip, [fp, #-64]	@, %sfp
	ldmia	ip, {r0, r1, r2, r3}	@,,,,
	ldr	ip, [fp, #-60]	@, %sfp
	stmia	ip, {r0, r1, r2, r3}	@,,,,
	b	.L1513	@
.L1527:
	ldr	r1, [fp, #-56]	@, %sfp
	ldrb	lr, [r1, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1515	@,
	ldr	r0, [fp, #-68]	@, %sfp
	mov	r2, #16	@,
	ldr	r1, .L1528+8	@,
	bl	memcpy	@
	b	.L1512	@
.L1519:
	ldr	r0, [fp, #-48]	@, %sfp
	mov	r2, #64	@,
	ldr	r1, [fp, #-80]	@, %sfp
	bl	memcpy	@
	b	.L1513	@
.L1515:
	ldr	r0, [fp, #-68]	@, %sfp
	mov	r2, #16	@,
	ldr	r1, [fp, #-72]	@, %sfp
	bl	memcpy	@
	b	.L1513	@
.L1525:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #6640	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43125,
	b	.L1504	@
.L1526:
	mov	r0, r1	@, pPPS
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #6641	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43125,
	b	.L1504	@
.L1529:
	.align	2
.L1528:
	.word	.LANCHOR2+32
	.word	.LANCHOR2+96
	.word	.LANCHOR2+16
	.fnend
	.size	mvc_assign_quant_params, .-mvc_assign_quant_params
	.align	2
	.global	mvc_append_interview_list
	.type	mvc_append_interview_list, %function
mvc_append_interview_list:
	.fnstart
.LFB1607:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:10770768	@ tmp159,
	movt	ip, #:upper16:10770768	@ tmp159,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r0, #:lower16:11118800	@ tmp161,
	movt	r0, #:upper16:11118800	@ tmp161,
	ldr	ip, [r4, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	str	r2, [fp, #-64]	@ list, %sfp
	adds	r2, ip, #1	@ D.41867, <variable>.CurrSUBSPS.num_views_minus1,
	str	r3, [fp, #-60]	@ listXsize, %sfp
	ldr	r5, [r4, r0]	@ D.41868, <variable>.CurrSlice.view_id
	beq	.L1531	@,
	movw	r7, #:lower16:10770772	@ tmp162,
	movt	r7, #:upper16:10770772	@ tmp162,
	ldr	r3, [r4, r7]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r5, r3	@ D.41868, <variable>.CurrSUBSPS.view_id
	beq	.L1531	@,
	tst	ip, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r8, #:lower16:10770776	@ ivtmp.5021,
	movt	r8, #:upper16:10770776	@ ivtmp.5021,
	mov	ip, #0	@ i,
	add	r3, r4, r8	@ ivtmp.5021, pMvcCtx, ivtmp.5021
	beq	.L1532	@,
	ldr	sl, [r3], #4	@ D.48629, <variable>.CurrSUBSPS.view_id
	mov	ip, #1	@ i,
	mov	r8, ip	@ i.636, i
	cmp	r5, sl	@ D.41868, D.48629
	bne	.L1532	@,
.L1533:
	movw	r7, #:lower16:11117169	@ tmp165,
	movt	r7, #:upper16:11117169	@ tmp165,
	movw	r5, #:lower16:11123112	@ tmp196,
	movt	r5, #:upper16:11123112	@ tmp196,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movw	r7, #:lower16:11151963	@ tmp193,
	movt	r7, #:upper16:11151963	@ tmp193,
	add	sl, r8, r1, asl #1	@, tmp168, i.636, listidx,
	cmp	r3, #0	@ <variable>.CurrSlice.anchor_pic_flag,
	ldrb	r1, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movwne	r2, #:lower16:2692694	@ tmp169,
	movwne	r3, #:lower16:10770796	@ tmp175,
	movweq	r2, #:lower16:2692702	@ tmp182,
	movweq	r3, #:lower16:10770828	@ tmp188,
	movtne	r2, #:upper16:2692694	@ tmp169,
	movtne	r3, #:upper16:10770796	@ tmp175,
	movteq	r2, #:upper16:2692702	@ tmp182,
	movteq	r3, #:upper16:10770828	@ tmp188,
	addne	r2, sl, r2	@ tmp169, tmp168, tmp169
	addeq	r2, sl, r2	@ tmp182, tmp181, tmp182
	add	ip, r4, r3	@ tmp188, pMvcCtx, tmp188
	ldr	r3, [r4, r5]	@ D.41884, <variable>.DPB.size
	add	r0, r4, r2, asl #2	@, tmp186, pMvcCtx, tmp182,
	cmp	r1, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@,
	moveq	r2, #1	@,
	subs	r5, r3, #1	@ i, D.41884,
	add	r8, ip, sl, asl #2	@, ref_view_id, tmp188, tmp181,
	ldr	sl, [r0, #4]	@ num_ref_views,
	str	r2, [fp, #-52]	@, %sfp
	bmi	.L1549	@,
	movw	r9, #:lower16:2780730	@ tmp197,
	movt	r9, #:upper16:2780730	@ tmp197,
	add	r6, r3, r9	@ tmp197, D.41884, tmp197
	movw	r1, #:lower16:11151961	@,
	movw	r9, #:lower16:11152524	@ tmp253,
	movt	r1, #:upper16:11151961	@,
	movw	r2, #:lower16:11152504	@,
	movt	r9, #:upper16:11152524	@ tmp253,
	movt	r2, #:upper16:11152504	@,
	add	r6, r4, r6, asl #2	@, ivtmp.5017, pMvcCtx, tmp197,
	str	r1, [fp, #-48]	@, %sfp
	str	r2, [fp, #-56]	@, %sfp
	b	.L1548	@
.L1566:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r3, #3	@ <variable>.is_used,
	ldreq	r3, [r1, #620]	@ poc, <variable>.frame.MVC_DecPOC
	bne	.L1538	@,
.L1540:
	ldr	r0, [fp, #-52]	@, %sfp
	add	ip, r0, r1	@ tmp222,, D.41887
	ldrb	r2, [ip, #12]	@ zero_extendqisi2	@ tmp224, <variable>.inter_view_flag
	cmp	r2, #0	@ tmp224,
	beq	.L1538	@,
	ldr	r2, [r4, r9]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	cmp	r2, r3	@ <variable>.CurrPic.thispoc, poc
	beq	.L1565	@,
.L1538:
	subs	r5, r5, #1	@ i, i,
	sub	r6, r6, #4	@ ivtmp.5017, ivtmp.5017,
	bmi	.L1549	@,
.L1548:
	ldr	r1, [r6, #-4]	@ D.41887, <variable>.DPB.fs
	cmp	r1, #0	@ D.41887,
	beq	.L1538	@,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ temp.5028, <variable>.CurrPic.structure
	cmp	r3, #0	@ temp.5028,
	beq	.L1566	@,
	cmp	r3, #1	@ temp.5028,
	beq	.L1567	@,
	cmp	r3, #2	@ temp.5028,
	bne	.L1538	@,
	ldr	r0, [fp, #-48]	@, %sfp
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	ldrb	r2, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	ubfx	r3, r3, #1, #1	@ pic_avail.5024, <variable>.is_used,,
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	beq	.L1543	@,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	ip, [r1, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	ldr	r2, [r0, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	ip, r2	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	movne	r3, #0	@, pic_avail.5024
	andeq	r3, r3, #1	@,, pic_avail.5024, pic_avail.5024
.L1543:
	cmp	r3, #0	@ pic_avail.5024,
	beq	.L1538	@,
	ldr	r3, [r1, #692]	@ poc, <variable>.bottom_field.MVC_DecPOC
	b	.L1540	@
.L1534:
	ldr	r6, [r0], #4	@ D.48629, <variable>.CurrSUBSPS.view_id
	cmp	r5, r6	@ D.41868, D.48629
	beq	.L1533	@,
	ldr	r6, [r3, #4]	@ D.48629, <variable>.CurrSUBSPS.view_id
	mov	r8, ip	@ i.636, i
	add	r3, r0, #4	@ ivtmp.5021, tmp265,
	cmp	r5, r6	@ D.41868, D.48629
	beq	.L1533	@,
.L1532:
	add	r8, ip, #1	@ i.636, i,
	mov	r0, r3	@ tmp265, ivtmp.5021
	cmp	r2, r8	@ D.41867, i.636
	add	ip, r8, #1	@ i, i.636,
	bhi	.L1534	@,
	b	.L1533	@
.L1567:
	ldr	r3, [fp, #-48]	@, %sfp
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	and	r3, r0, #1	@ pic_avail, <variable>.is_used,
	cmp	ip, #0	@ <variable>.CurrPic.field_pair_flag,
	beq	.L1542	@,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r1, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	ldr	r2, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r2, [r2, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r0, r2	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	movne	r3, #0	@, pic_avail
	andeq	r3, r3, #1	@,, pic_avail, pic_avail
.L1542:
	cmp	r3, #0	@ pic_avail,
	ldrne	r3, [r1, #656]	@ poc, <variable>.top_field.MVC_DecPOC
	bne	.L1540	@,
	subs	r5, r5, #1	@ i, i,
	sub	r6, r6, #4	@ ivtmp.5017, ivtmp.5017,
	bpl	.L1548	@,
.L1549:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1565:
	cmp	sl, #0	@ num_ref_views,
	ldr	r0, [r1, #56]	@ D.41931, <variable>.view_id
	beq	.L1538	@,
	ldr	r3, [r8, #0]	@ tmp227,* ref_view_id
	cmp	r0, r3	@ D.41931, tmp227
	moveq	r3, #0	@ i.638,
	beq	.L1545	@,
	tst	sl, #1	@ num_ref_views,
	mov	r2, #0	@ i,
	bne	.L1546	@,
	mov	r2, #1	@ i,
	cmp	sl, r2	@ num_ref_views, i
	mov	r3, r2	@ i.638, i
	bls	.L1545	@,
	ldr	ip, [r8, #4]	@ tmp271,
	cmp	r0, ip	@ D.41931, tmp271
	bne	.L1546	@,
	b	.L1545	@
.L1547:
	ldr	ip, [r8, r3, asl #2]	@ tmp229,* ref_view_id
	cmp	r0, ip	@ D.41931, tmp229
	beq	.L1545	@,
	ldr	ip, [r8, r2, asl #2]	@ tmp273,* ref_view_id
	mov	r3, r2	@ i.638, i
	cmp	r0, ip	@ D.41931, tmp273
	beq	.L1545	@,
.L1546:
	add	r3, r2, #1	@ i.638, i,
	cmp	sl, r3	@ num_ref_views, i.638
	add	r2, r3, #1	@ i, i.638,
	bhi	.L1547	@,
.L1545:
	cmp	sl, r3	@ num_ref_views, i.638
	bls	.L1538	@,
	ldr	r0, [fp, #-60]	@, %sfp
	mov	r2, #712	@,
	ldr	ip, [fp, #-64]	@, %sfp
	ldr	lr, [r0, #0]	@ tmp234,
	mla	r0, r2, lr, ip	@,, tmp234,
	bl	memcpy	@
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r1, [fp, #-64]	@, %sfp
	mov	r0, #712	@,
	ldr	r2, [ip, #0]	@ tmp242,
	mla	r3, r0, r2, r1	@ D.41939,, tmp242,
	str	r3, [r3, #604]	@ D.41939, <variable>.frame.frame_store
	str	r3, [r3, #676]	@ D.41939, <variable>.bottom_field.frame_store
	str	r3, [r3, #640]	@ D.41939, <variable>.top_field.frame_store
	ldr	r2, [ip, #0]	@ tmp244,
	ldr	r3, [r4, #52]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	mla	r2, r0, r2, r1	@ tmp247,, tmp244,
	sub	r1, r3, #1	@ tmp249, <variable>.TotalPmvNum,
	str	r1, [r2, #48]	@ tmp249, <variable>.pmv_address_idc
	ldr	r3, [ip, #0]	@ temp.5038,
	cmp	r3, sl	@ temp.5038, num_ref_views
	beq	.L1549	@,
	add	r1, r3, #1	@ tmp250, temp.5038,
	str	r1, [ip, #0]	@ tmp250,
	b	.L1538	@
.L1531:
	mov	r8, #0	@ i.636,
	b	.L1533	@
	.fnend
	.size	mvc_append_interview_list, .-mvc_append_interview_list
	.align	2
	.global	MVC_IsNewPicNal
	.type	MVC_IsNewPicNal, %function
MVC_IsNewPicNal:
	.fnstart
.LFB1669:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ tmp140,
	mov	r4, r0	@ pNewPicDetector, pNewPicDetector
	add	r1, r1, #3	@ pu8.5064, pu8,
	and	r0, r2, #31	@ tmp141, tmp140,
	sub	r3, r0, #1	@ tmp142, tmp141,
	cmp	r3, #7	@ tmp142,
	ldrls	pc, [pc, r3, asl #2]	@ tmp142
	b	.L1569	@
.L1572:
	.word	.L1570
	.word	.L1569
	.word	.L1569
	.word	.L1569
	.word	.L1570
	.word	.L1569
	.word	.L1571
	.word	.L1571
.L1571:
	ldr	r0, [r4, #0]	@ tmp157,* pNewPicDetector
	mov	r3, #1	@ tmp158,
	str	r3, [r4, #0]	@ tmp158,* pNewPicDetector
	cmp	r0, #0	@ tmp157,
	mvnne	r0, #0	@, ret,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1570:
	ldr	r5, [r4, #0]	@ tmp143,* pNewPicDetector
	cmp	r5, #0	@ tmp143,
	beq	.L1579	@,
.L1574:
	mvn	r0, #0	@ ret,
.L1575:
	mov	r1, #0	@ tmp156,
	str	r1, [r4, #0]	@ tmp156,* pNewPicDetector
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1569:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1579:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ tmp146,
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ tmp144,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ tmp151,
	ldrb	lr, [r1, #4]	@ zero_extendqisi2	@ tmp149,
	mov	r3, r2, asl #16	@ tmp147, tmp146,
	orr	r1, r3, r0, asl #8	@, tmp148, tmp147, tmp144,
	orr	r6, r1, lr	@ tmp150, tmp148, tmp149
	orr	r6, r6, ip, asl #24	@, tmpbits, tmp150, tmp151,
	mov	r0, r6	@, tmpbits
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	bhi	.L1574	@,
	mov	ip, r0, asl #1	@ tmp153, zeros,
	rsb	r0, ip, #31	@ tmp154, tmp153,
	mov	r6, r6, lsr r0	@ tmp155, tmpbits,
	cmp	r6, #1	@ tmp155,
	moveq	r0, r5	@ ret, tmp143
	bne	.L1574	@,
	b	.L1575	@
	.fnend
	.size	MVC_IsNewPicNal, .-MVC_IsNewPicNal
	.align	2
	.global	MVC_WritePicMsg
	.type	MVC_WritePicMsg, %function
MVC_WritePicMsg:
	.fnstart
.LFB1628:
	@ args = 0, pretend = 0, frame = 432
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #444
	sub	sp, sp, #444	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r0, #:lower16:11152580	@,
	movt	r0, #:upper16:11152580	@,
	str	r0, [fp, #-48]	@, %sfp
	movw	r9, #:lower16:11152172	@ tmp354,
	ldr	r6, [fp, #-48]	@, %sfp
	movt	r9, #:upper16:11152172	@ tmp354,
	movw	r5, #:lower16:11152520	@ tmp350,
	movw	r7, #:lower16:11151963	@ tmp352,
	ldr	ip, [r4, r9]	@ <variable>.CurrPic.fs_image.image_id, <variable>.CurrPic.fs_image.image_id
	movt	r5, #:upper16:11152520	@ tmp350,
	ldr	r8, [r4, r6]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movt	r7, #:upper16:11151963	@ tmp352,
	ldr	r2, [r4, r5]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	mov	r0, #2	@,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:.LC49	@,
	movt	r1, #:upper16:.LC49	@,
	str	ip, [sp, #0]	@ <variable>.CurrPic.fs_image.image_id,
	str	r8, [sp, #4]	@ <variable>.CurrPic.pmv_address_idc,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:11151984	@ tmp360,
	movw	r1, #:lower16:11152168	@ tmp365,
	movt	r2, #:upper16:11151984	@ tmp360,
	movt	r1, #:upper16:11152168	@ tmp365,
	movw	sl, #:lower16:11153808	@ tmp359,
	movt	sl, #:upper16:11153808	@ tmp359,
	ldrd	r8, [r4, r2]	@, pMvcCtx, tmp360
	movw	lr, #:lower16:11154924	@ tmp362,
	ldr	r3, [r4, r1]	@, <variable>.CurrPic.fs_image.image_stride
	movt	lr, #:upper16:11154924	@ tmp362,
	movw	ip, #:lower16:11154712	@ tmp364,
	movw	r2, #:lower16:11152564	@ tmp378,
	movt	ip, #:upper16:11154712	@ tmp364,
	movt	r2, #:upper16:11152564	@ tmp378,
	str	r3, [fp, #-64]	@, %sfp
	movw	r1, #:lower16:11153800	@ tmp370,
	strd	r8, [r4, sl]	@, pMvcCtx, tmp359
	movt	r1, #:upper16:11153800	@ tmp370,
	ldr	r9, [r4, #544]	@, <variable>.DecSlicePara
	movw	r3, #:lower16:11152568	@ tmp381,
	ldrb	r7, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movt	r3, #:upper16:11152568	@ tmp381,
	ldr	r5, [r4, r5]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movw	r0, #:lower16:11153816	@ tmp367,
	str	r9, [r4, lr]	@, <variable>.DecPicPara.pFirstSlice
	movw	lr, #:lower16:11109812	@ tmp388,
	ldr	sl, [fp, #-64]	@, %sfp
	movt	lr, #:upper16:11109812	@ tmp388,
	movt	r0, #:upper16:11153816	@ tmp367,
	strb	r7, [r4, r1]	@ <variable>.CurrPic.structure, <variable>.DecPicPara.pic_structure
	mov	r7, #0	@ tmp358,
	str	r7, [r4, #64]	@ tmp358, <variable>.SliceParaNum
	str	sl, [r4, ip]	@, <variable>.DecPicPara.imgstride
	movw	r1, #:lower16:11153820	@ tmp377,
	ldr	sl, [r4, r2]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movt	r1, #:upper16:11153820	@ tmp377,
	ldr	r2, [r4, #236]	@, <variable>.pCurrSPS
	movw	ip, #:lower16:11113844	@ tmp392,
	ldr	r7, [r4, r3]	@ <variable>.CurrPic.frame_height_in_mb, <variable>.CurrPic.frame_height_in_mb
	movt	ip, #:upper16:11113844	@ tmp392,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@, <variable>.CurrSPS.frame_mbs_only_flag
	movw	r6, #:lower16:11152504	@ tmp415,
	str	r5, [r4, r0]	@ <variable>.CurrPic.nal_ref_idc, <variable>.DecPicPara.nal_ref_idc
	movw	r0, #:lower16:11153832	@ tmp374,
	ldrb	r9, [r2, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movw	r2, #:lower16:11153824	@ tmp380,
	movt	r2, #:upper16:11153824	@ tmp380,
	str	r3, [fp, #-60]	@, %sfp
	movt	r0, #:upper16:11153832	@ tmp374,
	str	sl, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.DecPicPara.pic_height_in_mb
	str	r7, [r4, r2]	@ <variable>.CurrPic.frame_height_in_mb, <variable>.DecPicPara.frame_height_in_mb
	movw	r5, #:lower16:11113784	@ tmp395,
	ldr	r2, [r4, #236]	@, <variable>.pCurrSPS
	movt	r5, #:upper16:11113784	@ tmp395,
	str	r9, [r4, r0]	@ <variable>.mb_adaptive_frame_field_flag, <variable>.DecPicPara.mb_adaptive_frame_field_flag
	movw	r3, #:lower16:11153828	@ tmp383,
	movt	r3, #:upper16:11153828	@ tmp383,
	ldr	r8, [fp, #-60]	@, %sfp
	ldr	r9, [r2, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movw	sl, #:lower16:11153836	@ tmp391,
	ldr	lr, [r4, ip]	@ <variable>.CurrPPS.transform_8x8_mode_flag, <variable>.CurrPPS.transform_8x8_mode_flag
	movt	sl, #:upper16:11153836	@ tmp391,
	ldrb	r5, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	add	r9, r9, #1	@ tmp386, <variable>.pic_width_in_mbs_minus1,
	str	r9, [r4, r3]	@ tmp386, <variable>.DecPicPara.pic_width_in_mb
	movw	ip, #:lower16:11153803	@ tmp387,
	ldr	r9, [r4, #236]	@, <variable>.pCurrSPS
	movt	ip, #:upper16:11153803	@ tmp387,
	movw	r7, #:lower16:11153840	@ tmp394,
	movw	r2, #:lower16:11116048	@ tmp408,
	movt	r7, #:upper16:11153840	@ tmp394,
	movt	r2, #:upper16:11116048	@ tmp408,
	movw	r0, #:lower16:11113788	@ tmp402,
	movw	r1, #:lower16:11116060	@ tmp405,
	movt	r0, #:upper16:11113788	@ tmp402,
	movt	r1, #:upper16:11116060	@ tmp405,
	str	lr, [r4, sl]	@ <variable>.CurrPPS.transform_8x8_mode_flag, <variable>.DecPicPara.transform_8x8_mode_flag
	movt	r6, #:upper16:11152504	@ tmp415,
	strb	r8, [r4, ip]	@, <variable>.DecPicPara.frame_mbs_only_flag
	movw	ip, #:lower16:11153801	@ tmp397,
	str	r5, [r4, r7]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.DecPicPara.entropy_coding_mode_flag
	movt	ip, #:upper16:11153801	@ tmp397,
	ldr	sl, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	movw	r2, #:lower16:11116052	@ tmp411,
	ldr	r5, [r9, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	movt	r2, #:upper16:11116052	@ tmp411,
	ldr	lr, [r4, r1]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r1, #:lower16:11153852	@ tmp407,
	ldrb	r7, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPPS.constrained_intra_pred_flag, <variable>.CurrPPS.constrained_intra_pred_flag
	movt	r1, #:upper16:11153852	@ tmp407,
	movw	r3, #:lower16:11153844	@ tmp401,
	movt	r3, #:upper16:11153844	@ tmp401,
	strb	r5, [r4, ip]	@ <variable>.chroma_format_idc, <variable>.DecPicPara.chroma_format_idc
	movw	r0, #:lower16:11153848	@ tmp404,
	str	sl, [r4, r1]	@ <variable>.CurrPOC.toppoc, <variable>.DecPicPara.TopPoc
	movt	r0, #:upper16:11153848	@ tmp404,
	ldr	r1, [r4, r2]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPOC.bottompoc
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r7, [r4, r3]	@ <variable>.CurrPPS.constrained_intra_pred_flag, <variable>.DecPicPara.constrained_intra_pred_flag
	movw	r3, #:lower16:11153856	@ tmp410,
	movt	r3, #:upper16:11153856	@ tmp410,
	str	lr, [r4, r0]	@ <variable>.CurrPOC.ThisPOC, <variable>.DecPicPara.ThisPoc
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	str	r1, [r4, r3]	@ <variable>.CurrPOC.bottompoc, <variable>.DecPicPara.BottomPoc
	ldrsb	r1, [r2, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r5, r0, #0	@ pstLogicFs,
	beq	.L1613	@,
	ldr	r2, [r5, #544]	@ D.43671, <variable>.pstDecodeFs
	cmp	r2, #0	@ D.43671,
	ldreq	r3, [r5, #548]	@ prephitmp.5118, <variable>.pstDispOutFs
	beq	.L1584	@,
	ldr	r3, [r5, #548]	@ prephitmp.5118, <variable>.pstDispOutFs
	cmp	r3, #0	@ prephitmp.5118,
	beq	.L1584	@,
	movw	r2, #:lower16:11154620	@,
	movw	r6, #:lower16:11154108	@,
	movt	r2, #:upper16:11154620	@,
	movt	r6, #:upper16:11154108	@,
	movw	lr, #:lower16:11154364	@,
	movt	lr, #:upper16:11154364	@,
	add	r1, r4, r2	@, pMvcCtx,
	add	r3, r4, lr	@, pMvcCtx,
	add	r2, r4, r6	@, pMvcCtx,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_GetDecFsAddrTab	@
	ldr	ip, [r5, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movw	sl, #:lower16:11154092	@ tmp429,
	movt	sl, #:upper16:11154092	@ tmp429,
	add	r3, r4, #11141120	@, pMvcCtx,
	movw	r1, #:lower16:11154704	@,
	ldr	r7, [ip, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movt	r1, #:upper16:11154704	@,
	add	r2, r3, #13504	@,,
	add	r1, r4, r1	@, pMvcCtx,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	movw	r9, #:lower16:11154100	@ tmp437,
	str	r7, [r4, sl]	@ <variable>.PhyFsID, <variable>.DecPicPara.CurrPicImgIdc
	movt	r9, #:upper16:11154100	@ tmp437,
	bl	FSP_GetPmvAddrTab	@
	ldr	r0, [fp, #-48]	@, %sfp
	movw	r6, #:lower16:11154708	@ tmp440,
	movt	r6, #:upper16:11154708	@ tmp440,
	movw	r2, #:lower16:11123340	@ tmp446,
	movt	r2, #:upper16:11123340	@ tmp446,
	ldr	r8, [r4, r0]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movw	r7, #:lower16:11154096	@ tmp442,
	movw	r3, #:lower16:11154916	@ tmp445,
	movt	r7, #:upper16:11154096	@ tmp442,
	movt	r3, #:upper16:11154916	@ tmp445,
	str	r8, [r4, r9]	@ <variable>.CurrPic.pmv_address_idc, <variable>.DecPicPara.CurrPicPmvIdc
	ldr	ip, [r5, #560]	@ <variable>.HalfPmvOffset, <variable>.HalfPmvOffset
	ldr	r8, [r4, r2]	@ <variable>.APC.size, <variable>.APC.size
	str	ip, [r4, r6]	@ <variable>.HalfPmvOffset, <variable>.DecPicPara.half_pmvblk_offset
	cmp	r8, #0	@ <variable>.APC.size,
	ldr	r1, [r5, #548]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	sl, [r1, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	str	r8, [r4, r3]	@ <variable>.APC.size, <variable>.DecPicPara.ApcSize
	str	sl, [r4, r7]	@ <variable>.PhyAddr, <variable>.DecPicPara.CurrPicImg2DAddr
	beq	.L1586	@,
	movw	ip, #:lower16:11123148	@ ivtmp.5172,
	movt	ip, #:upper16:11123148	@ ivtmp.5172,
	add	r7, r4, ip	@ ivtmp.5172, pMvcCtx, ivtmp.5172
	movw	r3, #:lower16:11154724	@ ivtmp.5175,
	movt	r3, #:upper16:11154724	@ ivtmp.5175,
	mov	ip, #1	@ i,
	ldr	r1, [r7, #0]	@ tmp451, <variable>.APC.idc
	add	r9, r4, r3	@ ivtmp.5175, pMvcCtx, ivtmp.5175
	ldr	r0, [r7, #64]	@ tmp452, <variable>.APC.poc
	cmp	ip, r8	@ i, <variable>.APC.size
	ldr	sl, [r7, #128]	@ tmp453, <variable>.APC.poc
	sub	r5, r8, #1	@ tmp1933, <variable>.APC.size,
	str	r1, [r9, #0]	@ tmp451, <variable>.DecPicPara.Apc2Idc
	and	r5, r5, ip	@ tmp1935, tmp1933,
	str	r0, [r9, #64]	@ tmp452, <variable>.DecPicPara.Apc2Poc
	add	r2, r7, #4	@ ivtmp.5172, ivtmp.5172,
	str	sl, [r9, #128]	@ tmp453, <variable>.DecPicPara.Apc2Poc
	add	r3, r9, #4	@ ivtmp.5175, ivtmp.5175,
	bcs	.L1586	@,
	cmp	r5, #0	@ tmp1935,
	beq	.L1612	@,
	ldr	r5, [r2, #0]	@ tmp2010, <variable>.APC.idc
	mov	ip, #2	@ i,
	ldr	r6, [r2, #64]	@ tmp2011, <variable>.APC.poc
	cmp	ip, r8	@ i, <variable>.APC.size
	ldr	r7, [r2, #128]	@ tmp2012, <variable>.APC.poc
	add	r2, r2, #4	@ ivtmp.5172, ivtmp.5172,
	str	r5, [r3, #0]	@ tmp2010, <variable>.DecPicPara.Apc2Idc
	str	r6, [r3, #64]	@ tmp2011, <variable>.DecPicPara.Apc2Poc
	str	r7, [r3, #128]	@ tmp2012, <variable>.DecPicPara.Apc2Poc
	add	r3, r3, #4	@ ivtmp.5175, ivtmp.5175,
	bcs	.L1586	@,
.L1612:
	mov	r9, r4	@ pMvcCtx, pMvcCtx
.L1587:
	add	r0, r2, #4	@ tmp1937, ivtmp.5172,
	ldmia	r2, {r5, sl}	@ phole ldm
	add	ip, ip, #2	@ i, i,
	ldr	r7, [r2, #64]	@ tmp1943, <variable>.APC.poc
	add	r1, r3, #4	@ tmp1938, ivtmp.5175,
	ldr	r6, [r2, #128]	@ tmp1944, <variable>.APC.poc
	cmp	ip, r8	@ i, <variable>.APC.size
	ldr	r4, [r0, #64]	@ tmp1949, <variable>.APC.poc
	add	r2, r0, #4	@ ivtmp.5172, tmp1937,
	ldr	lr, [r0, #128]	@ tmp1950, <variable>.APC.poc
	str	r7, [r3, #64]	@ tmp1943, <variable>.DecPicPara.Apc2Poc
	str	r6, [r3, #128]	@ tmp1944, <variable>.DecPicPara.Apc2Poc
	stmia	r3, {r5, sl}	@ phole stm
	add	r3, r1, #4	@ ivtmp.5175, tmp1938,
	str	r4, [r1, #64]	@ tmp1949, <variable>.DecPicPara.Apc2Poc
	str	lr, [r1, #128]	@ tmp1950, <variable>.DecPicPara.Apc2Poc
	bcc	.L1587	@,
	mov	r4, r9	@ pMvcCtx, pMvcCtx
.L1586:
	movw	r2, #:lower16:11109819	@ tmp454,
	movt	r2, #:upper16:11109819	@ tmp454,
	ldrb	r8, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSPS.seq_scaling_matrix_present_flag, <variable>.CurrSPS.seq_scaling_matrix_present_flag
	cmp	r8, #0	@ <variable>.CurrSPS.seq_scaling_matrix_present_flag,
	beq	.L1614	@,
	movw	r3, #:lower16:11113802	@ tmp940,
	movt	r3, #:upper16:11113802	@ tmp940,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ prephitmp.5121, <variable>.CurrPPS.pic_scaling_matrix_present_flag
.L1589:
	cmp	r2, #1	@ prephitmp.5121,
	beq	.L1615	@,
	movw	r1, #:lower16:11153860	@ ivtmp.5167,
	movt	r1, #:upper16:11153860	@ ivtmp.5167,
	add	r6, r4, r1	@ ivtmp.5167, pMvcCtx, ivtmp.5167
	mov	r1, #0	@ i.5196,
.L1594:
	add	r7, r1, #1	@ tmp1931, i.5196,
	movw	r2, #:lower16:2778116	@ tmp1429,
	movt	r2, #:upper16:2778116	@ tmp1429,
	add	r5, r1, r2	@ tmp1429, i.5196, tmp1429
	add	lr, r7, r2	@ tmp1997, tmp1931, tmp1997
	add	r1, r7, #1	@ i.5196, tmp1931,
	ldr	ip, [r4, lr, asl #2]	@ D.43786, <variable>.CurrSPS.qmatrix4x4
	cmp	r1, #24	@ i.5196,
	ldr	r8, [r4, r5, asl #2]	@ D.43786, <variable>.CurrSPS.qmatrix4x4
	mov	lr, r6	@ tmp1932, ivtmp.5167
	bic	sl, ip, #16711680	@ tmp2001, D.43786,
	ubfx	r7, ip, #8, #8	@ tmp2003, D.43786,,
	bic	r9, r8, #16711680	@ tmp1433, D.43786,
	ubfx	r3, r8, #8, #8	@ tmp1435, D.43786,,
	bic	r0, r9, #65280	@ tmp1433, tmp1433,
	bic	r2, sl, #65280	@ tmp2001, tmp2001,
	mov	r5, r8, lsr #8	@ tmp1441, D.43786,
	mov	r9, ip, lsr #8	@ tmp2007, D.43786,
	orr	sl, r0, r3, asl #16	@, tmp1437, tmp1433, tmp1435,
	and	r8, r5, #65280	@ tmp1440, tmp1441,
	orr	r3, r2, r7, asl #16	@, tmp2005, tmp2001, tmp2003,
	and	ip, r9, #65280	@ tmp2008, tmp2007,
	orr	r0, sl, r8	@ tmp1442, tmp1437, tmp1440
	orr	r7, r3, ip	@ tmp2009, tmp2005, tmp2008
	str	r0, [lr], #4	@ tmp1442, <variable>.DecPicPara.Qmatrix
	str	r7, [r6, #4]	@ tmp2009, <variable>.DecPicPara.Qmatrix
	add	r6, lr, #4	@ ivtmp.5167, tmp1932,
	bne	.L1594	@,
	movw	sl, #:lower16:11112564	@ tmp1443,
	movt	sl, #:upper16:11112564	@ tmp1443,
	movw	r2, #:lower16:11112560	@ tmp1444,
	movw	r8, #:lower16:11112572	@ tmp1472,
	movt	r2, #:upper16:11112560	@ tmp1444,
	movt	r8, #:upper16:11112572	@ tmp1472,
	movw	r6, #:lower16:11112568	@ tmp1473,
	movw	r9, #:lower16:11112604	@,
	movt	r6, #:upper16:11112568	@ tmp1473,
	movt	r9, #:upper16:11112604	@,
	movw	r3, #:lower16:11112600	@,
	str	r9, [fp, #-48]	@, %sfp
	movt	r3, #:upper16:11112600	@,
	movw	r9, #:lower16:11112612	@,
	str	r3, [fp, #-60]	@, %sfp
	movt	r9, #:upper16:11112612	@,
	movw	r3, #:lower16:11112608	@,
	str	r9, [fp, #-84]	@, %sfp
	movt	r3, #:upper16:11112608	@,
	movw	r9, #:lower16:11112620	@,
	str	r3, [fp, #-104]	@, %sfp
	movt	r9, #:upper16:11112620	@,
	movw	r3, #:lower16:11112616	@,
	str	r9, [fp, #-76]	@, %sfp
	movt	r3, #:upper16:11112616	@,
	movw	r9, #:lower16:11112628	@,
	str	r3, [fp, #-64]	@, %sfp
	movt	r9, #:upper16:11112628	@,
	str	r9, [fp, #-80]	@, %sfp
	movw	r3, #:lower16:11112624	@,
	ldr	sl, [r4, sl]	@ temp.5213, <variable>.CurrSPS.qmatrix8x8
	movt	r3, #:upper16:11112624	@,
	ldr	r2, [r4, r2]	@ temp.5214, <variable>.CurrSPS.qmatrix8x8
	movw	r7, #:lower16:11112580	@ tmp1501,
	str	r3, [fp, #-68]	@, %sfp
	and	r9, sl, #255	@, temp.5213,
	ldr	r8, [r4, r8]	@ temp.5235, <variable>.CurrSPS.qmatrix8x8
	movt	r7, #:upper16:11112580	@ tmp1501,
	str	r9, [fp, #-116]	@, %sfp
	movw	ip, #:lower16:11112576	@ tmp1502,
	ldr	r3, [r4, r6]	@, <variable>.CurrSPS.qmatrix8x8
	movt	ip, #:upper16:11112576	@ tmp1502,
	mov	r6, sl, lsr #16	@, temp.5213,
	and	r9, r8, #255	@, temp.5235,
	str	r6, [fp, #-88]	@, %sfp
	movw	r5, #:lower16:11112588	@ tmp1530,
	str	r3, [fp, #-276]	@, %sfp
	movt	r5, #:upper16:11112588	@ tmp1530,
	ldr	r7, [r4, r7]	@ temp.5261, <variable>.CurrSPS.qmatrix8x8
	movw	r0, #:lower16:11112584	@ tmp1531,
	str	r9, [fp, #-108]	@, %sfp
	movt	r0, #:upper16:11112584	@ tmp1531,
	ldr	r3, [r4, ip]	@, <variable>.CurrSPS.qmatrix8x8
	mov	r6, r2, lsr #24	@, temp.5214,
	and	r9, r7, #255	@, temp.5261,
	str	r6, [fp, #-120]	@, %sfp
	movw	r1, #:lower16:11112596	@ tmp1559,
	movw	lr, #:lower16:11112592	@ tmp1560,
	str	r3, [fp, #-272]	@, %sfp
	movt	r1, #:upper16:11112596	@ tmp1559,
	ldr	r6, [r4, r5]	@ temp.5287, <variable>.CurrSPS.qmatrix8x8
	movt	lr, #:upper16:11112592	@ tmp1560,
	str	r9, [fp, #-100]	@, %sfp
	mov	r5, r8, lsr #16	@, temp.5235,
	ldr	ip, [r4, r0]	@, <variable>.CurrSPS.qmatrix8x8
	and	r3, r6, #255	@, temp.5287,
	str	r5, [fp, #-124]	@, %sfp
	ldr	r0, [fp, #-276]	@, %sfp
	str	ip, [fp, #-96]	@, %sfp
	ldr	r5, [r4, r1]	@ temp.5313, <variable>.CurrSPS.qmatrix8x8
	str	r3, [fp, #-112]	@, %sfp
	mov	ip, r0, lsr #24	@,,
	ldr	r9, [r4, lr]	@, <variable>.CurrSPS.qmatrix8x8
	and	lr, r5, #255	@, temp.5313,
	ldr	r1, [fp, #-48]	@, %sfp
	mov	r0, r7, lsr #16	@, temp.5261,
	str	ip, [fp, #-156]	@, %sfp
	str	r9, [fp, #-92]	@, %sfp
	ldr	ip, [r4, r1]	@ temp.5339, <variable>.CurrSPS.qmatrix8x8
	str	lr, [fp, #-172]	@, %sfp
	ldr	r3, [fp, #-60]	@, %sfp
	and	lr, ip, #255	@, temp.5339,
	ldr	r1, [fp, #-84]	@, %sfp
	ldr	r9, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	str	r0, [fp, #-128]	@, %sfp
	ldr	r3, [fp, #-104]	@, %sfp
	str	r9, [fp, #-72]	@, %sfp
	ldr	r0, [r4, r1]	@ temp.5365, <variable>.CurrSPS.qmatrix8x8
	ldr	r1, [fp, #-272]	@, %sfp
	str	lr, [fp, #-164]	@, %sfp
	ldr	r9, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	mov	lr, r1, lsr #24	@,,
	ldr	r3, [fp, #-76]	@, %sfp
	ldr	r1, [fp, #-64]	@, %sfp
	str	r9, [fp, #-60]	@, %sfp
	and	r9, r0, #255	@, temp.5365,
	str	lr, [fp, #-132]	@, %sfp
	ldr	lr, [r4, r3]	@ temp.5391, <variable>.CurrSPS.qmatrix8x8
	str	r9, [fp, #-168]	@, %sfp
	mov	r9, r6, lsr #16	@, temp.5287,
	ldr	r3, [r4, r1]	@, <variable>.CurrSPS.qmatrix8x8
	ldr	r1, [fp, #-80]	@, %sfp
	str	r9, [fp, #-136]	@, %sfp
	and	r9, lr, #255	@, temp.5391,
	str	r3, [fp, #-48]	@, %sfp
	ldr	r3, [r4, r1]	@, <variable>.CurrSPS.qmatrix8x8
	ldr	r1, [fp, #-68]	@, %sfp
	str	r9, [fp, #-64]	@, %sfp
	str	r3, [fp, #-104]	@, %sfp
	ldr	r3, [r4, r1]	@, <variable>.CurrSPS.qmatrix8x8
	ldr	r9, [fp, #-96]	@, %sfp
	str	r3, [fp, #-84]	@, %sfp
	ldr	r3, [fp, #-104]	@, %sfp
	mov	r1, r9, lsr #24	@,,
	str	r1, [fp, #-160]	@, %sfp
	mov	r9, r5, lsr #16	@, temp.5313,
	and	r1, r3, #255	@ tmp1680,,
	ldr	r3, [fp, #-92]	@, %sfp
	str	r9, [fp, #-144]	@, %sfp
	mov	r9, r3, lsr #24	@,,
	str	r9, [fp, #-148]	@, %sfp
	ldr	r9, [fp, #-72]	@, %sfp
	mov	r3, ip, lsr #16	@, temp.5339,
	str	r3, [fp, #-152]	@, %sfp
	mov	r3, r9, lsr #24	@,,
	str	r3, [fp, #-204]	@, %sfp
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r9, r0, lsr #16	@, temp.5365,
	str	r9, [fp, #-208]	@, %sfp
	mov	r9, r3, lsr #24	@,,
	str	r9, [fp, #-184]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	mov	r3, lr, lsr #16	@, temp.5391,
	str	r3, [fp, #-188]	@, %sfp
	mov	r3, r9, lsr #24	@,,
	ldr	r9, [fp, #-104]	@, %sfp
	str	r3, [fp, #-196]	@, %sfp
	mov	r3, r9, lsr #16	@,,
	ldr	r9, [fp, #-88]	@, %sfp
	str	r3, [fp, #-200]	@, %sfp
	mov	r3, r9, asl #24	@,,
	ldr	r9, [fp, #-108]	@, %sfp
	str	r3, [fp, #-76]	@, %sfp
	mov	r3, r9, asl #16	@,,
	ldr	r9, [fp, #-100]	@, %sfp
	str	r3, [fp, #-80]	@, %sfp
	mov	r3, r9, asl #16	@,,
	ldr	r9, [fp, #-112]	@, %sfp
	str	r3, [fp, #-88]	@, %sfp
	mov	r3, r9, asl #16	@,,
	ldr	r9, [fp, #-172]	@, %sfp
	str	r3, [fp, #-100]	@, %sfp
	mov	r3, r9, asl #16	@,,
	ldr	r9, [fp, #-164]	@, %sfp
	str	r3, [fp, #-140]	@, %sfp
	mov	r3, r9, asl #16	@,,
	ldr	r9, [fp, #-168]	@, %sfp
	str	r3, [fp, #-176]	@, %sfp
	mov	r3, r9, asl #16	@,,
	ldr	r9, [fp, #-64]	@, %sfp
	str	r3, [fp, #-180]	@, %sfp
	mov	r3, r9, asl #16	@,,
	mov	r9, r1, asl #16	@, tmp1680,
	str	r9, [fp, #-228]	@, %sfp
	and	r9, r7, #-16777216	@, temp.5261,
	str	r9, [fp, #-108]	@, %sfp
	and	r9, ip, #-16777216	@, temp.5339,
	str	r9, [fp, #-216]	@, %sfp
	and	r1, r8, #-16777216	@, temp.5235,
	ldr	r9, [fp, #-116]	@, %sfp
	ubfx	r8, r8, #8, #8	@, temp.5235,,
	str	r3, [fp, #-192]	@, %sfp
	and	r3, sl, #-16777216	@, temp.5213,
	str	r3, [fp, #-64]	@, %sfp
	and	r3, r6, #-16777216	@, temp.5287,
	str	r3, [fp, #-112]	@, %sfp
	and	r3, r0, #-16777216	@, temp.5365,
	str	r3, [fp, #-220]	@, %sfp
	ubfx	r7, r7, #8, #8	@, temp.5261,,
	ldr	r3, [fp, #-76]	@, %sfp
	str	r1, [fp, #-68]	@, %sfp
	and	r1, r5, #-16777216	@, temp.5313,
	str	r1, [fp, #-168]	@, %sfp
	and	r1, lr, #-16777216	@, temp.5391,
	str	r1, [fp, #-224]	@, %sfp
	orr	r1, r3, r9, asl #16	@,,,,
	str	r1, [fp, #-172]	@, %sfp
	ldr	r9, [fp, #-120]	@, %sfp
	ldr	r3, [fp, #-64]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-124]	@, %sfp
	ldr	r3, [fp, #-80]	@, %sfp
	str	r1, [fp, #-164]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ldr	r9, [fp, #-156]	@, %sfp
	ldr	r3, [fp, #-68]	@, %sfp
	str	r1, [fp, #-212]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-128]	@, %sfp
	ldr	r3, [fp, #-88]	@, %sfp
	str	r1, [fp, #-232]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ldr	r9, [fp, #-132]	@, %sfp
	ldr	r3, [fp, #-108]	@, %sfp
	str	r1, [fp, #-236]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-136]	@, %sfp
	ldr	r3, [fp, #-100]	@, %sfp
	str	r1, [fp, #-240]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ldr	r9, [fp, #-160]	@, %sfp
	ldr	r3, [fp, #-112]	@, %sfp
	str	r1, [fp, #-244]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-144]	@, %sfp
	ldr	r3, [fp, #-140]	@, %sfp
	str	r1, [fp, #-248]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ldr	r9, [fp, #-148]	@, %sfp
	ldr	r3, [fp, #-168]	@, %sfp
	str	r1, [fp, #-252]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-152]	@, %sfp
	ldr	r3, [fp, #-176]	@, %sfp
	str	r1, [fp, #-256]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ldr	r9, [fp, #-204]	@, %sfp
	ldr	r3, [fp, #-216]	@, %sfp
	str	r1, [fp, #-268]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-208]	@, %sfp
	ldr	r3, [fp, #-180]	@, %sfp
	str	r1, [fp, #-280]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	str	r1, [fp, #-292]	@, %sfp
	ldr	r9, [fp, #-184]	@, %sfp
	ldr	r3, [fp, #-220]	@, %sfp
	str	r8, [fp, #-216]	@, %sfp
	ubfx	r8, r6, #8, #8	@, temp.5287,,
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-188]	@, %sfp
	ldr	r3, [fp, #-192]	@, %sfp
	str	r1, [fp, #-304]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ldr	r9, [fp, #-196]	@, %sfp
	ldr	r3, [fp, #-224]	@, %sfp
	str	r1, [fp, #-316]	@, %sfp
	orr	r1, r3, r9, asl #8	@,,,,
	ldr	r9, [fp, #-200]	@, %sfp
	ldr	r3, [fp, #-228]	@, %sfp
	str	r1, [fp, #-328]	@, %sfp
	orr	r1, r3, r9, asl #24	@,,,,
	ubfx	r9, r2, #8, #8	@, temp.5214,,
	str	r1, [fp, #-340]	@, %sfp
	ubfx	r3, sl, #8, #8	@, temp.5213,,
	ldr	r1, [fp, #-276]	@, %sfp
	str	r9, [fp, #-148]	@, %sfp
	ldr	r9, [fp, #-272]	@, %sfp
	ubfx	sl, r1, #8, #8	@,,,
	str	r3, [fp, #-168]	@, %sfp
	ldr	r1, [fp, #-96]	@, %sfp
	ubfx	r3, r9, #8, #8	@,,,
	str	r7, [fp, #-220]	@, %sfp
	ldr	r9, [fp, #-92]	@, %sfp
	ldr	r7, [fp, #-72]	@, %sfp
	str	r3, [fp, #-184]	@, %sfp
	ubfx	r3, r5, #8, #8	@, temp.5313,,
	str	r8, [fp, #-224]	@, %sfp
	ubfx	r6, r9, #8, #8	@,,,
	ldr	r8, [fp, #-60]	@, %sfp
	ldr	r5, [fp, #-48]	@, %sfp
	ubfx	r9, r8, #8, #8	@,,,
	str	sl, [fp, #-204]	@, %sfp
	str	r6, [fp, #-260]	@, %sfp
	ubfx	sl, r1, #8, #8	@,,,
	ubfx	r6, r0, #8, #8	@, temp.5365,,
	ubfx	r1, r7, #8, #8	@,,,
	str	sl, [fp, #-196]	@, %sfp
	ubfx	sl, ip, #8, #8	@, temp.5339,,
	str	r3, [fp, #-264]	@, %sfp
	ubfx	r3, r5, #8, #8	@,,,
	str	r1, [fp, #-284]	@, %sfp
	and	r1, r2, #255	@, temp.5214,
	str	sl, [fp, #-288]	@, %sfp
	ubfx	r7, lr, #8, #8	@, temp.5391,,
	str	r9, [fp, #-308]	@, %sfp
	mov	sl, r2, lsr #8	@, temp.5214,
	str	r6, [fp, #-312]	@, %sfp
	movw	ip, #:lower16:11153956	@,
	str	r3, [fp, #-332]	@, %sfp
	movt	ip, #:upper16:11153956	@,
	ldr	r6, [fp, #-276]	@, %sfp
	movw	r0, #:lower16:11153960	@,
	ldr	r8, [fp, #-276]	@, %sfp
	movt	r0, #:upper16:11153960	@,
	str	r1, [fp, #-144]	@, %sfp
	movw	lr, #:lower16:11153964	@,
	ldr	r1, [fp, #-272]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	ldr	r6, [fp, #-96]	@, %sfp
	and	r9, r8, #255	@,,
	str	r7, [fp, #-336]	@, %sfp
	movt	lr, #:upper16:11153964	@,
	ldr	r7, [fp, #-272]	@, %sfp
	movw	r2, #:lower16:11153968	@,
	ldr	r8, [fp, #-96]	@, %sfp
	movt	r2, #:upper16:11153968	@,
	str	sl, [fp, #-140]	@, %sfp
	mov	sl, r1, lsr #8	@,,
	str	r5, [fp, #-176]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	ldr	r1, [fp, #-92]	@, %sfp
	movw	r3, #:lower16:11153972	@,
	ldr	r6, [fp, #-72]	@, %sfp
	movt	r3, #:upper16:11153972	@,
	str	ip, [fp, #-352]	@, %sfp
	and	ip, r7, #255	@,,
	str	r9, [fp, #-152]	@, %sfp
	and	r9, r8, #255	@,,
	ldr	r7, [fp, #-92]	@, %sfp
	ldr	r8, [fp, #-72]	@, %sfp
	str	r0, [fp, #-76]	@, %sfp
	movw	r0, #:lower16:11153976	@,
	str	lr, [fp, #-64]	@, %sfp
	movt	r0, #:upper16:11153976	@,
	str	r2, [fp, #-80]	@, %sfp
	movw	lr, #:lower16:11153980	@,
	str	r3, [fp, #-68]	@, %sfp
	movt	lr, #:upper16:11153980	@,
	str	ip, [fp, #-208]	@, %sfp
	movw	r2, #:lower16:11153984	@,
	and	ip, r7, #255	@,,
	str	sl, [fp, #-180]	@, %sfp
	str	r0, [fp, #-116]	@, %sfp
	mov	sl, r1, lsr #8	@,,
	str	lr, [fp, #-88]	@, %sfp
	movt	r2, #:upper16:11153984	@,
	str	r9, [fp, #-188]	@, %sfp
	movw	r3, #:lower16:11153988	@,
	and	r9, r8, #255	@,,
	str	r5, [fp, #-192]	@, %sfp
	str	r2, [fp, #-96]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	movt	r3, #:upper16:11153988	@,
	str	ip, [fp, #-200]	@, %sfp
	str	r3, [fp, #-120]	@, %sfp
	movw	r0, #:lower16:11153992	@,
	str	sl, [fp, #-228]	@, %sfp
	movt	r0, #:upper16:11153992	@,
	str	r9, [fp, #-272]	@, %sfp
	movw	lr, #:lower16:11153996	@,
	str	r0, [fp, #-92]	@, %sfp
	movt	lr, #:upper16:11153996	@,
	str	lr, [fp, #-124]	@, %sfp
	movw	r6, #:lower16:11154000	@ tmp1605,
	str	r5, [fp, #-276]	@, %sfp
	movt	r6, #:upper16:11154000	@ tmp1605,
	ldr	r1, [fp, #-48]	@, %sfp
	movw	r5, #:lower16:11154004	@ tmp1619,
	ldr	r8, [fp, #-84]	@, %sfp
	movt	r5, #:upper16:11154004	@ tmp1619,
	ldr	r0, [fp, #-48]	@, %sfp
	and	sl, r1, #255	@,,
	and	r9, r8, #255	@,,
	movw	r1, #:lower16:11112640	@,
	movw	r8, #:lower16:11112648	@,
	movt	r1, #:upper16:11112640	@,
	movt	r8, #:upper16:11112648	@,
	str	r1, [fp, #-48]	@, %sfp
	str	r8, [fp, #-72]	@, %sfp
	movw	r1, #:lower16:11112660	@,
	movw	r8, #:lower16:11112668	@,
	movt	r1, #:upper16:11112660	@,
	movt	r8, #:upper16:11112668	@,
	str	r1, [fp, #-108]	@, %sfp
	str	r8, [fp, #-128]	@, %sfp
	movw	r1, #:lower16:11112664	@,
	movw	r8, #:lower16:11112672	@,
	movt	r1, #:upper16:11112664	@,
	movt	r8, #:upper16:11112672	@,
	str	r1, [fp, #-100]	@, %sfp
	str	r8, [fp, #-136]	@, %sfp
	movw	r1, #:lower16:11112684	@,
	ldr	r8, [fp, #-144]	@, %sfp
	movt	r1, #:upper16:11112684	@,
	str	r1, [fp, #-112]	@, %sfp
	mov	lr, r0, lsr #8	@,,
	ldr	r1, [fp, #-172]	@, %sfp
	movw	r0, #:lower16:11154016	@ tmp1663,
	ldr	r2, [fp, #-60]	@, %sfp
	movt	r0, #:upper16:11154016	@ tmp1663,
	ldr	r7, [fp, #-60]	@, %sfp
	str	sl, [fp, #-320]	@, %sfp
	movw	sl, #:lower16:11112652	@,
	movt	sl, #:upper16:11112652	@,
	str	sl, [fp, #-60]	@, %sfp
	movw	sl, #:lower16:11112656	@,
	movt	sl, #:upper16:11112656	@,
	str	sl, [fp, #-156]	@, %sfp
	movw	sl, #:lower16:11112676	@,
	movt	sl, #:upper16:11112676	@,
	str	sl, [fp, #-132]	@, %sfp
	movw	sl, #:lower16:11112680	@,
	movt	sl, #:upper16:11112680	@,
	str	sl, [fp, #-160]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-164]	@, %sfp
	and	r3, r2, #255	@,,
	ldr	r8, [fp, #-148]	@, %sfp
	mov	ip, r7, lsr #8	@,,
	str	sl, [fp, #-172]	@, %sfp
	movw	r7, #:lower16:11154008	@ tmp1634,
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-212]	@, %sfp
	ldr	r8, [fp, #-152]	@, %sfp
	movt	r7, #:upper16:11154008	@ tmp1634,
	ldr	r2, [fp, #-84]	@, %sfp
	str	sl, [fp, #-144]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-232]	@, %sfp
	ldr	r8, [fp, #-204]	@, %sfp
	str	r3, [fp, #-296]	@, %sfp
	mov	r3, r2, lsr #8	@,,
	str	ip, [fp, #-300]	@, %sfp
	movw	ip, #:lower16:11154012	@ tmp1648,
	str	lr, [fp, #-324]	@, %sfp
	movt	ip, #:upper16:11154012	@ tmp1648,
	str	r9, [fp, #-356]	@, %sfp
	movw	lr, #:lower16:11154020	@ tmp1677,
	str	r3, [fp, #-344]	@, %sfp
	movt	lr, #:upper16:11154020	@ tmp1677,
	str	sl, [fp, #-164]	@, %sfp
	orr	sl, r1, r8	@,,
	str	sl, [fp, #-148]	@, %sfp
	movw	r9, #:lower16:11112636	@ tmp1704,
	ldr	r1, [fp, #-236]	@, %sfp
	movt	r9, #:upper16:11112636	@ tmp1704,
	ldr	r8, [fp, #-208]	@, %sfp
	movw	r2, #:lower16:11112632	@ tmp1705,
	movw	r3, #:lower16:11112644	@ tmp1733,
	movt	r2, #:upper16:11112632	@ tmp1705,
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-240]	@, %sfp
	ldr	r8, [fp, #-184]	@, %sfp
	movt	r3, #:upper16:11112644	@ tmp1733,
	str	sl, [fp, #-212]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r8, [fp, #-188]	@, %sfp
	ldr	r1, [fp, #-244]	@, %sfp
	str	sl, [fp, #-232]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-248]	@, %sfp
	ldr	r8, [fp, #-196]	@, %sfp
	str	sl, [fp, #-204]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-252]	@, %sfp
	ldr	r8, [fp, #-200]	@, %sfp
	str	sl, [fp, #-236]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-256]	@, %sfp
	ldr	r8, [fp, #-260]	@, %sfp
	str	sl, [fp, #-208]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-268]	@, %sfp
	ldr	r8, [fp, #-272]	@, %sfp
	str	sl, [fp, #-240]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-280]	@, %sfp
	ldr	r8, [fp, #-284]	@, %sfp
	str	sl, [fp, #-184]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-292]	@, %sfp
	ldr	r8, [fp, #-296]	@, %sfp
	str	sl, [fp, #-188]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-304]	@, %sfp
	ldr	r8, [fp, #-308]	@, %sfp
	str	sl, [fp, #-248]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-316]	@, %sfp
	ldr	r8, [fp, #-320]	@, %sfp
	str	sl, [fp, #-196]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-328]	@, %sfp
	ldr	r8, [fp, #-332]	@, %sfp
	str	sl, [fp, #-252]	@, %sfp
	orr	sl, r1, r8	@,,
	str	sl, [fp, #-256]	@, %sfp
	ldr	r1, [fp, #-340]	@, %sfp
	ldr	r8, [fp, #-356]	@, %sfp
	orr	sl, r1, r8	@,,
	ldr	r1, [fp, #-140]	@, %sfp
	str	sl, [fp, #-260]	@, %sfp
	ldr	sl, [fp, #-176]	@, %sfp
	and	r8, r1, #65280	@ tmp1455,,
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-180]	@, %sfp
	str	r1, [fp, #-140]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-192]	@, %sfp
	str	r1, [fp, #-152]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-228]	@, %sfp
	str	r1, [fp, #-176]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-276]	@, %sfp
	str	r1, [fp, #-180]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-300]	@, %sfp
	str	r1, [fp, #-244]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-324]	@, %sfp
	str	r1, [fp, #-192]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-344]	@, %sfp
	str	r1, [fp, #-200]	@, %sfp
	and	r1, sl, #65280	@,,
	ldr	sl, [fp, #-172]	@, %sfp
	str	r1, [fp, #-228]	@, %sfp
	orr	r1, sl, r8	@ tmp1457,, tmp1455
	ldr	sl, [fp, #-352]	@, %sfp
	str	r1, [r4, sl]	@ tmp1457, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-168]	@, %sfp
	ldr	r8, [fp, #-144]	@, %sfp
	orr	r1, r8, sl, asl #16	@,,,,
	ldr	sl, [fp, #-76]	@, %sfp
	str	r1, [fp, #-404]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-164]	@, %sfp
	ldr	sl, [fp, #-140]	@, %sfp
	orr	r1, r8, sl	@,,
	ldr	sl, [fp, #-64]	@, %sfp
	str	r1, [fp, #-408]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-216]	@, %sfp
	ldr	r8, [fp, #-148]	@, %sfp
	orr	r1, r8, sl, asl #16	@,,,,
	str	r1, [fp, #-412]	@, %sfp
	ldr	sl, [fp, #-80]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-212]	@, %sfp
	ldr	sl, [fp, #-152]	@, %sfp
	orr	r1, r8, sl	@,,
	ldr	sl, [fp, #-68]	@, %sfp
	str	r1, [fp, #-416]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-220]	@, %sfp
	ldr	r8, [fp, #-232]	@, %sfp
	orr	r1, r8, sl, asl #16	@,,,,
	ldr	sl, [fp, #-116]	@, %sfp
	str	r1, [fp, #-420]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-204]	@, %sfp
	ldr	sl, [fp, #-176]	@, %sfp
	orr	r1, r8, sl	@,,
	ldr	sl, [fp, #-88]	@, %sfp
	str	r1, [fp, #-424]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-224]	@, %sfp
	ldr	r8, [fp, #-236]	@, %sfp
	orr	r1, r8, sl, asl #16	@,,,,
	ldr	sl, [fp, #-96]	@, %sfp
	str	r1, [fp, #-428]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-208]	@, %sfp
	ldr	sl, [fp, #-180]	@, %sfp
	orr	r1, r8, sl	@,,
	ldr	sl, [fp, #-120]	@, %sfp
	str	r1, [fp, #-432]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-264]	@, %sfp
	ldr	r8, [fp, #-240]	@, %sfp
	orr	r1, r8, sl, asl #16	@,,,,
	ldr	sl, [fp, #-92]	@, %sfp
	str	r1, [fp, #-436]	@, %sfp
	str	r1, [r4, sl]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-244]	@, %sfp
	ldr	r8, [fp, #-184]	@, %sfp
	orr	r8, r8, sl	@,,
	str	r8, [fp, #-440]	@, %sfp
	ldr	r1, [fp, #-124]	@, %sfp
	str	r8, [r4, r1]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-288]	@, %sfp
	ldr	r1, [fp, #-188]	@, %sfp
	orr	r8, r1, sl, asl #16	@,,,,
	str	r8, [r4, r6]	@, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-248]	@, %sfp
	ldr	sl, [fp, #-192]	@, %sfp
	orr	r6, r1, sl	@ tmp1631,,
	str	r6, [r4, r5]	@ tmp1631, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-312]	@, %sfp
	ldr	r5, [fp, #-196]	@, %sfp
	orr	r1, r5, r8, asl #16	@, tmp1645,,,
	str	r1, [r4, r7]	@ tmp1645, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-252]	@, %sfp
	ldr	r6, [fp, #-200]	@, %sfp
	orr	r5, sl, r6	@ tmp1660,,
	str	r5, [r4, ip]	@ tmp1660, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-336]	@, %sfp
	ldr	r7, [fp, #-256]	@, %sfp
	orr	r1, r7, r8, asl #16	@, tmp1674,,,
	str	r1, [r4, r0]	@ tmp1674, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-260]	@, %sfp
	ldr	ip, [fp, #-228]	@, %sfp
	orr	r5, sl, ip	@ tmp1689,,
	str	r5, [r4, lr]	@ tmp1689, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-84]	@, %sfp
	ldr	r0, [fp, #-104]	@, %sfp
	ldr	sl, [r4, r9]	@ temp.5443, <variable>.CurrSPS.qmatrix8x8
	mov	r1, r6, lsr #24	@,,
	and	r8, r0, #-16777216	@,,
	str	r1, [fp, #-92]	@, %sfp
	and	lr, sl, #255	@, temp.5443,
	ldr	r1, [r4, r2]	@ temp.5448, <variable>.CurrSPS.qmatrix8x8
	mov	r7, sl, lsr #16	@, temp.5443,
	str	r8, [fp, #-96]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	ldr	r8, [r4, r3]	@ temp.5469, <variable>.CurrSPS.qmatrix8x8
	mov	r6, r1, lsr #24	@, temp.5448,
	ldr	r3, [fp, #-60]	@, %sfp
	str	lr, [fp, #-64]	@, %sfp
	and	ip, r8, #255	@, temp.5469,
	ldr	lr, [r4, r9]	@ temp.5474, <variable>.CurrSPS.qmatrix8x8
	str	r7, [fp, #-76]	@, %sfp
	ldr	r7, [r4, r3]	@ temp.5495, <variable>.CurrSPS.qmatrix8x8
	str	ip, [fp, #-116]	@, %sfp
	ldr	r5, [fp, #-72]	@, %sfp
	and	r9, r7, #255	@, temp.5495,
	ldr	r3, [fp, #-156]	@, %sfp
	ldr	r0, [fp, #-108]	@, %sfp
	ldr	r2, [r4, r5]	@, <variable>.CurrSPS.qmatrix8x8
	mov	r5, r8, lsr #16	@, temp.5469,
	str	r6, [fp, #-68]	@, %sfp
	str	r2, [fp, #-268]	@, %sfp
	ldr	r2, [fp, #-128]	@, %sfp
	ldr	r6, [r4, r0]	@ temp.5521, <variable>.CurrSPS.qmatrix8x8
	str	r9, [fp, #-88]	@, %sfp
	ldr	r9, [fp, #-100]	@, %sfp
	and	r0, r6, #255	@, temp.5521,
	ldr	ip, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	str	r5, [fp, #-120]	@, %sfp
	str	ip, [fp, #-264]	@, %sfp
	mov	ip, lr, lsr #24	@, temp.5474,
	ldr	r5, [r4, r2]	@ temp.5547, <variable>.CurrSPS.qmatrix8x8
	str	r0, [fp, #-124]	@, %sfp
	ldr	r2, [fp, #-132]	@, %sfp
	and	r0, r5, #255	@, temp.5547,
	ldr	r3, [r4, r9]	@, <variable>.CurrSPS.qmatrix8x8
	ldr	r9, [fp, #-136]	@, %sfp
	str	ip, [fp, #-156]	@, %sfp
	str	r3, [fp, #-60]	@, %sfp
	ldr	ip, [r4, r2]	@ temp.5573, <variable>.CurrSPS.qmatrix8x8
	mov	r2, r7, lsr #16	@, temp.5495,
	str	r0, [fp, #-128]	@, %sfp
	ldr	r3, [r4, r9]	@, <variable>.CurrSPS.qmatrix8x8
	and	r9, ip, #255	@, temp.5573,
	ldr	r0, [fp, #-112]	@, %sfp
	str	r2, [fp, #-132]	@, %sfp
	str	r3, [fp, #-48]	@, %sfp
	ldr	r3, [fp, #-160]	@, %sfp
	ldr	r2, [r4, r0]	@ D.43798, <variable>.CurrSPS.qmatrix8x8
	str	r9, [fp, #-100]	@, %sfp
	ldr	r9, [fp, #-268]	@, %sfp
	ldr	r0, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	mov	r3, r9, lsr #24	@,,
	str	r3, [fp, #-160]	@, %sfp
	str	r0, [fp, #-72]	@, %sfp
	mov	r0, r6, lsr #16	@, temp.5521,
	str	r0, [fp, #-140]	@, %sfp
	and	r3, r2, #255	@ tmp1883, D.43798,
	ldr	r9, [fp, #-264]	@, %sfp
	mov	r0, r9, lsr #24	@,,
	str	r0, [fp, #-168]	@, %sfp
	ldr	r0, [fp, #-60]	@, %sfp
	mov	r9, r5, lsr #16	@, temp.5547,
	str	r9, [fp, #-176]	@, %sfp
	mov	r9, r0, lsr #24	@,,
	str	r9, [fp, #-216]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	mov	r0, ip, lsr #16	@, temp.5573,
	str	r0, [fp, #-180]	@, %sfp
	mov	r0, r9, lsr #24	@,,
	str	r0, [fp, #-220]	@, %sfp
	ldr	r0, [fp, #-72]	@, %sfp
	mov	r9, r2, lsr #16	@, D.43798,
	str	r9, [fp, #-192]	@, %sfp
	mov	r9, r0, lsr #24	@,,
	ldr	r0, [fp, #-64]	@, %sfp
	str	r9, [fp, #-224]	@, %sfp
	mov	r9, r0, asl #16	@,,
	ldr	r0, [fp, #-116]	@, %sfp
	str	r9, [fp, #-80]	@, %sfp
	mov	r9, r0, asl #16	@,,
	ldr	r0, [fp, #-88]	@, %sfp
	str	r9, [fp, #-108]	@, %sfp
	mov	r9, r0, asl #16	@,,
	ldr	r0, [fp, #-124]	@, %sfp
	str	r9, [fp, #-112]	@, %sfp
	mov	r9, r0, asl #16	@,,
	ldr	r0, [fp, #-128]	@, %sfp
	str	r9, [fp, #-148]	@, %sfp
	mov	r9, r0, asl #16	@,,
	ldr	r0, [fp, #-100]	@, %sfp
	str	r9, [fp, #-204]	@, %sfp
	mov	r9, r0, asl #16	@,,
	mov	r0, r3, asl #16	@, tmp1883,
	and	r3, r8, #-16777216	@, temp.5469,
	str	r3, [fp, #-100]	@, %sfp
	and	r3, r5, #-16777216	@, temp.5547,
	str	r3, [fp, #-208]	@, %sfp
	ldr	r3, [fp, #-92]	@, %sfp
	ubfx	r5, r5, #8, #8	@, temp.5547,,
	str	r0, [fp, #-196]	@, %sfp
	and	r0, r7, #-16777216	@, temp.5495,
	str	r0, [fp, #-144]	@, %sfp
	and	r0, ip, #-16777216	@, temp.5573,
	str	r0, [fp, #-188]	@, %sfp
	ldr	r0, [fp, #-96]	@, %sfp
	str	r9, [fp, #-184]	@, %sfp
	and	r9, sl, #-16777216	@, temp.5443,
	str	r9, [fp, #-88]	@, %sfp
	and	r9, r6, #-16777216	@, temp.5521,
	str	r9, [fp, #-152]	@, %sfp
	and	r9, r2, #-16777216	@, D.43798,
	str	r9, [fp, #-200]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	str	r9, [fp, #-64]	@, %sfp
	ubfx	r6, r6, #8, #8	@, temp.5521,,
	ldr	r3, [fp, #-76]	@, %sfp
	ldr	r0, [fp, #-80]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-68]	@, %sfp
	ldr	r0, [fp, #-88]	@, %sfp
	str	r9, [fp, #-116]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	ldr	r3, [fp, #-120]	@, %sfp
	ldr	r0, [fp, #-108]	@, %sfp
	str	r9, [fp, #-124]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-156]	@, %sfp
	ldr	r0, [fp, #-100]	@, %sfp
	str	r9, [fp, #-128]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	ldr	r3, [fp, #-132]	@, %sfp
	ldr	r0, [fp, #-112]	@, %sfp
	str	r9, [fp, #-136]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-160]	@, %sfp
	ldr	r0, [fp, #-144]	@, %sfp
	str	r9, [fp, #-172]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	ldr	r3, [fp, #-140]	@, %sfp
	ldr	r0, [fp, #-148]	@, %sfp
	str	r9, [fp, #-164]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-168]	@, %sfp
	ldr	r0, [fp, #-152]	@, %sfp
	str	r9, [fp, #-212]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	ldr	r3, [fp, #-176]	@, %sfp
	ldr	r0, [fp, #-204]	@, %sfp
	str	r9, [fp, #-232]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-216]	@, %sfp
	ldr	r0, [fp, #-208]	@, %sfp
	str	r9, [fp, #-236]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	ldr	r3, [fp, #-180]	@, %sfp
	ldr	r0, [fp, #-184]	@, %sfp
	str	r9, [fp, #-240]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-220]	@, %sfp
	ldr	r0, [fp, #-188]	@, %sfp
	str	r9, [fp, #-244]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	str	r9, [fp, #-248]	@, %sfp
	ldr	r3, [fp, #-192]	@, %sfp
	ldr	r0, [fp, #-196]	@, %sfp
	str	r6, [fp, #-216]	@, %sfp
	orr	r9, r0, r3, asl #24	@,,,,
	ldr	r3, [fp, #-224]	@, %sfp
	ldr	r0, [fp, #-200]	@, %sfp
	str	r9, [fp, #-252]	@, %sfp
	orr	r9, r0, r3, asl #8	@,,,,
	ldr	r0, [fp, #-84]	@, %sfp
	str	r9, [fp, #-228]	@, %sfp
	ldr	r9, [fp, #-104]	@, %sfp
	ubfx	r3, r0, #8, #8	@,,,
	str	r3, [fp, #-80]	@, %sfp
	ubfx	r3, r1, #8, #8	@, temp.5448,,
	ubfx	r0, r9, #8, #8	@,,,
	ubfx	r9, sl, #8, #8	@, temp.5443,,
	str	r0, [fp, #-68]	@, %sfp
	ubfx	sl, r8, #8, #8	@, temp.5469,,
	ubfx	r0, lr, #8, #8	@, temp.5474,,
	ldr	r8, [fp, #-268]	@, %sfp
	str	r0, [fp, #-112]	@, %sfp
	ldr	r0, [fp, #-264]	@, %sfp
	str	r3, [fp, #-108]	@, %sfp
	ubfx	r3, r8, #8, #8	@,,,
	str	r9, [fp, #-156]	@, %sfp
	ubfx	r9, r7, #8, #8	@, temp.5495,,
	ldr	r8, [fp, #-60]	@, %sfp
	ldr	r7, [fp, #-48]	@, %sfp
	str	sl, [fp, #-160]	@, %sfp
	ubfx	sl, r0, #8, #8	@,,,
	str	sl, [fp, #-204]	@, %sfp
	ubfx	r0, ip, #8, #8	@, temp.5573,,
	ldr	sl, [fp, #-72]	@, %sfp
	and	ip, r1, #255	@, temp.5448,
	str	r3, [fp, #-148]	@, %sfp
	ubfx	r3, r8, #8, #8	@,,,
	ubfx	r6, sl, #8, #8	@,,,
	ubfx	r8, r2, #8, #8	@, D.43798,,
	str	r9, [fp, #-168]	@, %sfp
	ubfx	r9, r7, #8, #8	@,,,
	str	r3, [fp, #-184]	@, %sfp
	mov	r7, r1, lsr #8	@, temp.5448,
	str	r5, [fp, #-220]	@, %sfp
	movw	r3, #:lower16:11154024	@,
	str	r9, [fp, #-196]	@, %sfp
	movt	r3, #:upper16:11154024	@,
	str	r0, [fp, #-224]	@, %sfp
	movw	r5, #:lower16:11154028	@,
	str	r6, [fp, #-256]	@, %sfp
	movt	r5, #:upper16:11154028	@,
	str	r8, [fp, #-260]	@, %sfp
	movw	r9, #:lower16:11154032	@,
	str	r3, [fp, #-272]	@, %sfp
	movt	r9, #:upper16:11154032	@,
	str	r5, [fp, #-84]	@, %sfp
	and	sl, lr, #255	@, temp.5474,
	str	ip, [fp, #-88]	@, %sfp
	mov	r2, lr, lsr #8	@, temp.5474,
	str	r7, [fp, #-120]	@, %sfp
	movw	r6, #:lower16:11154040	@,
	str	r9, [fp, #-104]	@, %sfp
	movt	r6, #:upper16:11154040	@,
	ldr	r8, [fp, #-268]	@, %sfp
	movw	r0, #:lower16:11154036	@,
	str	sl, [fp, #-100]	@, %sfp
	movt	r0, #:upper16:11154036	@,
	ldr	sl, [fp, #-60]	@, %sfp
	and	r3, r8, #255	@,,
	ldr	r8, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:11154044	@,
	str	r2, [fp, #-132]	@, %sfp
	and	r2, sl, #255	@,,
	ldr	sl, [fp, #-72]	@, %sfp
	movt	r1, #:upper16:11154044	@,
	str	r3, [fp, #-144]	@, %sfp
	and	r3, r8, #255	@,,
	ldr	r8, [fp, #-72]	@, %sfp
	ldr	lr, [fp, #-264]	@, %sfp
	ldr	r9, [fp, #-264]	@, %sfp
	str	r2, [fp, #-208]	@, %sfp
	and	r2, sl, #255	@,,
	ldr	sl, [fp, #-80]	@, %sfp
	and	r7, lr, #255	@,,
	str	r2, [fp, #-264]	@, %sfp
	ldr	r2, [fp, #-64]	@, %sfp
	str	r3, [fp, #-188]	@, %sfp
	mov	r3, r8, lsr #8	@,,
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-116]	@, %sfp
	ldr	sl, [fp, #-88]	@, %sfp
	ldr	lr, [fp, #-48]	@, %sfp
	ldr	r5, [fp, #-268]	@, %sfp
	str	r6, [fp, #-96]	@, %sfp
	ldr	r6, [fp, #-60]	@, %sfp
	str	r8, [fp, #-48]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-124]	@, %sfp
	mov	ip, r5, lsr #8	@,,
	ldr	sl, [fp, #-108]	@, %sfp
	movw	r5, #:lower16:11154048	@ tmp1779,
	str	r0, [fp, #-92]	@, %sfp
	mov	r0, r9, lsr #8	@,,
	str	r1, [fp, #-76]	@, %sfp
	mov	r1, r6, lsr #8	@,,
	str	ip, [fp, #-140]	@, %sfp
	movt	r5, #:upper16:11154048	@ tmp1779,
	str	r7, [fp, #-152]	@, %sfp
	mov	r7, lr, lsr #8	@,,
	str	r0, [fp, #-176]	@, %sfp
	movw	ip, #:lower16:11154052	@ tmp1793,
	str	r1, [fp, #-180]	@, %sfp
	movt	ip, #:upper16:11154052	@ tmp1793,
	str	r7, [fp, #-192]	@, %sfp
	movw	r9, #:lower16:11154056	@ tmp1808,
	str	r3, [fp, #-200]	@, %sfp
	movt	r9, #:upper16:11154056	@ tmp1808,
	str	r8, [fp, #-60]	@, %sfp
	orr	r8, r2, sl	@,,
	str	r8, [fp, #-64]	@, %sfp
	movw	r0, #:lower16:11154060	@ tmp1822,
	ldr	r2, [fp, #-128]	@, %sfp
	movt	r0, #:upper16:11154060	@ tmp1822,
	ldr	sl, [fp, #-100]	@, %sfp
	movw	r6, #:lower16:11154064	@ tmp1837,
	movt	r6, #:upper16:11154064	@ tmp1837,
	movw	r1, #:lower16:11154068	@ tmp1851,
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-136]	@, %sfp
	ldr	sl, [fp, #-112]	@, %sfp
	movt	r1, #:upper16:11154068	@ tmp1851,
	str	r8, [fp, #-80]	@, %sfp
	movw	r7, #:lower16:11154072	@ tmp1866,
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-172]	@, %sfp
	ldr	sl, [fp, #-144]	@, %sfp
	movt	r7, #:upper16:11154072	@ tmp1866,
	str	r8, [fp, #-88]	@, %sfp
	movw	lr, #:lower16:11154076	@ tmp1880,
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-164]	@, %sfp
	ldr	sl, [fp, #-148]	@, %sfp
	movt	lr, #:upper16:11154076	@ tmp1880,
	str	r8, [fp, #-124]	@, %sfp
	movw	r3, #:lower16:11154080	@ tmp1895,
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-212]	@, %sfp
	ldr	sl, [fp, #-152]	@, %sfp
	movt	r3, #:upper16:11154080	@ tmp1895,
	str	r8, [fp, #-108]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-232]	@, %sfp
	ldr	sl, [fp, #-204]	@, %sfp
	str	r8, [fp, #-128]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-236]	@, %sfp
	ldr	sl, [fp, #-208]	@, %sfp
	str	r8, [fp, #-136]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-240]	@, %sfp
	ldr	sl, [fp, #-184]	@, %sfp
	str	r8, [fp, #-112]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-244]	@, %sfp
	ldr	sl, [fp, #-188]	@, %sfp
	str	r8, [fp, #-172]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-248]	@, %sfp
	ldr	sl, [fp, #-196]	@, %sfp
	str	r8, [fp, #-144]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-252]	@, %sfp
	ldr	sl, [fp, #-264]	@, %sfp
	str	r8, [fp, #-164]	@, %sfp
	orr	r8, r2, sl	@,,
	ldr	r2, [fp, #-228]	@, %sfp
	ldr	sl, [fp, #-256]	@, %sfp
	str	r8, [fp, #-148]	@, %sfp
	orr	r8, r2, sl	@,,
	str	r8, [fp, #-152]	@, %sfp
	ldr	r2, [fp, #-120]	@, %sfp
	ldr	r8, [fp, #-132]	@, %sfp
	and	sl, r2, #65280	@,,
	str	sl, [fp, #-72]	@, %sfp
	ldr	sl, [fp, #-140]	@, %sfp
	and	r2, r8, #65280	@,,
	str	r2, [fp, #-116]	@, %sfp
	ldr	r2, [fp, #-176]	@, %sfp
	and	r8, sl, #65280	@,,
	str	r8, [fp, #-120]	@, %sfp
	ldr	r8, [fp, #-180]	@, %sfp
	and	sl, r2, #65280	@,,
	str	sl, [fp, #-100]	@, %sfp
	ldr	sl, [fp, #-192]	@, %sfp
	and	r2, r8, #65280	@,,
	str	r2, [fp, #-132]	@, %sfp
	ldr	r2, [fp, #-200]	@, %sfp
	and	r8, sl, #65280	@,,
	str	r8, [fp, #-140]	@, %sfp
	ldr	r8, [fp, #-68]	@, %sfp
	and	sl, r2, #65280	@,,
	ldr	r2, [fp, #-48]	@, %sfp
	str	sl, [fp, #-212]	@, %sfp
	orr	sl, r2, r8, asl #16	@,,,,
	ldr	r2, [fp, #-272]	@, %sfp
	str	sl, [fp, #-444]	@, %sfp
	str	sl, [r4, r2]	@, <variable>.DecPicPara.Qmatrix
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	r8, [fp, #-72]	@, %sfp
	orr	sl, r2, r8	@,,
	ldr	r2, [fp, #-84]	@, %sfp
	str	sl, [fp, #-448]	@, %sfp
	str	sl, [r4, r2]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-156]	@, %sfp
	ldr	r2, [fp, #-64]	@, %sfp
	orr	sl, r2, r8, asl #16	@,,,,
	ldr	r2, [fp, #-104]	@, %sfp
	str	sl, [fp, #-452]	@, %sfp
	str	sl, [r4, r2]	@, <variable>.DecPicPara.Qmatrix
	ldr	r2, [fp, #-80]	@, %sfp
	ldr	r8, [fp, #-116]	@, %sfp
	orr	sl, r2, r8	@,,
	ldr	r2, [fp, #-92]	@, %sfp
	str	sl, [fp, #-456]	@, %sfp
	str	sl, [r4, r2]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-160]	@, %sfp
	ldr	r2, [fp, #-88]	@, %sfp
	orr	sl, r2, r8, asl #16	@,,,,
	ldr	r2, [fp, #-96]	@, %sfp
	str	sl, [fp, #-460]	@, %sfp
	str	sl, [r4, r2]	@, <variable>.DecPicPara.Qmatrix
	ldr	r2, [fp, #-124]	@, %sfp
	ldr	r8, [fp, #-120]	@, %sfp
	orr	sl, r2, r8	@,,
	ldr	r2, [fp, #-76]	@, %sfp
	str	sl, [fp, #-464]	@, %sfp
	str	sl, [r4, r2]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-168]	@, %sfp
	ldr	sl, [fp, #-108]	@, %sfp
	orr	r2, sl, r8, asl #16	@,,,,
	str	r2, [r4, r5]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-128]	@, %sfp
	ldr	r8, [fp, #-100]	@, %sfp
	orr	r5, sl, r8	@ tmp1805,,
	str	r5, [r4, ip]	@ tmp1805, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-216]	@, %sfp
	ldr	r2, [fp, #-136]	@, %sfp
	orr	r8, r2, r5, asl #16	@, tmp1819,,,
	str	r8, [r4, r9]	@ tmp1819, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-112]	@, %sfp
	ldr	ip, [fp, #-132]	@, %sfp
	orr	r2, sl, ip	@ tmp1834,,
	str	r2, [r4, r0]	@ tmp1834, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-220]	@, %sfp
	ldr	r8, [fp, #-172]	@, %sfp
	orr	r5, r8, r0, asl #16	@, tmp1848,,,
	str	r5, [r4, r6]	@ tmp1848, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-144]	@, %sfp
	ldr	r6, [fp, #-140]	@, %sfp
	orr	r9, r5, r6	@ tmp1863,,
	str	r9, [r4, r1]	@ tmp1863, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-224]	@, %sfp
	ldr	ip, [fp, #-164]	@, %sfp
	orr	sl, ip, r9, asl #16	@, tmp1877,,,
	str	sl, [r4, r7]	@ tmp1877, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-148]	@, %sfp
	ldr	r2, [fp, #-212]	@, %sfp
	orr	r0, sl, r2	@ tmp1892,,
	str	r0, [r4, lr]	@ tmp1892, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-260]	@, %sfp
	ldr	r1, [fp, #-152]	@, %sfp
	orr	ip, r1, r8, asl #16	@, tmp1906,,,
	str	ip, [r4, r3]	@ tmp1906, <variable>.DecPicPara.Qmatrix
.L1591:
	movw	r8, #:lower16:11123340	@ tmp1907,
	movt	r8, #:upper16:11123340	@ tmp1907,
	ldr	lr, [r4, r8]	@ <variable>.APC.size, <variable>.APC.size
	cmp	lr, #0	@ <variable>.APC.size,
	beq	.L1595	@,
	movw	r0, #:lower16:11123148	@ ivtmp.5141,
	movw	r1, #:lower16:11155056	@ ivtmp.5144,
	movt	r0, #:upper16:11123148	@ ivtmp.5141,
	movt	r1, #:upper16:11155056	@ ivtmp.5144,
	add	r6, r4, r0	@ ivtmp.5141, pMvcCtx, ivtmp.5141
	add	r5, r4, r1	@ ivtmp.5144, pMvcCtx, ivtmp.5144
	mov	r7, #0	@ i.5201,
.L1596:
	ldr	r2, [r6, #0]	@, <variable>.APC.idc
	mov	r1, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	add	r7, r7, #1	@ i.5201, i.5201,
	bl	FSP_GetStoreType	@
	ldr	r3, [r4, r8]	@ <variable>.APC.size, <variable>.APC.size
	ldr	r2, [r6], #4	@ tmp1914, <variable>.APC.idc
	str	r2, [r5, #64]	@ tmp1914, <variable>.DecPicPara.RefPicFsId
	subs	ip, r0, #0	@ tmp1913,,
	movne	ip, #1	@ tmp1913
	cmp	r3, r7	@ <variable>.APC.size, i.5201
	str	ip, [r5, #0]	@ tmp1913, <variable>.DecPicPara.RefPicType
	add	r5, r5, #4	@ ivtmp.5144, ivtmp.5144,
	bhi	.L1596	@,
.L1595:
	mov	r0, #0	@ D.43668,
.L1582:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1614:
	movw	r9, #:lower16:11113802	@ tmp456,
	movt	r9, #:upper16:11113802	@ tmp456,
	ldrb	r2, [r4, r9]	@ zero_extendqisi2	@ prephitmp.5121, <variable>.CurrPPS.pic_scaling_matrix_present_flag
	cmp	r2, #0	@ prephitmp.5121,
	bne	.L1589	@,
	movw	r3, #:lower16:11153860	@ ivtmp.5151,
	movt	r3, #:upper16:11153860	@ ivtmp.5151,
	movw	r6, #:lower16:.LANCHOR2	@ tmp1919,
	add	r5, r4, r3	@ ivtmp.5151, pMvcCtx, ivtmp.5151
	movt	r6, #:upper16:.LANCHOR2	@ tmp1919,
.L1590:
	and	sl, r2, #3	@ tmp459, i.5190,
	add	r2, r2, #1	@ tmp1927, i.5190,
	and	r7, r2, #3	@ tmp1954, tmp1927,
	mov	lr, r5	@ tmp1928, ivtmp.5151
	add	r3, r6, sl, asl #2	@, tmp462, tmp1919, tmp459,
	add	r2, r2, #1	@ i.5190, tmp1927,
	add	sl, r6, r7, asl #2	@, tmp1956, tmp1919, tmp1954,
	cmp	r2, #24	@ i.5190,
	ldr	ip, [r3, #352]	@ D.43702, MVC_quant_org
	movw	r3, #:lower16:.LANCHOR2	@ tmp1953,
	movt	r3, #:upper16:.LANCHOR2	@ tmp1953,
	bic	r0, ip, #16711680	@ tmp466, D.43702,
	ubfx	r8, ip, #8, #8	@ tmp468, D.43702,,
	bic	r1, r0, #65280	@ tmp466, tmp466,
	mov	r9, ip, lsr #8	@ tmp474, D.43702,
	orr	r0, r1, r8, asl #16	@, tmp470, tmp466, tmp468,
	and	ip, r9, #65280	@ tmp473, tmp474,
	orr	r8, r0, ip	@ tmp475, tmp470, tmp473
	str	r8, [lr], #4	@ tmp475, <variable>.DecPicPara.Qmatrix
	ldr	r9, [sl, #352]	@ D.43702, MVC_quant_org
	bic	r1, r9, #16711680	@ tmp1961, D.43702,
	ubfx	r7, r9, #8, #8	@ tmp1963, D.43702,,
	bic	r0, r1, #65280	@ tmp1961, tmp1961,
	mov	r8, r9, lsr #8	@ tmp1967, D.43702,
	orr	sl, r0, r7, asl #16	@, tmp1965, tmp1961, tmp1963,
	and	ip, r8, #65280	@ tmp1968, tmp1967,
	orr	r1, sl, ip	@ tmp1969, tmp1965, tmp1968
	str	r1, [r5, #4]	@ tmp1969, <variable>.DecPicPara.Qmatrix
	add	r5, lr, #4	@ ivtmp.5151, tmp1928,
	bne	.L1590	@,
	ldr	r9, [r3, #372]	@ temp.5989, MVC_quant8_org
	movw	r2, #:lower16:11153956	@ tmp478,
	ldr	r0, [r3, #368]	@ temp.5994, MVC_quant8_org
	movt	r2, #:upper16:11153956	@ tmp478,
	and	r6, r9, #255	@ tmp481, temp.5989,
	movw	r8, #:lower16:11153960	@ tmp493,
	mov	r5, r9, lsr #16	@ tmp479, temp.5989,
	and	r1, r0, #255	@ tmp484, temp.5994,
	mov	r7, r6, asl #16	@ tmp482, tmp481,
	mov	lr, r0, lsr #8	@ tmp489, temp.5994,
	orr	sl, r7, r5, asl #24	@, tmp483, tmp482, tmp479,
	and	r9, lr, #65280	@ tmp488, tmp489,
	orr	ip, sl, r1	@ tmp485, tmp483, tmp484
	movt	r8, #:upper16:11153960	@ tmp493,
	orr	r6, ip, r9	@ tmp490, tmp485, tmp488
	str	r6, [r4, r2]	@ tmp490, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #368]	@ temp.6007, MVC_quant8_org
	movw	r2, #:lower16:11153964	@ tmp507,
	ldr	r7, [r3, #372]	@ temp.6002, MVC_quant8_org
	movt	r2, #:upper16:11153964	@ tmp507,
	ubfx	r1, r0, #8, #8	@ tmp499, temp.6007,,
	movw	r6, #:lower16:11153968	@ tmp522,
	mov	lr, r0, lsr #24	@ tmp494, temp.6007,
	and	r5, r7, #-16777216	@ tmp496, temp.6002,
	ubfx	r9, r7, #8, #8	@ tmp502, temp.6002,,
	movt	r6, #:upper16:11153968	@ tmp522,
	orr	sl, r5, lr, asl #8	@, tmp497, tmp496, tmp494,
	movw	r5, #:lower16:11153972	@ tmp536,
	orr	ip, sl, r1	@ tmp500, tmp497, tmp499
	movt	r5, #:upper16:11153972	@ tmp536,
	orr	r0, ip, r9, asl #16	@, tmp504, tmp500, tmp502,
	str	r0, [r4, r8]	@ tmp504, <variable>.DecPicPara.Qmatrix
	ldr	r7, [r3, #380]	@ temp.6015, MVC_quant8_org
	movw	ip, #:lower16:11153976	@ tmp551,
	ldr	r1, [r3, #376]	@ temp.6020, MVC_quant8_org
	movt	ip, #:upper16:11153976	@ tmp551,
	and	lr, r7, #255	@ tmp510, temp.6015,
	movw	r0, #:lower16:11153980	@ tmp565,
	mov	r9, r7, lsr #16	@ tmp508, temp.6015,
	and	r8, r1, #255	@ tmp513, temp.6020,
	mov	sl, lr, asl #16	@ tmp511, tmp510,
	mov	lr, r1, lsr #8	@ tmp518, temp.6020,
	orr	r7, sl, r9, asl #24	@, tmp512, tmp511, tmp508,
	and	r1, lr, #65280	@ tmp517, tmp518,
	orr	sl, r7, r8	@ tmp514, tmp512, tmp513
	movt	r0, #:upper16:11153980	@ tmp565,
	orr	r9, sl, r1	@ tmp519, tmp514, tmp517
	str	r9, [r4, r2]	@ tmp519, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #376]	@ temp.6033, MVC_quant8_org
	movw	r1, #:lower16:11153984	@ tmp580,
	ldr	r7, [r3, #380]	@ temp.6028, MVC_quant8_org
	movt	r1, #:upper16:11153984	@ tmp580,
	ubfx	r8, lr, #8, #8	@ tmp528, temp.6033,,
	movw	r9, #:lower16:11153988	@ tmp594,
	mov	sl, lr, lsr #24	@ tmp523, temp.6033,
	and	r2, r7, #-16777216	@ tmp525, temp.6028,
	ubfx	lr, r7, #8, #8	@ tmp531, temp.6028,,
	movw	r7, #:lower16:11153996	@,
	orr	sl, r2, sl, asl #8	@, tmp526, tmp525, tmp523,
	movt	r7, #:upper16:11153996	@,
	orr	r8, sl, r8	@ tmp529, tmp526, tmp528
	movt	r9, #:upper16:11153988	@ tmp594,
	orr	sl, r8, lr, asl #16	@, tmp533, tmp529, tmp531,
	str	sl, [r4, r6]	@ tmp533, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #388]	@ temp.6041, MVC_quant8_org
	movw	r2, #:lower16:11153992	@ tmp609,
	ldr	r6, [r3, #384]	@ temp.6046, MVC_quant8_org
	movt	r2, #:upper16:11153992	@ tmp609,
	and	r8, lr, #255	@ tmp539, temp.6041,
	str	r7, [fp, #-48]	@, %sfp
	mov	sl, lr, lsr #16	@ tmp537, temp.6041,
	and	lr, r6, #255	@ tmp542, temp.6046,
	mov	r7, r8, asl #16	@ tmp540, tmp539,
	mov	r6, r6, lsr #8	@ tmp547, temp.6046,
	orr	r8, r7, sl, asl #24	@, tmp541, tmp540, tmp537,
	and	sl, r6, #65280	@ tmp546, tmp547,
	orr	r7, r8, lr	@ tmp543, tmp541, tmp542
	movw	r8, #:lower16:11154000	@,
	orr	r6, r7, sl	@ tmp548, tmp543, tmp546
	movt	r8, #:upper16:11154000	@,
	str	r8, [fp, #-60]	@, %sfp
	movw	r8, #:lower16:11154008	@,
	str	r6, [r4, r5]	@ tmp548, <variable>.DecPicPara.Qmatrix
	movt	r8, #:upper16:11154008	@,
	ldr	sl, [r3, #384]	@ temp.6059, MVC_quant8_org
	movw	r6, #:lower16:11154004	@ tmp652,
	ldr	r7, [r3, #388]	@ temp.6054, MVC_quant8_org
	movt	r6, #:upper16:11154004	@ tmp652,
	ubfx	lr, sl, #8, #8	@, temp.6059,,
	str	lr, [fp, #-64]	@, %sfp
	mov	lr, sl, lsr #24	@ tmp552, temp.6059,
	and	r5, r7, #-16777216	@ tmp554, temp.6054,
	ubfx	r7, r7, #8, #8	@, temp.6054,,
	str	r7, [fp, #-68]	@, %sfp
	ldr	r7, [fp, #-64]	@, %sfp
	orr	sl, r5, lr, asl #8	@, tmp555, tmp554, tmp552,
	str	r8, [fp, #-84]	@, %sfp
	movw	lr, #:lower16:11154012	@ tmp681,
	orr	r8, sl, r7	@ tmp558, tmp555,
	ldr	sl, [fp, #-68]	@, %sfp
	movw	r7, #:lower16:11154016	@,
	movt	r7, #:upper16:11154016	@,
	movt	lr, #:upper16:11154012	@ tmp681,
	orr	r5, r8, sl, asl #16	@, tmp562, tmp558,,
	str	r5, [r4, ip]	@ tmp562, <variable>.DecPicPara.Qmatrix
	ldr	r5, [r3, #396]	@ temp.6067, MVC_quant8_org
	ldr	ip, [r3, #392]	@ temp.6072, MVC_quant8_org
	and	r8, r5, #255	@ tmp568, temp.6067,
	str	r7, [fp, #-104]	@, %sfp
	mov	sl, r5, lsr #16	@ tmp566, temp.6067,
	and	r7, ip, #255	@ tmp571, temp.6072,
	mov	r5, r8, asl #16	@ tmp569, tmp568,
	mov	ip, ip, lsr #8	@ tmp576, temp.6072,
	orr	r8, r5, sl, asl #24	@, tmp570, tmp569, tmp566,
	and	sl, ip, #65280	@ tmp575, tmp576,
	orr	r7, r8, r7	@ tmp572, tmp570, tmp571
	movw	r5, #:lower16:11154020	@,
	orr	ip, r7, sl	@ tmp577, tmp572, tmp575
	movt	r5, #:upper16:11154020	@,
	str	r5, [fp, #-72]	@, %sfp
	movw	r7, #:lower16:11154028	@,
	str	ip, [r4, r0]	@ tmp577, <variable>.DecPicPara.Qmatrix
	movt	r7, #:upper16:11154028	@,
	ldr	r5, [r3, #392]	@ temp.6085, MVC_quant8_org
	movw	ip, #:lower16:11154024	@ tmp725,
	ldr	r0, [r3, #396]	@ temp.6080, MVC_quant8_org
	movt	ip, #:upper16:11154024	@ tmp725,
	ubfx	r8, r5, #8, #8	@, temp.6085,,
	str	r8, [fp, #-64]	@, %sfp
	mov	sl, r5, lsr #24	@ tmp581, temp.6085,
	and	r8, r0, #-16777216	@ tmp583, temp.6080,
	str	r7, [fp, #-92]	@, %sfp
	ubfx	r5, r0, #8, #8	@ tmp589, temp.6080,,
	orr	r8, r8, sl, asl #8	@, tmp584, tmp583, tmp581,
	ldr	sl, [fp, #-64]	@, %sfp
	orr	r7, r8, sl	@ tmp587, tmp584,
	movw	r8, #:lower16:11154032	@,
	orr	r0, r7, r5, asl #16	@, tmp591, tmp587, tmp589,
	movt	r8, #:upper16:11154032	@,
	str	r8, [fp, #-96]	@, %sfp
	movw	r7, #:lower16:11154036	@,
	str	r0, [r4, r1]	@ tmp591, <variable>.DecPicPara.Qmatrix
	movt	r7, #:upper16:11154036	@,
	ldr	r5, [r3, #404]	@ temp.6093, MVC_quant8_org
	ldr	r1, [r3, #400]	@ temp.6098, MVC_quant8_org
	and	sl, r5, #255	@ tmp597, temp.6093,
	str	r7, [fp, #-76]	@, %sfp
	mov	r8, r5, lsr #16	@ tmp595, temp.6093,
	and	r5, r1, #255	@ tmp600, temp.6098,
	mov	r0, sl, asl #16	@ tmp598, tmp597,
	mov	r1, r1, lsr #8	@ tmp605, temp.6098,
	orr	r7, r0, r8, asl #24	@, tmp599, tmp598, tmp595,
	and	r8, r1, #65280	@ tmp604, tmp605,
	orr	r0, r7, r5	@ tmp601, tmp599, tmp600
	movw	sl, #:lower16:11154040	@,
	orr	r7, r0, r8	@ tmp606, tmp601, tmp604
	movt	sl, #:upper16:11154040	@,
	str	sl, [fp, #-64]	@, %sfp
	movw	r0, #:lower16:11154044	@ tmp797,
	str	r7, [r4, r9]	@ tmp606, <variable>.DecPicPara.Qmatrix
	movw	r9, #:lower16:11154048	@,
	ldr	r5, [r3, #400]	@ temp.6111, MVC_quant8_org
	movt	r9, #:upper16:11154048	@,
	ldr	r1, [r3, #404]	@ temp.6106, MVC_quant8_org
	movt	r0, #:upper16:11154044	@ tmp797,
	ubfx	r7, r5, #8, #8	@ tmp615, temp.6111,,
	str	r9, [fp, #-80]	@, %sfp
	mov	sl, r5, lsr #24	@ tmp610, temp.6111,
	and	r8, r1, #-16777216	@ tmp612, temp.6106,
	ubfx	r5, r1, #8, #8	@ tmp618, temp.6106,,
	movw	r9, #:lower16:11154056	@,
	orr	r8, r8, sl, asl #8	@, tmp613, tmp612, tmp610,
	movw	sl, #:lower16:11154052	@,
	orr	r7, r8, r7	@ tmp616, tmp613, tmp615
	movt	sl, #:upper16:11154052	@,
	orr	r1, r7, r5, asl #16	@, tmp620, tmp616, tmp618,
	str	sl, [fp, #-68]	@, %sfp
	str	r1, [r4, r2]	@ tmp620, <variable>.DecPicPara.Qmatrix
	movt	r9, #:upper16:11154056	@,
	ldr	r2, [r3, #412]	@ temp.6119, MVC_quant8_org
	ldr	r5, [r3, #408]	@ temp.6124, MVC_quant8_org
	and	r7, r2, #255	@ tmp626, temp.6119,
	str	r9, [fp, #-116]	@, %sfp
	mov	r8, r2, lsr #16	@ tmp624, temp.6119,
	and	r1, r5, #255	@ tmp629, temp.6124,
	mov	sl, r7, asl #16	@ tmp627, tmp626,
	mov	r2, r5, lsr #8	@ tmp634, temp.6124,
	orr	r7, sl, r8, asl #24	@, tmp628, tmp627, tmp624,
	and	sl, r2, #65280	@ tmp633, tmp634,
	orr	r5, r7, r1	@ tmp630, tmp628, tmp629
	ldr	r1, [fp, #-48]	@, %sfp
	orr	r8, r5, sl	@ tmp635, tmp630, tmp633
	movw	r9, #:lower16:11154060	@,
	movt	r9, #:upper16:11154060	@,
	str	r9, [fp, #-88]	@, %sfp
	str	r8, [r4, r1]	@ tmp635, <variable>.DecPicPara.Qmatrix
	movw	r9, #:lower16:11154068	@,
	ldr	r5, [r3, #408]	@ temp.6137, MVC_quant8_org
	movt	r9, #:upper16:11154068	@,
	ldr	r7, [r3, #412]	@ temp.6132, MVC_quant8_org
	movw	r1, #:lower16:11154064	@ tmp870,
	str	r9, [fp, #-48]	@, %sfp
	ubfx	r8, r5, #8, #8	@ tmp644, temp.6137,,
	mov	sl, r5, lsr #24	@ tmp639, temp.6137,
	and	r2, r7, #-16777216	@ tmp641, temp.6132,
	ubfx	r5, r7, #8, #8	@ tmp647, temp.6132,,
	movt	r1, #:upper16:11154064	@ tmp870,
	orr	r9, r2, sl, asl #8	@, tmp642, tmp641, tmp639,
	ldr	sl, [fp, #-60]	@, %sfp
	orr	r8, r9, r8	@ tmp645, tmp642, tmp644
	movw	r2, #:lower16:11154072	@ tmp899,
	orr	r7, r8, r5, asl #16	@, tmp649, tmp645, tmp647,
	movw	r5, #:lower16:11154076	@,
	str	r7, [r4, sl]	@ tmp649, <variable>.DecPicPara.Qmatrix
	movt	r5, #:upper16:11154076	@,
	ldr	r9, [r3, #420]	@ temp.6145, MVC_quant8_org
	movt	r2, #:upper16:11154072	@ tmp899,
	ldr	r7, [r3, #416]	@ temp.6150, MVC_quant8_org
	and	r8, r9, #255	@ tmp655, temp.6145,
	str	r5, [fp, #-60]	@, %sfp
	mov	sl, r9, lsr #16	@ tmp653, temp.6145,
	and	r9, r7, #255	@ tmp658, temp.6150,
	mov	r5, r8, asl #16	@ tmp656, tmp655,
	mov	r7, r7, lsr #8	@ tmp663, temp.6150,
	orr	r8, r5, sl, asl #24	@, tmp657, tmp656, tmp653,
	and	r5, r7, #65280	@ tmp662, tmp663,
	orr	r8, r8, r9	@ tmp659, tmp657, tmp658
	movw	r9, #:lower16:11154080	@,
	orr	r7, r8, r5	@ tmp664, tmp659, tmp662
	movt	r9, #:upper16:11154080	@,
	str	r9, [fp, #-120]	@, %sfp
	str	r7, [r4, r6]	@ tmp664, <variable>.DecPicPara.Qmatrix
	ldr	r5, [r3, #416]	@ temp.6163, MVC_quant8_org
	ldr	r6, [r3, #420]	@ temp.6158, MVC_quant8_org
	ubfx	r7, r5, #8, #8	@ tmp673, temp.6163,,
	mov	sl, r5, lsr #24	@ tmp668, temp.6163,
	and	r9, r6, #-16777216	@ tmp670, temp.6158,
	ubfx	r5, r6, #8, #8	@ tmp676, temp.6158,,
	orr	r8, r9, sl, asl #8	@, tmp671, tmp670, tmp668,
	ldr	r9, [fp, #-84]	@, %sfp
	orr	sl, r8, r7	@ tmp674, tmp671, tmp673
	orr	r6, sl, r5, asl #16	@, tmp678, tmp674, tmp676,
	str	r6, [r4, r9]	@ tmp678, <variable>.DecPicPara.Qmatrix
	ldr	r5, [r3, #428]	@ temp.6171, MVC_quant8_org
	ldr	r7, [r3, #424]	@ temp.6176, MVC_quant8_org
	and	r8, r5, #255	@ tmp684, temp.6171,
	mov	sl, r5, lsr #16	@ tmp682, temp.6171,
	and	r5, r7, #255	@ tmp687, temp.6176,
	mov	r9, r8, asl #16	@ tmp685, tmp684,
	mov	r6, r7, lsr #8	@ tmp692, temp.6176,
	orr	r8, r9, sl, asl #24	@, tmp686, tmp685, tmp682,
	and	r9, r6, #65280	@ tmp691, tmp692,
	orr	r7, r8, r5	@ tmp688, tmp686, tmp687
	orr	r6, r7, r9	@ tmp693, tmp688, tmp691
	str	r6, [r4, lr]	@ tmp693, <variable>.DecPicPara.Qmatrix
	ldr	r5, [r3, #424]	@ temp.6189, MVC_quant8_org
	ldr	sl, [r3, #428]	@ temp.6184, MVC_quant8_org
	ubfx	lr, r5, #8, #8	@ tmp702, temp.6189,,
	mov	r8, r5, lsr #24	@ tmp697, temp.6189,
	and	r9, sl, #-16777216	@ tmp699, temp.6184,
	ubfx	r5, sl, #8, #8	@ tmp705, temp.6184,,
	ldr	sl, [fp, #-104]	@, %sfp
	orr	r7, r9, r8, asl #8	@, tmp700, tmp699, tmp697,
	orr	r6, r7, lr	@ tmp703, tmp700, tmp702
	orr	r9, r6, r5, asl #16	@, tmp707, tmp703, tmp705,
	str	r9, [r4, sl]	@ tmp707, <variable>.DecPicPara.Qmatrix
	ldr	r8, [r3, #372]	@ temp.6197, MVC_quant8_org
	ldr	lr, [r3, #368]	@ temp.6202, MVC_quant8_org
	and	r7, r8, #255	@ tmp713, temp.6197,
	mov	r6, r8, lsr #16	@ tmp711, temp.6197,
	and	r9, lr, #255	@ tmp716, temp.6202,
	mov	sl, r7, asl #16	@ tmp714, tmp713,
	mov	r5, lr, lsr #8	@ tmp721, temp.6202,
	orr	r7, sl, r6, asl #24	@, tmp715, tmp714, tmp711,
	ldr	r6, [fp, #-72]	@, %sfp
	orr	r8, r7, r9	@ tmp717, tmp715, tmp716
	and	lr, r5, #65280	@ tmp720, tmp721,
	orr	sl, r8, lr	@ tmp722, tmp717, tmp720
	str	sl, [r4, r6]	@ tmp722, <variable>.DecPicPara.Qmatrix
	ldr	r9, [r3, #368]	@ temp.6215, MVC_quant8_org
	ldr	r5, [r3, #372]	@ temp.6210, MVC_quant8_org
	ubfx	sl, r9, #8, #8	@ tmp731, temp.6215,,
	mov	r8, r9, lsr #24	@ tmp726, temp.6215,
	and	lr, r5, #-16777216	@ tmp728, temp.6210,
	ubfx	r9, r5, #8, #8	@ tmp734, temp.6210,,
	orr	r7, lr, r8, asl #8	@, tmp729, tmp728, tmp726,
	orr	r6, r7, sl	@ tmp732, tmp729, tmp731
	orr	lr, r6, r9, asl #16	@, tmp736, tmp732, tmp734,
	str	lr, [r4, ip]	@ tmp736, <variable>.DecPicPara.Qmatrix
	ldr	sl, [r3, #380]	@ temp.6223, MVC_quant8_org
	ldr	ip, [r3, #376]	@ temp.6228, MVC_quant8_org
	and	r8, sl, #255	@ tmp742, temp.6223,
	mov	r7, sl, lsr #16	@ tmp740, temp.6223,
	and	lr, ip, #255	@ tmp745, temp.6228,
	mov	r5, r8, asl #16	@ tmp743, tmp742,
	mov	r9, ip, lsr #8	@ tmp750, temp.6228,
	orr	r6, r5, r7, asl #24	@, tmp744, tmp743, tmp740,
	ldr	r5, [fp, #-92]	@, %sfp
	orr	sl, r6, lr	@ tmp746, tmp744, tmp745
	and	r8, r9, #65280	@ tmp749, tmp750,
	orr	ip, sl, r8	@ tmp751, tmp746, tmp749
	str	ip, [r4, r5]	@ tmp751, <variable>.DecPicPara.Qmatrix
	ldr	r9, [r3, #376]	@ temp.6241, MVC_quant8_org
	ldr	lr, [r3, #380]	@ temp.6236, MVC_quant8_org
	ubfx	r8, r9, #8, #8	@ tmp760, temp.6241,,
	mov	r7, r9, lsr #24	@ tmp755, temp.6241,
	and	sl, lr, #-16777216	@ tmp757, temp.6236,
	ubfx	ip, lr, #8, #8	@ tmp763, temp.6236,,
	ldr	lr, [fp, #-96]	@, %sfp
	orr	r6, sl, r7, asl #8	@, tmp758, tmp757, tmp755,
	orr	r5, r6, r8	@ tmp761, tmp758, tmp760
	orr	r9, r5, ip, asl #16	@, tmp765, tmp761, tmp763,
	str	r9, [r4, lr]	@ tmp765, <variable>.DecPicPara.Qmatrix
	ldr	sl, [r3, #388]	@ temp.6249, MVC_quant8_org
	ldr	ip, [r3, #384]	@ temp.6254, MVC_quant8_org
	and	r8, sl, #255	@ tmp771, temp.6249,
	mov	r7, sl, lsr #16	@ tmp769, temp.6249,
	and	lr, ip, #255	@ tmp774, temp.6254,
	mov	r5, ip, lsr #8	@ tmp779, temp.6254,
	mov	r6, r8, asl #16	@ tmp772, tmp771,
	and	r8, r5, #65280	@ tmp778, tmp779,
	ldr	r5, [fp, #-76]	@, %sfp
	orr	r9, r6, r7, asl #24	@, tmp773, tmp772, tmp769,
	orr	sl, r9, lr	@ tmp775, tmp773, tmp774
	orr	ip, sl, r8	@ tmp780, tmp775, tmp778
	str	ip, [r4, r5]	@ tmp780, <variable>.DecPicPara.Qmatrix
	ldr	r6, [r3, #384]	@ temp.6267, MVC_quant8_org
	ldr	r9, [r3, #388]	@ temp.6262, MVC_quant8_org
	ubfx	r8, r6, #8, #8	@ tmp789, temp.6267,,
	mov	r7, r6, lsr #24	@ tmp784, temp.6267,
	and	lr, r9, #-16777216	@ tmp786, temp.6262,
	ubfx	ip, r9, #8, #8	@ tmp792, temp.6262,,
	ldr	r9, [fp, #-64]	@, %sfp
	orr	sl, lr, r7, asl #8	@, tmp787, tmp786, tmp784,
	orr	r5, sl, r8	@ tmp790, tmp787, tmp789
	orr	r6, r5, ip, asl #16	@, tmp794, tmp790, tmp792,
	str	r6, [r4, r9]	@ tmp794, <variable>.DecPicPara.Qmatrix
	ldr	r7, [r3, #396]	@ temp.6275, MVC_quant8_org
	ldr	sl, [r3, #392]	@ temp.6280, MVC_quant8_org
	and	lr, r7, #255	@ tmp800, temp.6275,
	mov	r7, r7, lsr #16	@ tmp798, temp.6275,
	and	r5, sl, #255	@ tmp803, temp.6280,
	mov	r8, lr, asl #16	@ tmp801, tmp800,
	mov	ip, sl, lsr #8	@ tmp808, temp.6280,
	orr	r6, r8, r7, asl #24	@, tmp802, tmp801, tmp798,
	and	lr, ip, #65280	@ tmp807, tmp808,
	orr	r9, r6, r5	@ tmp804, tmp802, tmp803
	orr	sl, r9, lr	@ tmp809, tmp804, tmp807
	str	sl, [r4, r0]	@ tmp809, <variable>.DecPicPara.Qmatrix
	ldr	r8, [r3, #392]	@ temp.6293, MVC_quant8_org
	ldr	r5, [r3, #396]	@ temp.6288, MVC_quant8_org
	ubfx	lr, r8, #8, #8	@ tmp818, temp.6293,,
	mov	r6, r8, lsr #24	@ tmp813, temp.6293,
	and	ip, r5, #-16777216	@ tmp815, temp.6288,
	ldr	r8, [fp, #-80]	@, %sfp
	ubfx	r0, r5, #8, #8	@ tmp821, temp.6288,,
	orr	r9, ip, r6, asl #8	@, tmp816, tmp815, tmp813,
	orr	sl, r9, lr	@ tmp819, tmp816, tmp818
	orr	r5, sl, r0, asl #16	@, tmp823, tmp819, tmp821,
	str	r5, [r4, r8]	@ tmp823, <variable>.DecPicPara.Qmatrix
	ldr	ip, [r3, #404]	@ temp.6301, MVC_quant8_org
	ldr	lr, [r3, #400]	@ temp.6306, MVC_quant8_org
	and	r9, ip, #255	@ tmp829, temp.6301,
	mov	r6, ip, lsr #16	@ tmp827, temp.6301,
	and	r8, lr, #255	@ tmp832, temp.6306,
	mov	sl, r9, asl #16	@ tmp830, tmp829,
	mov	r0, lr, lsr #8	@ tmp837, temp.6306,
	orr	r5, sl, r6, asl #24	@, tmp831, tmp830, tmp827,
	and	r9, r0, #65280	@ tmp836, tmp837,
	orr	ip, r5, r8	@ tmp833, tmp831, tmp832
	orr	lr, ip, r9	@ tmp838, tmp833, tmp836
	ldr	r9, [fp, #-68]	@, %sfp
	str	lr, [r4, r9]	@ tmp838, <variable>.DecPicPara.Qmatrix
	ldr	sl, [r3, #400]	@ temp.6319, MVC_quant8_org
	ldr	r0, [r3, #404]	@ temp.6314, MVC_quant8_org
	ubfx	ip, sl, #8, #8	@ tmp847, temp.6319,,
	mov	r6, sl, lsr #24	@ tmp842, temp.6319,
	and	r8, r0, #-16777216	@ tmp844, temp.6314,
	ubfx	sl, r0, #8, #8	@ tmp850, temp.6314,,
	orr	r5, r8, r6, asl #8	@, tmp845, tmp844, tmp842,
	orr	lr, r5, ip	@ tmp848, tmp845, tmp847
	orr	r0, lr, sl, asl #16	@, tmp852, tmp848, tmp850,
	ldr	sl, [fp, #-116]	@, %sfp
	str	r0, [r4, sl]	@ tmp852, <variable>.DecPicPara.Qmatrix
	ldr	r8, [r3, #412]	@ temp.6327, MVC_quant8_org
	ldr	ip, [r3, #408]	@ temp.6332, MVC_quant8_org
	and	r5, r8, #255	@ tmp858, temp.6327,
	mov	r6, r8, lsr #16	@ tmp856, temp.6327,
	and	r8, ip, #255	@ tmp861, temp.6332,
	mov	lr, r5, asl #16	@ tmp859, tmp858,
	mov	r0, ip, lsr #8	@ tmp866, temp.6332,
	orr	r5, lr, r6, asl #24	@, tmp860, tmp859, tmp856,
	and	lr, r0, #65280	@ tmp865, tmp866,
	orr	ip, r5, r8	@ tmp862, tmp860, tmp861
	ldr	r8, [fp, #-88]	@, %sfp
	orr	r5, ip, lr	@ tmp867, tmp862, tmp865
	str	r5, [r4, r8]	@ tmp867, <variable>.DecPicPara.Qmatrix
	ldr	r6, [r3, #408]	@ temp.6345, MVC_quant8_org
	ldr	r0, [r3, #412]	@ temp.6340, MVC_quant8_org
	ubfx	r8, r6, #8, #8	@ tmp876, temp.6345,,
	mov	lr, r6, lsr #24	@ tmp871, temp.6345,
	and	r6, r0, #-16777216	@ tmp873, temp.6340,
	ubfx	r0, r0, #8, #8	@ tmp879, temp.6340,,
	orr	ip, r6, lr, asl #8	@, tmp874, tmp873, tmp871,
	orr	r5, ip, r8	@ tmp877, tmp874, tmp876
	orr	lr, r5, r0, asl #16	@, tmp881, tmp877, tmp879,
	str	lr, [r4, r1]	@ tmp881, <variable>.DecPicPara.Qmatrix
	ldr	ip, [r3, #420]	@ temp.6353, MVC_quant8_org
	ldr	r1, [r3, #416]	@ temp.6358, MVC_quant8_org
	and	r8, ip, #255	@ tmp887, temp.6353,
	mov	r0, ip, lsr #16	@ tmp885, temp.6353,
	and	ip, r1, #255	@ tmp890, temp.6358,
	mov	r5, r8, asl #16	@ tmp888, tmp887,
	mov	lr, r1, lsr #8	@ tmp895, temp.6358,
	orr	r8, r5, r0, asl #24	@, tmp889, tmp888, tmp885,
	and	r1, lr, #65280	@ tmp894, tmp895,
	orr	r0, r8, ip	@ tmp891, tmp889, tmp890
	ldr	r8, [fp, #-48]	@, %sfp
	orr	lr, r0, r1	@ tmp896, tmp891, tmp894
	str	lr, [r4, r8]	@ tmp896, <variable>.DecPicPara.Qmatrix
	ldr	r5, [r3, #416]	@ temp.6371, MVC_quant8_org
	ldr	r1, [r3, #420]	@ temp.6366, MVC_quant8_org
	ubfx	ip, r5, #8, #8	@ tmp905, temp.6371,,
	mov	r0, r5, lsr #24	@ tmp900, temp.6371,
	and	r5, r1, #-16777216	@ tmp902, temp.6366,
	ubfx	r8, r1, #8, #8	@ tmp908, temp.6366,,
	orr	lr, r5, r0, asl #8	@, tmp903, tmp902, tmp900,
	orr	r0, lr, ip	@ tmp906, tmp903, tmp905
	orr	lr, r0, r8, asl #16	@, tmp910, tmp906, tmp908,
	str	lr, [r4, r2]	@ tmp910, <variable>.DecPicPara.Qmatrix
	ldr	r1, [r3, #428]	@ D.43719, MVC_quant8_org
	ldr	r8, [r3, #424]	@ D.43726, MVC_quant8_org
	and	r2, r1, #255	@ tmp916, D.43719,
	mov	lr, r1, lsr #16	@ tmp914, D.43719,
	and	r0, r8, #255	@ tmp919, D.43726,
	mov	ip, r2, asl #16	@ tmp917, tmp916,
	mov	r2, r8, lsr #8	@ tmp924, D.43726,
	orr	r8, ip, lr, asl #24	@, tmp918, tmp917, tmp914,
	ldr	ip, [fp, #-60]	@, %sfp
	orr	r1, r8, r0	@ tmp920, tmp918, tmp919
	and	lr, r2, #65280	@ tmp923, tmp924,
	orr	r2, r1, lr	@ tmp925, tmp920, tmp923
	str	r2, [r4, ip]	@ tmp925, <variable>.DecPicPara.Qmatrix
	ldr	r8, [r3, #424]	@ temp.5192, MVC_quant8_org
	ldr	r3, [r3, #428]	@ temp.5191, MVC_quant8_org
	ubfx	lr, r8, #8, #8	@ tmp934, temp.5192,,
	mov	r1, r8, lsr #24	@ tmp929, temp.5192,
	and	r0, r3, #-16777216	@ tmp931, temp.5191,
	ubfx	r8, r3, #8, #8	@ tmp937, temp.5191,,
	orr	r2, r0, r1, asl #8	@, tmp932, tmp931, tmp929,
	orr	ip, r2, lr	@ tmp935, tmp932, tmp934
	ldr	lr, [fp, #-120]	@, %sfp
	orr	r1, ip, r8, asl #16	@, tmp939, tmp935, tmp937,
	str	r1, [r4, lr]	@ tmp939, <variable>.DecPicPara.Qmatrix
	b	.L1591	@
.L1615:
	movw	r8, #:lower16:11153860	@ ivtmp.5159,
	movt	r8, #:upper16:11153860	@ ivtmp.5159,
	add	r6, r4, r8	@ ivtmp.5159, pMvcCtx, ivtmp.5159
	mov	r1, #0	@ i.5194,
.L1593:
	add	r7, r1, #1	@ tmp1929, i.5194,
	movw	r2, #:lower16:2778950	@ tmp946,
	movt	r2, #:upper16:2778950	@ tmp946,
	add	lr, r1, r2	@ tmp946, i.5194, tmp946
	add	sl, r7, r2	@ tmp1977, tmp1929, tmp1977
	add	r1, r7, #1	@ i.5194, tmp1929,
	ldr	ip, [r4, sl, asl #2]	@ D.43748, <variable>.CurrPPS.qmatrix4x4
	cmp	r1, #24	@ i.5194,
	ldr	r5, [r4, lr, asl #2]	@ D.43748, <variable>.CurrPPS.qmatrix4x4
	mov	sl, r6	@ tmp1930, ivtmp.5159
	bic	r3, ip, #16711680	@ tmp1981, D.43748,
	ubfx	r7, ip, #8, #8	@ tmp1983, D.43748,,
	bic	r0, r5, #16711680	@ tmp950, D.43748,
	ubfx	r8, r5, #8, #8	@ tmp952, D.43748,,
	bic	r2, r3, #65280	@ tmp1981, tmp1981,
	bic	r9, r0, #65280	@ tmp950, tmp950,
	mov	lr, r5, lsr #8	@ tmp958, D.43748,
	mov	r3, ip, lsr #8	@ tmp1987, D.43748,
	orr	r0, r9, r8, asl #16	@, tmp954, tmp950, tmp952,
	and	r5, lr, #65280	@ tmp957, tmp958,
	orr	r9, r2, r7, asl #16	@, tmp1985, tmp1981, tmp1983,
	and	ip, r3, #65280	@ tmp1988, tmp1987,
	orr	lr, r0, r5	@ tmp959, tmp954, tmp957
	orr	r2, r9, ip	@ tmp1989, tmp1985, tmp1988
	str	lr, [sl], #4	@ tmp959, <variable>.DecPicPara.Qmatrix
	str	r2, [r6, #4]	@ tmp1989, <variable>.DecPicPara.Qmatrix
	add	r6, sl, #4	@ ivtmp.5159, tmp1930,
	bne	.L1593	@,
	movw	sl, #:lower16:11115900	@ tmp960,
	movt	sl, #:upper16:11115900	@ tmp960,
	movw	r2, #:lower16:11115896	@ tmp961,
	movw	r8, #:lower16:11115908	@ tmp989,
	movt	r2, #:upper16:11115896	@ tmp961,
	movt	r8, #:upper16:11115908	@ tmp989,
	movw	r3, #:lower16:11115904	@ tmp990,
	movw	r9, #:lower16:11115940	@,
	movt	r3, #:upper16:11115904	@ tmp990,
	movt	r9, #:upper16:11115940	@,
	movw	r5, #:lower16:11115936	@,
	str	r9, [fp, #-48]	@, %sfp
	movt	r5, #:upper16:11115936	@,
	movw	r9, #:lower16:11115948	@,
	str	r5, [fp, #-60]	@, %sfp
	movt	r9, #:upper16:11115948	@,
	movw	r5, #:lower16:11115944	@,
	str	r9, [fp, #-84]	@, %sfp
	movt	r5, #:upper16:11115944	@,
	movw	r9, #:lower16:11115956	@,
	str	r5, [fp, #-104]	@, %sfp
	movt	r9, #:upper16:11115956	@,
	movw	r5, #:lower16:11115952	@,
	str	r9, [fp, #-76]	@, %sfp
	movt	r5, #:upper16:11115952	@,
	movw	r9, #:lower16:11115964	@,
	str	r5, [fp, #-64]	@, %sfp
	movt	r9, #:upper16:11115964	@,
	str	r9, [fp, #-80]	@, %sfp
	movw	r5, #:lower16:11115960	@,
	ldr	sl, [r4, sl]	@ temp.5599, <variable>.CurrPPS.qmatrix8x8
	movt	r5, #:upper16:11115960	@,
	ldr	r2, [r4, r2]	@ temp.5604, <variable>.CurrPPS.qmatrix8x8
	movw	r7, #:lower16:11115916	@ tmp1018,
	str	r5, [fp, #-68]	@, %sfp
	and	r9, sl, #255	@, temp.5599,
	ldr	r8, [r4, r8]	@ temp.5625, <variable>.CurrPPS.qmatrix8x8
	movt	r7, #:upper16:11115916	@ tmp1018,
	str	r9, [fp, #-88]	@, %sfp
	movw	r6, #:lower16:11115912	@ tmp1019,
	ldr	r5, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	movt	r6, #:upper16:11115912	@ tmp1019,
	mov	r9, sl, lsr #16	@, temp.5599,
	and	r3, r8, #255	@, temp.5625,
	str	r9, [fp, #-116]	@, %sfp
	movw	lr, #:lower16:11115924	@ tmp1047,
	str	r5, [fp, #-276]	@, %sfp
	movt	lr, #:upper16:11115924	@ tmp1047,
	ldr	r7, [r4, r7]	@ temp.5651, <variable>.CurrPPS.qmatrix8x8
	movw	ip, #:lower16:11115920	@ tmp1048,
	str	r3, [fp, #-108]	@, %sfp
	movt	ip, #:upper16:11115920	@ tmp1048,
	ldr	r5, [r4, r6]	@, <variable>.CurrPPS.qmatrix8x8
	and	r9, r7, #255	@, temp.5651,
	mov	r6, r2, lsr #24	@, temp.5604,
	str	r6, [fp, #-120]	@, %sfp
	movw	r0, #:lower16:11115932	@ tmp1076,
	movw	r1, #:lower16:11115928	@ tmp1077,
	str	r5, [fp, #-272]	@, %sfp
	movt	r0, #:upper16:11115932	@ tmp1076,
	ldr	r6, [r4, lr]	@ temp.5677, <variable>.CurrPPS.qmatrix8x8
	movt	r1, #:upper16:11115928	@ tmp1077,
	str	r9, [fp, #-100]	@, %sfp
	mov	r5, r8, lsr #16	@, temp.5625,
	ldr	r3, [r4, ip]	@, <variable>.CurrPPS.qmatrix8x8
	and	lr, r6, #255	@, temp.5677,
	str	r5, [fp, #-124]	@, %sfp
	str	r3, [fp, #-96]	@, %sfp
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r5, [r4, r0]	@ temp.5703, <variable>.CurrPPS.qmatrix8x8
	str	lr, [fp, #-112]	@, %sfp
	ldr	r0, [fp, #-276]	@, %sfp
	and	lr, r5, #255	@, temp.5703,
	ldr	r9, [r4, r1]	@, <variable>.CurrPPS.qmatrix8x8
	mov	ip, r0, lsr #24	@,,
	str	ip, [fp, #-156]	@, %sfp
	str	r9, [fp, #-92]	@, %sfp
	mov	r0, r7, lsr #16	@, temp.5651,
	ldr	ip, [r4, r3]	@ temp.5729, <variable>.CurrPPS.qmatrix8x8
	str	lr, [fp, #-172]	@, %sfp
	ldr	r1, [fp, #-60]	@, %sfp
	and	lr, ip, #255	@, temp.5729,
	ldr	r3, [fp, #-84]	@, %sfp
	ldr	r9, [r4, r1]	@, <variable>.CurrPPS.qmatrix8x8
	str	r0, [fp, #-128]	@, %sfp
	ldr	r1, [fp, #-104]	@, %sfp
	str	r9, [fp, #-72]	@, %sfp
	ldr	r0, [r4, r3]	@ temp.5755, <variable>.CurrPPS.qmatrix8x8
	ldr	r3, [fp, #-272]	@, %sfp
	str	lr, [fp, #-164]	@, %sfp
	ldr	r9, [r4, r1]	@, <variable>.CurrPPS.qmatrix8x8
	mov	lr, r3, lsr #24	@,,
	ldr	r1, [fp, #-76]	@, %sfp
	ldr	r3, [fp, #-64]	@, %sfp
	str	r9, [fp, #-60]	@, %sfp
	and	r9, r0, #255	@, temp.5755,
	str	lr, [fp, #-132]	@, %sfp
	ldr	lr, [r4, r1]	@ temp.5781, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-168]	@, %sfp
	mov	r9, r6, lsr #16	@, temp.5677,
	ldr	r1, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	ldr	r3, [fp, #-80]	@, %sfp
	str	r9, [fp, #-136]	@, %sfp
	and	r9, lr, #255	@, temp.5781,
	str	r1, [fp, #-48]	@, %sfp
	ldr	r1, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	ldr	r3, [fp, #-68]	@, %sfp
	str	r9, [fp, #-64]	@, %sfp
	str	r1, [fp, #-104]	@, %sfp
	ldr	r1, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	ldr	r9, [fp, #-96]	@, %sfp
	str	r1, [fp, #-84]	@, %sfp
	ldr	r1, [fp, #-104]	@, %sfp
	mov	r3, r9, lsr #24	@,,
	str	r3, [fp, #-160]	@, %sfp
	mov	r9, r5, lsr #16	@, temp.5703,
	and	r3, r1, #255	@ tmp1197,,
	ldr	r1, [fp, #-92]	@, %sfp
	str	r9, [fp, #-144]	@, %sfp
	mov	r9, r1, lsr #24	@,,
	str	r9, [fp, #-148]	@, %sfp
	ldr	r9, [fp, #-72]	@, %sfp
	mov	r1, ip, lsr #16	@, temp.5729,
	str	r1, [fp, #-152]	@, %sfp
	mov	r1, r9, lsr #24	@,,
	str	r1, [fp, #-204]	@, %sfp
	ldr	r1, [fp, #-60]	@, %sfp
	mov	r9, r0, lsr #16	@, temp.5755,
	str	r9, [fp, #-208]	@, %sfp
	mov	r9, r1, lsr #24	@,,
	str	r9, [fp, #-184]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	mov	r1, lr, lsr #16	@, temp.5781,
	str	r1, [fp, #-188]	@, %sfp
	mov	r1, r9, lsr #24	@,,
	ldr	r9, [fp, #-104]	@, %sfp
	str	r1, [fp, #-196]	@, %sfp
	mov	r1, r9, lsr #16	@,,
	ldr	r9, [fp, #-88]	@, %sfp
	str	r1, [fp, #-200]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-108]	@, %sfp
	str	r1, [fp, #-76]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-100]	@, %sfp
	str	r1, [fp, #-80]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-112]	@, %sfp
	str	r1, [fp, #-88]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-172]	@, %sfp
	str	r1, [fp, #-100]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-164]	@, %sfp
	str	r1, [fp, #-140]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-168]	@, %sfp
	str	r1, [fp, #-176]	@, %sfp
	mov	r1, r9, asl #16	@,,
	ldr	r9, [fp, #-64]	@, %sfp
	str	r1, [fp, #-180]	@, %sfp
	mov	r1, r9, asl #16	@,,
	mov	r9, r3, asl #16	@, tmp1197,
	str	r9, [fp, #-228]	@, %sfp
	and	r9, r7, #-16777216	@, temp.5651,
	str	r9, [fp, #-108]	@, %sfp
	and	r9, ip, #-16777216	@, temp.5729,
	str	r9, [fp, #-216]	@, %sfp
	and	r3, r8, #-16777216	@, temp.5625,
	ldr	r9, [fp, #-116]	@, %sfp
	str	r1, [fp, #-192]	@, %sfp
	and	r1, sl, #-16777216	@, temp.5599,
	str	r1, [fp, #-64]	@, %sfp
	and	r1, r6, #-16777216	@, temp.5677,
	str	r1, [fp, #-112]	@, %sfp
	and	r1, r0, #-16777216	@, temp.5755,
	str	r1, [fp, #-220]	@, %sfp
	ldr	r1, [fp, #-76]	@, %sfp
	str	r3, [fp, #-68]	@, %sfp
	and	r3, r5, #-16777216	@, temp.5703,
	str	r3, [fp, #-168]	@, %sfp
	and	r3, lr, #-16777216	@, temp.5781,
	str	r3, [fp, #-224]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	str	r3, [fp, #-172]	@, %sfp
	ldr	r9, [fp, #-120]	@, %sfp
	ldr	r1, [fp, #-64]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-124]	@, %sfp
	ldr	r1, [fp, #-80]	@, %sfp
	str	r3, [fp, #-164]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ldr	r9, [fp, #-156]	@, %sfp
	ldr	r1, [fp, #-68]	@, %sfp
	str	r3, [fp, #-212]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-128]	@, %sfp
	ldr	r1, [fp, #-88]	@, %sfp
	str	r3, [fp, #-232]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ldr	r9, [fp, #-132]	@, %sfp
	ldr	r1, [fp, #-108]	@, %sfp
	str	r3, [fp, #-236]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-136]	@, %sfp
	ldr	r1, [fp, #-100]	@, %sfp
	str	r3, [fp, #-240]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ldr	r9, [fp, #-160]	@, %sfp
	ldr	r1, [fp, #-112]	@, %sfp
	str	r3, [fp, #-244]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-144]	@, %sfp
	ldr	r1, [fp, #-140]	@, %sfp
	str	r3, [fp, #-248]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ldr	r9, [fp, #-148]	@, %sfp
	ldr	r1, [fp, #-168]	@, %sfp
	str	r3, [fp, #-252]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-152]	@, %sfp
	ldr	r1, [fp, #-176]	@, %sfp
	str	r3, [fp, #-256]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ldr	r9, [fp, #-204]	@, %sfp
	ldr	r1, [fp, #-216]	@, %sfp
	str	r3, [fp, #-268]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-208]	@, %sfp
	ldr	r1, [fp, #-180]	@, %sfp
	str	r3, [fp, #-280]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	str	r3, [fp, #-292]	@, %sfp
	ldr	r9, [fp, #-184]	@, %sfp
	ldr	r1, [fp, #-220]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-188]	@, %sfp
	ldr	r1, [fp, #-192]	@, %sfp
	str	r3, [fp, #-304]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ldr	r9, [fp, #-196]	@, %sfp
	ldr	r1, [fp, #-224]	@, %sfp
	str	r3, [fp, #-316]	@, %sfp
	orr	r3, r1, r9, asl #8	@,,,,
	ldr	r9, [fp, #-200]	@, %sfp
	ldr	r1, [fp, #-228]	@, %sfp
	str	r3, [fp, #-328]	@, %sfp
	orr	r3, r1, r9, asl #24	@,,,,
	ubfx	r9, sl, #8, #8	@, temp.5599,,
	str	r3, [fp, #-340]	@, %sfp
	ubfx	r1, r2, #8, #8	@, temp.5604,,
	ldr	r3, [fp, #-276]	@, %sfp
	str	r9, [fp, #-168]	@, %sfp
	ldr	r9, [fp, #-272]	@, %sfp
	ubfx	sl, r3, #8, #8	@,,,
	str	r1, [fp, #-148]	@, %sfp
	ubfx	r1, r8, #8, #8	@, temp.5625,,
	str	sl, [fp, #-204]	@, %sfp
	ubfx	r8, r9, #8, #8	@,,,
	ldr	sl, [fp, #-96]	@, %sfp
	ubfx	r3, r7, #8, #8	@, temp.5651,,
	ldr	r9, [fp, #-92]	@, %sfp
	ubfx	r7, r6, #8, #8	@, temp.5677,,
	str	r1, [fp, #-216]	@, %sfp
	ubfx	r1, sl, #8, #8	@,,,
	ldr	r6, [fp, #-72]	@, %sfp
	ubfx	sl, ip, #8, #8	@, temp.5729,,
	str	r8, [fp, #-184]	@, %sfp
	ubfx	r8, r9, #8, #8	@,,,
	str	r1, [fp, #-196]	@, %sfp
	ubfx	r9, r0, #8, #8	@, temp.5755,,
	ldr	r1, [fp, #-60]	@, %sfp
	ubfx	ip, lr, #8, #8	@, temp.5781,,
	ldr	r0, [fp, #-48]	@, %sfp
	str	r3, [fp, #-220]	@, %sfp
	ubfx	r3, r5, #8, #8	@, temp.5703,,
	str	r7, [fp, #-224]	@, %sfp
	ubfx	r5, r6, #8, #8	@,,,
	ubfx	r7, r1, #8, #8	@,,,
	str	r8, [fp, #-260]	@, %sfp
	str	r3, [fp, #-264]	@, %sfp
	ubfx	r8, r0, #8, #8	@,,,
	str	r5, [fp, #-284]	@, %sfp
	and	r6, r2, #255	@, temp.5604,
	str	sl, [fp, #-288]	@, %sfp
	mov	r5, r2, lsr #8	@, temp.5604,
	str	r7, [fp, #-308]	@, %sfp
	movw	r3, #:lower16:11153956	@,
	str	r9, [fp, #-312]	@, %sfp
	movt	r3, #:upper16:11153956	@,
	str	r8, [fp, #-332]	@, %sfp
	movw	sl, #:lower16:11153960	@,
	ldr	r9, [fp, #-276]	@, %sfp
	movt	sl, #:upper16:11153960	@,
	ldr	lr, [fp, #-276]	@, %sfp
	movw	r1, #:lower16:11153964	@,
	str	r6, [fp, #-144]	@, %sfp
	movt	r1, #:upper16:11153964	@,
	ldr	r6, [fp, #-272]	@, %sfp
	and	r7, lr, #255	@,,
	mov	r0, r9, lsr #8	@,,
	ldr	lr, [fp, #-96]	@, %sfp
	ldr	r9, [fp, #-96]	@, %sfp
	movw	r2, #:lower16:11153968	@,
	str	ip, [fp, #-336]	@, %sfp
	movt	r2, #:upper16:11153968	@,
	ldr	ip, [fp, #-272]	@, %sfp
	movw	r8, #:lower16:11153972	@,
	str	r5, [fp, #-140]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	str	r7, [fp, #-152]	@, %sfp
	and	r7, lr, #255	@,,
	ldr	r6, [fp, #-92]	@, %sfp
	movt	r8, #:upper16:11153972	@,
	ldr	lr, [fp, #-72]	@, %sfp
	str	r3, [fp, #-76]	@, %sfp
	and	r3, ip, #255	@,,
	str	sl, [fp, #-64]	@, %sfp
	movw	sl, #:lower16:11153976	@,
	ldr	ip, [fp, #-92]	@, %sfp
	movt	sl, #:upper16:11153976	@,
	str	r0, [fp, #-176]	@, %sfp
	mov	r0, r9, lsr #8	@,,
	str	sl, [fp, #-352]	@, %sfp
	movw	r9, #:lower16:11154004	@,
	ldr	sl, [fp, #-72]	@, %sfp
	movt	r9, #:upper16:11154004	@,
	str	r0, [fp, #-192]	@, %sfp
	ldr	r0, [fp, #-60]	@, %sfp
	str	r1, [fp, #-80]	@, %sfp
	movw	r1, #:lower16:11153980	@,
	str	r2, [fp, #-68]	@, %sfp
	movt	r1, #:upper16:11153980	@,
	str	r8, [fp, #-116]	@, %sfp
	movw	r2, #:lower16:11153984	@,
	str	r3, [fp, #-208]	@, %sfp
	movt	r2, #:upper16:11153984	@,
	and	r3, ip, #255	@,,
	str	r5, [fp, #-180]	@, %sfp
	str	r1, [fp, #-88]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	and	r1, sl, #255	@,,
	str	r7, [fp, #-188]	@, %sfp
	str	r2, [fp, #-96]	@, %sfp
	mov	r7, lr, lsr #8	@,,
	and	r2, r0, #255	@,,
	str	r3, [fp, #-200]	@, %sfp
	str	r5, [fp, #-228]	@, %sfp
	movw	r8, #:lower16:11153988	@,
	str	r1, [fp, #-272]	@, %sfp
	movt	r8, #:upper16:11153988	@,
	str	r7, [fp, #-276]	@, %sfp
	movw	r6, #:lower16:11153992	@ tmp1093,
	str	r8, [fp, #-120]	@, %sfp
	movt	r6, #:upper16:11153992	@ tmp1093,
	str	r9, [fp, #-72]	@, %sfp
	movw	r5, #:lower16:11153996	@ tmp1107,
	str	r2, [fp, #-296]	@, %sfp
	movt	r5, #:upper16:11153996	@ tmp1107,
	ldr	r3, [fp, #-48]	@, %sfp
	movw	r7, #:lower16:11154000	@ tmp1122,
	ldr	r9, [fp, #-84]	@, %sfp
	movt	r7, #:upper16:11154000	@ tmp1122,
	ldr	r8, [fp, #-60]	@, %sfp
	and	sl, r3, #255	@,,
	ldr	r1, [fp, #-48]	@, %sfp
	and	r0, r9, #255	@,,
	str	sl, [fp, #-320]	@, %sfp
	movw	r9, #:lower16:11115976	@,
	movw	sl, #:lower16:11115980	@,
	movt	r9, #:upper16:11115976	@,
	movt	sl, #:upper16:11115980	@,
	str	r9, [fp, #-60]	@, %sfp
	str	sl, [fp, #-48]	@, %sfp
	movw	r9, #:lower16:11115996	@,
	movw	sl, #:lower16:11115984	@,
	movt	r9, #:upper16:11115996	@,
	movt	sl, #:upper16:11115984	@,
	str	r9, [fp, #-108]	@, %sfp
	str	sl, [fp, #-124]	@, %sfp
	movw	r9, #:lower16:11116000	@,
	movw	sl, #:lower16:11116004	@,
	movt	r9, #:upper16:11116000	@,
	movt	sl, #:upper16:11116004	@,
	str	r9, [fp, #-100]	@, %sfp
	str	sl, [fp, #-128]	@, %sfp
	movw	r9, #:lower16:11116020	@,
	movw	sl, #:lower16:11116008	@,
	movt	r9, #:upper16:11116020	@,
	movt	sl, #:upper16:11116008	@,
	str	r9, [fp, #-112]	@, %sfp
	str	sl, [fp, #-136]	@, %sfp
	mov	ip, r8, lsr #8	@,,
	ldr	r9, [fp, #-172]	@, %sfp
	mov	lr, r1, lsr #8	@,,
	ldr	sl, [fp, #-144]	@, %sfp
	movw	r8, #:lower16:11154008	@ tmp1151,
	str	r0, [fp, #-356]	@, %sfp
	movw	r0, #:lower16:11115988	@,
	movt	r0, #:upper16:11115988	@,
	str	r0, [fp, #-92]	@, %sfp
	movw	r0, #:lower16:11115992	@,
	movt	r0, #:upper16:11115992	@,
	str	r0, [fp, #-156]	@, %sfp
	movw	r0, #:lower16:11116012	@,
	movt	r0, #:upper16:11116012	@,
	str	r0, [fp, #-132]	@, %sfp
	movw	r0, #:lower16:11116016	@,
	movt	r0, #:upper16:11116016	@,
	str	r0, [fp, #-160]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-164]	@, %sfp
	movt	r8, #:upper16:11154008	@ tmp1151,
	ldr	sl, [fp, #-148]	@, %sfp
	movw	r1, #:lower16:11154016	@ tmp1180,
	str	r0, [fp, #-172]	@, %sfp
	movt	r1, #:upper16:11154016	@ tmp1180,
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-212]	@, %sfp
	ldr	sl, [fp, #-152]	@, %sfp
	ldr	r2, [fp, #-84]	@, %sfp
	str	r0, [fp, #-144]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-232]	@, %sfp
	ldr	sl, [fp, #-204]	@, %sfp
	mov	r3, r2, lsr #8	@,,
	str	ip, [fp, #-300]	@, %sfp
	movw	ip, #:lower16:11154012	@ tmp1165,
	str	lr, [fp, #-324]	@, %sfp
	movt	ip, #:upper16:11154012	@ tmp1165,
	str	r3, [fp, #-344]	@, %sfp
	movw	lr, #:lower16:11154020	@ tmp1194,
	str	r0, [fp, #-164]	@, %sfp
	orr	r0, r9, sl	@,,
	str	r0, [fp, #-148]	@, %sfp
	movt	lr, #:upper16:11154020	@ tmp1194,
	ldr	r9, [fp, #-236]	@, %sfp
	movw	r2, #:lower16:11115972	@ tmp1221,
	ldr	sl, [fp, #-208]	@, %sfp
	movt	r2, #:upper16:11115972	@ tmp1221,
	movw	r3, #:lower16:11115968	@ tmp1222,
	movt	r3, #:upper16:11115968	@ tmp1222,
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-240]	@, %sfp
	ldr	sl, [fp, #-184]	@, %sfp
	str	r0, [fp, #-212]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	sl, [fp, #-188]	@, %sfp
	ldr	r9, [fp, #-244]	@, %sfp
	str	r0, [fp, #-232]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-248]	@, %sfp
	ldr	sl, [fp, #-196]	@, %sfp
	str	r0, [fp, #-204]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-252]	@, %sfp
	ldr	sl, [fp, #-200]	@, %sfp
	str	r0, [fp, #-236]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-256]	@, %sfp
	ldr	sl, [fp, #-260]	@, %sfp
	str	r0, [fp, #-208]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-268]	@, %sfp
	ldr	sl, [fp, #-272]	@, %sfp
	str	r0, [fp, #-240]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-280]	@, %sfp
	ldr	sl, [fp, #-284]	@, %sfp
	str	r0, [fp, #-184]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-292]	@, %sfp
	ldr	sl, [fp, #-296]	@, %sfp
	str	r0, [fp, #-188]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-304]	@, %sfp
	ldr	sl, [fp, #-308]	@, %sfp
	str	r0, [fp, #-248]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-316]	@, %sfp
	ldr	sl, [fp, #-320]	@, %sfp
	str	r0, [fp, #-196]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	r9, [fp, #-328]	@, %sfp
	ldr	sl, [fp, #-332]	@, %sfp
	str	r0, [fp, #-252]	@, %sfp
	orr	r0, r9, sl	@,,
	str	r0, [fp, #-256]	@, %sfp
	ldr	r9, [fp, #-340]	@, %sfp
	ldr	sl, [fp, #-356]	@, %sfp
	orr	r0, r9, sl	@,,
	ldr	sl, [fp, #-140]	@, %sfp
	ldr	r9, [fp, #-176]	@, %sfp
	str	r0, [fp, #-260]	@, %sfp
	and	r0, sl, #65280	@ tmp972,,
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-180]	@, %sfp
	str	sl, [fp, #-140]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-192]	@, %sfp
	str	sl, [fp, #-152]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-228]	@, %sfp
	str	sl, [fp, #-176]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-276]	@, %sfp
	str	sl, [fp, #-180]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-300]	@, %sfp
	str	sl, [fp, #-244]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-324]	@, %sfp
	str	sl, [fp, #-192]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-344]	@, %sfp
	str	sl, [fp, #-200]	@, %sfp
	and	sl, r9, #65280	@,,
	ldr	r9, [fp, #-172]	@, %sfp
	str	sl, [fp, #-228]	@, %sfp
	orr	sl, r9, r0	@ tmp974,, tmp972
	ldr	r0, [fp, #-76]	@, %sfp
	str	sl, [r4, r0]	@ tmp974, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-168]	@, %sfp
	ldr	r0, [fp, #-144]	@, %sfp
	orr	sl, r0, r9, asl #16	@,,,,
	ldr	r0, [fp, #-64]	@, %sfp
	str	sl, [fp, #-360]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-164]	@, %sfp
	ldr	r9, [fp, #-140]	@, %sfp
	orr	sl, r0, r9	@,,
	ldr	r0, [fp, #-80]	@, %sfp
	str	sl, [fp, #-364]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-216]	@, %sfp
	ldr	r0, [fp, #-148]	@, %sfp
	orr	sl, r0, r9, asl #16	@,,,,
	str	sl, [fp, #-368]	@, %sfp
	ldr	r0, [fp, #-68]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-212]	@, %sfp
	ldr	r9, [fp, #-152]	@, %sfp
	orr	sl, r0, r9	@,,
	ldr	r0, [fp, #-116]	@, %sfp
	str	sl, [fp, #-372]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-220]	@, %sfp
	ldr	r0, [fp, #-232]	@, %sfp
	orr	sl, r0, r9, asl #16	@,,,,
	ldr	r0, [fp, #-352]	@, %sfp
	str	sl, [fp, #-376]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-204]	@, %sfp
	ldr	r9, [fp, #-176]	@, %sfp
	orr	sl, r0, r9	@,,
	ldr	r0, [fp, #-88]	@, %sfp
	str	sl, [fp, #-380]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-224]	@, %sfp
	ldr	r0, [fp, #-236]	@, %sfp
	orr	sl, r0, r9, asl #16	@,,,,
	ldr	r0, [fp, #-96]	@, %sfp
	str	sl, [fp, #-384]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-208]	@, %sfp
	ldr	r9, [fp, #-180]	@, %sfp
	orr	sl, r0, r9	@,,
	ldr	r0, [fp, #-120]	@, %sfp
	str	sl, [fp, #-388]	@, %sfp
	str	sl, [r4, r0]	@, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-264]	@, %sfp
	ldr	sl, [fp, #-240]	@, %sfp
	orr	r0, sl, r9, asl #16	@,,,,
	str	r0, [r4, r6]	@, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-184]	@, %sfp
	ldr	r9, [fp, #-244]	@, %sfp
	orr	r6, sl, r9	@ tmp1119,,
	str	r6, [r4, r5]	@ tmp1119, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-288]	@, %sfp
	ldr	r0, [fp, #-188]	@, %sfp
	orr	r9, r0, r6, asl #16	@, tmp1133,,,
	str	r9, [r4, r7]	@ tmp1133, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-72]	@, %sfp
	ldr	sl, [fp, #-248]	@, %sfp
	ldr	r5, [fp, #-192]	@, %sfp
	orr	r6, sl, r5	@ tmp1148,,
	str	r6, [r4, r0]	@ tmp1148, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-312]	@, %sfp
	ldr	r9, [fp, #-196]	@, %sfp
	orr	r5, r9, r7, asl #16	@, tmp1162,,,
	str	r5, [r4, r8]	@ tmp1162, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-252]	@, %sfp
	ldr	sl, [fp, #-200]	@, %sfp
	orr	r6, r0, sl	@ tmp1177,,
	str	r6, [r4, ip]	@ tmp1177, <variable>.DecPicPara.Qmatrix
	ldr	ip, [fp, #-336]	@, %sfp
	ldr	r8, [fp, #-256]	@, %sfp
	orr	r9, r8, ip, asl #16	@, tmp1191,,,
	str	r9, [r4, r1]	@ tmp1191, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-260]	@, %sfp
	ldr	r7, [fp, #-228]	@, %sfp
	orr	sl, r5, r7	@ tmp1206,,
	str	sl, [r4, lr]	@ tmp1206, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r6, [fp, #-104]	@, %sfp
	ldr	sl, [r4, r2]	@ temp.5833, <variable>.CurrPPS.qmatrix8x8
	mov	r1, r0, lsr #24	@,,
	ldr	r9, [fp, #-60]	@, %sfp
	and	r8, r6, #-16777216	@,,
	str	r1, [fp, #-96]	@, %sfp
	and	lr, sl, #255	@, temp.5833,
	ldr	r1, [r4, r3]	@ temp.5838, <variable>.CurrPPS.qmatrix8x8
	mov	r7, sl, lsr #16	@, temp.5833,
	ldr	r3, [fp, #-92]	@, %sfp
	ldr	r5, [fp, #-124]	@, %sfp
	str	r8, [fp, #-76]	@, %sfp
	mov	r6, r1, lsr #24	@, temp.5838,
	ldr	r8, [r4, ip]	@ temp.5859, <variable>.CurrPPS.qmatrix8x8
	str	lr, [fp, #-80]	@, %sfp
	and	r2, r8, #255	@, temp.5859,
	ldr	lr, [r4, r9]	@ temp.5864, <variable>.CurrPPS.qmatrix8x8
	str	r7, [fp, #-64]	@, %sfp
	ldr	r7, [r4, r3]	@ temp.5885, <variable>.CurrPPS.qmatrix8x8
	str	r2, [fp, #-116]	@, %sfp
	ldr	r0, [r4, r5]	@, <variable>.CurrPPS.qmatrix8x8
	and	r9, r7, #255	@, temp.5885,
	mov	r5, r8, lsr #16	@, temp.5859,
	str	r0, [fp, #-268]	@, %sfp
	ldr	ip, [fp, #-108]	@, %sfp
	ldr	r3, [fp, #-156]	@, %sfp
	str	r6, [fp, #-68]	@, %sfp
	ldr	r0, [fp, #-128]	@, %sfp
	ldr	r6, [r4, ip]	@ temp.5911, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-88]	@, %sfp
	ldr	r9, [fp, #-100]	@, %sfp
	and	ip, r6, #255	@, temp.5911,
	ldr	r2, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	str	r5, [fp, #-120]	@, %sfp
	str	r2, [fp, #-264]	@, %sfp
	mov	r2, lr, lsr #24	@, temp.5864,
	ldr	r5, [r4, r0]	@ temp.5937, <variable>.CurrPPS.qmatrix8x8
	str	ip, [fp, #-108]	@, %sfp
	ldr	r0, [fp, #-132]	@, %sfp
	and	ip, r5, #255	@, temp.5937,
	ldr	r3, [r4, r9]	@, <variable>.CurrPPS.qmatrix8x8
	ldr	r9, [fp, #-136]	@, %sfp
	str	r2, [fp, #-156]	@, %sfp
	str	r3, [fp, #-60]	@, %sfp
	ldr	r2, [r4, r0]	@ temp.5963, <variable>.CurrPPS.qmatrix8x8
	mov	r0, r7, lsr #16	@, temp.5885,
	str	ip, [fp, #-128]	@, %sfp
	ldr	ip, [fp, #-112]	@, %sfp
	ldr	r3, [r4, r9]	@, <variable>.CurrPPS.qmatrix8x8
	and	r9, r2, #255	@, temp.5963,
	str	r0, [fp, #-132]	@, %sfp
	str	r3, [fp, #-48]	@, %sfp
	ldr	r3, [fp, #-160]	@, %sfp
	ldr	r0, [r4, ip]	@ D.43761, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-100]	@, %sfp
	ldr	r9, [fp, #-268]	@, %sfp
	ldr	ip, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	mov	r3, r9, lsr #24	@,,
	ldr	r9, [fp, #-264]	@, %sfp
	str	ip, [fp, #-72]	@, %sfp
	mov	ip, r6, lsr #16	@, temp.5911,
	str	r3, [fp, #-160]	@, %sfp
	and	r3, r0, #255	@ tmp1400, D.43761,
	str	ip, [fp, #-140]	@, %sfp
	mov	ip, r9, lsr #24	@,,
	mov	r9, r5, lsr #16	@, temp.5937,
	str	ip, [fp, #-168]	@, %sfp
	str	r9, [fp, #-176]	@, %sfp
	ldr	ip, [fp, #-60]	@, %sfp
	mov	r9, ip, lsr #24	@,,
	str	r9, [fp, #-216]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	mov	ip, r2, lsr #16	@, temp.5963,
	str	ip, [fp, #-180]	@, %sfp
	mov	ip, r9, lsr #24	@,,
	str	ip, [fp, #-220]	@, %sfp
	ldr	ip, [fp, #-72]	@, %sfp
	mov	r9, r0, lsr #16	@, D.43761,
	str	r9, [fp, #-192]	@, %sfp
	mov	r9, ip, lsr #24	@,,
	ldr	ip, [fp, #-80]	@, %sfp
	str	r9, [fp, #-224]	@, %sfp
	mov	r9, ip, asl #16	@,,
	ldr	ip, [fp, #-116]	@, %sfp
	str	r9, [fp, #-92]	@, %sfp
	mov	r9, ip, asl #16	@,,
	ldr	ip, [fp, #-88]	@, %sfp
	str	r9, [fp, #-124]	@, %sfp
	mov	r9, ip, asl #16	@,,
	ldr	ip, [fp, #-108]	@, %sfp
	str	r9, [fp, #-136]	@, %sfp
	mov	r9, ip, asl #16	@,,
	ldr	ip, [fp, #-128]	@, %sfp
	str	r9, [fp, #-164]	@, %sfp
	mov	r9, ip, asl #16	@,,
	ldr	ip, [fp, #-100]	@, %sfp
	str	r9, [fp, #-232]	@, %sfp
	mov	r9, ip, asl #16	@,,
	mov	ip, r3, asl #16	@, tmp1400,
	and	r3, r8, #-16777216	@, temp.5859,
	str	r3, [fp, #-128]	@, %sfp
	and	r3, r5, #-16777216	@, temp.5937,
	str	r3, [fp, #-236]	@, %sfp
	ldr	r3, [fp, #-96]	@, %sfp
	ubfx	r5, r5, #8, #8	@, temp.5937,,
	str	ip, [fp, #-196]	@, %sfp
	and	ip, r7, #-16777216	@, temp.5885,
	str	ip, [fp, #-172]	@, %sfp
	and	ip, r2, #-16777216	@, temp.5963,
	str	ip, [fp, #-188]	@, %sfp
	ldr	ip, [fp, #-76]	@, %sfp
	str	r9, [fp, #-184]	@, %sfp
	and	r9, sl, #-16777216	@, temp.5833,
	str	r9, [fp, #-116]	@, %sfp
	and	r9, r6, #-16777216	@, temp.5911,
	str	r9, [fp, #-212]	@, %sfp
	and	r9, r0, #-16777216	@, D.43761,
	str	r9, [fp, #-200]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	ip, [fp, #-92]	@, %sfp
	str	r9, [fp, #-80]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	str	r9, [fp, #-88]	@, %sfp
	ldr	r3, [fp, #-68]	@, %sfp
	ldr	ip, [fp, #-116]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-120]	@, %sfp
	ldr	ip, [fp, #-124]	@, %sfp
	str	r9, [fp, #-108]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	ldr	r3, [fp, #-156]	@, %sfp
	ldr	ip, [fp, #-128]	@, %sfp
	str	r9, [fp, #-100]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-132]	@, %sfp
	ldr	ip, [fp, #-136]	@, %sfp
	str	r9, [fp, #-112]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	ldr	r3, [fp, #-160]	@, %sfp
	ldr	ip, [fp, #-172]	@, %sfp
	str	r9, [fp, #-144]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-140]	@, %sfp
	ldr	ip, [fp, #-164]	@, %sfp
	str	r9, [fp, #-148]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	ldr	r3, [fp, #-168]	@, %sfp
	ldr	ip, [fp, #-212]	@, %sfp
	str	r9, [fp, #-152]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-176]	@, %sfp
	ldr	ip, [fp, #-232]	@, %sfp
	str	r9, [fp, #-204]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	ldr	r3, [fp, #-216]	@, %sfp
	ldr	ip, [fp, #-236]	@, %sfp
	str	r9, [fp, #-208]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-180]	@, %sfp
	ldr	ip, [fp, #-184]	@, %sfp
	str	r9, [fp, #-240]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	ldr	r3, [fp, #-220]	@, %sfp
	ldr	ip, [fp, #-188]	@, %sfp
	str	r9, [fp, #-244]	@, %sfp
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	r3, [fp, #-192]	@, %sfp
	ldr	ip, [fp, #-196]	@, %sfp
	str	r9, [fp, #-248]	@, %sfp
	orr	r9, ip, r3, asl #24	@,,,,
	str	r9, [fp, #-252]	@, %sfp
	ldr	r3, [fp, #-224]	@, %sfp
	ldr	ip, [fp, #-200]	@, %sfp
	str	r5, [fp, #-220]	@, %sfp
	movw	r5, #:lower16:11154028	@,
	orr	r9, ip, r3, asl #8	@,,,,
	ldr	ip, [fp, #-84]	@, %sfp
	ldr	r3, [fp, #-104]	@, %sfp
	movt	r5, #:upper16:11154028	@,
	str	r9, [fp, #-228]	@, %sfp
	ubfx	r9, ip, #8, #8	@,,,
	ubfx	ip, r3, #8, #8	@,,,
	ubfx	r3, sl, #8, #8	@, temp.5833,,
	ubfx	sl, lr, #8, #8	@, temp.5864,,
	str	sl, [fp, #-160]	@, %sfp
	ldr	sl, [fp, #-264]	@, %sfp
	str	ip, [fp, #-116]	@, %sfp
	ubfx	ip, r8, #8, #8	@, temp.5859,,
	str	r3, [fp, #-128]	@, %sfp
	ubfx	r3, r7, #8, #8	@, temp.5885,,
	ldr	r8, [fp, #-268]	@, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	str	ip, [fp, #-172]	@, %sfp
	ubfx	ip, sl, #8, #8	@,,,
	str	r3, [fp, #-212]	@, %sfp
	ubfx	sl, r2, #8, #8	@, temp.5963,,
	ldr	r3, [fp, #-48]	@, %sfp
	mov	r2, r1, lsr #8	@, temp.5838,
	str	ip, [fp, #-216]	@, %sfp
	ldr	ip, [fp, #-72]	@, %sfp
	str	r9, [fp, #-68]	@, %sfp
	ubfx	r9, r1, #8, #8	@, temp.5838,,
	str	sl, [fp, #-224]	@, %sfp
	and	sl, lr, #255	@, temp.5864,
	str	r9, [fp, #-156]	@, %sfp
	ubfx	r9, r8, #8, #8	@,,,
	str	r5, [fp, #-104]	@, %sfp
	ubfx	r8, r6, #8, #8	@, temp.5911,,
	str	r9, [fp, #-168]	@, %sfp
	ubfx	r6, r3, #8, #8	@,,,
	ubfx	r9, r7, #8, #8	@,,,
	and	r3, r1, #255	@, temp.5838,
	ubfx	r7, r0, #8, #8	@, D.43761,,
	str	r8, [fp, #-236]	@, %sfp
	str	r9, [fp, #-184]	@, %sfp
	ubfx	r8, ip, #8, #8	@,,,
	str	r6, [fp, #-196]	@, %sfp
	mov	ip, lr, lsr #8	@, temp.5864,
	str	r8, [fp, #-256]	@, %sfp
	movw	r9, #:lower16:11154024	@,
	str	r7, [fp, #-260]	@, %sfp
	movt	r9, #:upper16:11154024	@,
	str	r3, [fp, #-120]	@, %sfp
	movw	r6, #:lower16:11154032	@,
	str	r9, [fp, #-84]	@, %sfp
	movt	r6, #:upper16:11154032	@,
	str	r2, [fp, #-124]	@, %sfp
	movw	r0, #:lower16:11154036	@,
	str	r6, [fp, #-92]	@, %sfp
	movt	r0, #:upper16:11154036	@,
	str	sl, [fp, #-132]	@, %sfp
	movw	r8, #:lower16:11154044	@,
	str	r0, [fp, #-96]	@, %sfp
	movt	r8, #:upper16:11154044	@,
	str	ip, [fp, #-136]	@, %sfp
	movw	r3, #:lower16:11154052	@,
	ldr	r9, [fp, #-268]	@, %sfp
	movt	r3, #:upper16:11154052	@,
	ldr	sl, [fp, #-60]	@, %sfp
	movw	ip, #:lower16:11154040	@ tmp1267,
	str	r8, [fp, #-76]	@, %sfp
	movt	ip, #:upper16:11154040	@ tmp1267,
	mov	r5, r9, lsr #8	@,,
	ldr	r9, [fp, #-48]	@, %sfp
	and	r8, sl, #255	@,,
	ldr	sl, [fp, #-72]	@, %sfp
	str	r3, [fp, #-64]	@, %sfp
	and	r3, r9, #255	@,,
	ldr	r9, [fp, #-72]	@, %sfp
	ldr	r7, [fp, #-268]	@, %sfp
	ldr	r2, [fp, #-264]	@, %sfp
	ldr	r6, [fp, #-264]	@, %sfp
	and	r1, r7, #255	@,,
	str	r8, [fp, #-264]	@, %sfp
	and	r8, sl, #255	@,,
	ldr	sl, [fp, #-68]	@, %sfp
	and	lr, r2, #255	@,,
	str	r8, [fp, #-268]	@, %sfp
	mov	r0, r6, lsr #8	@,,
	ldr	r8, [fp, #-80]	@, %sfp
	movw	r6, #:lower16:11154056	@ tmp1325,
	str	r3, [fp, #-188]	@, %sfp
	mov	r3, r9, lsr #8	@,,
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-88]	@, %sfp
	ldr	sl, [fp, #-120]	@, %sfp
	movt	r6, #:upper16:11154056	@ tmp1325,
	ldr	r2, [fp, #-48]	@, %sfp
	str	r9, [fp, #-48]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-108]	@, %sfp
	ldr	sl, [fp, #-156]	@, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	str	r9, [fp, #-60]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-100]	@, %sfp
	ldr	sl, [fp, #-132]	@, %sfp
	str	r1, [fp, #-140]	@, %sfp
	mov	r1, r7, lsr #8	@,,
	str	r5, [fp, #-164]	@, %sfp
	movw	r5, #:lower16:11154048	@ tmp1296,
	str	lr, [fp, #-176]	@, %sfp
	mov	lr, r2, lsr #8	@,,
	str	r0, [fp, #-232]	@, %sfp
	movt	r5, #:upper16:11154048	@ tmp1296,
	str	r1, [fp, #-180]	@, %sfp
	movw	r0, #:lower16:11154060	@ tmp1339,
	str	lr, [fp, #-192]	@, %sfp
	movt	r0, #:upper16:11154060	@ tmp1339,
	str	r3, [fp, #-200]	@, %sfp
	movw	r7, #:lower16:11154064	@ tmp1354,
	str	r9, [fp, #-72]	@, %sfp
	orr	r9, r8, sl	@,,
	str	r9, [fp, #-80]	@, %sfp
	movt	r7, #:upper16:11154064	@ tmp1354,
	ldr	r8, [fp, #-112]	@, %sfp
	movw	r1, #:lower16:11154068	@ tmp1368,
	ldr	sl, [fp, #-160]	@, %sfp
	movt	r1, #:upper16:11154068	@ tmp1368,
	movw	r2, #:lower16:11154072	@ tmp1383,
	movt	r2, #:upper16:11154072	@ tmp1383,
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-144]	@, %sfp
	ldr	sl, [fp, #-140]	@, %sfp
	movw	lr, #:lower16:11154076	@ tmp1397,
	str	r9, [fp, #-88]	@, %sfp
	movt	lr, #:upper16:11154076	@ tmp1397,
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-148]	@, %sfp
	ldr	sl, [fp, #-168]	@, %sfp
	movw	r3, #:lower16:11154080	@ tmp1412,
	str	r9, [fp, #-120]	@, %sfp
	movt	r3, #:upper16:11154080	@ tmp1412,
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-152]	@, %sfp
	ldr	sl, [fp, #-176]	@, %sfp
	str	r9, [fp, #-108]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-204]	@, %sfp
	ldr	sl, [fp, #-216]	@, %sfp
	str	r9, [fp, #-156]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-208]	@, %sfp
	ldr	sl, [fp, #-264]	@, %sfp
	str	r9, [fp, #-132]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-240]	@, %sfp
	ldr	sl, [fp, #-184]	@, %sfp
	str	r9, [fp, #-112]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-244]	@, %sfp
	ldr	sl, [fp, #-188]	@, %sfp
	str	r9, [fp, #-160]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-248]	@, %sfp
	ldr	sl, [fp, #-196]	@, %sfp
	str	r9, [fp, #-144]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-252]	@, %sfp
	ldr	sl, [fp, #-268]	@, %sfp
	str	r9, [fp, #-148]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-228]	@, %sfp
	ldr	sl, [fp, #-256]	@, %sfp
	str	r9, [fp, #-168]	@, %sfp
	orr	r9, r8, sl	@,,
	ldr	r8, [fp, #-124]	@, %sfp
	str	r9, [fp, #-152]	@, %sfp
	and	sl, r8, #65280	@,,
	str	sl, [fp, #-176]	@, %sfp
	ldr	r9, [fp, #-136]	@, %sfp
	ldr	sl, [fp, #-164]	@, %sfp
	and	r8, r9, #65280	@,,
	str	r8, [fp, #-68]	@, %sfp
	ldr	r8, [fp, #-232]	@, %sfp
	and	r9, sl, #65280	@,,
	str	r9, [fp, #-124]	@, %sfp
	ldr	r9, [fp, #-180]	@, %sfp
	and	sl, r8, #65280	@,,
	str	sl, [fp, #-100]	@, %sfp
	ldr	sl, [fp, #-192]	@, %sfp
	and	r8, r9, #65280	@,,
	str	r8, [fp, #-136]	@, %sfp
	ldr	r8, [fp, #-200]	@, %sfp
	and	r9, sl, #65280	@,,
	str	r9, [fp, #-140]	@, %sfp
	ldr	r9, [fp, #-116]	@, %sfp
	and	sl, r8, #65280	@,,
	ldr	r8, [fp, #-48]	@, %sfp
	str	sl, [fp, #-164]	@, %sfp
	orr	sl, r8, r9, asl #16	@,,,,
	ldr	r8, [fp, #-84]	@, %sfp
	str	sl, [fp, #-392]	@, %sfp
	str	sl, [r4, r8]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-60]	@, %sfp
	ldr	r9, [fp, #-176]	@, %sfp
	orr	sl, r8, r9	@,,
	ldr	r8, [fp, #-104]	@, %sfp
	str	sl, [fp, #-472]	@, %sfp
	str	sl, [r4, r8]	@, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-128]	@, %sfp
	ldr	r8, [fp, #-72]	@, %sfp
	orr	sl, r8, r9, asl #16	@,,,,
	ldr	r8, [fp, #-92]	@, %sfp
	str	sl, [fp, #-396]	@, %sfp
	str	sl, [r4, r8]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-80]	@, %sfp
	ldr	r9, [fp, #-68]	@, %sfp
	orr	sl, r8, r9	@,,
	ldr	r8, [fp, #-96]	@, %sfp
	str	sl, [fp, #-400]	@, %sfp
	str	sl, [r4, r8]	@, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-172]	@, %sfp
	ldr	sl, [fp, #-88]	@, %sfp
	orr	r8, sl, r9, asl #16	@,,,,
	str	r8, [r4, ip]	@, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-76]	@, %sfp
	ldr	sl, [fp, #-120]	@, %sfp
	ldr	r9, [fp, #-124]	@, %sfp
	orr	ip, sl, r9	@ tmp1293,,
	str	ip, [r4, r8]	@ tmp1293, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-212]	@, %sfp
	ldr	r9, [fp, #-108]	@, %sfp
	orr	ip, r9, sl, asl #16	@, tmp1307,,,
	str	ip, [r4, r5]	@ tmp1307, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-64]	@, %sfp
	ldr	sl, [fp, #-156]	@, %sfp
	ldr	r8, [fp, #-100]	@, %sfp
	orr	ip, sl, r8	@ tmp1322,,
	str	ip, [r4, r5]	@ tmp1322, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-236]	@, %sfp
	ldr	r8, [fp, #-132]	@, %sfp
	orr	sl, r8, r9, asl #16	@, tmp1336,,,
	str	sl, [r4, r6]	@ tmp1336, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-112]	@, %sfp
	ldr	r6, [fp, #-136]	@, %sfp
	orr	ip, r5, r6	@ tmp1351,,
	str	ip, [r4, r0]	@ tmp1351, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-220]	@, %sfp
	ldr	r8, [fp, #-160]	@, %sfp
	orr	sl, r8, r9, asl #16	@, tmp1365,,,
	str	sl, [r4, r7]	@ tmp1365, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-140]	@, %sfp
	ldr	sl, [fp, #-144]	@, %sfp
	orr	r5, sl, r7	@ tmp1380,,
	str	r5, [r4, r1]	@ tmp1380, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-224]	@, %sfp
	ldr	r0, [fp, #-148]	@, %sfp
	orr	r6, r0, r5, asl #16	@, tmp1394,,,
	str	r6, [r4, r2]	@ tmp1394, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-168]	@, %sfp
	ldr	r7, [fp, #-164]	@, %sfp
	orr	ip, r6, r7	@ tmp1409,,
	str	ip, [r4, lr]	@ tmp1409, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-260]	@, %sfp
	ldr	r8, [fp, #-152]	@, %sfp
	orr	r1, r8, r9, asl #16	@, tmp1423,,,
	str	r1, [r4, r3]	@ tmp1423, <variable>.DecPicPara.Qmatrix
	b	.L1591	@
.L1584:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC51	@,
	movt	r1, #:upper16:.LC51	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43668,
	b	.L1582	@
.L1613:
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r1, #:lower16:.LC50	@,
	movt	r1, #:upper16:.LC50	@,
	ldrsb	r2, [lr, #6]	@, <variable>.logic_fs_id
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43668,
	b	.L1582	@
	.fnend
	.size	MVC_WritePicMsg, .-MVC_WritePicMsg
	.align	2
	.global	MVC_InitListX
	.type	MVC_InitListX, %function
MVC_InitListX:
	.fnstart
.LFB1608:
	@ args = 0, pretend = 0, frame = 200
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #212
	sub	sp, sp, #212	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11117160	@ tmp237,
	movt	r1, #:upper16:11117160	@ tmp237,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r2, #:lower16:11118812	@ tmp233,
	movw	r3, #:lower16:11118808	@ tmp235,
	ldrb	r0, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movt	r2, #:upper16:11118812	@ tmp233,
	movt	r3, #:upper16:11118808	@ tmp235,
	mov	r1, #0	@ tmp234,
	cmp	r0, #0	@ <variable>.CurrSlice.slice_type,
	str	r1, [r4, r2]	@ tmp234, <variable>.CurrSlice.interviewlistXsize
	str	r1, [r4, r3]	@ tmp234, <variable>.CurrSlice.interviewlistXsize
	bne	.L1617	@,
	movw	sl, #:lower16:11151963	@ tmp239,
	movt	sl, #:upper16:11151963	@ tmp239,
	ldrb	r5, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r5, r1	@ <variable>.CurrPic.structure,
	beq	.L1618	@,
	movw	lr, #:lower16:11123120	@ tmp241,
	movt	lr, #:upper16:11123120	@ tmp241,
	ldr	r5, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, r1	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1620	@,
	movw	r6, #:lower16:11122984	@ ivtmp.6473,
	movt	r6, #:upper16:11122984	@ ivtmp.6473,
	add	r3, r4, r6	@ ivtmp.6473, pMvcCtx, ivtmp.6473
	mov	r5, r0	@ list0idx.6542, <variable>.CurrSlice.slice_type
	mov	r2, r0	@ i.6552, list0idx.6542
.L1631:
	ldr	sl, [r3, #0]	@ temp.6550, <variable>.DPB.fs_ref
	sub	r1, fp, #44	@,,
	add	ip, r1, r5, asl #2	@, tmp270,, list0idx.6542,
	add	r2, r2, #1	@ i.6552, i.6552,
	add	r3, r3, #4	@ ivtmp.6473, ivtmp.6473,
	ldrb	r0, [sl, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	strne	sl, [ip, #-64]	@ temp.6550, fs_list0
	ldr	r7, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	addne	r5, r5, #1	@ list0idx.6542, list0idx.6542,
	cmp	r7, r2	@ <variable>.DPB.ref_frames_in_buffer, i.6552
	bhi	.L1631	@,
.L1620:
	sub	r6, fp, #108	@ tmp274,,
	mov	r1, r5	@, list0idx.6542
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_frame_num_desc	@,
	mov	r0, r6	@, tmp274
	movt	r3, #:upper16:MVC_compare_fs_by_frame_num_desc	@,
	bl	qsort	@
	add	sl, r4, #256	@ tmp534, pMvcCtx,
	movw	r2, #:lower16:11151963	@ tmp279,
	movw	r3, #:lower16:11117208	@ tmp276,
	movt	r2, #:upper16:11151963	@ tmp279,
	movt	r3, #:upper16:11117208	@ tmp276,
	mov	r1, r6	@, tmp274
	mov	r6, #0	@ tmp277,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r2, r5	@, list0idx.6542
	str	r6, [r4, r3]	@ tmp277, <variable>.CurrSlice.listXsize
	mov	r5, r3	@ D.42056, tmp276
	mov	r3, sl	@, tmp534
	add	r7, r4, r5	@ D.42056, pMvcCtx, D.42056
	str	r6, [sp, #4]	@ tmp277,
	str	r7, [sp, #0]	@ D.42056,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	ip, #:lower16:11123124	@ tmp283,
	movt	ip, #:upper16:11123124	@ tmp283,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	subeq	r6, fp, #236	@ tmp532,,
	beq	.L1633	@,
	mov	r2, r6	@ ivtmp.6467, tmp277
	sub	r6, fp, #236	@ tmp532,,
	mov	r5, r2	@ listltidx, ivtmp.6467
.L1634:
	add	r0, r4, r2	@ tmp286, pMvcCtx, ivtmp.6467
	movw	lr, #:lower16:11123048	@ tmp287,
	movt	lr, #:upper16:11123048	@ tmp287,
	ldr	r1, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r0, lr	@ tmp287, tmp286, tmp287
	add	r5, r5, #1	@ listltidx, listltidx,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx
	ldr	lr, [r3, #0]	@ tmp289, <variable>.DPB.fs_ltref
	str	lr, [r6, r2]	@ tmp289, fs_listlt
	add	r2, r2, #4	@ ivtmp.6467, ivtmp.6467,
	bhi	.L1634	@,
.L1633:
	mov	r0, r6	@, tmp532
	mov	r1, r5	@, listltidx
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	movw	r0, #:lower16:11151963	@ tmp294,
	movt	r0, #:upper16:11151963	@ tmp294,
	mov	r1, r6	@, tmp532
	mov	r2, r5	@, listltidx
	mov	r3, sl	@, tmp534
	ldrb	r0, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	ip, #1	@ tmp297,
	stmia	sp, {r7, ip}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
.L1629:
	movw	r1, #:lower16:11117172	@ tmp300,
	movt	r1, #:upper16:11117172	@ tmp300,
	movw	r3, #:lower16:11117212	@ tmp298,
	movt	r3, #:upper16:11117212	@ tmp298,
	ldrsb	r2, [r4, r1]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	mov	r1, #0	@ tmp299,
	str	r1, [r4, r3]	@ tmp299, <variable>.CurrSlice.listXsize
	cmp	r2, r1	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1635	@,
	movw	lr, #:lower16:11117208	@ tmp302,
	movt	lr, #:upper16:11117208	@ tmp302,
	ldr	r0, [r4, lr]	@ prephitmp.6559, <variable>.CurrSlice.listXsize
	cmp	r0, r1	@ prephitmp.6559,
	bne	.L1856	@,
	ldr	r2, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1638	@,
	movw	r6, #:lower16:11151963	@ tmp306,
	movt	r6, #:upper16:11151963	@ tmp306,
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ temp.6560, <variable>.CurrPic.structure
	cmp	r3, #0	@ temp.6560,
	bne	.L1639	@,
	movw	lr, #:lower16:11152504	@ tmp307,
	movt	lr, #:upper16:11152504	@ tmp307,
	ldr	r1, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r3, r1, #600	@ tmp309, <variable>.CurrPic.frame_store,
	str	r3, [r4, #256]	@ tmp309, <variable>.pListX
.L1640:
	movw	r6, #:lower16:11117208	@ tmp316,
	movt	r6, #:upper16:11117208	@ tmp316,
	mov	r2, #1	@ tmp317,
	str	r2, [r4, r6]	@ tmp317, <variable>.CurrSlice.listXsize
	b	.L1642	@
.L1617:
	movw	sl, #:lower16:11151963	@ tmp319,
	movt	sl, #:upper16:11151963	@ tmp319,
	ldrb	r5, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r5, #0	@ <variable>.CurrPic.structure,
	beq	.L1644	@,
	movw	ip, #:lower16:11123120	@ tmp321,
	movt	ip, #:upper16:11123120	@ tmp321,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1646	@,
	movw	r9, #:lower16:11122984	@ ivtmp.6539,
	movt	r9, #:upper16:11122984	@ ivtmp.6539,
	movw	r7, #:lower16:11152524	@ tmp561,
	add	r3, r4, r9	@ ivtmp.6539, pMvcCtx, ivtmp.6539
	movt	r7, #:upper16:11152524	@ tmp561,
	mov	r5, r1	@ list0idx.6544, tmp234
	mov	r2, r1	@ i.6586, list0idx.6544
.L1665:
	ldr	r1, [r3, #0]	@ temp.6585, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.6586, i.6586,
	add	r3, r3, #4	@ ivtmp.6539, ivtmp.6539,
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #0	@ <variable>.is_used,
	beq	.L1664	@,
	ldr	r0, [r1, #32]	@ <variable>.poc, <variable>.poc
	sub	r9, fp, #44	@,,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r6, r9, r5, asl #2	@, tmp381,, list0idx.6544,
	cmp	lr, r0	@ <variable>.CurrPic.thispoc, <variable>.poc
	strge	r1, [r6, #-64]	@ temp.6585, fs_list0
	addge	r5, r5, #1	@ list0idx.6544, list0idx.6544,
.L1664:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.6586
	bhi	.L1665	@,
.L1646:
	sub	r6, fp, #108	@ tmp542,,
	mov	r1, r5	@, list0idx.6544
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_poc_desc	@,
	mov	r0, r6	@, tmp542
	movt	r3, #:upper16:MVC_compare_fs_by_poc_desc	@,
	bl	qsort	@
	movw	ip, #:lower16:11123120	@ tmp387,
	movt	ip, #:upper16:11123120	@ tmp387,
	ldr	r9, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r9, #0	@ <variable>.DPB.ref_frames_in_buffer,
	moveq	r7, r5	@ list0idx.6545, list0idx.6544
	beq	.L1667	@,
	movw	r8, #:lower16:11122984	@ ivtmp.6534,
	movt	r8, #:upper16:11122984	@ ivtmp.6534,
	add	r3, r4, r8	@ ivtmp.6534, pMvcCtx, ivtmp.6534
	movw	r8, #:lower16:11152524	@ tmp559,
	movt	r8, #:upper16:11152524	@ tmp559,
	mov	r7, r5	@ list0idx.6545, list0idx.6544
	mov	r2, #0	@ i.6592,
.L1669:
	ldr	r1, [r3, #0]	@ temp.6588, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.6592, i.6592,
	add	r3, r3, #4	@ ivtmp.6534, ivtmp.6534,
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #0	@ <variable>.is_used,
	beq	.L1668	@,
	ldr	r0, [r1, #32]	@ <variable>.poc, <variable>.poc
	sub	sl, fp, #44	@,,
	ldr	lr, [r4, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r9, sl, r7, asl #2	@, tmp396,, list0idx.6545,
	cmp	lr, r0	@ <variable>.CurrPic.thispoc, <variable>.poc
	strlt	r1, [r9, #-64]	@ temp.6588, fs_list0
	addlt	r7, r7, #1	@ list0idx.6545, list0idx.6545,
.L1668:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.6592
	bhi	.L1669	@,
	rsb	r9, r5, r7	@ prephitmp.6413, list0idx.6544, list0idx.6545
.L1667:
	mov	sl, r5, asl #2	@ tmp543, list0idx.6544,
	mov	r1, r9	@, prephitmp.6413
	add	r0, r6, sl	@, tmp542, tmp543
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_poc_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_poc_asc	@,
	bl	qsort	@
	cmp	r5, #0	@ list0idx.6544,
	subeq	r8, fp, #172	@ tmp540,,
	beq	.L1670	@,
	sub	r8, fp, #172	@ tmp540,,
	ldr	ip, [r6, #0]	@ tmp406, fs_list0
	add	r9, r8, r9, asl #2	@, ivtmp.6531, tmp540, prephitmp.6413,
	cmp	sl, #4	@ tmp543,
	sub	r2, sl, #4	@ tmp634, tmp543,
	mov	r3, #4	@ ivtmp.6529,
	str	ip, [r9], #4	@ tmp406, fs_list1
	ubfx	r2, r2, #2, #1	@ tmp635, tmp634,,
	beq	.L1670	@,
	cmp	r2, #0	@ tmp635,
	beq	.L1671	@,
	ldr	r2, [r6, #4]	@ tmp847, fs_list0
	mov	r3, #8	@ ivtmp.6529,
	cmp	sl, r3	@ tmp543, ivtmp.6529
	str	r2, [r9], #4	@ tmp847, fs_list1
	beq	.L1670	@,
.L1671:
	add	r2, r3, #4	@ tmp636, ivtmp.6529,
	ldr	r0, [r6, r3]	@ tmp694, fs_list0
	add	r3, r2, #4	@ ivtmp.6529, tmp636,
	mov	lr, r9	@ tmp637, ivtmp.6531
	ldr	r1, [r6, r2]	@ tmp697, fs_list0
	cmp	sl, r3	@ tmp543, ivtmp.6529
	str	r0, [lr], #4	@ tmp694, fs_list1
	str	r1, [r9, #4]	@ tmp697, fs_list1
	add	r9, lr, #4	@ ivtmp.6531, tmp637,
	bne	.L1671	@,
.L1670:
	cmp	r5, r7	@ list0idx.6544, list0idx.6545
	bcs	.L1672	@,
	add	sl, r6, sl	@ ivtmp.6521, tmp542, tmp543
	add	lr, r6, r7, asl #2	@, D.54590, tmp542, list0idx.6545,
	rsb	r9, sl, lr	@ tmp627, ivtmp.6521, D.54590
	mov	r2, #4	@ ivtmp.6522,
	ldr	r5, [sl], #4	@ tmp412, fs_list0
	sub	r3, r9, #4	@ tmp628, tmp627,
	ubfx	r1, r3, #2, #1	@ tmp629, tmp628,,
	cmp	sl, lr	@ ivtmp.6521, D.54590
	str	r5, [r8, #0]	@ tmp412, fs_list1
	beq	.L1672	@,
	cmp	r1, #0	@ tmp629,
	beq	.L1673	@,
	ldr	r9, [sl], #4	@ tmp846, fs_list0
	mov	r2, #8	@ ivtmp.6522,
	cmp	sl, lr	@ ivtmp.6521, D.54590
	str	r9, [r8, #4]	@ tmp846, fs_list1
	beq	.L1672	@,
.L1673:
	mov	r5, sl	@ tmp630, ivtmp.6521
	ldr	r0, [sl, #4]	@ tmp703, fs_list0
	ldr	ip, [r5], #4	@ tmp700, fs_list0
	add	r1, r2, #4	@ tmp631, ivtmp.6522,
	add	sl, r5, #4	@ ivtmp.6521, tmp630,
	cmp	sl, lr	@ ivtmp.6521, D.54590
	str	ip, [r8, r2]	@ tmp700, fs_list1
	str	r0, [r8, r1]	@ tmp703, fs_list1
	add	r2, r1, #4	@ ivtmp.6522, tmp631,
	bne	.L1673	@,
.L1672:
	movw	r5, #:lower16:11151963	@ tmp418,
	movw	r2, #:lower16:11117208	@ tmp413,
	movt	r5, #:upper16:11151963	@ tmp418,
	movt	r2, #:upper16:11117208	@ tmp413,
	movw	r3, #:lower16:11117212	@ tmp415,
	add	sl, r4, #256	@ tmp534, pMvcCtx,
	movt	r3, #:upper16:11117212	@ tmp415,
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp542
	movw	lr, #:lower16:11117208	@ temp.6600,
	mov	r6, #0	@ tmp414,
	movt	lr, #:upper16:11117208	@ temp.6600,
	str	r6, [r4, r2]	@ tmp414, <variable>.CurrSlice.listXsize
	mov	r2, r7	@, list0idx.6545
	str	r6, [r4, r3]	@ tmp414, <variable>.CurrSlice.listXsize
	mov	r3, sl	@, tmp534
	add	r9, r4, lr	@ temp.6600, pMvcCtx, temp.6600
	str	r6, [sp, #4]	@ tmp414,
	str	r9, [sp, #0]	@ temp.6600,
	bl	MVC_GenPiclistfromFrmlist	@
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r3, r4, #388	@, pMvcCtx,
	mov	r2, r7	@, list0idx.6545
	mov	r1, r8	@, tmp540
	movw	r7, #:lower16:11117212	@ D.42125,
	movt	r7, #:upper16:11117212	@ D.42125,
	str	r6, [sp, #4]	@ tmp414,
	add	r7, r4, r7	@ D.42125, pMvcCtx, D.42125
	str	r3, [fp, #-240]	@, %sfp
	str	r7, [sp, #0]	@ D.42125,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	ip, #:lower16:11123124	@ tmp427,
	movt	ip, #:upper16:11123124	@ tmp427,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	subeq	r6, fp, #236	@ tmp704,,
	beq	.L1675	@,
	mov	r2, r6	@ ivtmp.6514, tmp414
	sub	r6, fp, #236	@ tmp704,,
	mov	r5, r2	@ listltidx.6594, ivtmp.6514
.L1676:
	add	r0, r4, r2	@ tmp430, pMvcCtx, ivtmp.6514
	movw	r3, #:lower16:11123048	@ tmp431,
	movt	r3, #:upper16:11123048	@ tmp431,
	ldr	r1, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	lr, r0, r3	@ tmp431, tmp430, tmp431
	add	r5, r5, #1	@ listltidx.6594, listltidx.6594,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx.6594
	ldr	r8, [lr, #0]	@ tmp433, <variable>.DPB.fs_ltref
	str	r8, [r6, r2]	@ tmp433, fs_listlt
	add	r2, r2, #4	@ ivtmp.6514, ivtmp.6514,
	bhi	.L1676	@,
.L1675:
	movw	r8, #:lower16:11151963	@ tmp438,
	movt	r8, #:upper16:11151963	@ tmp438,
	mov	r0, r6	@, tmp704
	mov	r1, r5	@, listltidx.6594
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp704
	mov	r2, r5	@, listltidx.6594
	mov	r3, sl	@, tmp534
	mov	ip, #1	@,
	stmia	sp, {r9, ip}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp704
	mov	r2, r5	@, listltidx.6594
	ldr	r3, [fp, #-240]	@, %sfp
	mov	r6, #1	@,
	str	r7, [sp, #0]	@ D.42125,
	str	r6, [sp, #4]	@,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	r2, #:lower16:11117208	@ tmp446,
	movw	r1, #:lower16:11117212	@ tmp447,
	movt	r2, #:upper16:11117208	@ tmp446,
	movt	r1, #:upper16:11117212	@ tmp447,
	ldr	r6, [r4, r2]	@ list0idx.6607, <variable>.CurrSlice.listXsize
	ldr	ip, [r4, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r6, ip	@ list0idx.6607, <variable>.CurrSlice.listXsize
	beq	.L1663	@,
.L1642:
	movw	r1, #:lower16:11117172	@ tmp451,
	movt	r1, #:upper16:11117172	@ tmp451,
	ldrsb	r6, [r4, r1]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	cmp	r6, #0	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1635	@,
	movw	r3, #:lower16:11117160	@ tmp453,
	movw	ip, #:lower16:11117208	@ tmp454,
	movt	r3, #:upper16:11117160	@ tmp453,
	movt	ip, #:upper16:11117208	@ tmp454,
	ldrb	r6, [r4, r3]	@ zero_extendqisi2	@ prephitmp.6403, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, ip]	@ prephitmp.6559, <variable>.CurrSlice.listXsize
.L1637:
	cmp	r6, #0	@ prephitmp.6403,
	bne	.L1687	@,
	cmp	r0, #0	@ prephitmp.6559,
	beq	.L1857	@,
.L1688:
	movw	r1, #:lower16:11117220	@ tmp502,
	movt	r1, #:upper16:11117220	@ tmp502,
	movw	r2, #:lower16:11117224	@ tmp506,
	movt	r2, #:upper16:11117224	@ tmp506,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movw	ip, #:lower16:11117208	@ tmp505,
	movw	r1, #:lower16:11117212	@ tmp508,
	movt	ip, #:upper16:11117208	@ tmp505,
	movt	r1, #:upper16:11117212	@ tmp508,
	add	r3, r3, #1	@ tmp503, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	ldr	r2, [r4, r2]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r0, r3	@ prephitmp.6559, tmp503
	movcc	r3, r0	@ i, prephitmp.6559
	str	r3, [r4, ip]	@ i, <variable>.CurrSlice.listXsize
	ldr	r0, [r4, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r2, r2, #1	@ prephitmp.6405, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r2, r0	@ prephitmp.6405, <variable>.CurrSlice.listXsize
	movcs	r2, r0	@ prephitmp.6405, <variable>.CurrSlice.listXsize
	cmp	r3, #32	@ i,
	str	r2, [r4, r1]	@ prephitmp.6405, <variable>.CurrSlice.listXsize
	bhi	.L1691	@,
.L1690:
	add	ip, r3, #64	@ tmp527, i,
	add	r1, r3, #1	@ i, i,
	cmp	r1, #32	@ i,
	mov	r0, #0	@ tmp547,
	add	r2, r4, ip, asl #2	@, ivtmp.6439, pMvcCtx, tmp527,
	and	r3, r3, #1	@ tmp569, i,
	str	r0, [r2], #4	@ tmp547, <variable>.pListX
	bhi	.L1817	@,
	cmp	r3, #0	@ tmp569,
	beq	.L1692	@,
	add	r1, r1, #1	@ i, i,
	str	r0, [r2], #4	@ tmp547, <variable>.pListX
	cmp	r1, #32	@ i,
	bhi	.L1817	@,
.L1692:
	add	r1, r1, #2	@ i, i,
	mov	ip, r2	@ tmp571, ivtmp.6439
	cmp	r1, #32	@ i,
	str	r0, [ip], #4	@ tmp547, <variable>.pListX
	str	r0, [r2, #4]	@ tmp547, <variable>.pListX
	add	r2, ip, #4	@ ivtmp.6439, tmp571,
	bls	.L1692	@,
.L1817:
	movw	r0, #:lower16:11117212	@ tmp512,
	movt	r0, #:upper16:11117212	@ tmp512,
	ldr	r2, [r4, r0]	@ prephitmp.6405, <variable>.CurrSlice.listXsize
.L1691:
	cmp	r2, #32	@ prephitmp.6405,
	bhi	.L1693	@,
	add	r3, r2, #64	@ tmp513, prephitmp.6405,
	add	r0, r4, #388	@ D.54478, pMvcCtx,
	mov	r1, #0	@ tmp546,
	add	r4, r4, r3, asl #2	@, ivtmp.6435, pMvcCtx, tmp513,
	add	r3, r4, #4	@ ivtmp.6435, ivtmp.6435,
	rsb	ip, r4, r0	@ tmp564, ivtmp.6435, D.54478
	cmp	r3, r0	@ ivtmp.6435, D.54478
	sub	r2, ip, #4	@ tmp565, tmp564,
	ubfx	r2, r2, #2, #1	@ tmp566, tmp565,,
	str	r1, [r4, #132]	@ tmp546, <variable>.pListX
	beq	.L1693	@,
	cmp	r2, #0	@ tmp566,
	beq	.L1694	@,
	str	r1, [r3, #132]	@ tmp546, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.6435, ivtmp.6435,
	cmp	r3, r0	@ ivtmp.6435, D.54478
	beq	.L1693	@,
.L1694:
	add	r2, r3, #4	@ tmp567, ivtmp.6435,
	str	r1, [r3, #132]	@ tmp546, <variable>.pListX
	add	r3, r2, #4	@ ivtmp.6435, tmp567,
	cmp	r3, r0	@ ivtmp.6435, D.54478
	str	r1, [r2, #132]	@ tmp546, <variable>.pListX
	bne	.L1694	@,
.L1693:
	mov	r0, #0	@ D.42079,
.L1643:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1644:
	movw	r7, #:lower16:11123120	@ tmp323,
	movt	r7, #:upper16:11123120	@ tmp323,
	ldr	lr, [r4, r7]	@ temp.6642, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.6642,
	moveq	r5, lr	@ list0idx.6543, temp.6642
	beq	.L1648	@,
	movw	r3, #:lower16:11122984	@ ivtmp.6508,
	movt	r3, #:upper16:11122984	@ ivtmp.6508,
	add	r3, r4, r3	@ ivtmp.6508, pMvcCtx, ivtmp.6508
	sub	ip, lr, #1	@ tmp621, temp.6642,
	movw	r6, #:lower16:11152528	@ tmp556,
	and	r0, ip, #1	@ tmp623, tmp621,
	ldr	r2, [r3, #0]	@ temp.6564, <variable>.DPB.fs_ref
	movt	r6, #:upper16:11152528	@ tmp556,
	ldrb	r1, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1858	@,
.L1775:
	mov	r2, #1	@ i.6567,
	cmp	r2, lr	@ i.6567, temp.6642
	add	r3, r3, #4	@ ivtmp.6508, ivtmp.6508,
	bcs	.L1648	@,
	cmp	r0, #0	@ tmp623,
	beq	.L1650	@,
	ldr	r1, [r3, #0]	@ temp.6564, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1859	@,
.L1777:
	add	r2, r2, #1	@ i.6567, i.6567,
	add	r3, r3, #4	@ ivtmp.6508, ivtmp.6508,
	cmp	r2, lr	@ i.6567, temp.6642
	bcc	.L1650	@,
.L1648:
	add	sl, r4, #256	@ tmp534, pMvcCtx,
	mov	r1, r5	@, list0idx.6543
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_poc_desc	@,
	mov	r0, sl	@, tmp534
	movt	r3, #:upper16:MVC_compare_pic_by_poc_desc	@,
	bl	qsort	@
	movw	r0, #:lower16:11123120	@ tmp332,
	movt	r0, #:upper16:11123120	@ tmp332,
	ldr	r7, [r4, r0]	@ temp.6641, <variable>.DPB.ref_frames_in_buffer
	cmp	r7, #0	@ temp.6641,
	moveq	r6, r5	@ list0idx.6607, list0idx.6543
	beq	.L1652	@,
	movw	r6, #:lower16:11122984	@ ivtmp.6503,
	movt	r6, #:upper16:11122984	@ ivtmp.6503,
	add	r3, r4, r6	@ ivtmp.6503, pMvcCtx, ivtmp.6503
	sub	r2, r7, #1	@ tmp616, temp.6641,
	and	r0, r2, #1	@ tmp618, tmp616,
	movw	ip, #:lower16:11152528	@ tmp555,
	ldr	r2, [r3, #0]	@ temp.6569, <variable>.DPB.fs_ref
	movt	ip, #:upper16:11152528	@ tmp555,
	mov	r6, r5	@ list0idx.6607, list0idx.6543
	ldrb	lr, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1860	@,
.L1768:
	mov	r2, #1	@ i.6574,
	cmp	r2, r7	@ i.6574, temp.6641
	add	r3, r3, #4	@ ivtmp.6503, ivtmp.6503,
	bcs	.L1821	@,
	cmp	r0, #0	@ tmp618,
	beq	.L1654	@,
	ldr	r1, [r3, #0]	@ temp.6569, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1861	@,
.L1770:
	add	r2, r2, #1	@ i.6574, i.6574,
	add	r3, r3, #4	@ ivtmp.6503, ivtmp.6503,
	cmp	r2, r7	@ i.6574, temp.6641
	bcc	.L1654	@,
.L1821:
	rsb	r7, r5, r6	@ prephitmp.6409, list0idx.6543, list0idx.6607
.L1652:
	add	r0, sl, r5, asl #2	@,, tmp534, list0idx.6543,
	mov	r1, r7	@, prephitmp.6409
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_poc_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_poc_asc	@,
	bl	qsort	@
	cmp	r5, #0	@ list0idx.6543,
	beq	.L1655	@,
	add	r0, r7, #64	@ tmp343, prephitmp.6409,
	ldr	ip, [r4, #256]	@ tmp345, <variable>.pListX
	mov	r1, #1	@ j,
	cmp	r1, r5	@ j, list0idx.6543
	add	r2, r4, r0, asl #2	@, ivtmp.6500, pMvcCtx, tmp343,
	sub	r3, r5, #1	@ tmp610, list0idx.6543,
	and	r0, r3, r1	@ tmp612, tmp610,
	add	r3, r2, #4	@ ivtmp.6500, ivtmp.6500,
	str	ip, [r2, #132]	@ tmp345, <variable>.pListX
	add	r2, r4, #4	@ ivtmp.6498, pMvcCtx,
	beq	.L1655	@,
	cmp	r0, #0	@ tmp612,
	beq	.L1656	@,
	ldr	r0, [r2, #256]	@ tmp811, <variable>.pListX
	mov	r1, #2	@ j,
	cmp	r1, r5	@ j, list0idx.6543
	add	r2, r2, #4	@ ivtmp.6498, ivtmp.6498,
	str	r0, [r3, #132]	@ tmp811, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.6500, ivtmp.6500,
	beq	.L1655	@,
.L1656:
	ldr	lr, [r2, #256]	@ tmp673, <variable>.pListX
	add	ip, r2, #4	@ tmp614, ivtmp.6498,
	add	r1, r1, #2	@ j, j,
	add	r0, r3, #4	@ tmp615, ivtmp.6500,
	cmp	r1, r5	@ j, list0idx.6543
	add	r2, ip, #4	@ ivtmp.6498, tmp614,
	str	lr, [r3, #132]	@ tmp673, <variable>.pListX
	add	r3, r0, #4	@ ivtmp.6500, tmp615,
	ldr	lr, [ip, #256]	@ tmp677, <variable>.pListX
	str	lr, [r0, #132]	@ tmp677, <variable>.pListX
	bne	.L1656	@,
.L1655:
	cmp	r5, r6	@ list0idx.6543, list0idx.6607
	bcs	.L1657	@,
	add	r1, r5, #64	@ tmp346, list0idx.6543,
	rsb	r0, r5, r6	@ tmp348, list0idx.6543, list0idx.6607
	add	r3, r4, #4	@ ivtmp.6493, pMvcCtx,
	add	r1, r4, r1, asl #2	@, ivtmp.6490, pMvcCtx, tmp346,
	add	lr, r4, r0, asl #2	@, D.54550, pMvcCtx, tmp348,
	rsb	r2, r4, lr	@ tmp605, pMvcCtx, D.54550
	cmp	r3, lr	@ ivtmp.6493, D.54550
	ldr	r0, [r1], #4	@ tmp350, <variable>.pListX
	sub	r5, r2, #4	@ tmp606, tmp605,
	ubfx	r2, r5, #2, #1	@ tmp607, tmp606,,
	str	r0, [r4, #388]	@ tmp350, <variable>.pListX
	beq	.L1657	@,
	cmp	r2, #0	@ tmp607,
	beq	.L1658	@,
	ldr	r2, [r1], #4	@ tmp810, <variable>.pListX
	str	r2, [r3, #388]	@ tmp810, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.6493, ivtmp.6493,
	cmp	r3, lr	@ ivtmp.6493, D.54550
	beq	.L1657	@,
.L1658:
	mov	r5, r1	@ tmp608, ivtmp.6490
	add	r0, r3, #4	@ tmp609, ivtmp.6493,
	ldr	r2, [r5], #4	@ tmp680, <variable>.pListX
	str	r2, [r3, #388]	@ tmp680, <variable>.pListX
	add	r3, r0, #4	@ ivtmp.6493, tmp609,
	ldr	ip, [r1, #4]	@ tmp683, <variable>.pListX
	cmp	r3, lr	@ ivtmp.6493, D.54550
	add	r1, r5, #4	@ ivtmp.6490, tmp608,
	str	ip, [r0, #388]	@ tmp683, <variable>.pListX
	bne	.L1658	@,
.L1657:
	movw	ip, #:lower16:11123124	@ tmp353,
	movt	ip, #:upper16:11123124	@ tmp353,
	movw	lr, #:lower16:11117212	@ tmp351,
	movw	r3, #:lower16:11117208	@ tmp352,
	ldr	r1, [r4, ip]	@ temp.6639, <variable>.DPB.ltref_frames_in_buffer
	movt	lr, #:upper16:11117212	@ tmp351,
	movt	r3, #:upper16:11117208	@ tmp352,
	cmp	r1, #0	@ temp.6639,
	str	r6, [r4, lr]	@ list0idx.6607, <variable>.CurrSlice.listXsize
	str	r6, [r4, r3]	@ list0idx.6607, <variable>.CurrSlice.listXsize
	moveq	r0, r6	@ list0idx, list0idx.6607
	beq	.L1660	@,
	movw	r2, #:lower16:11123048	@ ivtmp.6484,
	movt	r2, #:upper16:11123048	@ ivtmp.6484,
	add	r3, r4, r2	@ ivtmp.6484, pMvcCtx, ivtmp.6484
	sub	r5, r1, #1	@ tmp599, temp.6639,
	and	ip, r5, #1	@ tmp601, tmp599,
	ldr	r2, [r3, #0]	@ temp.6576, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	beq	.L1862	@,
.L1753:
	mov	r2, #1	@ i.6580,
	cmp	r2, r1	@ i.6580, temp.6639
	add	r3, r3, #4	@ ivtmp.6484, ivtmp.6484,
	bcs	.L1820	@,
	cmp	ip, #0	@ tmp601,
	beq	.L1662	@,
	ldr	r0, [r3, #0]	@ temp.6576, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #3	@ <variable>.is_used,
	beq	.L1863	@,
.L1755:
	add	r2, r2, #1	@ i.6580, i.6580,
	add	r3, r3, #4	@ ivtmp.6484, ivtmp.6484,
	cmp	r2, r1	@ i.6580, temp.6639
	bcc	.L1662	@,
.L1820:
	movw	r1, #:lower16:11117208	@ tmp362,
	movt	r1, #:upper16:11117208	@ tmp362,
	ldr	r0, [r4, r1]	@ list0idx, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r6	@ prephitmp.6645, list0idx, list0idx.6607
.L1660:
	movw	r5, #:lower16:11117208	@ tmp366,
	movt	r5, #:upper16:11117208	@ tmp366,
	add	r0, sl, r0, asl #2	@,, tmp534, list0idx,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	ldr	r0, [r4, r5]	@ D.42047, <variable>.CurrSlice.listXsize
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	add	ip, r0, #33	@ tmp367, D.42047,
	rsb	r1, r0, r6	@, D.42047, list0idx.6607
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	mla	r0, ip, r2, sl	@, tmp367,, tmp534
	bl	qsort	@
	movw	r3, #:lower16:11117212	@ tmp372,
	movt	r3, #:upper16:11117212	@ tmp372,
	str	r6, [r4, r3]	@ list0idx.6607, <variable>.CurrSlice.listXsize
	str	r6, [r4, r5]	@ list0idx.6607, <variable>.CurrSlice.listXsize
.L1663:
	cmp	r6, #1	@ list0idx.6607,
	bls	.L1642	@,
	ldr	r2, [r4, #256]	@ tmp449, <variable>.pListX
	sub	r1, r6, #1	@ tmp594, list0idx.6607,
	ldr	r3, [r4, #388]	@ tmp450, <variable>.pListX
	and	r0, r1, #1	@ tmp596, tmp594,
	cmp	r2, r3	@ tmp449, tmp450
	bne	.L1642	@,
	mov	r1, #1	@ j.6613,
	cmp	r1, r6	@ j.6613, list0idx.6607
	add	r3, r4, #4	@ ivtmp.6480, pMvcCtx,
	bcs	.L1819	@,
	cmp	r0, #0	@ tmp596,
	beq	.L1677	@,
	ldr	r0, [r3, #256]	@ tmp794, <variable>.pListX
	ldr	r2, [r3, #388]	@ tmp795, <variable>.pListX
	cmp	r0, r2	@ tmp794, tmp795
	bne	.L1642	@,
	mov	r1, #2	@ j.6613,
	cmp	r1, r6	@ j.6613, list0idx.6607
	add	r3, r3, #4	@ ivtmp.6480, ivtmp.6480,
	bcs	.L1819	@,
.L1677:
	ldr	ip, [r3, #256]	@ tmp706, <variable>.pListX
	add	r2, r3, #4	@ tmp598, ivtmp.6480,
	ldr	r0, [r3, #388]	@ tmp707, <variable>.pListX
	add	r3, r1, #1	@ tmp597, j.6613,
	add	r1, r3, #1	@ j.6613, tmp597,
	add	r3, r2, #4	@ ivtmp.6480, tmp598,
	cmp	ip, r0	@ tmp706, tmp707
	bne	.L1642	@,
	ldr	r0, [r2, #256]	@ tmp711, <variable>.pListX
	ldr	r2, [r2, #388]	@ tmp712, <variable>.pListX
	cmp	r0, r2	@ tmp711, tmp712
	bne	.L1642	@,
	cmp	r1, r6	@ j.6613, list0idx.6607
	bcc	.L1677	@,
.L1819:
	ldr	r1, [r4, #388]	@ tmp_s, <variable>.pListX
	ldr	r6, [r4, #392]	@ <variable>.pListX, <variable>.pListX
	str	r1, [r4, #392]	@ tmp_s, <variable>.pListX
	str	r6, [r4, #388]	@ <variable>.pListX, <variable>.pListX
	b	.L1642	@
.L1618:
	movw	r0, #:lower16:11123120	@ tmp243,
	movt	r0, #:upper16:11123120	@ tmp243,
	ldr	lr, [r4, r0]	@ temp.6635, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.6635,
	moveq	r5, lr	@ list0idx.6611, temp.6635
	beq	.L1622	@,
	movw	r3, #:lower16:11122984	@ ivtmp.6461,
	movt	r3, #:upper16:11122984	@ ivtmp.6461,
	add	r3, r4, r3	@ ivtmp.6461, pMvcCtx, ivtmp.6461
	sub	r2, lr, #1	@ tmp589, temp.6635,
	and	r0, r2, #1	@ tmp591, tmp589,
	ldr	r2, [r3, #0]	@ D.42025, <variable>.DPB.fs_ref
	ldrb	ip, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1864	@,
.L1742:
	mov	r2, #1	@ i.6547,
	cmp	r2, lr	@ i.6547, temp.6635
	add	r3, r3, #4	@ ivtmp.6461, ivtmp.6461,
	bcs	.L1622	@,
	cmp	r0, #0	@ tmp591,
	beq	.L1624	@,
	ldr	r1, [r3, #0]	@ D.42025, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1865	@,
.L1744:
	add	r2, r2, #1	@ i.6547, i.6547,
	add	r3, r3, #4	@ ivtmp.6461, ivtmp.6461,
	cmp	r2, lr	@ i.6547, temp.6635
	bcc	.L1624	@,
.L1622:
	add	sl, r4, #256	@ tmp534, pMvcCtx,
	mov	r1, r5	@, list0idx.6611
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_pic_num_desc	@,
	mov	r0, sl	@, tmp534
	movt	r3, #:upper16:MVC_compare_pic_by_pic_num_desc	@,
	bl	qsort	@
	movw	r2, #:lower16:11123124	@ tmp253,
	movt	r2, #:upper16:11123124	@ tmp253,
	movw	r0, #:lower16:11117208	@ tmp252,
	movt	r0, #:upper16:11117208	@ tmp252,
	ldr	r1, [r4, r2]	@ temp.6634, <variable>.DPB.ltref_frames_in_buffer
	str	r5, [r4, r0]	@ list0idx.6611, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ temp.6634,
	moveq	r0, r5	@ list0idx.6546, list0idx.6611
	beq	.L1626	@,
	movw	r3, #:lower16:11123048	@ ivtmp.6456,
	movt	r3, #:upper16:11123048	@ ivtmp.6456,
	add	r3, r4, r3	@ ivtmp.6456, pMvcCtx, ivtmp.6456
	sub	r0, r1, #1	@ tmp584, temp.6634,
	and	ip, r0, #1	@ tmp586, tmp584,
	ldr	r2, [r3, #0]	@ D.42037, <variable>.DPB.fs_ltref
	ldrb	lr, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1866	@,
.L1735:
	mov	r2, #1	@ i.6549,
	cmp	r2, r1	@ i.6549, temp.6634
	add	r3, r3, #4	@ ivtmp.6456, ivtmp.6456,
	bcs	.L1818	@,
	cmp	ip, #0	@ tmp586,
	beq	.L1628	@,
	ldr	r0, [r3, #0]	@ D.42037, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1867	@,
.L1737:
	add	r2, r2, #1	@ i.6549, i.6549,
	add	r3, r3, #4	@ ivtmp.6456, ivtmp.6456,
	cmp	r2, r1	@ i.6549, temp.6634
	bcc	.L1628	@,
.L1818:
	movw	ip, #:lower16:11117208	@ tmp261,
	movt	ip, #:upper16:11117208	@ tmp261,
	ldr	r0, [r4, ip]	@ list0idx.6546, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r5	@ prephitmp.6417, list0idx.6546, list0idx.6611
.L1626:
	add	r0, sl, r0, asl #2	@,, tmp534, list0idx.6546,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	movw	r1, #:lower16:11117208	@ tmp265,
	movt	r1, #:upper16:11117208	@ tmp265,
	str	r5, [r4, r1]	@ list0idx.6611, <variable>.CurrSlice.listXsize
	b	.L1629	@
.L1869:
	ldr	r3, [r3, #4]	@ temp.6564, <variable>.DPB.fs_ref
	add	r8, r5, #64	@ tmp329, list0idx.6543,
	ldr	ip, [r1, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	add	r1, r1, #600	@ tmp330, temp.6564,
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r7, ip	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	r1, [r4, r8, asl #2]	@ tmp330, <variable>.pListX
	ldrb	sl, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	addge	r5, r5, #1	@ list0idx.6543, list0idx.6543,
	cmp	sl, #3	@ <variable>.is_reference,
	beq	.L1868	@,
.L1780:
	add	r2, r2, #1	@ i.6567, tmp624,
	add	r3, r0, #4	@ ivtmp.6508, tmp625,
	cmp	r2, lr	@ i.6567, temp.6642
	bcs	.L1648	@,
.L1650:
	ldr	r1, [r3, #0]	@ temp.6564, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp624, i.6567,
	add	r0, r3, #4	@ tmp625, ivtmp.6508,
	ldrb	sl, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #3	@ <variable>.is_reference,
	beq	.L1869	@,
	ldr	r3, [r3, #4]	@ temp.6564, <variable>.DPB.fs_ref
	ldrb	sl, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #3	@ <variable>.is_reference,
	bne	.L1780	@,
.L1868:
	add	sl, r3, #600	@ tmp845, temp.6564,
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	ldr	r3, [r3, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	add	ip, r5, #64	@ tmp844, list0idx.6543,
	cmp	r1, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	sl, [r4, ip, asl #2]	@ tmp845, <variable>.pListX
	addge	r5, r5, #1	@ list0idx.6543, list0idx.6543,
	b	.L1780	@
.L1871:
	ldr	ip, [r1, #600]	@ tmp248,
	ldr	r3, [r3, #4]	@ D.42025, <variable>.DPB.fs_ref
	bic	sl, ip, #-16777216	@ tmp246, tmp248,
	bic	ip, sl, #255	@ tmp246, tmp246,
	cmp	ip, #65536	@ tmp246,
	addeq	ip, r5, #64	@ tmp249, list0idx.6611,
	addeq	r1, r1, #600	@ tmp250, D.42025,
	addeq	r5, r5, #1	@ list0idx.6611, list0idx.6611,
	streq	r1, [r4, ip, asl #2]	@ tmp250, <variable>.pListX
	ldrb	r1, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1870	@,
.L1747:
	add	r2, r2, #1	@ i.6547, tmp592,
	add	r3, r0, #4	@ ivtmp.6461, tmp593,
	cmp	r2, lr	@ i.6547, temp.6635
	bcs	.L1622	@,
.L1624:
	ldr	r1, [r3, #0]	@ D.42025, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp592, i.6547,
	add	r0, r3, #4	@ tmp593, ivtmp.6461,
	ldrb	sl, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #3	@ <variable>.is_reference,
	beq	.L1871	@,
	ldr	r3, [r3, #4]	@ D.42025, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1747	@,
.L1870:
	ldr	ip, [r3, #600]	@ tmp790,
	bic	sl, ip, #-16777216	@ tmp791, tmp790,
	bic	r1, sl, #255	@ tmp791, tmp791,
	cmp	r1, #65536	@ tmp791,
	addeq	r1, r5, #64	@ tmp792, list0idx.6611,
	addeq	r3, r3, #600	@ tmp793, D.42025,
	addeq	r5, r5, #1	@ list0idx.6611, list0idx.6611,
	streq	r3, [r4, r1, asl #2]	@ tmp793, <variable>.pListX
	b	.L1747	@
.L1873:
	ldr	r3, [r3, #4]	@ temp.6569, <variable>.DPB.fs_ref
	add	r9, r6, #64	@ tmp338, list0idx.6607,
	ldr	lr, [r1, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	add	r1, r1, #600	@ tmp339, temp.6569,
	ldr	r8, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r8, lr	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r1, [r4, r9, asl #2]	@ tmp339, <variable>.pListX
	ldrb	r1, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	addlt	r6, r6, #1	@ list0idx.6607, list0idx.6607,
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1872	@,
.L1773:
	add	r2, r2, #1	@ i.6574, tmp619,
	add	r3, r0, #4	@ ivtmp.6503, tmp620,
	cmp	r2, r7	@ i.6574, temp.6641
	bcs	.L1821	@,
.L1654:
	ldr	r1, [r3, #0]	@ temp.6569, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp619, i.6574,
	add	r0, r3, #4	@ tmp620, ivtmp.6503,
	ldrb	lr, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1873	@,
	ldr	r3, [r3, #4]	@ temp.6569, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1773	@,
.L1872:
	add	r8, r3, #600	@ tmp828, temp.6569,
	ldr	r1, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	ldr	r3, [r3, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	add	lr, r6, #64	@ tmp827, list0idx.6607,
	cmp	r1, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r8, [r4, lr, asl #2]	@ tmp828, <variable>.pListX
	addlt	r6, r6, #1	@ list0idx.6607, list0idx.6607,
	b	.L1773	@
.L1875:
	ldr	lr, [r0, #600]	@ tmp258,
	ldr	r3, [r3, #4]	@ D.42037, <variable>.DPB.fs_ltref
	bic	lr, lr, #-16777216	@ tmp256, tmp258,
	bic	lr, lr, #255	@ tmp256, tmp256,
	cmp	lr, #256	@ tmp256,
	addeq	lr, r5, #64	@ tmp259, list0idx.6611,
	addeq	r0, r0, #600	@ tmp260, D.42037,
	addeq	r5, r5, #1	@ list0idx.6611, list0idx.6611,
	streq	r0, [r4, lr, asl #2]	@ tmp260, <variable>.pListX
	ldrb	r0, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1874	@,
.L1740:
	add	r2, r2, #1	@ i.6549, tmp587,
	add	r3, ip, #4	@ ivtmp.6456, tmp588,
	cmp	r2, r1	@ i.6549, temp.6634
	bcs	.L1818	@,
.L1628:
	ldr	r0, [r3, #0]	@ D.42037, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp587, i.6549,
	add	ip, r3, #4	@ tmp588, ivtmp.6456,
	ldrb	lr, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1875	@,
	ldr	r3, [r3, #4]	@ D.42037, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L1740	@,
.L1874:
	ldr	r0, [r3, #600]	@ tmp776,
	bic	lr, r0, #-16777216	@ tmp777, tmp776,
	bic	r0, lr, #255	@ tmp777, tmp777,
	cmp	r0, #256	@ tmp777,
	addeq	r0, r5, #64	@ tmp778, list0idx.6611,
	addeq	r3, r3, #600	@ tmp779, D.42037,
	addeq	r5, r5, #1	@ list0idx.6611, list0idx.6611,
	streq	r3, [r4, r0, asl #2]	@ tmp779, <variable>.pListX
	b	.L1740	@
.L1877:
	ldrb	r5, [r0, #601]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r5, #1	@ <variable>.frame.is_long_term,
	bne	.L1661	@,
	add	r5, r6, #64	@ tmp357, list0idx.6607,
	add	lr, r6, #97	@ tmp359, list0idx.6607,
	add	r6, r6, #1	@ list0idx.6607, list0idx.6607,
	add	r0, r0, #600	@ tmp358, temp.6576,
	str	r0, [r4, r5, asl #2]	@ tmp358, <variable>.pListX
	str	r0, [r4, lr, asl #2]	@ tmp358, <variable>.pListX
.L1661:
	ldr	r3, [r3, #4]	@ temp.6576, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	beq	.L1876	@,
.L1758:
	add	r2, r2, #1	@ i.6580, tmp602,
	add	r3, ip, #4	@ ivtmp.6484, tmp603,
	cmp	r2, r1	@ i.6580, temp.6639
	bcs	.L1820	@,
.L1662:
	ldr	r0, [r3, #0]	@ temp.6576, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp602, i.6580,
	add	ip, r3, #4	@ tmp603, ivtmp.6484,
	ldrb	lr, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	lr, #3	@ <variable>.is_used,
	beq	.L1877	@,
	ldr	r3, [r3, #4]	@ temp.6576, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	bne	.L1758	@,
.L1876:
	ldrb	r5, [r3, #601]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r5, #1	@ <variable>.frame.is_long_term,
	bne	.L1758	@,
	add	lr, r6, #64	@ tmp807, list0idx.6607,
	add	r0, r6, #97	@ tmp809, list0idx.6607,
	add	r3, r3, #600	@ tmp808, temp.6576,
	add	r6, r6, #1	@ list0idx.6607, list0idx.6607,
	str	r3, [r4, lr, asl #2]	@ tmp808, <variable>.pListX
	str	r3, [r4, r0, asl #2]	@ tmp808, <variable>.pListX
	b	.L1758	@
.L1687:
	cmp	r0, #0	@ prephitmp.6559,
	bne	.L1688	@,
	movw	r2, #:lower16:11117212	@ tmp499,
	movt	r2, #:upper16:11117212	@ tmp499,
	ldr	ip, [r4, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1878	@,
	movw	r3, #:lower16:11117224	@ tmp521,
	movt	r3, #:upper16:11117224	@ tmp521,
	movw	r1, #:lower16:11117208	@ tmp518,
	movt	r1, #:upper16:11117208	@ tmp518,
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	mov	r3, r0	@ i, prephitmp.6559
	str	r0, [r4, r1]	@ prephitmp.6559, <variable>.CurrSlice.listXsize
	add	r0, r5, #1	@ tmp522, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r0, ip	@ tmp522, <variable>.CurrSlice.listXsize
	strls	r0, [r4, r2]	@, tmp522, <variable>.CurrSlice.listXsize
	strhi	ip, [r4, r2]	@, <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	b	.L1690	@
.L1635:
	movw	r5, #:lower16:11106944	@ D.42139,
	movt	r5, #:upper16:11106944	@ D.42139,
	add	r5, r4, r5	@ D.42139, pMvcCtx, D.42139
	movw	lr, #:lower16:11118808	@,
	movw	r7, #:lower16:11151963	@ tmp458,
	movt	lr, #:upper16:11118808	@,
	movt	r7, #:upper16:11151963	@ tmp458,
	mov	r0, r4	@, pMvcCtx
	add	r3, r4, lr	@, pMvcCtx,
	mov	r1, #0	@,
	mov	r2, r5	@, D.42139
	movw	r6, #:lower16:11118808	@ tmp457,
	bl	mvc_append_interview_list	@
	ldrb	r0, [r4, r7]	@ zero_extendqisi2	@ temp.6615, <variable>.CurrPic.structure
	movt	r6, #:upper16:11118808	@ tmp457,
	cmp	r0, #0	@ temp.6615,
	bne	.L1679	@,
	ldr	r8, [r4, r6]	@ D.42144, <variable>.CurrSlice.interviewlistXsize
	movw	r0, #:lower16:11117208	@ tmp459,
	movt	r0, #:upper16:11117208	@ tmp459,
	cmp	r8, #0	@ D.42144,
	ldr	r6, [r4, r0]	@ list0idx.6610, <variable>.CurrSlice.listXsize
	beq	.L1680	@,
	add	ip, r6, #64	@ tmp461, list0idx.6610,
	cmp	r8, #1	@ D.42144,
	sub	r2, r8, #1	@ tmp578, D.42144,
	movw	r3, #:lower16:11107544	@ tmp467,
	add	ip, r4, ip, asl #2	@, ivtmp.6452, pMvcCtx, tmp461,
	movt	r3, #:upper16:11107544	@ tmp467,
	add	r1, r4, r3	@ tmp467, pMvcCtx, tmp467
	and	r2, r2, #1	@ tmp580, tmp578,
	str	r1, [ip], #4	@ tmp467, <variable>.pListX
	add	r6, r6, #1	@ list0idx.6610, list0idx.6610,
	mov	r7, #712	@ tmp550,
	mov	r1, #1	@ i.6583,
	bls	.L1680	@,
	cmp	r2, #0	@ tmp580,
	beq	.L1681	@,
	mov	r1, #2	@ i.6583,
	cmp	r8, r1	@ D.42144, i.6583
	movw	r3, #:lower16:11108256	@ tmp765,
	movt	r3, #:upper16:11108256	@ tmp765,
	add	r0, r4, r3	@ tmp765, pMvcCtx, tmp765
	add	r6, r6, #1	@ list0idx.6610, list0idx.6610,
	str	r0, [ip], #4	@ tmp765, <variable>.pListX
	bls	.L1680	@,
.L1681:
	add	r3, r1, #1	@ tmp583, i.6583,
	movw	r2, #:lower16:11107544	@ tmp718,
	mul	r0, r7, r1	@ tmp716, tmp550, i.6583
	movt	r2, #:upper16:11107544	@ tmp718,
	mul	sl, r7, r3	@ tmp724, tmp550, tmp583
	add	r1, r3, #1	@ i.6583, tmp583,
	cmp	r8, r1	@ D.42144, i.6583
	mov	lr, r2	@ tmp726, tmp718
	add	r2, r0, r2	@ tmp718, tmp716, tmp718
	add	r6, r6, #2	@ list0idx.6610, list0idx.6610,
	add	r3, sl, lr	@ tmp726, tmp724, tmp726
	mov	lr, ip	@ tmp581, ivtmp.6452
	add	r2, r4, r2	@ tmp719, pMvcCtx, tmp718
	add	r0, r4, r3	@ tmp727, pMvcCtx, tmp726
	str	r2, [lr], #4	@ tmp719, <variable>.pListX
	str	r0, [ip, #4]	@ tmp727, <variable>.pListX
	add	ip, lr, #4	@ ivtmp.6452, tmp581,
	bhi	.L1681	@,
.L1680:
	movw	r7, #:lower16:11117208	@ tmp468,
	movt	r7, #:upper16:11117208	@ tmp468,
	str	r6, [r4, r7]	@ list0idx.6610, <variable>.CurrSlice.listXsize
.L1682:
	movw	r7, #:lower16:11117160	@ tmp474,
	movt	r7, #:upper16:11117160	@ tmp474,
	ldrb	r6, [r4, r7]	@ zero_extendqisi2	@ prephitmp.6403, <variable>.CurrSlice.slice_type
	cmp	r6, #1	@ prephitmp.6403,
	beq	.L1683	@,
	movw	r1, #:lower16:11117208	@ tmp475,
	movt	r1, #:upper16:11117208	@ tmp475,
	ldr	r0, [r4, r1]	@ prephitmp.6559, <variable>.CurrSlice.listXsize
	b	.L1637	@
.L1856:
	movw	ip, #:lower16:11117160	@ tmp303,
	movt	ip, #:upper16:11117160	@ tmp303,
	ldrb	r6, [r4, ip]	@ zero_extendqisi2	@ prephitmp.6403, <variable>.CurrSlice.slice_type
	b	.L1637	@
.L1864:
	ldr	ip, [r2, #600]	@ tmp780,
	bic	r1, ip, #-16777216	@ tmp781, tmp780,
	bic	sl, r1, #255	@ tmp781, tmp781,
	cmp	sl, #65536	@ tmp781,
	addeq	r2, r2, #600	@ tmp783, D.42025,
	streq	r2, [r4, #256]	@ tmp783, <variable>.pListX
	moveq	r5, #1	@ list0idx.6611,
	b	.L1742	@
.L1858:
	ldr	r7, [r2, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	sl, [r4, r6]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	sl, r7	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r2, r2, #600	@ tmp833, temp.6564,
	strge	r2, [r4, #256]	@ tmp833, <variable>.pListX
	movge	r5, #1	@ list0idx.6543,
	b	.L1775	@
.L1866:
	ldr	lr, [r2, #600]	@ tmp766,
	bic	r0, lr, #-16777216	@ tmp767, tmp766,
	bic	lr, r0, #255	@ tmp767, tmp767,
	cmp	lr, #256	@ tmp767,
	addeq	lr, r5, #64	@ tmp768, list0idx.6611,
	addeq	r2, r2, #600	@ tmp769, D.42037,
	addeq	r5, r5, #1	@ list0idx.6611, list0idx.6611,
	streq	r2, [r4, lr, asl #2]	@ tmp769, <variable>.pListX
	b	.L1735	@
.L1860:
	ldr	r1, [r2, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	lr, r1	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r1, r5, #64	@ tmp815, list0idx.6543,
	addlt	r2, r2, #600	@ tmp816, temp.6569,
	addlt	r6, r5, #1	@ list0idx.6607, list0idx.6543,
	strlt	r2, [r4, r1, asl #2]	@ tmp816, <variable>.pListX
	b	.L1768	@
.L1862:
	ldrb	r5, [r2, #601]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r5, #1	@ <variable>.frame.is_long_term,
	bne	.L1753	@,
	add	lr, r6, #64	@ tmp797, list0idx.6607,
	add	r0, r6, #97	@ tmp799, list0idx.6607,
	add	r2, r2, #600	@ tmp798, temp.6576,
	add	r6, r6, #1	@ list0idx.6607, list0idx.6607,
	str	r2, [r4, lr, asl #2]	@ tmp798, <variable>.pListX
	str	r2, [r4, r0, asl #2]	@ tmp798, <variable>.pListX
	b	.L1753	@
.L1867:
	ldr	lr, [r0, #600]	@ tmp772,
	bic	ip, lr, #-16777216	@ tmp773, tmp772,
	bic	lr, ip, #255	@ tmp773, tmp773,
	cmp	lr, #256	@ tmp773,
	addeq	lr, r5, #64	@ tmp774, list0idx.6611,
	addeq	r0, r0, #600	@ tmp775, D.42037,
	addeq	r5, r5, r2	@ list0idx.6611, list0idx.6611,
	streq	r0, [r4, lr, asl #2]	@ tmp775, <variable>.pListX
	b	.L1737	@
.L1865:
	ldr	r0, [r1, #600]	@ tmp786,
	bic	ip, r0, #-16777216	@ tmp787, tmp786,
	bic	sl, ip, #255	@ tmp787, tmp787,
	cmp	sl, #65536	@ tmp787,
	addeq	sl, r5, #64	@ tmp788, list0idx.6611,
	addeq	r1, r1, #600	@ tmp789, D.42025,
	addeq	r5, r5, r2	@ list0idx.6611, list0idx.6611,
	streq	r1, [r4, sl, asl #2]	@ tmp789, <variable>.pListX
	b	.L1744	@
.L1859:
	ldr	r0, [r1, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r7, r0	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r0, r5, #64	@ tmp839, list0idx.6543,
	addge	r1, r1, #600	@ tmp840, temp.6564,
	addge	r5, r5, r2	@ list0idx.6543, list0idx.6543,
	strge	r1, [r4, r0, asl #2]	@ tmp840, <variable>.pListX
	b	.L1777	@
.L1861:
	ldr	r0, [r1, #616]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	lr, r0	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r0, r6, #64	@ tmp822, list0idx.6607,
	addlt	r1, r1, #600	@ tmp823, temp.6569,
	addlt	r6, r6, r2	@ list0idx.6607, list0idx.6607,
	strlt	r1, [r4, r0, asl #2]	@ tmp823, <variable>.pListX
	b	.L1770	@
.L1863:
	ldrb	r5, [r0, #601]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r5, r2	@ <variable>.frame.is_long_term,
	bne	.L1755	@,
	add	lr, r6, #64	@ tmp803, list0idx.6607,
	add	ip, r6, #97	@ tmp805, list0idx.6607,
	add	r0, r0, #600	@ tmp804, temp.6576,
	add	r6, r6, r2	@ list0idx.6607, list0idx.6607,
	str	r0, [r4, lr, asl #2]	@ tmp804, <variable>.pListX
	str	r0, [r4, ip, asl #2]	@ tmp804, <variable>.pListX
	b	.L1755	@
.L1679:
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.interviewlistXsize, <variable>.CurrSlice.interviewlistXsize
	mov	r3, sl	@, tmp534
	movw	ip, #:lower16:11117208	@ tmp473,
	mov	r1, r5	@, D.42139
	movt	ip, #:upper16:11117208	@ tmp473,
	add	r6, r4, ip	@ tmp473, pMvcCtx, tmp473
	str	r6, [sp, #0]	@ tmp473,
	bl	MVC_GenPiclistfromFrmlist_Interview	@
	b	.L1682	@
.L1639:
	movw	r0, #:lower16:11152504	@ tmp310,
	movt	r0, #:upper16:11152504	@ tmp310,
	cmp	r3, #1	@ temp.6560,
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	addeq	ip, ip, #636	@ tmp312, <variable>.CurrPic.frame_store,
	addne	ip, ip, #672	@ tmp315, <variable>.CurrPic.frame_store,
	str	ip, [r4, #256]	@ tmp315, <variable>.pListX
	b	.L1640	@
.L1683:
	add	r8, r5, #1424	@ D.42148, D.42139,
	movw	r5, #:lower16:11118812	@,
	movt	r5, #:upper16:11118812	@,
	mov	r0, r4	@, pMvcCtx
	add	r3, r4, r5	@, pMvcCtx,
	mov	r2, r8	@, D.42148
	mov	r1, r6	@, prephitmp.6403
	movw	r5, #:lower16:11118812	@ tmp477,
	bl	mvc_append_interview_list	@
	movw	r2, #:lower16:11151963	@ tmp478,
	movt	r2, #:upper16:11151963	@ tmp478,
	movt	r5, #:upper16:11118812	@ tmp477,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ temp.6621, <variable>.CurrPic.structure
	cmp	r0, #0	@ temp.6621,
	bne	.L1684	@,
	ldr	r7, [r4, r5]	@ D.42017, <variable>.CurrSlice.interviewlistXsize
	movw	lr, #:lower16:11117212	@ tmp479,
	movt	lr, #:upper16:11117212	@ tmp479,
	cmp	r7, #0	@ D.42017,
	ldr	ip, [r4, lr]	@ list0idx.6558, <variable>.CurrSlice.listXsize
	beq	.L1685	@,
	add	r1, ip, #64	@ tmp481, list0idx.6558,
	cmp	r7, #1	@ D.42017,
	sub	r2, r7, #1	@ tmp572, D.42017,
	movw	r5, #:lower16:11108968	@ tmp487,
	add	r0, r4, r1, asl #2	@, ivtmp.6447, pMvcCtx, tmp481,
	movt	r5, #:upper16:11108968	@ tmp487,
	add	r3, r4, r5	@ tmp487, pMvcCtx, tmp487
	and	r2, r2, #1	@ tmp574, tmp572,
	str	r3, [r0, #132]	@ tmp487, <variable>.pListX
	add	ip, ip, #1	@ list0idx.6558, list0idx.6558,
	add	r1, r0, #4	@ ivtmp.6447, ivtmp.6447,
	mov	r5, #712	@ tmp548,
	bls	.L1685	@,
	cmp	r2, #0	@ tmp574,
	beq	.L1686	@,
	cmp	r7, #2	@ D.42017,
	movw	r2, #:lower16:11109680	@ tmp760,
	movt	r2, #:upper16:11109680	@ tmp760,
	add	ip, ip, #1	@ list0idx.6558, list0idx.6558,
	add	lr, r4, r2	@ tmp760, pMvcCtx, tmp760
	mov	r6, #2	@ i.6548,
	str	lr, [r1, #132]	@ tmp760, <variable>.pListX
	add	r1, r1, #4	@ ivtmp.6447, ivtmp.6447,
	bls	.L1685	@,
.L1686:
	add	r0, r6, #1	@ tmp575, i.6548,
	add	lr, r1, #4	@ tmp576, ivtmp.6447,
	mul	r8, r5, r6	@ tmp731, tmp548, i.6548
	add	r6, r0, #1	@ i.6548, tmp575,
	mul	sl, r5, r0	@ tmp739, tmp548, tmp575
	movw	r2, #:lower16:11108968	@ tmp733,
	cmp	r7, r6	@ D.42017, i.6548
	movt	r2, #:upper16:11108968	@ tmp733,
	add	r0, r8, r2	@ tmp733, tmp731, tmp733
	add	ip, ip, #2	@ list0idx.6558, list0idx.6558,
	add	r3, sl, r2	@ tmp741, tmp739, tmp741
	add	r2, r4, r0	@ tmp734, pMvcCtx, tmp733
	add	r0, r4, r3	@ tmp742, pMvcCtx, tmp741
	str	r2, [r1, #132]	@ tmp734, <variable>.pListX
	str	r0, [lr, #132]	@ tmp742, <variable>.pListX
	add	r1, lr, #4	@ ivtmp.6447, tmp576,
	bhi	.L1686	@,
.L1685:
	movw	r6, #:lower16:11117212	@ tmp488,
	movw	r3, #:lower16:11117160	@ tmp489,
	movt	r6, #:upper16:11117212	@ tmp488,
	movt	r3, #:upper16:11117160	@ tmp489,
	movw	lr, #:lower16:11117208	@ tmp490,
	movt	lr, #:upper16:11117208	@ tmp490,
	str	ip, [r4, r6]	@ list0idx.6558, <variable>.CurrSlice.listXsize
	ldrb	r6, [r4, r3]	@ zero_extendqisi2	@ prephitmp.6403, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, lr]	@ prephitmp.6559, <variable>.CurrSlice.listXsize
	b	.L1637	@
.L1684:
	ldr	r2, [r4, r5]	@, <variable>.CurrSlice.interviewlistXsize
	mov	r1, r8	@, D.42148
	movw	r6, #:lower16:11117212	@ tmp495,
	add	r3, r4, #388	@, pMvcCtx,
	movt	r6, #:upper16:11117212	@ tmp495,
	add	lr, r4, r6	@ tmp495, pMvcCtx, tmp495
	str	lr, [sp, #0]	@ tmp495,
	bl	MVC_GenPiclistfromFrmlist_Interview	@
	movw	ip, #:lower16:11117208	@ tmp497,
	movt	ip, #:upper16:11117208	@ tmp497,
	ldrb	r6, [r4, r7]	@ zero_extendqisi2	@ prephitmp.6403, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, ip]	@ prephitmp.6559, <variable>.CurrSlice.listXsize
	b	.L1637	@
.L1857:
	add	r0, r0, #1	@,,
	movw	r1, #:lower16:.LC53	@,
	movt	r1, #:upper16:.LC53	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.42079,
	b	.L1643	@
.L1638:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC52	@,
	movt	r1, #:upper16:.LC52	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.42079,
	b	.L1643	@
.L1878:
	add	r0, r0, #1	@,,
	movw	r1, #:lower16:.LC54	@,
	movt	r1, #:upper16:.LC54	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.42079,
	b	.L1643	@
	.fnend
	.size	MVC_InitListX, .-MVC_InitListX
	.align	2
	.global	MVC_DecList
	.type	MVC_DecList, %function
MVC_DecList:
	.fnstart
.LFB1612:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11123116	@ tmp148,
	movt	r1, #:upper16:11123116	@ tmp148,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	mvneq	ip, #0	@ nearest_pic_id,
	beq	.L1882	@,
	movw	r2, #:lower16:11123112	@ tmp151,
	movt	r2, #:upper16:11123112	@ tmp151,
	movw	r3, #:lower16:11152524	@ tmp150,
	movt	r3, #:upper16:11152524	@ tmp150,
	ldr	r4, [r0, r2]	@ D.48653, <variable>.DPB.size
	ldr	r0, [r0, r3]	@ curr_poc, <variable>.CurrPic.thispoc
	cmp	r4, #0	@ D.48653,
	moveq	ip, r4	@ nearest_pic_id, D.48653
	beq	.L1882	@,
	mov	r4, r4, asl #2	@ D.54750, D.48653,
	mov	ip, #0	@ nearest_pic_id,
	tst	r4, #4	@ D.54750,
	mov	r2, ip	@ ivtmp.6676, nearest_pic_id
	mvn	r6, #-2147483648	@ nearest_poc_diff,
	bne	.L1885	@,
	movw	r3, #:lower16:11122920	@ tmp186,
	movt	r3, #:upper16:11122920	@ tmp186,
	add	r1, r5, r3	@ tmp186, pMvcCtx, tmp186
	ldr	r2, [r1, #0]	@ D.48657, <variable>.DPB.fs
	cmp	r2, #0	@ D.48657,
	beq	.L1894	@,
	ldr	r1, [r2, #32]	@ <variable>.poc, <variable>.poc
	rsb	r3, r1, r0	@ tmp190, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp190,
	rsblt	r3, r3, #0	@ nearest_poc_diff.6679, tmp190
	cmp	r6, r3	@ nearest_poc_diff, nearest_poc_diff.6679
	ble	.L1894	@,
	ldr	ip, [r2, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
.L1902:
	mov	r6, r3	@ nearest_poc_diff, nearest_poc_diff.6679
	mov	r2, #4	@ ivtmp.6676,
.L1885:
	add	r1, r5, r2	@ tmp152, pMvcCtx, ivtmp.6676
	movw	r3, #:lower16:11122920	@ tmp153,
	movt	r3, #:upper16:11122920	@ tmp153,
	add	r3, r1, r3	@ tmp153, tmp152, tmp153
	ldr	r3, [r3, #0]	@ D.48657, <variable>.DPB.fs
	cmp	r3, #0	@ D.48657,
	beq	.L1883	@,
.L1904:
	ldr	r1, [r3, #32]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, r0	@ tmp155, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp155,
	rsblt	r1, r1, #0	@ nearest_poc_diff.6679, tmp155
	cmp	r6, r1	@ nearest_poc_diff, nearest_poc_diff.6679
	ldrgt	ip, [r3, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
	ble	.L1883	@,
	add	r2, r2, #4	@ tmp177, ivtmp.6676,
	cmp	r2, r4	@ tmp177, D.54750
	beq	.L1882	@,
.L1905:
	add	r6, r5, r2	@ tmp180, pMvcCtx, tmp177
	movw	r3, #:lower16:11122920	@ tmp182,
	movt	r3, #:upper16:11122920	@ tmp182,
	add	r3, r6, r3	@ tmp182, tmp180, tmp182
	ldr	r6, [r3, #0]	@ D.48657, <variable>.DPB.fs
	cmp	r6, #0	@ D.48657,
	beq	.L1896	@,
	ldr	r3, [r6, #32]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, r0	@ tmp193, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp193,
	rsblt	r3, r3, #0	@ nearest_poc_diff.6679, tmp193
	cmp	r1, r3	@ nearest_poc_diff.6679, nearest_poc_diff.6679
	ble	.L1896	@,
	ldr	ip, [r6, #268]	@ nearest_pic_id, <variable>.fs_image.image_id
.L1903:
	add	r2, r2, #4	@ ivtmp.6676, tmp177,
	mov	r6, r3	@ nearest_poc_diff, nearest_poc_diff.6679
	add	r1, r5, r2	@ tmp152, pMvcCtx, ivtmp.6676
	movw	r3, #:lower16:11122920	@ tmp153,
	movt	r3, #:upper16:11122920	@ tmp153,
	add	r3, r1, r3	@ tmp153, tmp152, tmp153
	ldr	r3, [r3, #0]	@ D.48657, <variable>.DPB.fs
	cmp	r3, #0	@ D.48657,
	bne	.L1904	@,
.L1883:
	add	r2, r2, #4	@ tmp177, ivtmp.6676,
	mov	r1, r6	@ nearest_poc_diff.6679, nearest_poc_diff
	cmp	r2, r4	@ tmp177, D.54750
	bne	.L1905	@,
.L1882:
	movw	r1, #:lower16:11117160	@ tmp160,
	movt	r1, #:upper16:11117160	@ tmp160,
	movw	r2, #:lower16:11118796	@ tmp157,
	movw	r0, #:lower16:11118792	@ tmp158,
	ldrb	r4, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movt	r2, #:upper16:11118796	@ tmp157,
	movt	r0, #:upper16:11118792	@ tmp158,
	cmp	r4, #2	@ <variable>.CurrSlice.slice_type,
	str	ip, [r5, r2]	@ nearest_pic_id, <variable>.CurrSlice.picid_nearpoc
	mvn	r4, #0	@ tmp159,
	str	r4, [r5, r0]	@ tmp159, <variable>.CurrSlice.picid_refidx0
	beq	.L1906	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_InitListX	@
	cmp	r0, #0	@,
	beq	.L1888	@,
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC55	@,
	movt	r1, #:upper16:.LC55	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@ D.42273, tmp159
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1888:
	mov	r0, r5	@, pMvcCtx
	bl	MVC_ReorderListX	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_RepairList	@
	cmp	r0, #0	@,
	movne	r0, r4	@ D.42273, tmp159
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_FindMinRefIdx	@
	ldr	r0, [r5, #256]	@ D.42282, <variable>.pListX
	movw	r2, #:lower16:11118792	@ tmp168,
	movt	r2, #:upper16:11118792	@ tmp168,
	cmp	r0, #0	@ D.42282,
	ldrne	r0, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrne	r4, [r0, #268]	@ iftmp.656, <variable>.fs_image.image_id
	mov	r0, #0	@ D.42273,
	str	r4, [r5, r2]	@ iftmp.656, <variable>.CurrSlice.picid_refidx0
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1896:
	mov	r3, r1	@ nearest_poc_diff.6679, nearest_poc_diff.6679
	b	.L1903	@
.L1906:
	movw	r3, #:lower16:11117208	@ tmp162,
	movw	ip, #:lower16:11117212	@ tmp164,
	movt	r3, #:upper16:11117208	@ tmp162,
	movt	ip, #:upper16:11117212	@ tmp164,
	mov	r0, #0	@ tmp163,
	str	r0, [r5, r3]	@ tmp163, <variable>.CurrSlice.listXsize
	str	r0, [r5, ip]	@ tmp163, <variable>.CurrSlice.listXsize
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1894:
	mvn	r3, #-2147483648	@ nearest_poc_diff.6679,
	b	.L1902	@
	.fnend
	.size	MVC_DecList, .-MVC_DecList
	.align	2
	.global	MVC_ArrangeVahbMem
	.type	MVC_ArrangeVahbMem, %function
MVC_ArrangeVahbMem:
	.fnstart
.LFB1581:
	@ args = 4, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #40
	sub	sp, sp, #40	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r6, fp, #68	@ tmp182,,
	mov	r5, r1	@ ImgWidth, ImgWidth
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r1, #36	@,
	mov	r0, r6	@, tmp182
	mov	r7, r2	@ ImgHeight, ImgHeight
	bl	__memzero	@
	ldr	r0, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	ip, #0	@ tmp151,
	mov	r1, #0	@ tmp162,
	mov	r2, #5	@ tmp164,
	ldr	r3, [r0, #20]	@ <variable>.s32DnrDispOutEnable, <variable>.s32DnrDispOutEnable
	strb	ip, [fp, #-67]	@ tmp151, FspInstCfg.s32TfEnable
	strb	ip, [fp, #-66]	@ tmp151, FspInstCfg.s32RprEnable
	str	r7, [fp, #-36]	@ ImgHeight, FspInstCfg.s32DispFsHeight
	str	r7, [fp, #-52]	@ ImgHeight, FspInstCfg.s32DecFsHeight
	str	r7, [fp, #-44]	@ ImgHeight, FspInstCfg.s32TfFsHeight
	mov	r7, #0	@ tmp169,
	str	r5, [fp, #-40]	@ ImgWidth, FspInstCfg.s32DispFsWidth
	strb	r3, [fp, #-68]	@ <variable>.s32DnrDispOutEnable, FspInstCfg.s32DispLoopEnable
	str	r5, [fp, #-56]	@ ImgWidth, FspInstCfg.s32DecFsWidth
	str	r5, [fp, #-48]	@ ImgWidth, FspInstCfg.s32TfFsWidth
	ldr	r5, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r5, #24	@ <variable>.eCapLevel,
	mov	r5, #1	@ tmp171,
	movwne	ip, #:lower16:11123112	@ tmp157,
	movtne	ip, #:upper16:11123112	@ tmp157,
	ldrne	ip, [r4, ip]	@ <variable>.DPB.size, <variable>.DPB.size
	strb	r1, [fp, #-62]	@ tmp162, FspInstCfg.s32ExpectedTfFsNum
	mov	r1, r6	@, tmp182
	addne	ip, ip, #3	@ tmp160, <variable>.DPB.size,
	strb	r2, [fp, #-61]	@ tmp164, FspInstCfg.s32ExpectedDispFsNum
	uxtbne	ip, ip	@ iftmp.583, tmp160
	strb	ip, [fp, #-63]	@ iftmp.583, FspInstCfg.s32ExpectedDecFsNum
	ldr	r3, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	cmp	r3, #24	@ <variable>.eCapLevel,
	strb	r7, [fp, #-64]	@ tmp169, FspInstCfg.s32UserDec
	strb	r5, [fp, #-65]	@ tmp171, FspInstCfg.s8SubLevelEnable
	ldrneb	r3, [fp, #4]	@ zero_extendqisi2	@ iftmp.584, PmvBlkNum
	moveq	r3, #1	@ iftmp.584,
	strb	r3, [fp, #-60]	@ iftmp.584, FspInstCfg.s32ExpectedPmvNum
	bl	FSP_ConfigInstance	@
	subs	r6, r0, #0	@ D.41039,
	bne	.L1912	@,
	ldr	lr, [r4, #224]	@ temp.6707, <variable>.pstExtraData
	sub	r3, fp, #32	@,,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	r2, [lr, #28]	@, <variable>.s32SyntaxMemSize
	ldr	r1, [lr, #24]	@, <variable>.s32SyntaxMemAddr
	bl	FSP_PartitionFsMemory	@
	cmp	r0, r7	@,
	moveq	r0, r5	@ D.41048, tmp171
	bne	.L1916	@,
.L1914:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L1912:
	mov	r0, r7	@, tmp169
	movw	r1, #:lower16:.LC57	@,
	movt	r1, #:upper16:.LC57	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.41048,
	b	.L1914	@
.L1916:
	mov	r0, r6	@, D.41039
	movw	r1, #:lower16:.LC56	@,
	movt	r1, #:upper16:.LC56	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.41048,
	b	.L1914	@
	.fnend
	.size	MVC_ArrangeVahbMem, .-MVC_ArrangeVahbMem
	.align	2
	.global	MVC_GetImagePara
	.type	MVC_GetImagePara, %function
MVC_GetImagePara:
	.fnstart
.LFB1561:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11117176	@ tmp160,
	movt	r4, #:upper16:11117176	@ tmp160,
	ldr	ip, [r0, #248]	@ <variable>.SPS, <variable>.SPS
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r4]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r1, [r0, #252]	@ <variable>.PPS, <variable>.PPS
	mov	r0, #2240	@ tmp163,
	ldr	lr, [r4, #232]	@ prephitmp.6730, <variable>.fs_image.format
	mla	r3, r0, r3, r1	@ tmp164, tmp163, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	bic	r2, lr, #768	@ prephitmp.6730, prephitmp.6730,
	bic	r2, r2, #3	@ prephitmp.6730, prephitmp.6730,
	ldrb	r1, [r4, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	movw	lr, #3992	@ tmp167,
	ldr	r3, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	str	r2, [r4, #232]	@ prephitmp.6730, <variable>.fs_image.format
	ldr	r0, [r5, #56]	@ <variable>.frame_rate, <variable>.frame_rate
	mla	r3, lr, r3, ip	@ sps, tmp167, <variable>.seq_parameter_set_id, <variable>.SPS
	mov	r0, r0, asl #10	@ tmp172, <variable>.frame_rate,
	str	r0, [r4, #260]	@ tmp172, <variable>.fs_image.frame_rate
	cmp	r1, #3	@ <variable>.is_used,
	ldrls	pc, [pc, r1, asl #2]	@ <variable>.is_used
	b	.L1918	@
.L1922:
	.word	.L1919
	.word	.L1920
	.word	.L1921
	.word	.L1919
.L1919:
	ldrb	r6, [r4, #600]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r6, #0	@ <variable>.frame.structure,
	bne	.L1923	@,
	ldr	r7, [r4, #40]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	mov	lr, #3072	@ prephitmp.6771,
	ldr	r0, [r4, #44]	@ <variable>.err_level, <variable>.err_level
	cmp	r7, #0	@ <variable>.MbaffFrameFlag,
	ldrb	ip, [r4, #0]	@ zero_extendqisi2	@ pic_type, <variable>.pic_type
	moveq	r7, #512	@ prephitmp.6772,
	movne	r7, #768	@ prephitmp.6772,
	str	r0, [r4, #272]	@ <variable>.err_level, <variable>.fs_image.error_level
.L1925:
	ldr	r6, [r4, #652]	@ D.39644, <variable>.top_field.poc
	ldr	r0, [r4, #688]	@ D.39645, <variable>.bottom_field.poc
	cmp	r6, r0	@ D.39644, D.39645
	beq	.L1956	@,
	movgt	r6, #0	@, top_field_first
	movle	r6, #1	@, top_field_first
.L1936:
	movw	r0, #:lower16:11122908	@ tmp187,
	movt	r0, #:upper16:11122908	@ tmp187,
	ldrb	r0, [r5, r0]	@ zero_extendqisi2	@ D.39659, <variable>.PicTimingSEI.pic_struct
	cmp	r0, #3	@ D.39659,
	moveq	r6, #4096	@ prephitmp.6734,
	beq	.L1938	@,
	cmp	r0, #4	@ D.39659,
	movne	r6, r6, asl #12	@ prephitmp.6734, top_field_first,
	moveq	r6, #0	@ prephitmp.6734,
.L1938:
	orr	r0, r7, lr	@ tmp188, prephitmp.6772, prephitmp.6771
	bic	lr, r2, #12288	@ tmp189, prephitmp.6730,
	orr	r2, r0, lr	@ tmp190, tmp188, tmp189
	and	r0, ip, #3	@ tmp191, pic_type,
	orr	lr, r2, r0	@ tmp192, tmp190, tmp191
	orr	ip, lr, r6	@ tmp193, tmp192, prephitmp.6734
	str	ip, [r4, #232]	@ tmp193, <variable>.fs_image.format
.L1918:
	ldrb	lr, [r3, #20]	@ zero_extendqisi2	@ D.39684, <variable>.frame_mbs_only_flag
	movw	ip, #:lower16:11117171	@ tmp206,
	movt	ip, #:upper16:11117171	@ tmp206,
	mov	r2, #1	@ tmp205,
	str	lr, [r4, #584]	@ D.39684, <variable>.fs_image.optm_inf.IsProgressiveFrm
	str	lr, [r4, #580]	@ D.39684, <variable>.fs_image.optm_inf.IsProgressiveSeq
	ldrb	r0, [r3, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	r0, #0	@ <variable>.vui_parameters_present_flag,
	ldrne	r0, [r3, #68]	@ iftmp.486, <variable>.vui_seq_parameters.matrix_coefficients
	str	r2, [r4, #588]	@ tmp205, <variable>.fs_image.optm_inf.RealFrmRate
	str	r0, [r4, #592]	@ iftmp.486, <variable>.fs_image.optm_inf.MatrixCoef
	ldrb	lr, [r5, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	lr, r2	@ <variable>.CurrSlice.mvcinfo_flag,
	movne	lr, #0	@ tmp209,
	str	lr, [r4, #352]	@ tmp209, <variable>.fs_image.is_3D
	ldr	r0, [r5, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r0, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #0	@ <variable>.s32DecOrderOutput,
	ble	.L1944	@,
	ldrb	r3, [r4, #600]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r3, #0	@ <variable>.frame.structure,
	beq	.L1957	@,
.L1944:
	movw	r3, #:lower16:11122872	@ tmp216,
	movt	r3, #:upper16:11122872	@ tmp216,
	ldrsb	r1, [r5, r3]	@ <variable>.FramePackSEI.frame_packing_dec_ok, <variable>.FramePackSEI.frame_packing_dec_ok
	cmp	r1, #0	@ <variable>.FramePackSEI.frame_packing_dec_ok,
	beq	.L1945	@,
	movw	r3, #:lower16:11122888	@ tmp218,
	movt	r3, #:upper16:11122888	@ tmp218,
	ldr	r2, [r5, r3]	@ D.39707, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	r2, #3	@ D.39707,
	moveq	r3, #1	@ tmp219,
	streq	r3, [r4, #460]	@ tmp219, <variable>.fs_image.eFramePackingType
	beq	.L1945	@,
	cmp	r2, #4	@ D.39707,
	moveq	r3, #2	@ tmp220,
	streq	r3, [r4, #460]	@ tmp220, <variable>.fs_image.eFramePackingType
	beq	.L1945	@,
	cmp	r2, #5	@ D.39707,
	moveq	r3, #3	@ tmp221,
	streq	r3, [r4, #460]	@ tmp221, <variable>.fs_image.eFramePackingType
	beq	.L1945	@,
	mov	r0, #0	@ tmp222,
	movw	r1, #:lower16:.LC58	@,
	str	r0, [r4, #460]	@ tmp222, <variable>.fs_image.eFramePackingType
	movt	r1, #:upper16:.LC58	@,
	ldr	r2, [r5, r3]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	bl	dprint_vfmw	@
.L1945:
	ldr	r0, [r5, #120]	@, <variable>.ChanID
	ldrsb	r1, [r4, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r5, r0, #0	@ pstLogicFsImage,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r1, r4, #72	@, pFrameStore,
	mov	r2, #528	@,
	bl	memcpy	@
	mov	r1, #15	@ tmp233,
	str	r1, [r5, #408]	@ tmp233, <variable>.ImageDnr.video_standard
	mov	r2, #1	@ tmp236,
	ldrb	r0, [r4, #600]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r2, [r5, #403]	@ tmp236, <variable>.ImageDnr.use_pic_qp_en
	cmp	r0, #0	@ <variable>.frame.structure,
	movne	r0, #4	@, iftmp.488,
	strb	r0, [r5, #396]	@ iftmp.488, <variable>.ImageDnr.pic_structure
	ldr	ip, [r4, #628]	@ D.39729, <variable>.frame.MaxQp
	strb	r2, [r5, #401]	@ tmp236, <variable>.ImageDnr.chroma_format_idc
	str	ip, [r5, #416]	@ D.39729, <variable>.ImageDnr.QP_U
	str	ip, [r5, #412]	@ D.39729, <variable>.ImageDnr.QP_Y
	str	ip, [r5, #420]	@ D.39729, <variable>.ImageDnr.QP_V
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1957:
	cmp	r1, #3	@ <variable>.is_used,
	ldreq	r3, [r4, #232]	@ <variable>.fs_image.format, <variable>.fs_image.format
	biceq	r3, r3, #768	@ tmp215, <variable>.fs_image.format,
	streq	r3, [r4, #232]	@ tmp215, <variable>.fs_image.format
	b	.L1944	@
.L1921:
	ldrb	ip, [r4, #0]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	orr	r2, r2, #2816	@ tmp194, prephitmp.6730,
.L1954:
	ldr	lr, [r4, #44]	@ <variable>.err_level, <variable>.err_level
	and	ip, ip, #3	@ tmp201, <variable>.pic_type,
	orr	r2, r2, ip	@ tmp202, tmp199, tmp201
	str	r2, [r4, #232]	@ tmp202, <variable>.fs_image.format
	str	lr, [r4, #272]	@ <variable>.err_level, <variable>.fs_image.error_level
	b	.L1918	@
.L1920:
	ldrb	ip, [r4, #0]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	orr	r2, r2, #1792	@ tmp199, prephitmp.6730,
	b	.L1954	@
.L1923:
	ldr	r8, [r4, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldr	r0, [r5, #116]	@ D.39626, <variable>.out_error_thr
	cmp	r8, r0	@ <variable>.top_field.err_level, D.39626
	bhi	.L1958	@,
	ldr	sl, [r4, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r0, sl	@ D.39626, <variable>.bottom_field.err_level
	bcc	.L1929	@,
.L1927:
	ldr	r7, [r4, #44]	@ <variable>.err_level, <variable>.err_level
	mov	lr, #3	@ valid_field,
	ldrb	ip, [r4, #0]	@ zero_extendqisi2	@ pic_type, <variable>.pic_type
	ldrb	r0, [r4, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldrb	r6, [r4, #639]	@ zero_extendqisi2	@ pic_type, <variable>.top_field.pic_type
	str	r7, [r4, #272]	@ <variable>.err_level, <variable>.fs_image.error_level
.L1930:
	ldrb	r7, [r4, #4]	@ zero_extendqisi2	@ D.39636, <variable>.mode_skip_flag
	cmp	r7, #1	@ D.39636,
	streq	sl, [r4, #272]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	moveq	ip, r0	@ pic_type, <variable>.bottom_field.pic_type
	moveq	lr, #2	@ valid_field,
	beq	.L1932	@,
	cmp	r7, #2	@ D.39636,
	streq	r8, [r4, #272]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	moveq	ip, r6	@ pic_type, pic_type
	moveq	lr, #1	@ valid_field,
.L1932:
	mov	lr, lr, asl #10	@ prephitmp.6771, valid_field,
	mov	r7, #768	@ prephitmp.6772,
	str	r6, [r4, #224]	@ pic_type, <variable>.fs_image.top_fld_type
	str	r0, [r4, #228]	@ <variable>.bottom_field.pic_type, <variable>.fs_image.bottom_fld_type
	b	.L1925	@
.L1929:
	ldrb	r6, [r4, #639]	@ zero_extendqisi2	@ pic_type, <variable>.top_field.pic_type
	mov	lr, #1	@ valid_field,
	ldrb	r0, [r4, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	str	r8, [r4, #272]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	mov	ip, r6	@ pic_type, pic_type
	b	.L1930	@
.L1956:
	ldr	r0, [r4, #236]	@ <variable>.fs_image.image_width, <variable>.fs_image.image_width
	cmp	r0, #720	@ <variable>.fs_image.image_width,
	movne	r6, #1	@ top_field_first,
	bne	.L1936	@,
	ldr	r6, [r4, #240]	@ <variable>.fs_image.image_height, <variable>.fs_image.image_height
	subs	r6, r6, #480	@ top_field_first, <variable>.fs_image.image_height,
	movne	r6, #1	@ top_field_first
	b	.L1936	@
.L1958:
	ldr	sl, [r4, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r0, sl	@ D.39626, <variable>.bottom_field.err_level
	bcc	.L1927	@,
	ldrb	r0, [r4, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	mov	lr, #2	@ valid_field,
	str	sl, [r4, #272]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	ldrb	r6, [r4, #639]	@ zero_extendqisi2	@ pic_type, <variable>.top_field.pic_type
	mov	ip, r0	@ pic_type, <variable>.bottom_field.pic_type
	b	.L1930	@
	.fnend
	.size	MVC_GetImagePara, .-MVC_GetImagePara
	.align	2
	.global	MVC_RemoveFrameStoreOutDPB
	.type	MVC_RemoveFrameStoreOutDPB, %function
MVC_RemoveFrameStoreOutDPB:
	.fnstart
.LFB1557:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2780730	@ tmp139,
	movt	r2, #:upper16:2780730	@ tmp139,
	mov	r5, r1	@ pos, pos
	add	r3, r1, r2	@ tmp139, pos, tmp139
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r3, asl #2]	@ D.39415, <variable>.DPB.fs
	cmp	r3, #0	@ D.39415,
	ldmeqfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r6, #:lower16:11123344	@ tmp147,
	movt	r6, #:upper16:11123344	@ tmp147,
	ldr	lr, [r3, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	movw	ip, #:lower16:11123128	@ tmp144,
	ldr	r1, [r0, r6]	@ D.39420, <variable>.APC.used_size
	movw	r6, #:lower16:2780730	@ tmp150,
	movt	r6, #:upper16:2780730	@ tmp150,
	add	r2, r0, lr	@ tmp143, pMvcCtx, <variable>.apc_idc
	add	r6, r5, r6	@ tmp150, pos, tmp150
	movt	ip, #:upper16:11123128	@ tmp144,
	add	r3, r2, ip	@ tmp144, tmp143, tmp144
	movw	lr, #:lower16:11123344	@ tmp148,
	ldr	ip, [r4, r6, asl #2]	@ tmp152, <variable>.DPB.fs
	movt	lr, #:upper16:11123344	@ tmp148,
	cmp	r1, #0	@ D.39420,
	mov	r0, #0	@ tmp145,
	subne	r1, r1, #1	@ iftmp.477, D.39420,
	strb	r0, [r3, #4]	@ tmp145, <variable>.APC.is_used
	str	r1, [r4, lr]	@ iftmp.477, <variable>.APC.used_size
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogic
	beq	.L1963	@,
	ldrsb	r1, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r1, #3	@ <variable>.s32DispState,
	beq	.L1964	@,
	ldr	r3, [r4, r6, asl #2]	@ tmp158, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L1964:
	movw	r0, #:lower16:2780730	@ tmp161,
	movt	r0, #:upper16:2780730	@ tmp161,
	add	lr, r5, r0	@ tmp161, pos, tmp161
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	ip, [r4, lr, asl #2]	@ tmp163, <variable>.DPB.fs
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
.L1963:
	movw	r2, #:lower16:2780730	@ tmp165,
	movt	r2, #:upper16:2780730	@ tmp165,
	add	r3, r5, r2	@ tmp165, pos, tmp165
	mov	lr, #0	@ tmp168,
	movw	r2, #:lower16:11123116	@ tmp183,
	movt	r2, #:upper16:11123116	@ tmp183,
	ldr	ip, [r4, r3, asl #2]	@ tmp167, <variable>.DPB.fs
	strb	lr, [ip, #2]	@ tmp168, <variable>.is_used
	ldr	r1, [r4, r3, asl #2]	@ tmp172, <variable>.DPB.fs
	strb	lr, [r1, #5]	@ tmp168, <variable>.is_in_dpb
	ldr	r0, [r4, r3, asl #2]	@ tmp177, <variable>.DPB.fs
	strb	lr, [r0, #3]	@ tmp168, <variable>.is_reference
	ldr	ip, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	lr, [r4, r3, asl #2]	@ tmp168, <variable>.DPB.fs
	sub	r1, ip, #1	@ tmp186, <variable>.DPB.used_size,
	str	r1, [r4, r2]	@ tmp186, <variable>.DPB.used_size
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_RemoveFrameStoreOutDPB, .-MVC_RemoveFrameStoreOutDPB
	.align	2
	.global	MVC_RemoveUnUsedFrameStore
	.type	MVC_RemoveUnUsedFrameStore, %function
MVC_RemoveUnUsedFrameStore:
	.fnstart
.LFB1558:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11123112	@ tmp140,
	movt	r3, #:upper16:11123112	@ tmp140,
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	mov	r7, r1	@ CurrViewId, CurrViewId
	ldr	r6, [r0, r3]	@ k, <variable>.DPB.size
	cmp	r6, #0	@ k,
	beq	.L1967	@,
	movw	r4, #:lower16:11122920	@ ivtmp.6842,
	movt	r4, #:upper16:11122920	@ ivtmp.6842,
	add	r4, r0, r4	@ ivtmp.6842, pMvcCtx, ivtmp.6842
	sub	sl, r6, #1	@ tmp156, k,
	and	sl, sl, #1	@ tmp158, tmp156,
	ldr	r3, [r4, #0]	@ D.39446, <variable>.DPB.fs
	cmp	r3, #0	@ D.39446,
	beq	.L1972	@,
	ldrb	r5, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #0	@ <variable>.is_reference,
	beq	.L1983	@,
.L1972:
	mov	r5, #1	@ j,
	cmp	r6, r5	@ k, j
	add	r4, r4, #4	@ ivtmp.6842, ivtmp.6842,
	bls	.L1967	@,
	cmp	sl, #0	@ tmp158,
	beq	.L1969	@,
	ldr	r3, [r4, #0]	@ D.39446, <variable>.DPB.fs
	cmp	r3, #0	@ D.39446,
	beq	.L1977	@,
	ldrb	r1, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L1984	@,
.L1977:
	add	r5, r5, #1	@ j, tmp160,
	add	r4, r4, #4	@ ivtmp.6842, tmp159,
	cmp	r6, r5	@ k, j
	bls	.L1967	@,
.L1969:
	ldr	r3, [r4, #0]	@ D.39446, <variable>.DPB.fs
	cmp	r3, #0	@ D.39446,
	beq	.L1968	@,
	ldrb	r2, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1968	@,
	ldrb	r2, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1968	@,
	ldr	r1, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r1, r7	@, <variable>.view_id, CurrViewId
	bne	.L1968	@,
	ldr	r0, [r3, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L1968	@,
	strb	r2, [r3, #2]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r8	@, pMvcCtx
	mov	r1, r5	@, j
	bl	MVC_RemoveFrameStoreOutDPB	@
.L1968:
	ldr	r3, [r4, #4]	@ D.39446, <variable>.DPB.fs
	add	r5, r5, #1	@ tmp160, j,
	add	r4, r4, #4	@ tmp159, ivtmp.6842,
	cmp	r3, #0	@ D.39446,
	beq	.L1977	@,
	ldrb	r2, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1977	@,
	ldrb	r2, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1977	@,
	ldr	r1, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r1, r7	@, <variable>.view_id, CurrViewId
	bne	.L1977	@,
	ldr	r0, [r3, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L1977	@,
.L1982:
	mov	r1, r5	@, tmp160
	strb	r2, [r3, #2]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r8	@, pMvcCtx
	add	r5, r5, #1	@ j, tmp160,
	bl	MVC_RemoveFrameStoreOutDPB	@
	cmp	r6, r5	@ k, j
	add	r4, r4, #4	@ ivtmp.6842, tmp159,
	bhi	.L1969	@,
.L1967:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1983:
	ldrb	r1, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #0	@ <variable>.is_in_dpb,
	bne	.L1972	@,
	ldr	ip, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	ip, r7	@, <variable>.view_id, CurrViewId
	bne	.L1972	@,
	ldr	r2, [r3, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r2, #1	@ <variable>.eFoState,
	beq	.L1972	@,
	strb	r1, [r3, #2]	@ <variable>.is_in_dpb, <variable>.is_used
	bl	MVC_RemoveFrameStoreOutDPB	@
	b	.L1972	@
.L1984:
	ldrb	r2, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1977	@,
	ldr	r0, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r0, r7	@, <variable>.view_id, CurrViewId
	bne	.L1977	@,
	ldr	ip, [r3, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	ip, r5	@ <variable>.eFoState,
	bne	.L1982	@,
	b	.L1977	@
	.fnend
	.size	MVC_RemoveUnUsedFrameStore, .-MVC_RemoveUnUsedFrameStore
	.align	2
	.global	MVC_UnMarkFrameStoreRef
	.type	MVC_UnMarkFrameStoreRef, %function
MVC_UnMarkFrameStoreRef:
	.fnstart
.LFB1547:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ prephitmp.6861, <variable>.is_used
	mov	r3, r1	@ pFrameStore, pFrameStore
	tst	r2, #1	@ prephitmp.6861,
	beq	.L1986	@,
	ldrb	lr, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r1, #0	@ tmp142,
	strb	r1, [r3, #638]	@ tmp142, <variable>.top_field.is_short_term
	and	ip, lr, #2	@ tmp140, <variable>.is_reference,
	strb	r1, [r3, #637]	@ tmp142, <variable>.top_field.is_long_term
	strb	ip, [r3, #3]	@ tmp140, <variable>.is_reference
.L1986:
	tst	r2, #2	@ prephitmp.6861,
	beq	.L1987	@,
	ldrb	lr, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r1, #0	@ tmp151,
	strb	r1, [r3, #674]	@ tmp151, <variable>.bottom_field.is_short_term
	and	ip, lr, #1	@ tmp149, <variable>.is_reference,
	strb	r1, [r3, #673]	@ tmp151, <variable>.bottom_field.is_long_term
	strb	ip, [r3, #3]	@ tmp149, <variable>.is_reference
.L1987:
	cmp	r2, #3	@ prephitmp.6861,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	moveq	r2, #0	@ tmp155,
	streqb	r2, [r3, #3]	@ tmp155, <variable>.is_reference
	streqb	r2, [r3, #602]	@ tmp155, <variable>.frame.is_short_term
	streqb	r2, [r3, #601]	@ tmp155, <variable>.frame.is_long_term
	mov	r2, #0	@ tmp161,
	strb	r2, [r3, #3]	@ tmp161, <variable>.is_reference
	ldr	r0, [r0, #120]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_UnMarkFrameStoreRef, .-MVC_UnMarkFrameStoreRef
	.align	2
	.global	MVC_SimpleSlideDPB
	.type	MVC_SimpleSlideDPB, %function
MVC_SimpleSlideDPB:
	.fnstart
.LFB1578:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11123112	@ tmp143,
	movw	r1, #:lower16:11123116	@ tmp144,
	movt	r2, #:upper16:11123112	@ tmp143,
	movt	r1, #:upper16:11123116	@ tmp144,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r5, [r0, r2]	@ D.40708, <variable>.DPB.size
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, r5	@ <variable>.DPB.used_size, D.40708
	bcc	.L1991	@,
	cmp	r5, #0	@ D.40708,
	moveq	lr, r5	@ pos, prephitmp.6891
	beq	.L1993	@,
	movw	r8, #:lower16:11122920	@ ivtmp.6904,
	movt	r8, #:upper16:11122920	@ ivtmp.6904,
	add	r3, r0, r8	@ ivtmp.6904, pMvcCtx, ivtmp.6904
	mov	lr, #0	@ pos,
	sub	r0, r5, #1	@ tmp162, D.40708,
	movw	r8, #:lower16:11152584	@ tmp161,
	ldr	r2, [r3, #0]	@ D.40712, <variable>.DPB.fs
	and	ip, r0, #1	@ tmp164, tmp162,
	movt	r8, #:upper16:11152584	@ tmp161,
	mvn	r1, #-2147483648	@ poc,
	cmp	r2, lr	@ D.40712,
	beq	.L1999	@,
	ldr	r0, [r2, #64]	@ D.40716, <variable>.dpb_cnt
	cmp	r1, r0	@ poc, D.40716
	bls	.L1999	@,
	ldr	r1, [r2, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	mvnne	r1, #-2147483648	@, poc,
	moveq	r1, r0	@, poc, D.40716
.L1999:
	mov	r2, #1	@ i,
	cmp	r2, r5	@ i, D.40708
	add	r3, r3, #4	@ ivtmp.6904, ivtmp.6904,
	beq	.L2009	@,
	cmp	ip, #0	@ tmp164,
	beq	.L1995	@,
	ldr	r0, [r3, #0]	@ D.40712, <variable>.DPB.fs
	cmp	r0, #0	@ D.40712,
	beq	.L2001	@,
	ldr	ip, [r0, #64]	@ D.40716, <variable>.dpb_cnt
	cmp	r1, ip	@ poc, D.40716
	bls	.L2001	@,
	ldr	r6, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	r1, ip	@, poc, D.40716
	moveq	lr, r2	@, pos, i
.L2001:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.6904, ivtmp.6904,
	cmp	r2, r5	@ i, D.40708
	beq	.L2009	@,
.L1995:
	ldr	r0, [r3, #0]	@ D.40712, <variable>.DPB.fs
	add	ip, r2, #1	@ tmp165, i,
	add	r7, r3, #4	@ tmp166, ivtmp.6904,
	cmp	r0, #0	@ D.40712,
	beq	.L1994	@,
	ldr	r6, [r0, #64]	@ D.40716, <variable>.dpb_cnt
	cmp	r1, r6	@ poc, D.40716
	bls	.L1994	@,
	ldr	sl, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	r1, r6	@, poc, D.40716
	moveq	lr, r2	@, pos, i
.L1994:
	ldr	r3, [r3, #4]	@ D.40712, <variable>.DPB.fs
	cmp	r3, #0	@ D.40712,
	beq	.L2004	@,
	ldr	r2, [r3, #64]	@ D.40716, <variable>.dpb_cnt
	cmp	r1, r2	@ poc, D.40716
	bls	.L2004	@,
	ldr	r0, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	r1, r2	@, poc, D.40716
	moveq	lr, ip	@, pos, tmp165
.L2004:
	add	r2, ip, #1	@ i, tmp165,
	add	r3, r7, #4	@ ivtmp.6904, tmp166,
	cmp	r2, r5	@ i, D.40708
	bne	.L1995	@,
.L2009:
	mov	r5, lr	@ prephitmp.6891, pos
.L1993:
	movw	r3, #:lower16:2780730	@ tmp150,
	movt	r3, #:upper16:2780730	@ tmp150,
	add	ip, lr, r3	@ tmp150, pos, tmp150
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, ip, asl #2]	@, <variable>.DPB.fs
	bl	MVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, prephitmp.6891
	bl	MVC_RemoveFrameStoreOutDPB	@
.L1991:
	movw	ip, #:lower16:11152520	@ tmp156,
	movt	ip, #:upper16:11152520	@ tmp156,
	mov	r1, #0	@ tmp154,
	movw	r0, #:lower16:11151964	@ tmp153,
	ldr	r2, [r4, ip]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movt	r0, #:upper16:11151964	@ tmp153,
	cmp	r2, r1	@ <variable>.CurrPic.nal_ref_idc,
	strb	r1, [r4, r0]	@ tmp154, <variable>.CurrPic.is_long_term
	movwne	r0, #:lower16:11151965	@ tmp158,
	movtne	r0, #:upper16:11151965	@ tmp158,
	movne	r2, #1	@ tmp159,
	strneb	r2, [r4, r0]	@ tmp159, <variable>.CurrPic.is_short_term
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_SimpleSlideDPB, .-MVC_SimpleSlideDPB
	.align	2
	.global	MVC_SlidingWinMark
	.type	MVC_SlidingWinMark, %function
MVC_SlidingWinMark:
	.fnstart
.LFB1572:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	r2, #:lower16:11123124	@ tmp146,
	movt	r2, #:upper16:11123124	@ tmp146,
	movw	ip, #:lower16:11123120	@ tmp144,
	movt	ip, #:upper16:11123120	@ tmp144,
	ldr	r1, [r0, r2]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r3, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r2, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	rsb	r3, r1, r0	@ tmp147, <variable>.DPB.ltref_frames_in_buffer, <variable>.num_ref_frames
	cmp	r2, r3	@ <variable>.DPB.ref_frames_in_buffer, tmp147
	beq	.L2034	@,
.L2016:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2034:
	movw	r5, #:lower16:11123112	@ tmp151,
	movt	r5, #:upper16:11123112	@ tmp151,
	ldr	sl, [r4, r5]	@ D.40407, <variable>.DPB.size
	cmp	sl, #0	@ D.40407,
	moveq	r9, sl	@ pos, D.40407
	beq	.L2013	@,
	movw	r6, #:lower16:11122920	@ ivtmp.6934,
	movt	r6, #:upper16:11122920	@ ivtmp.6934,
	add	r5, r4, r6	@ ivtmp.6934, pMvcCtx, ivtmp.6934
	mov	r9, #0	@ pos,
	sub	r7, sl, #1	@ tmp164, D.40407,
	movw	r3, #:lower16:11152584	@ tmp163,
	ldr	r6, [r5, #0]	@ D.40390, <variable>.DPB.fs
	and	r7, r7, #1	@ tmp166, tmp164,
	movt	r3, #:upper16:11152584	@ tmp163,
	mvn	r8, #-2147483648	@ poc,
	cmp	r6, r9	@ D.40390,
	beq	.L2018	@,
	ldr	r2, [r6, #64]	@ D.40394, <variable>.dpb_cnt
	cmp	r8, r2	@ poc, D.40394
	bhi	.L2035	@,
.L2018:
	mov	r6, #1	@ i,
	cmp	r6, sl	@ i, D.40407
	add	r5, r5, #4	@ ivtmp.6934, ivtmp.6934,
	beq	.L2013	@,
	cmp	r7, #0	@ tmp166,
	beq	.L2015	@,
	ldr	r7, [r5, #0]	@ D.40390, <variable>.DPB.fs
	cmp	r7, #0	@ D.40390,
	bne	.L2027	@,
.L2023:
	add	r6, r6, #1	@ i, tmp167,
	add	r5, r5, #4	@ ivtmp.6934, tmp168,
	cmp	r6, sl	@ i, D.40407
	beq	.L2013	@,
.L2015:
	ldr	r7, [r5, #0]	@ D.40390, <variable>.DPB.fs
	cmp	r7, #0	@ D.40390,
	beq	.L2014	@,
	ldr	r2, [r7, #64]	@ D.40394, <variable>.dpb_cnt
	cmp	r8, r2	@ poc, D.40394
	bls	.L2014	@,
	ldrb	r0, [r7, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L2036	@,
.L2014:
	ldr	r7, [r5, #4]	@ D.40390, <variable>.DPB.fs
	add	r6, r6, #1	@ tmp167, i,
	add	r5, r5, #4	@ tmp168, ivtmp.6934,
	cmp	r7, #0	@ D.40390,
	beq	.L2023	@,
.L2027:
	ldr	r2, [r7, #64]	@ D.40394, <variable>.dpb_cnt
	cmp	r8, r2	@ poc, D.40394
	bls	.L2023	@,
	ldrb	r0, [r7, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2023	@,
	mov	r0, r7	@, D.40390
	str	r2, [fp, #-48]	@,
	str	r3, [fp, #-52]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r2, [fp, #-48]	@,
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #0	@,
	beq	.L2023	@,
	ldr	lr, [r7, #56]	@ <variable>.view_id, <variable>.view_id
	add	r5, r5, #4	@ ivtmp.6934, tmp168,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	r9, r6	@, pos, tmp167
	add	r6, r6, #1	@ i, tmp167,
	moveq	r8, r2	@, poc, D.40394
	cmp	r6, sl	@ i, D.40407
	bne	.L2015	@,
.L2013:
	movw	r3, #:lower16:2780730	@ tmp157,
	movt	r3, #:upper16:2780730	@ tmp157,
	add	ip, r9, r3	@ tmp157, pos, tmp157
	ldr	r5, [r4, ip, asl #2]	@ D.40409, <variable>.DPB.fs
	cmp	r5, #0	@ D.40409,
	beq	.L2016	@,
	ldrb	r2, [r5, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	beq	.L2016	@,
	mov	r0, r5	@, D.40409
	bl	MVC_NonLongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L2016	@,
	movw	r1, #:lower16:11152584	@ tmp160,
	movt	r1, #:upper16:11152584	@ tmp160,
	ldr	r0, [r5, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, lr	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2016	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, D.40409
	bl	MVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	b	.L2016	@
.L2036:
	mov	r0, r7	@, D.40390
	str	r2, [fp, #-48]	@,
	str	r3, [fp, #-52]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r2, [fp, #-48]	@,
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #0	@,
	beq	.L2014	@,
	ldr	lr, [r7, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	r8, r2	@, poc, D.40394
	moveq	r9, r6	@, pos, i
	b	.L2014	@
.L2035:
	ldrb	ip, [r6, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	beq	.L2018	@,
	mov	r0, r6	@, D.40390
	str	r2, [fp, #-48]	@,
	str	r3, [fp, #-52]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r2, [fp, #-48]	@,
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #0	@,
	beq	.L2018	@,
	ldr	r8, [r6, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r4, r3]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	mvnne	r8, #-2147483648	@, poc,
	moveq	r8, r2	@, poc, D.40394
	b	.L2018	@
	.fnend
	.size	MVC_SlidingWinMark, .-MVC_SlidingWinMark
	.align	2
	.global	MVC_UnMarkAllSTRef
	.type	MVC_UnMarkAllSTRef, %function
MVC_UnMarkAllSTRef:
	.fnstart
.LFB1555:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11123120	@ tmp137,
	movt	r8, #:upper16:11123120	@ tmp137,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	r4, #:lower16:11122984	@ ivtmp.6965,
	movt	r4, #:upper16:11122984	@ ivtmp.6965,
	movw	r7, #:lower16:11152584	@ tmp147,
	add	r4, r0, r4	@ ivtmp.6965, pMvcCtx, ivtmp.6965
	movt	r7, #:upper16:11152584	@ tmp147,
	mov	r5, #0	@ i,
	b	.L2040	@
.L2039:
	ldr	r1, [r6, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ref_frames_in_buffer, i
	bls	.L2043	@,
.L2040:
	ldr	r1, [r4, #0]	@ D.39392, <variable>.DPB.fs_ref
	add	r5, r5, #1	@ i, i,
	ldr	r0, [r6, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	add	r4, r4, #4	@ ivtmp.6965, ivtmp.6965,
	ldr	r2, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r2, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2039	@,
	mov	r0, r6	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r6, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L2040	@,
.L2043:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_UnMarkAllSTRef, .-MVC_UnMarkAllSTRef
	.align	2
	.global	MVC_UpdateMaxLTFrmIdx
	.type	MVC_UpdateMaxLTFrmIdx, %function
MVC_UpdateMaxLTFrmIdx:
	.fnstart
.LFB1554:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:11123124	@ tmp139,
	movt	r7, #:upper16:11123124	@ tmp139,
	movw	r8, #:lower16:11123128	@ tmp138,
	movt	r8, #:upper16:11123128	@ tmp138,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	mov	r2, r1	@ max_long_term_frame_idx_plus1, max_long_term_frame_idx_plus1
	str	r1, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r4, #:lower16:11123048	@ ivtmp.6999,
	movt	r4, #:upper16:11123048	@ ivtmp.6999,
	movw	sl, #:lower16:11152584	@ tmp151,
	add	r4, r0, r4	@ ivtmp.6999, pMvcCtx, ivtmp.6999
	movt	sl, #:upper16:11152584	@ tmp151,
	mov	r5, #0	@ i,
	b	.L2047	@
.L2046:
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	ldmlsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2049:
	ldr	r2, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
.L2047:
	ldr	r1, [r4, #0]	@ D.39374, <variable>.DPB.fs_ltref
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.6999, ivtmp.6999,
	ldr	r0, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r0, r2	@ <variable>.long_term_frame_idx, max_long_term_frame_idx_plus1
	bcc	.L2046	@,
	ldr	r2, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r6, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2046	@,
	mov	r0, r6	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	bhi	.L2049	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_UpdateMaxLTFrmIdx, .-MVC_UpdateMaxLTFrmIdx
	.align	2
	.global	MVC_UnMarkLTFldByFrmIdx
	.type	MVC_UnMarkLTFldByFrmIdx, %function
MVC_UnMarkLTFldByFrmIdx:
	.fnstart
.LFB1549:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11123124	@ tmp141,
	movt	ip, #:upper16:11123124	@ tmp141,
	ldr	ip, [r0, ip]	@ D.39053, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ D.39053,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r5, #:lower16:11123048	@ ivtmp.7032,
	movt	r5, #:upper16:11123048	@ ivtmp.7032,
	add	r5, r0, r5	@ ivtmp.7032, pMvcCtx, ivtmp.7032
	sub	r7, ip, #1	@ tmp150, D.39053,
	movw	r8, #:lower16:11152584	@ tmp149,
	and	r7, r7, #1	@ tmp152, tmp150,
	ldr	r4, [r5, #0]	@ D.39033, <variable>.DPB.fs_ltref
	movt	r8, #:upper16:11152584	@ tmp149,
	ldr	r6, [r4, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2080	@,
.L2059:
	mov	r6, #1	@ i,
	cmp	r6, ip	@ i, D.39053
	add	r5, r5, #4	@ ivtmp.7032, ivtmp.7032,
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r7, #0	@ tmp152,
	beq	.L2056	@,
	ldr	r4, [r5, #0]	@ D.39033, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2081	@,
.L2062:
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.7032, ivtmp.7032,
	cmp	r6, ip	@ i, D.39053
	bcc	.L2056	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2052:
	ldr	r4, [r5, #4]	@ D.39033, <variable>.DPB.fs_ltref
	add	r6, r6, #1	@ tmp153, i,
	add	r5, r5, #4	@ tmp154, ivtmp.7032,
	ldr	r7, [r4, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2082	@,
.L2066:
	add	r6, r6, #1	@ i, tmp153,
	add	r5, r5, #4	@ ivtmp.7032, tmp154,
	cmp	r6, ip	@ i, D.39053
	bcs	.L2083	@,
.L2056:
	ldr	r4, [r5, #0]	@ D.39033, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L2052	@,
	ldr	sl, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2052	@,
	cmp	r2, #1	@ structure,
	beq	.L2084	@,
	cmp	r2, #2	@ structure,
	bne	.L2052	@,
	ldrb	r7, [r4, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2055	@,
.L2079:
	cmp	r4, r1	@ D.39033, pFS
	beq	.L2052	@,
.L2055:
	mov	r1, r4	@, D.39033
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2082:
	ldr	sl, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2066	@,
	cmp	r2, #1	@ structure,
	beq	.L2074	@,
	cmp	r2, #2	@ structure,
	bne	.L2066	@,
	ldrb	r7, [r4, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2055	@,
.L2077:
	cmp	r4, r1	@ D.39033, pFS
	bne	.L2055	@,
	add	r6, r6, #1	@ i, tmp153,
	add	r5, r5, #4	@ ivtmp.7032, tmp154,
	cmp	r6, ip	@ i, D.39053
	bcc	.L2056	@,
.L2083:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2074:
	ldrb	r7, [r4, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2077	@,
	b	.L2055	@
.L2084:
	ldrb	r7, [r4, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2079	@,
	b	.L2055	@
.L2080:
	ldr	sl, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2059	@,
	cmp	r2, #1	@ structure,
	beq	.L2072	@,
	cmp	r2, #2	@ structure,
	bne	.L2059	@,
	ldrb	r6, [r4, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #0	@ <variable>.top_field.is_long_term,
	beq	.L2055	@,
.L2075:
	cmp	r4, r1	@ D.39033, pFS
	beq	.L2059	@,
	b	.L2055	@
.L2081:
	ldr	sl, [r4, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2062	@,
	cmp	r2, r6	@ structure,
	beq	.L2073	@,
	cmp	r2, #2	@ structure,
	bne	.L2062	@,
	ldrb	r7, [r4, #637]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2055	@,
.L2076:
	cmp	r4, r1	@ D.39033, pFS
	beq	.L2062	@,
	b	.L2055	@
.L2072:
	ldrb	r6, [r4, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2075	@,
	b	.L2055	@
.L2073:
	ldrb	r7, [r4, #673]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2076	@,
	b	.L2055	@
	.fnend
	.size	MVC_UnMarkLTFldByFrmIdx, .-MVC_UnMarkLTFldByFrmIdx
	.align	2
	.global	MVC_UnMarkLTFrmByFrmIdx
	.type	MVC_UnMarkLTFrmByFrmIdx, %function
MVC_UnMarkLTFrmByFrmIdx:
	.fnstart
.LFB1548:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11123124	@ tmp139,
	movt	r3, #:upper16:11123124	@ tmp139,
	ldr	r6, [r0, r3]	@ D.39021, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ D.39021,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	r2, #:lower16:11123048	@ ivtmp.7061,
	movt	r2, #:upper16:11123048	@ ivtmp.7061,
	add	r2, r0, r2	@ ivtmp.7061, pMvcCtx, ivtmp.7061
	sub	r7, r6, #1	@ tmp146, D.39021,
	and	r4, r7, #1	@ tmp148, tmp146,
	movw	r7, #:lower16:11152584	@ tmp145,
	ldr	r3, [r2, #0]	@ D.39013, <variable>.DPB.fs_ltref
	movt	r7, #:upper16:11152584	@ tmp145,
	ldr	ip, [r3, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	ip, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2102	@,
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.39021, i
	add	r2, r2, #4	@ ivtmp.7061, ivtmp.7061,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2106:
	cmp	r4, #0	@ tmp148,
	beq	.L2088	@,
	ldr	r3, [r2, #0]	@ D.39013, <variable>.DPB.fs_ltref
	ldr	r4, [r3, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2103	@,
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.7061, ivtmp.7061,
	cmp	r6, ip	@ D.39021, i
	bhi	.L2088	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2087:
	ldr	r3, [r2, #4]	@ D.39013, <variable>.DPB.fs_ltref
	ldr	r2, [r3, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r2, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2104	@,
	add	ip, ip, #1	@ i, tmp149,
	add	r2, r5, #4	@ ivtmp.7061, tmp150,
	cmp	r6, ip	@ D.39021, i
	bls	.L2105	@,
.L2088:
	ldr	r3, [r2, #0]	@ D.39013, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp149, i,
	add	r5, r2, #4	@ tmp150, ivtmp.7061,
	ldr	r4, [r3, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L2087	@,
	ldr	r8, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2087	@,
.L2101:
	mov	r1, r3	@, D.39013
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2104:
	ldr	r4, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2101	@,
	add	ip, ip, #1	@ i, tmp149,
	add	r2, r5, #4	@ ivtmp.7061, tmp150,
	cmp	r6, ip	@ D.39021, i
	bhi	.L2088	@,
.L2105:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2102:
	ldr	r5, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2101	@,
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.39021, i
	add	r2, r2, #4	@ ivtmp.7061, ivtmp.7061,
	bhi	.L2106	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2103:
	ldr	r5, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2101	@,
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.7061, ivtmp.7061,
	cmp	r6, ip	@ D.39021, i
	bhi	.L2088	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_UnMarkLTFrmByFrmIdx, .-MVC_UnMarkLTFrmByFrmIdx
	.align	2
	.global	MVC_MarkCurrPicLT
	.type	MVC_MarkCurrPicLT, %function
MVC_MarkCurrPicLT:
	.fnstart
.LFB1556:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r2	@ long_term_frame_idx, long_term_frame_idx
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ D.39403, <variable>.structure
	mov	r4, r1	@ pCurrPic, pCurrPic
	cmp	r2, #0	@ D.39403,
	beq	.L2111	@,
	mov	r3, r5	@, long_term_frame_idx
	ldr	r1, [r1, #544]	@, <variable>.frame_store
	bl	MVC_UnMarkLTFldByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #556]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L2111:
	mov	r1, r5	@, long_term_frame_idx
	bl	MVC_UnMarkLTFrmByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #556]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_MarkCurrPicLT, .-MVC_MarkCurrPicLT
	.align	2
	.global	MVC_MarkSTToLTRef
	.type	MVC_MarkSTToLTRef, %function
MVC_MarkSTToLTRef:
	.fnstart
.LFB1553:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r1	@ pCurrPic, pCurrPic
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	mov	r7, r3	@ long_term_frame_idx, long_term_frame_idx
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ <variable>.structure,
	bne	.L2113	@,
	ldr	r3, [r6, #552]	@ <variable>.frame_num, <variable>.frame_num
	mov	r1, r7	@, long_term_frame_idx
	mvn	r4, r2	@ tmp144, difference_of_pic_nums_minus1
	add	r4, r4, r3	@ picNumX, tmp144, <variable>.frame_num
	bl	MVC_UnMarkLTFrmByFrmIdx	@
.L2114:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, long_term_frame_idx
	mov	r2, r4	@, picNumX
	mov	r3, r6	@, pCurrPic
	bl	MVC_MarkPicLTRef	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2113:
	movw	ip, #:lower16:11123120	@ tmp150,
	movt	ip, #:upper16:11123120	@ tmp150,
	ldr	r0, [r6, #552]	@ <variable>.frame_num, <variable>.frame_num
	ldr	lr, [r5, ip]	@ D.39364, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ D.39364,
	rsb	r4, r2, r0, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	beq	.L2114	@,
	movw	r8, #:lower16:11122984	@ ivtmp.7118,
	movt	r8, #:upper16:11122984	@ ivtmp.7118,
	add	r3, r5, r8	@ ivtmp.7118, pMvcCtx, ivtmp.7118
	sub	r2, lr, #1	@ tmp169, D.39364,
	and	r0, r2, #1	@ tmp171, tmp169,
	movw	r8, #:lower16:11152584	@ tmp168,
	ldr	r1, [r3, #0]	@ D.39334, <variable>.DPB.fs_ref
	movt	r8, #:upper16:11152584	@ tmp168,
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ D.39336, <variable>.is_reference
	tst	r2, #1	@ D.39336,
	beq	.L2120	@,
	ldr	ip, [r1, #636]	@ tmp182,
	bic	ip, ip, #-16777216	@ tmp183, tmp182,
	bic	ip, ip, #255	@ tmp183, tmp183,
	cmp	ip, #65536	@ tmp183,
	beq	.L2146	@,
.L2120:
	tst	r2, #2	@ D.39336,
	beq	.L2121	@,
	ldr	r2, [r1, #672]	@ tmp189,
	bic	ip, r2, #-16777216	@ tmp190, tmp189,
	bic	r2, ip, #255	@ tmp190, tmp190,
	cmp	r2, #65536	@ tmp190,
	beq	.L2147	@,
.L2121:
	mov	r2, #1	@ i,
	cmp	r2, lr	@ i, D.39364
	add	r3, r3, #4	@ ivtmp.7118, ivtmp.7118,
	bcs	.L2114	@,
	cmp	r0, #0	@ tmp171,
	beq	.L2117	@,
	ldr	r1, [r3, #0]	@ D.39334, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ D.39336, <variable>.is_reference
	tst	r0, #1	@ D.39336,
	bne	.L2132	@,
.L2127:
	tst	r0, #2	@ D.39336,
	beq	.L2128	@,
	ldr	r0, [r1, #672]	@ tmp217,
	bic	ip, r0, #-16777216	@ tmp218, tmp217,
	bic	r0, ip, #255	@ tmp218, tmp218,
	cmp	r0, #65536	@ tmp218,
	beq	.L2148	@,
.L2128:
	add	r2, r2, #1	@ i, tmp172,
	add	r3, r3, #4	@ ivtmp.7118, tmp173,
	cmp	r2, lr	@ i, D.39364
	bcs	.L2114	@,
.L2117:
	ldr	r1, [r3, #0]	@ D.39334, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ D.39336, <variable>.is_reference
	tst	r0, #1	@ D.39336,
	beq	.L2115	@,
	ldr	ip, [r1, #636]	@ tmp155,
	bic	ip, ip, #-16777216	@ tmp153, tmp155,
	bic	ip, ip, #255	@ tmp153, tmp153,
	cmp	ip, #65536	@ tmp153,
	beq	.L2149	@,
.L2115:
	tst	r0, #2	@ D.39336,
	beq	.L2116	@,
	ldr	r0, [r1, #672]	@ tmp163,
	bic	ip, r0, #-16777216	@ tmp161, tmp163,
	bic	r0, ip, #255	@ tmp161, tmp161,
	cmp	r0, #65536	@ tmp161,
	beq	.L2150	@,
.L2116:
	ldr	r1, [r3, #4]	@ D.39334, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp172, i,
	add	r3, r3, #4	@ tmp173, ivtmp.7118,
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ D.39336, <variable>.is_reference
	tst	r0, #1	@ D.39336,
	beq	.L2127	@,
.L2132:
	ldr	ip, [r1, #636]	@ tmp210,
	bic	ip, ip, #-16777216	@ tmp211, tmp210,
	bic	ip, ip, #255	@ tmp211, tmp211,
	cmp	ip, #65536	@ tmp211,
	bne	.L2127	@,
	ldr	ip, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2127	@,
	ldr	sl, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2127	@,
	b	.L2133	@
.L2148:
	ldr	ip, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2128	@,
	ldr	ip, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2128	@,
	b	.L2134	@
.L2149:
	ldr	ip, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2115	@,
	ldr	sl, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2115	@,
	b	.L2133	@
.L2150:
	ldr	ip, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2116	@,
	ldr	ip, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2116	@,
	b	.L2134	@
.L2147:
	ldr	ip, [r1, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2121	@,
	ldr	ip, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2121	@,
.L2134:
	mov	r0, r5	@, pMvcCtx
	mov	r2, #2	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	MVC_UnMarkLTFldByFrmIdx	@
	b	.L2114	@
.L2146:
	ldr	ip, [r1, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2120	@,
	ldr	sl, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2120	@,
.L2133:
	mov	r0, r5	@, pMvcCtx
	mov	r2, #1	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	MVC_UnMarkLTFldByFrmIdx	@
	b	.L2114	@
	.fnend
	.size	MVC_MarkSTToLTRef, .-MVC_MarkSTToLTRef
	.align	2
	.global	MVC_UnMarkLTRef
	.type	MVC_UnMarkLTRef, %function
MVC_UnMarkLTRef:
	.fnstart
.LFB1551:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ <variable>.structure,
	beq	.L2152	@,
	movw	r0, #:lower16:11123124	@ tmp153,
	movt	r0, #:upper16:11123124	@ tmp153,
	ldr	r7, [r3, r0]	@ D.39169, <variable>.DPB.ltref_frames_in_buffer
	cmp	r7, #0	@ D.39169,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r8, #:lower16:11123048	@ ivtmp.7164,
	movt	r8, #:upper16:11123048	@ ivtmp.7164,
	add	r5, r3, r8	@ ivtmp.7164, pMvcCtx, ivtmp.7164
	sub	r6, r7, #1	@ tmp264, D.39169,
	movw	r8, #:lower16:11152584	@ tmp258,
	and	r6, r6, #1	@ tmp266, tmp264,
	ldr	r0, [r5, #0]	@ temp.7168, <variable>.DPB.fs_ltref
	movt	r8, #:upper16:11152584	@ tmp258,
	mov	ip, #0	@ i,
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7169, <variable>.is_reference
	ands	r4, r1, #1	@ tmp256, temp.7169,
	beq	.L2172	@,
	ldr	sl, [r0, #636]	@ tmp296,
	bic	sl, sl, #-16777216	@ tmp297, tmp296,
	bic	sl, sl, #255	@ tmp297, tmp297,
	cmp	sl, #256	@ tmp297,
	beq	.L2195	@,
.L2172:
	tst	r1, #2	@ temp.7169,
	beq	.L2173	@,
	ldr	r1, [r0, #672]	@ tmp303,
	bic	r1, r1, #-16777216	@ tmp304, tmp303,
	bic	r1, r1, #255	@ tmp304, tmp304,
	cmp	r1, #256	@ tmp304,
	beq	.L2196	@,
.L2173:
	mov	ip, #1	@ i,
	cmp	r7, ip	@ D.39169, i
	add	r5, r5, #4	@ ivtmp.7164, ivtmp.7164,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r6, #0	@ tmp266,
	beq	.L2161	@,
	ldr	r0, [r5, #0]	@ temp.7168, <variable>.DPB.fs_ltref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7169, <variable>.is_reference
	ands	r4, r1, ip	@ tmp256, temp.7169,
	beq	.L2175	@,
	ldr	r6, [r0, #636]	@ tmp309,
	bic	r6, r6, #-16777216	@ tmp310, tmp309,
	bic	r6, r6, #255	@ tmp310, tmp310,
	cmp	r6, #256	@ tmp310,
	beq	.L2197	@,
.L2175:
	tst	r1, #2	@ temp.7169,
	beq	.L2176	@,
	ldr	r1, [r0, #672]	@ tmp316,
	bic	r1, r1, #-16777216	@ tmp317, tmp316,
	bic	r1, r1, #255	@ tmp317, tmp317,
	cmp	r1, #256	@ tmp317,
	beq	.L2198	@,
.L2176:
	add	ip, ip, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.7164, ivtmp.7164,
	cmp	r7, ip	@ D.39169, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	ldr	r0, [r5, #0]	@ temp.7168, <variable>.DPB.fs_ltref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7169, <variable>.is_reference
	ands	r4, r1, #1	@ tmp256, temp.7169,
	bne	.L2199	@,
.L2157:
	tst	r1, #2	@ temp.7169,
	beq	.L2159	@,
	ldr	r6, [r0, #672]	@ tmp213,
	bic	r1, r6, #-16777216	@ tmp211, tmp213,
	bic	r6, r1, #255	@ tmp211, tmp211,
	cmp	r6, #256	@ tmp211,
	beq	.L2200	@,
.L2159:
	ldr	r0, [r5, #4]	@ temp.7168, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ i, i,
	add	r5, r5, #4	@ tmp268, ivtmp.7164,
	mov	r6, ip	@ tmp267, i
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7169, <variable>.is_reference
	ands	r4, r1, #1	@ tmp256, temp.7169,
	beq	.L2179	@,
	ldr	sl, [r0, #636]	@ tmp322,
	bic	sl, sl, #-16777216	@ tmp323, tmp322,
	bic	sl, sl, #255	@ tmp323, tmp323,
	cmp	sl, #256	@ tmp323,
	beq	.L2201	@,
.L2179:
	tst	r1, #2	@ temp.7169,
	beq	.L2180	@,
	ldr	r1, [r0, #672]	@ tmp329,
	bic	r1, r1, #-16777216	@ tmp330, tmp329,
	bic	r1, r1, #255	@ tmp330, tmp330,
	cmp	r1, #256	@ tmp330,
	beq	.L2202	@,
.L2180:
	add	ip, r6, #1	@ i, tmp267,
	add	r5, r5, #4	@ ivtmp.7164, tmp268,
	cmp	r7, ip	@ D.39169, i
	bls	.L2203	@,
.L2161:
	ldr	r0, [r5, #0]	@ temp.7168, <variable>.DPB.fs_ltref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7169, <variable>.is_reference
	ands	r4, r1, #1	@ tmp256, temp.7169,
	beq	.L2157	@,
.L2199:
	ldr	r6, [r0, #636]	@ tmp168,
	bic	r6, r6, #-16777216	@ tmp166, tmp168,
	bic	r6, r6, #255	@ tmp166, tmp166,
	cmp	r6, #256	@ tmp166,
	bne	.L2157	@,
	ldr	sl, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2157	@,
	ldr	r6, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2157	@,
	b	.L2189	@
.L2152:
	movw	ip, #:lower16:11123124	@ tmp154,
	movt	ip, #:upper16:11123124	@ tmp154,
	ldr	r6, [r0, ip]	@ temp.7172, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ temp.7172,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r4, #:lower16:11123048	@ ivtmp.7159,
	movt	r4, #:upper16:11123048	@ ivtmp.7159,
	add	r0, r0, r4	@ ivtmp.7159, pMvcCtx, ivtmp.7159
	sub	r7, r6, #1	@ tmp259, temp.7172,
	and	r4, r7, #1	@ tmp261, tmp259,
	movw	r7, #:lower16:11152584	@ tmp257,
	ldr	r1, [r0, #0]	@ D.39154, <variable>.DPB.fs_ltref
	movt	r7, #:upper16:11152584	@ tmp257,
	ldr	ip, [r1, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	ip, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2204	@,
.L2165:
	mov	ip, #1	@ i.7167,
	cmp	ip, r6	@ i.7167, temp.7172
	add	r0, r0, #4	@ ivtmp.7159, ivtmp.7159,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp261,
	beq	.L2156	@,
	ldr	r1, [r0, #0]	@ D.39154, <variable>.DPB.fs_ltref
	ldr	r4, [r1, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2205	@,
.L2167:
	add	ip, ip, #1	@ i.7167, i.7167,
	add	r0, r0, #4	@ ivtmp.7159, ivtmp.7159,
	cmp	ip, r6	@ i.7167, temp.7172
	bcc	.L2156	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2155:
	ldr	r1, [r0, #4]	@ D.39154, <variable>.DPB.fs_ltref
	ldr	r0, [r1, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2206	@,
.L2170:
	add	ip, ip, #1	@ i.7167, tmp262,
	add	r0, r4, #4	@ ivtmp.7159, tmp263,
	cmp	ip, r6	@ i.7167, temp.7172
	bcs	.L2207	@,
.L2156:
	ldr	r1, [r0, #0]	@ D.39154, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp262, i.7167,
	add	r4, r0, #4	@ tmp263, ivtmp.7159,
	ldr	r5, [r1, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r5, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L2155	@,
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L2155	@,
	ldr	r5, [r1, #600]	@ tmp160,
	bic	r5, r5, #-16777216	@ tmp158, tmp160,
	bic	r5, r5, #255	@ tmp158, tmp158,
	cmp	r5, #256	@ tmp158,
	bne	.L2155	@,
	ldr	r8, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2188	@,
	ldr	r1, [r0, #4]	@ D.39154, <variable>.DPB.fs_ltref
	ldr	r0, [r1, #608]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L2170	@,
.L2206:
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L2170	@,
	ldr	r0, [r1, #600]	@ tmp291,
	bic	r0, r0, #-16777216	@ tmp292, tmp291,
	bic	r0, r0, #255	@ tmp292, tmp292,
	cmp	r0, #256	@ tmp292,
	bne	.L2170	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2188	@,
	add	ip, ip, #1	@ i.7167, tmp262,
	add	r0, r4, #4	@ ivtmp.7159, tmp263,
	cmp	ip, r6	@ i.7167, temp.7172
	bcc	.L2156	@,
.L2207:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2200:
	ldr	r6, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2159	@,
	ldr	r1, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r1, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2159	@,
	b	.L2190	@
.L2201:
	ldr	r9, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2179	@,
	ldr	sl, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	sl, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2179	@,
	b	.L2189	@
.L2202:
	ldr	sl, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2180	@,
	ldr	r1, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r1, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	beq	.L2190	@,
	add	ip, r6, #1	@ i, tmp267,
	add	r5, r5, #4	@ ivtmp.7164, tmp268,
	cmp	r7, ip	@ D.39169, i
	bhi	.L2161	@,
.L2203:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2196:
	ldr	sl, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2173	@,
	ldr	r1, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r1, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2173	@,
.L2190:
	movw	r2, #:lower16:2780762	@ tmp220,
	movt	r2, #:upper16:2780762	@ tmp220,
	add	r2, ip, r2	@ tmp220, i, tmp220
	strb	r4, [r0, #3]	@ tmp256, <variable>.is_reference
	mov	r1, #0	@ tmp223,
	ldr	r0, [r3, r2, asl #2]	@ tmp222, <variable>.DPB.fs_ltref
	strb	r1, [r0, #673]	@ tmp223, <variable>.bottom_field.is_long_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.7177, <variable>.DPB.fs_ltref
	ldrb	r4, [r0, #600]	@ zero_extendqisi2	@ D.39211, <variable>.frame.structure
	cmp	r4, #3	@ D.39211,
	cmpne	r4, r1	@, D.39211,
	bne	.L2160	@,
	b	.L2193	@
.L2195:
	ldr	r9, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2172	@,
	ldr	sl, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	sl, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2172	@,
.L2189:
	movw	r2, #:lower16:2780762	@ tmp175,
	movt	r2, #:upper16:2780762	@ tmp175,
	add	r2, ip, r2	@ tmp175, i, tmp175
	and	r1, r1, #2	@ tmp173, temp.7169,
	strb	r1, [r0, #3]	@ tmp173, <variable>.is_reference
	mov	r1, #0	@ tmp178,
	ldr	r4, [r3, r2, asl #2]	@ tmp177, <variable>.DPB.fs_ltref
	strb	r1, [r4, #637]	@ tmp178, <variable>.top_field.is_long_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.7146, <variable>.DPB.fs_ltref
	ldrb	r4, [r0, #600]	@ zero_extendqisi2	@ D.39186, <variable>.frame.structure
	cmp	r4, #3	@ D.39186,
	cmpne	r4, r1	@, D.39186,
	bne	.L2160	@,
.L2193:
	strb	r1, [r0, #602]	@ tmp223, <variable>.frame.is_short_term
	ldr	r0, [r3, r2, asl #2]	@ tmp238, <variable>.DPB.fs_ltref
	strb	r1, [r0, #601]	@ tmp223, <variable>.frame.is_long_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.7177, <variable>.DPB.fs_ltref
.L2160:
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r4, #:lower16:2780762	@ tmp251,
	movt	r4, #:upper16:2780762	@ tmp251,
	add	lr, ip, r4	@ tmp251, i, tmp251
	ldr	r4, [r0, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r0, [r3, #120]	@, <variable>.ChanID
	mov	r2, r1	@, <variable>.is_reference
	ldr	ip, [r3, lr, asl #2]	@ tmp253, <variable>.DPB.fs_ltref
	add	r3, r3, r4, asl #2	@, tmp248, pMvcCtx, <variable>.pmv_address_idc,
	str	r1, [r3, #148]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2197:
	ldr	sl, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2175	@,
	ldr	r6, [r0, #644]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2175	@,
	b	.L2189	@
.L2198:
	ldr	r6, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2176	@,
	ldr	r1, [r0, #680]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r1, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2176	@,
	b	.L2190	@
.L2204:
	ldrb	ip, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L2165	@,
	ldr	ip, [r1, #600]	@ tmp278,
	bic	ip, ip, #-16777216	@ tmp279, tmp278,
	bic	ip, ip, #255	@ tmp279, tmp279,
	cmp	ip, #256	@ tmp279,
	bne	.L2165	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2165	@,
.L2188:
	mov	r0, r3	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2205:
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L2167	@,
	ldr	r4, [r1, #600]	@ tmp285,
	bic	r4, r4, #-16777216	@ tmp286, tmp285,
	bic	r4, r4, #255	@ tmp286, tmp286,
	cmp	r4, #256	@ tmp286,
	bne	.L2167	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2167	@,
	b	.L2188	@
	.fnend
	.size	MVC_UnMarkLTRef, .-MVC_UnMarkLTRef
	.align	2
	.global	MVC_UnMarkSTRef
	.type	MVC_UnMarkSTRef, %function
MVC_UnMarkSTRef:
	.fnstart
.LFB1550:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r0, #0	@ <variable>.structure,
	bne	.L2209	@,
	movw	ip, #:lower16:11123120	@ tmp158,
	movt	ip, #:upper16:11123120	@ tmp158,
	ldr	r1, [r1, #552]	@ <variable>.frame_num, <variable>.frame_num
	mvn	r2, r2	@ tmp156, difference_of_pic_nums_minus1
	ldr	r6, [r3, ip]	@ temp.7255, <variable>.DPB.ref_frames_in_buffer
	add	ip, r2, r1	@ picNumX.7257, tmp156, <variable>.frame_num
	cmp	r6, #0	@ temp.7255,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r4, #:lower16:11122984	@ ivtmp.7223,
	movt	r4, #:upper16:11122984	@ ivtmp.7223,
	add	r2, r3, r4	@ ivtmp.7223, pMvcCtx, ivtmp.7223
	sub	r7, r6, #1	@ tmp268, temp.7255,
	and	r4, r7, #1	@ tmp270, tmp268,
	movw	r7, #:lower16:11152584	@ tmp266,
	ldr	r1, [r2, #0]	@ D.39073, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11152584	@ tmp266,
	ldr	r0, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, ip	@ <variable>.frame.pic_num, picNumX.7257
	beq	.L2251	@,
.L2223:
	mov	r0, #1	@ i.7231,
	cmp	r0, r6	@ i.7231, temp.7255
	add	r2, r2, #4	@ ivtmp.7223, ivtmp.7223,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp270,
	beq	.L2214	@,
	ldr	r1, [r2, #0]	@ D.39073, <variable>.DPB.fs_ref
	ldr	r4, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, ip	@ <variable>.frame.pic_num, picNumX.7257
	beq	.L2252	@,
.L2225:
	add	r0, r0, #1	@ i.7231, i.7231,
	add	r2, r2, #4	@ ivtmp.7223, ivtmp.7223,
	cmp	r0, r6	@ i.7231, temp.7255
	bcc	.L2214	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2213:
	ldr	r1, [r2, #4]	@ D.39073, <variable>.DPB.fs_ref
	ldr	r2, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r2, ip	@ <variable>.frame.pic_num, picNumX.7257
	beq	.L2253	@,
.L2228:
	add	r0, r0, #1	@ i.7231, tmp271,
	add	r2, r4, #4	@ ivtmp.7223, tmp272,
	cmp	r0, r6	@ i.7231, temp.7255
	bcs	.L2254	@,
.L2214:
	ldr	r1, [r2, #0]	@ D.39073, <variable>.DPB.fs_ref
	add	r0, r0, #1	@ tmp271, i.7231,
	add	r4, r2, #4	@ tmp272, ivtmp.7223,
	ldr	r5, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, ip	@ <variable>.frame.pic_num, picNumX.7257
	bne	.L2213	@,
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L2213	@,
	ldr	r5, [r1, #600]	@ tmp169,
	bic	r5, r5, #-16777216	@ tmp167, tmp169,
	bic	r5, r5, #255	@ tmp167, tmp167,
	cmp	r5, #65536	@ tmp167,
	bne	.L2213	@,
	ldr	r8, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2246	@,
	ldr	r1, [r2, #4]	@ D.39073, <variable>.DPB.fs_ref
	ldr	r2, [r1, #612]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r2, ip	@ <variable>.frame.pic_num, picNumX.7257
	bne	.L2228	@,
.L2253:
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #3	@ <variable>.is_reference,
	bne	.L2228	@,
	ldr	r2, [r1, #600]	@ tmp300,
	bic	r2, r2, #-16777216	@ tmp301, tmp300,
	bic	r2, r2, #255	@ tmp301, tmp301,
	cmp	r2, #65536	@ tmp301,
	bne	.L2228	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2246	@,
	add	r0, r0, #1	@ i.7231, tmp271,
	add	r2, r4, #4	@ ivtmp.7223, tmp272,
	cmp	r0, r6	@ i.7231, temp.7255
	bcc	.L2214	@,
.L2254:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2209:
	movw	r0, #:lower16:11123120	@ tmp163,
	movt	r0, #:upper16:11123120	@ tmp163,
	ldr	sl, [r1, #552]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r6, [r3, r0]	@ D.39088, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.39088,
	rsb	sl, r2, sl, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	ip, #:lower16:11122984	@ ivtmp.7228,
	movt	ip, #:upper16:11122984	@ ivtmp.7228,
	add	r4, r3, ip	@ ivtmp.7228, pMvcCtx, ivtmp.7228
	sub	r1, r6, #1	@ tmp273, D.39088,
	and	r5, r1, #1	@ tmp275, tmp273,
	movw	r7, #:lower16:11152584	@ tmp267,
	ldr	r0, [r4, #0]	@ temp.7232, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11152584	@ tmp267,
	mov	ip, #0	@ i,
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7233, <variable>.is_reference
	ands	r2, r1, #1	@ tmp264, temp.7233,
	beq	.L2230	@,
	ldr	r8, [r0, #636]	@ tmp305,
	bic	r8, r8, #-16777216	@ tmp306, tmp305,
	bic	r8, r8, #255	@ tmp306, tmp306,
	cmp	r8, #65536	@ tmp306,
	beq	.L2255	@,
.L2230:
	tst	r1, #2	@ temp.7233,
	beq	.L2231	@,
	ldr	r1, [r0, #672]	@ tmp312,
	bic	r1, r1, #-16777216	@ tmp313, tmp312,
	bic	r1, r1, #255	@ tmp313, tmp313,
	cmp	r1, #65536	@ tmp313,
	beq	.L2256	@,
.L2231:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.39088, i
	add	r4, r4, #4	@ ivtmp.7228, ivtmp.7228,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r5, #0	@ tmp275,
	beq	.L2219	@,
	ldr	r0, [r4, #0]	@ temp.7232, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7233, <variable>.is_reference
	ands	r2, r1, ip	@ tmp264, temp.7233,
	beq	.L2233	@,
	ldr	r5, [r0, #636]	@ tmp318,
	bic	r5, r5, #-16777216	@ tmp319, tmp318,
	bic	r5, r5, #255	@ tmp319, tmp319,
	cmp	r5, #65536	@ tmp319,
	beq	.L2257	@,
.L2233:
	tst	r1, #2	@ temp.7233,
	beq	.L2234	@,
	ldr	r1, [r0, #672]	@ tmp325,
	bic	r1, r1, #-16777216	@ tmp326, tmp325,
	bic	r1, r1, #255	@ tmp326, tmp326,
	cmp	r1, #65536	@ tmp326,
	beq	.L2258	@,
.L2234:
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.7228, ivtmp.7228,
	cmp	r6, ip	@ D.39088, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	ldr	r0, [r4, #0]	@ temp.7232, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7233, <variable>.is_reference
	ands	r2, r1, #1	@ tmp264, temp.7233,
	bne	.L2259	@,
.L2215:
	tst	r1, #2	@ temp.7233,
	beq	.L2217	@,
	ldr	r5, [r0, #672]	@ tmp222,
	bic	r1, r5, #-16777216	@ tmp220, tmp222,
	bic	r5, r1, #255	@ tmp220, tmp220,
	cmp	r5, #65536	@ tmp220,
	beq	.L2260	@,
.L2217:
	ldr	r0, [r4, #4]	@ temp.7232, <variable>.DPB.fs_ref
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ tmp277, ivtmp.7228,
	mov	r5, ip	@ tmp276, i
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7233, <variable>.is_reference
	ands	r2, r1, #1	@ tmp264, temp.7233,
	beq	.L2237	@,
	ldr	r8, [r0, #636]	@ tmp331,
	bic	r8, r8, #-16777216	@ tmp332, tmp331,
	bic	r8, r8, #255	@ tmp332, tmp332,
	cmp	r8, #65536	@ tmp332,
	beq	.L2261	@,
.L2237:
	tst	r1, #2	@ temp.7233,
	beq	.L2238	@,
	ldr	r1, [r0, #672]	@ tmp338,
	bic	r1, r1, #-16777216	@ tmp339, tmp338,
	bic	r1, r1, #255	@ tmp339, tmp339,
	cmp	r1, #65536	@ tmp339,
	beq	.L2262	@,
.L2238:
	add	ip, r5, #1	@ i, tmp276,
	add	r4, r4, #4	@ ivtmp.7228, tmp277,
	cmp	r6, ip	@ D.39088, i
	bls	.L2263	@,
.L2219:
	ldr	r0, [r4, #0]	@ temp.7232, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ temp.7233, <variable>.is_reference
	ands	r2, r1, #1	@ tmp264, temp.7233,
	beq	.L2215	@,
.L2259:
	ldr	r5, [r0, #636]	@ tmp177,
	bic	r5, r5, #-16777216	@ tmp175, tmp177,
	bic	r5, r5, #255	@ tmp175, tmp175,
	cmp	r5, #65536	@ tmp175,
	bne	.L2215	@,
	ldr	r8, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2215	@,
	ldr	r5, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2215	@,
	b	.L2247	@
.L2260:
	ldr	r5, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2217	@,
	ldr	r1, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, sl	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2217	@,
	b	.L2248	@
.L2261:
	ldr	r9, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r8	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2237	@,
	ldr	r8, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r8, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2237	@,
	b	.L2247	@
.L2262:
	ldr	r8, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2238	@,
	ldr	r1, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, sl	@ <variable>.bottom_field.pic_num, picNumX
	beq	.L2248	@,
	add	ip, r5, #1	@ i, tmp276,
	add	r4, r4, #4	@ ivtmp.7228, tmp277,
	cmp	r6, ip	@ D.39088, i
	bhi	.L2219	@,
.L2263:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2256:
	ldr	r8, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2231	@,
	ldr	r1, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, sl	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2231	@,
.L2248:
	movw	r1, #:lower16:2780746	@ tmp229,
	movt	r1, #:upper16:2780746	@ tmp229,
	add	r1, ip, r1	@ tmp229, i, tmp229
	strb	r2, [r0, #3]	@ tmp264, <variable>.is_reference
	mov	r0, #0	@ tmp232,
	ldr	r4, [r3, r1, asl #2]	@ tmp231, <variable>.DPB.fs_ref
	strb	r0, [r4, #674]	@ tmp232, <variable>.bottom_field.is_short_term
	ldr	r2, [r3, r1, asl #2]	@ prephitmp.7210, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #600]	@ zero_extendqisi2	@ D.39130, <variable>.frame.structure
	cmp	r4, #3	@ D.39130,
	cmpne	r4, r0	@, D.39130,
	streqb	r0, [r2, #602]	@ tmp232, <variable>.frame.is_short_term
	ldreq	r2, [r3, r1, asl #2]	@ tmp247, <variable>.DPB.fs_ref
	streqb	r0, [r2, #601]	@ tmp232, <variable>.frame.is_long_term
	ldreq	r2, [r3, r1, asl #2]	@ prephitmp.7210, <variable>.DPB.fs_ref
	ldrb	r1, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	lr, #:lower16:2780746	@ tmp260,
	movt	lr, #:upper16:2780746	@ tmp260,
	add	lr, ip, lr	@ tmp260, i, tmp260
	ldr	r4, [r2, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	b	.L2249	@
.L2255:
	ldr	r9, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r8	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2230	@,
	ldr	r8, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r8, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2230	@,
.L2247:
	movw	r2, #:lower16:2780746	@ tmp184,
	movt	r2, #:upper16:2780746	@ tmp184,
	add	r2, ip, r2	@ tmp184, i, tmp184
	and	r4, r1, #2	@ tmp182, temp.7233,
	strb	r4, [r0, #3]	@ tmp182, <variable>.is_reference
	mov	r1, #0	@ tmp187,
	ldr	r0, [r3, r2, asl #2]	@ tmp186, <variable>.DPB.fs_ref
	strb	r1, [r0, #638]	@ tmp187, <variable>.top_field.is_short_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.7236, <variable>.DPB.fs_ref
	ldrb	r4, [r0, #600]	@ zero_extendqisi2	@ D.39105, <variable>.frame.structure
	cmp	r4, #3	@ D.39105,
	cmpne	r4, r1	@, D.39105,
	streqb	r1, [r0, #602]	@ tmp187, <variable>.frame.is_short_term
	ldreq	r0, [r3, r2, asl #2]	@ tmp202, <variable>.DPB.fs_ref
	streqb	r1, [r0, #601]	@ tmp187, <variable>.frame.is_long_term
	ldreq	r0, [r3, r2, asl #2]	@ prephitmp.7236, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	lr, #:lower16:2780746	@ tmp215,
	ldr	r4, [r0, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movt	lr, #:upper16:2780746	@ tmp215,
	add	lr, ip, lr	@ tmp215, i, tmp215
.L2249:
	ldr	ip, [r3, lr, asl #2]	@ tmp262, <variable>.DPB.fs_ref
	mov	r2, r1	@, <variable>.is_reference
	ldr	r0, [r3, #120]	@, <variable>.ChanID
	add	r3, r3, r4, asl #2	@, tmp257, pMvcCtx, <variable>.pmv_address_idc,
	str	r1, [r3, #148]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2257:
	ldr	r8, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2233	@,
	ldr	r5, [r0, #648]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2233	@,
	b	.L2247	@
.L2258:
	ldr	r5, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2234	@,
	ldr	r1, [r0, #684]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, sl	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2234	@,
	b	.L2248	@
.L2251:
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L2223	@,
	ldr	r0, [r1, #600]	@ tmp287,
	bic	r0, r0, #-16777216	@ tmp288, tmp287,
	bic	r0, r0, #255	@ tmp288, tmp288,
	cmp	r0, #65536	@ tmp288,
	bne	.L2223	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2223	@,
.L2246:
	mov	r0, r3	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2252:
	ldrb	r4, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L2225	@,
	ldr	r4, [r1, #600]	@ tmp294,
	bic	r4, r4, #-16777216	@ tmp295, tmp294,
	bic	r4, r4, #255	@ tmp295, tmp295,
	cmp	r4, #65536	@ tmp295,
	bne	.L2225	@,
	ldr	r5, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r3, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2225	@,
	b	.L2246	@
	.fnend
	.size	MVC_UnMarkSTRef, .-MVC_UnMarkSTRef
	.align	2
	.global	MVC_ClearAll
	.type	MVC_ClearAll, %function
MVC_ClearAll:
	.fnstart
.LFB1538:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #76
	sub	sp, sp, #76	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r0, [fp, #-72]	@ pMvcCtx, %sfp
	mov	r4, r1	@ flag, flag
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC59	@,
	movt	r1, #:upper16:.LC59	@,
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-72]	@, %sfp
	bl	MVC_ClearCurrPic	@
	ldr	r0, [fp, #-72]	@, %sfp
	bl	MVC_ClearAllNal	@
	ldr	r0, [fp, #-72]	@, %sfp
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	bne	.L2283	@,
.L2265:
	cmp	r4, #0	@ flag,
	beq	.L2266	@,
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	r0, [r1, #120]	@, <variable>.ChanID
	add	r1, r1, #584	@,,
	bl	FSP_ClearNotInVoQueue	@
.L2267:
	ldr	r7, [fp, #-72]	@, %sfp
	movw	sl, #:lower16:11123764	@,
	movw	r9, #:lower16:11123776	@,
	movt	sl, #:upper16:11123764	@,
	movt	r9, #:upper16:11123776	@,
	movw	r8, #:lower16:11123772	@,
	movw	r4, #:lower16:11123768	@,
	movt	r8, #:upper16:11123772	@,
	movt	r4, #:upper16:11123768	@,
	mov	r0, #0	@,
	add	r5, r7, sl	@,,
	add	r6, r7, r9	@,,
	add	ip, r7, r8	@,,
	add	lr, r7, r4	@,,
	str	r5, [fp, #-92]	@, %sfp
	str	r6, [fp, #-88]	@, %sfp
	str	ip, [fp, #-84]	@, %sfp
	str	lr, [fp, #-80]	@, %sfp
	str	r0, [fp, #-96]	@, %sfp
	str	r0, [fp, #-76]	@, %sfp
.L2272:
	ldr	r9, [fp, #-76]	@, %sfp
	mov	r0, #712	@ tmp209,
	ldr	r7, [fp, #-92]	@, %sfp
	movw	r6, #:lower16:11123500	@,
	ldr	r2, [fp, #-72]	@, %sfp
	movt	r6, #:upper16:11123500	@,
	mul	sl, r0, r9	@, tmp209,
	ldr	ip, [r7, #0]	@, <variable>.fs_image.p_usrdat
	ldr	r1, [fp, #-96]	@, %sfp
	movw	r3, #:lower16:11124156	@,
	str	r6, [fp, #-112]	@, %sfp
	movt	r3, #:upper16:11124156	@,
	str	r3, [fp, #-60]	@, %sfp
	movw	r5, #:lower16:11123512	@,
	ldr	r3, [fp, #-112]	@, %sfp
	movt	r5, #:upper16:11123512	@,
	str	sl, [fp, #-104]	@, %sfp
	add	sl, r2, r1	@ D.55424,,
	str	r5, [fp, #-48]	@, %sfp
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-112]	@, %sfp
	movw	lr, #:lower16:11123485	@,
	ldr	r3, [fp, #-48]	@, %sfp
	movt	lr, #:upper16:11123485	@,
	str	lr, [fp, #-52]	@, %sfp
	movw	r4, #:lower16:11123487	@,
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-48]	@, %sfp
	ldr	r3, [fp, #-52]	@, %sfp
	movt	r4, #:upper16:11123487	@,
	str	r4, [fp, #-56]	@, %sfp
	movw	r8, #:lower16:11124120	@,
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-52]	@, %sfp
	ldr	r3, [fp, #-56]	@, %sfp
	movt	r8, #:upper16:11124120	@,
	str	r8, [fp, #-64]	@, %sfp
	movw	r7, #:lower16:11124080	@,
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-56]	@, %sfp
	ldr	r3, [fp, #-60]	@, %sfp
	movt	r7, #:upper16:11124080	@,
	str	r7, [fp, #-68]	@, %sfp
	movw	r4, #:lower16:11123748	@ tmp206,
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-60]	@, %sfp
	ldr	r3, [fp, #-64]	@, %sfp
	movt	r4, #:upper16:11123748	@ tmp206,
	add	r4, sl, r4	@ tmp206, D.55424, tmp206
	str	ip, [fp, #-100]	@, %sfp
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-64]	@, %sfp
	ldr	r3, [fp, #-68]	@, %sfp
	movw	r9, #:lower16:11123481	@ tmp168,
	movw	r0, #:lower16:11123482	@ tmp172,
	movt	r9, #:upper16:11123481	@ tmp168,
	add	r3, sl, r3	@, D.55424,
	str	r3, [fp, #-68]	@, %sfp
	ldr	r3, [fp, #-76]	@, %sfp
	movt	r0, #:upper16:11123482	@ tmp172,
	movw	r1, #:lower16:11123483	@ tmp176,
	movw	r2, #:lower16:11123508	@ tmp180,
	movt	r1, #:upper16:11123483	@ tmp176,
	movt	r2, #:upper16:11123508	@ tmp180,
	movw	r6, #:lower16:11123504	@ tmp186,
	movw	r5, #:lower16:11123528	@ tmp200,
	movt	r6, #:upper16:11123504	@ tmp186,
	movt	r5, #:upper16:11123528	@ tmp200,
	movw	lr, #:lower16:11123532	@ tmp203,
	movw	r8, #:lower16:11124084	@ tmp216,
	movt	lr, #:upper16:11123532	@ tmp203,
	movt	r8, #:upper16:11124084	@ tmp216,
	movw	r7, #:lower16:11124116	@ tmp222,
	movw	ip, #:lower16:11124152	@ tmp226,
	movt	r7, #:upper16:11124116	@ tmp222,
	movt	ip, #:upper16:11124152	@ tmp226,
	add	ip, sl, ip	@ tmp226, D.55424, tmp226
	add	r0, sl, r0	@ tmp172, D.55424, tmp172
	add	r1, sl, r1	@ tmp176, D.55424, tmp176
	add	r2, sl, r2	@ tmp180, D.55424, tmp180
	add	r6, sl, r6	@ tmp186, D.55424, tmp186
	add	r5, sl, r5	@ tmp200, D.55424, tmp200
	add	lr, sl, lr	@ tmp203, D.55424, tmp203
	add	r8, sl, r8	@ tmp216, D.55424, tmp216
	add	r7, sl, r7	@ tmp222, D.55424, tmp222
	add	r9, sl, r9	@ tmp168, D.55424, tmp168
	ldr	sl, [fp, #-100]	@, %sfp
	str	r3, [r4, #0]	@, <variable>.fs_image.image_id
	ldr	r4, [fp, #-104]	@, %sfp
	cmp	sl, #0	@,
	movw	sl, #:lower16:11123480	@ tmp210,
	movt	sl, #:upper16:11123480	@ tmp210,
	add	sl, r4, sl	@ tmp210,, tmp210
	mov	r4, #0	@ tmp170,
	strb	r4, [r9, #0]	@ tmp170, <variable>.non_existing
	ldr	r3, [fp, #-72]	@, %sfp
	add	sl, r3, sl	@ D.38754,, tmp210
	mov	r3, #16	@ tmp205,
	str	sl, [r8, #0]	@ D.38754, <variable>.frame.frame_store
	mov	r8, #1	@ tmp198,
	str	r3, [lr, #0]	@ tmp205, <variable>.apc_idc
	strb	r8, [r7, #0]	@ tmp198, <variable>.top_field.structure
	mvn	r7, #0	@ tmp188,
	strb	r4, [r0, #0]	@ tmp170, <variable>.is_used
	str	r7, [r6, #0]	@ tmp188, <variable>.frame_num_wrap
	mov	r6, #18	@ tmp202,
	strb	r4, [r1, #0]	@ tmp170, <variable>.is_reference
	str	r6, [r5, #0]	@ tmp202, <variable>.pmv_address_idc
	mov	r5, #2	@ tmp228,
	str	r4, [r2, #0]	@ tmp170, <variable>.long_term_frame_idx
	strb	r5, [ip, #0]	@ tmp228, <variable>.bottom_field.structure
	ldr	r6, [fp, #-112]	@, %sfp
	str	r4, [r6, #0]	@ tmp170, <variable>.frame_num
	ldr	ip, [fp, #-48]	@, %sfp
	str	r4, [ip, #0]	@ tmp170, <variable>.poc
	ldr	lr, [fp, #-52]	@, %sfp
	strb	r4, [lr, #0]	@ tmp170, <variable>.is_in_dpb
	ldr	r0, [fp, #-56]	@, %sfp
	strb	r8, [r0, #0]	@ tmp198, <variable>.is_displayed
	ldr	r2, [fp, #-60]	@, %sfp
	str	sl, [r2, #0]	@ D.38754, <variable>.bottom_field.frame_store
	ldr	r3, [fp, #-64]	@, %sfp
	str	sl, [r3, #0]	@ D.38754, <variable>.top_field.frame_store
	ldr	r1, [fp, #-68]	@, %sfp
	strb	r4, [r1, #0]	@ tmp170, <variable>.frame.structure
	beq	.L2268	@,
	ldr	lr, [fp, #-72]	@, %sfp
	ldr	r1, [fp, #-100]	@, %sfp
	ldr	r0, [lr, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r3, [fp, #-92]	@, %sfp
	str	r4, [r3, #0]	@ tmp170, <variable>.fs_image.p_usrdat
.L2268:
	ldr	r4, [fp, #-80]	@, %sfp
	ldr	r1, [r4, #0]	@ temp.7336, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.7336,
	beq	.L2269	@,
	ldr	r2, [fp, #-72]	@, %sfp
	mov	r6, #0	@ tmp233,
	ldr	r0, [r2, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r5, [fp, #-80]	@, %sfp
	str	r6, [r5, #0]	@ tmp233, <variable>.fs_image.p_usrdat
.L2269:
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r1, [r0, #0]	@ temp.7338, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.7338,
	beq	.L2270	@,
	ldr	r3, [fp, #-72]	@, %sfp
	ldr	r0, [r3, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	ip, [fp, #-84]	@, %sfp
	mov	r1, #0	@ tmp235,
	str	r1, [ip, #0]	@ tmp235, <variable>.fs_image.p_usrdat
.L2270:
	ldr	r6, [fp, #-88]	@, %sfp
	ldr	r1, [r6, #0]	@ D.38758, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.38758,
	beq	.L2271	@,
	ldr	lr, [fp, #-72]	@, %sfp
	mov	r4, #0	@ tmp237,
	ldr	r0, [lr, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r4, [r6, #0]	@ tmp237, <variable>.fs_image.p_usrdat
.L2271:
	ldr	r2, [fp, #-76]	@, %sfp
	ldr	r6, [fp, #-96]	@, %sfp
	add	lr, r2, #1	@,,
	ldr	r4, [fp, #-92]	@, %sfp
	add	r5, r6, #712	@,,
	ldr	ip, [fp, #-88]	@, %sfp
	ldr	r0, [fp, #-84]	@, %sfp
	cmp	lr, #40	@,
	ldr	r6, [fp, #-80]	@, %sfp
	add	r3, r4, #712	@,,
	str	r5, [fp, #-96]	@, %sfp
	add	r1, ip, #712	@,,
	add	r2, r0, #712	@,,
	add	r5, r6, #712	@,,
	str	lr, [fp, #-76]	@, %sfp
	str	r3, [fp, #-92]	@, %sfp
	str	r1, [fp, #-88]	@, %sfp
	str	r2, [fp, #-84]	@, %sfp
	str	r5, [fp, #-80]	@, %sfp
	bne	.L2272	@,
	ldr	ip, [fp, #-72]	@, %sfp
	movw	r4, #:lower16:11152188	@ tmp238,
	movt	r4, #:upper16:11152188	@ tmp238,
	ldr	r1, [ip, r4]	@ temp.7340, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.7340,
	beq	.L2273	@,
	ldr	r0, [ip, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r1, [fp, #-72]	@, %sfp
	mov	r0, #0	@ tmp241,
	str	r0, [r1, r4]	@ tmp241, <variable>.CurrPic.fs_image.p_usrdat
.L2273:
	ldr	r2, [fp, #-72]	@, %sfp
	movw	r4, #:lower16:11152192	@ tmp242,
	movt	r4, #:upper16:11152192	@ tmp242,
	ldr	r1, [r2, r4]	@ temp.7342, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.7342,
	beq	.L2274	@,
	ldr	r0, [r2, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r3, [fp, #-72]	@, %sfp
	mov	ip, #0	@ tmp245,
	str	ip, [r3, r4]	@ tmp245, <variable>.CurrPic.fs_image.p_usrdat
.L2274:
	ldr	r6, [fp, #-72]	@, %sfp
	movw	r4, #:lower16:11152196	@ tmp246,
	movt	r4, #:upper16:11152196	@ tmp246,
	ldr	r1, [r6, r4]	@ temp.7344, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.7344,
	beq	.L2275	@,
	ldr	r0, [r6, #120]	@, <variable>.ChanID
	mov	r5, #0	@ tmp249,
	bl	FreeUsdByDec	@
	str	r5, [r6, r4]	@ tmp249, <variable>.CurrPic.fs_image.p_usrdat
.L2275:
	ldr	ip, [fp, #-72]	@, %sfp
	movw	r4, #:lower16:11152200	@ tmp250,
	movt	r4, #:upper16:11152200	@ tmp250,
	ldr	r1, [ip, r4]	@ D.38761, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ D.38761,
	beq	.L2276	@,
	ldr	r0, [ip, #120]	@, <variable>.ChanID
	mov	r6, #0	@ tmp253,
	bl	FreeUsdByDec	@
	ldr	lr, [fp, #-72]	@, %sfp
	str	r6, [lr, r4]	@ tmp253, <variable>.CurrPic.fs_image.p_usrdat
.L2276:
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	r3, [r1, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r3, #0	@ <variable>.TotalUsrDatNum,
	beq	.L2277	@,
	mov	r5, #0	@ i.7333,
	mov	r4, r1	@ ivtmp.7297,
	mov	r6, r5	@ tmp324, i.7333
	mov	r7, r1	@ pMvcCtx, ivtmp.7297
.L2279:
	ldr	r1, [r4, #528]	@ D.38764, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i.7333, i.7333,
	cmp	r1, #0	@ D.38764,
	beq	.L2278	@,
	ldr	r0, [r7, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r3, [r7, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	str	r6, [r4, #528]	@ tmp324, <variable>.pUsrDatArray
.L2278:
	cmp	r3, r5	@ <variable>.TotalUsrDatNum, i.7333
	add	r4, r4, #4	@ ivtmp.7297, ivtmp.7297,
	bhi	.L2279	@,
.L2277:
	ldr	r5, [fp, #-72]	@, %sfp
	movw	r4, #:lower16:11117160	@,
	movt	r4, #:upper16:11117160	@,
	movw	lr, #:lower16:11120868	@ tmp273,
	add	r0, r5, r4	@,,
	mov	r4, #0	@ tmp258,
	str	r4, [r5, #60]	@ tmp258, <variable>.TotalUsrDatNum
	movt	lr, #:upper16:11120868	@ tmp273,
	strb	r4, [r5, #4]	@ tmp258, <variable>.AllowStartDec
	movw	r2, #:lower16:11118864	@ tmp276,
	ldr	r6, [fp, #-72]	@, %sfp
	movt	r2, #:upper16:11118864	@ tmp276,
	movw	ip, #:lower16:11120869	@ tmp279,
	movw	r3, #:lower16:11118865	@ tmp282,
	movt	ip, #:upper16:11120869	@ tmp279,
	movt	r3, #:upper16:11118865	@ tmp282,
	str	r4, [r6, #64]	@ tmp258, <variable>.SliceParaNum
	movw	r1, #1656	@,
	str	r4, [r6, #104]	@ tmp258, <variable>.MaxBytesReceived
	movw	r5, #:lower16:11117160	@ tmp286,
	strb	r4, [r6, #9]	@ tmp258, <variable>.IModeOutFlag
	movt	r5, #:upper16:11117160	@ tmp286,
	strb	r4, [r6, #6]	@ tmp258, <variable>.IDRFound
	str	r4, [r6, #220]	@ tmp258, <variable>.FirstFrameDisplayed
	strb	r4, [r6, #7]	@ tmp258, <variable>.PPicFound
	str	r4, [r6, #232]	@ tmp258, <variable>.pCurrNal
	strb	r4, [r6, #3]	@ tmp258, <variable>.CurrMarkIdx
	strb	r4, [r6, ip]	@ tmp258, <variable>.no_output_of_prior_pics_flag
	strb	r4, [r6, lr]	@ tmp258, <variable>.is_valid
	strb	r4, [r6, r3]	@ tmp258, <variable>.no_output_of_prior_pics_flag
	strb	r4, [r6, r2]	@ tmp258, <variable>.is_valid
	bl	__memzero	@
	movw	r2, #:lower16:11117165	@ tmp290,
	movw	ip, #:lower16:11151960	@ tmp293,
	movt	r2, #:upper16:11117165	@ tmp290,
	movt	ip, #:upper16:11151960	@ tmp293,
	movw	r0, #:lower16:11153224	@ tmp296,
	movw	r3, #:lower16:11153232	@ tmp299,
	movt	r0, #:upper16:11153224	@ tmp296,
	movt	r3, #:upper16:11153232	@ tmp299,
	movw	r1, #:lower16:11153228	@ tmp301,
	movt	r1, #:upper16:11153228	@ tmp301,
	strb	r4, [r6, ip]	@ tmp258, <variable>.CurrPic.state
	strb	r4, [r6, r0]	@ tmp258, <variable>.PrevPic.structure
	mov	ip, #2	@ tmp288,
	str	r4, [r6, r1]	@ tmp258, <variable>.PrevPic.nal_ref_idc
	mov	r0, r4	@, tmp258
	mov	r1, #1	@ tmp291,
	strb	ip, [r6, r5]	@ tmp288, <variable>.CurrSlice.slice_type
	strb	r1, [r6, r2]	@ tmp291, <variable>.CurrSlice.new_pic_flag
	mov	r2, #256	@ tmp300,
	str	r2, [r6, r3]	@ tmp300, <variable>.PrevPic.frame_num
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2266:
	ldr	r2, [fp, #-72]	@, %sfp
	add	r0, r2, #584	@,,
	bl	ResetVoQueue	@
	ldr	r3, [fp, #-72]	@, %sfp
	ldr	r0, [r3, #120]	@, <variable>.ChanID
	bl	FSP_EmptyInstance	@
	b	.L2267	@
.L2283:
	movw	r1, #:lower16:.LC60	@,
	ldr	r2, .L2284	@,
	movt	r1, #:upper16:.LC60	@,
	movw	r3, #377	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L2265	@
.L2285:
	.align	2
.L2284:
	.word	.LANCHOR0+236
	.fnend
	.size	MVC_ClearAll, .-MVC_ClearAll
	.align	2
	.global	MVC_DEC_GetImageBuffer
	.type	MVC_DEC_GetImageBuffer, %function
MVC_DEC_GetImageBuffer:
	.fnstart
.LFB1684:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #48]	@ D.48358, <variable>.TotalFsNum
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #0	@ D.48358,
	beq	.L2287	@,
	movw	r6, #:lower16:11123482	@ ivtmp.7392,
	movt	r6, #:upper16:11123482	@ ivtmp.7392,
	add	r6, r0, r6	@ ivtmp.7392, pMvcCtx, ivtmp.7392
	movw	sl, #:lower16:11122920	@ ivtmp.7384,
	movt	sl, #:upper16:11122920	@ ivtmp.7384,
	movw	r9, #:lower16:11123112	@ tmp202,
	add	sl, r0, sl	@ ivtmp.7384, pMvcCtx, ivtmp.7384
	movt	r9, #:upper16:11123112	@ tmp202,
	mov	r8, r6	@ ivtmp.7389, ivtmp.7392
	mov	r7, #0	@ i,
.L2294:
	ldrb	r2, [r8, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, #0	@ <variable>.is_used,
	bne	.L2288	@,
	mov	r1, #712	@,
	movw	r0, #:lower16:11123480	@ tmp161,
	mul	lr, r1, r7	@ tmp159,, i
	movt	r0, #:upper16:11123480	@ tmp161,
	add	ip, lr, r0	@ tmp161, tmp159, tmp161
	adds	ip, r5, ip	@ D.48368, pMvcCtx, tmp161
	beq	.L2289	@,
	ldr	r4, [r5, r9]	@ D.48687, <variable>.DPB.size
	cmp	r4, #0	@ D.48687,
	beq	.L2289	@,
	ldr	r2, [sl, #0]	@ D.48688, <variable>.DPB.fs
	sub	lr, r4, #1	@ tmp210, D.48687,
	and	r0, lr, #1	@ tmp212, tmp210,
	cmp	r2, #0	@ D.48688,
	beq	.L2313	@,
	cmp	ip, r2	@ D.48368, D.48688
	beq	.L2288	@,
.L2313:
	mov	r1, #1	@ i,
	cmp	r1, r4	@ i, D.48687
	add	r2, sl, #4	@ ivtmp.7384, ivtmp.7384,
	bcs	.L2289	@,
	cmp	r0, #0	@ tmp212,
	beq	.L2291	@,
	ldr	r0, [sl, #4]	@ D.48688, <variable>.DPB.fs
	cmp	r0, #0	@ D.48688,
	beq	.L2315	@,
	cmp	ip, r0	@ D.48368, D.48688
	beq	.L2288	@,
.L2315:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.7384, ivtmp.7384,
	cmp	r1, r4	@ i, D.48687
	bcs	.L2289	@,
.L2291:
	ldr	r0, [r2, #0]	@ D.48688, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp213, i,
	add	lr, r2, #4	@ tmp214, ivtmp.7384,
	cmp	r0, #0	@ D.48688,
	beq	.L2290	@,
	cmp	ip, r0	@ D.48368, D.48688
	beq	.L2288	@,
.L2290:
	ldr	r2, [r2, #4]	@ D.48688, <variable>.DPB.fs
	cmp	r2, #0	@ D.48688,
	beq	.L2318	@,
	cmp	ip, r2	@ D.48368, D.48688
	beq	.L2288	@,
.L2318:
	add	r1, r1, #1	@ i, tmp213,
	add	r2, lr, #4	@ ivtmp.7384, tmp214,
	cmp	r1, r4	@ i, D.48687
	bcc	.L2291	@,
.L2289:
	ldr	r0, [r5, #120]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmp	r0, #1	@,
	beq	.L2287	@,
	ldr	r0, [r5, #120]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmn	r0, #1	@,
	beq	.L2337	@,
.L2292:
	mov	r0, #0	@ D.48361,
.L2293:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2288:
	add	r7, r7, #1	@ i, i,
	add	r8, r8, #712	@ ivtmp.7389, ivtmp.7389,
	cmp	r3, r7	@ D.48358, i
	bhi	.L2294	@,
	sub	r2, fp, #52	@,,
	add	r0, r5, #584	@, pMvcCtx,
	sub	r1, fp, #48	@,,
	bl	GetQueueImgNum	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC61	@,
	movt	r1, #:upper16:.LC61	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #48]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L2295	@,
	movw	r7, #:lower16:11122920	@ ivtmp.7373,
	movt	r7, #:upper16:11122920	@ ivtmp.7373,
	add	r7, r5, r7	@ ivtmp.7373, pMvcCtx, ivtmp.7373
	movw	r4, #:lower16:11123112	@,
	mov	r8, #712	@ tmp194,
	movt	r4, #:upper16:11123112	@,
	str	r4, [fp, #-56]	@, %sfp
	mov	r4, #0	@ i.7400,
.L2300:
	mul	r2, r8, r4	@ tmp173, tmp194, i.7400
	movw	r0, #:lower16:11123480	@ tmp175,
	movt	r0, #:upper16:11123480	@ tmp175,
	ldrb	r3, [r6, #0]	@ zero_extendqisi2	@ temp.7398, <variable>.is_used
	ldrb	lr, [r6, #3]	@ zero_extendqisi2	@ D.48384, <variable>.is_in_dpb
	add	ip, r2, r0	@ tmp175, tmp173, tmp175
	adds	ip, r5, ip	@ temp.7399, pMvcCtx, tmp175
	beq	.L2296	@,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	r9, [r5, r1]	@ D.48694, <variable>.DPB.size
	cmp	r9, #0	@ D.48694,
	beq	.L2296	@,
	ldr	r2, [r7, #0]	@ D.48695, <variable>.DPB.fs
	sub	r0, r9, #1	@ tmp205, D.48694,
	and	r0, r0, #1	@ tmp207, tmp205,
	cmp	r2, #0	@ D.48695,
	beq	.L2306	@,
	cmp	ip, r2	@ temp.7399, D.48695
	beq	.L2326	@,
.L2306:
	mov	r1, #1	@ i,
	cmp	r1, r9	@ i, D.48694
	add	r2, r7, #4	@ ivtmp.7373, ivtmp.7373,
	bcs	.L2296	@,
	cmp	r0, #0	@ tmp207,
	beq	.L2299	@,
	ldr	r0, [r7, #4]	@ D.48695, <variable>.DPB.fs
	cmp	r0, #0	@ D.48695,
	beq	.L2308	@,
	cmp	ip, r0	@ temp.7399, D.48695
	beq	.L2326	@,
.L2308:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.7373, ivtmp.7373,
	cmp	r1, r9	@ i, D.48694
	bcs	.L2296	@,
.L2299:
	ldr	r0, [r2, #0]	@ D.48695, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp208, i,
	add	sl, r2, #4	@ tmp209, ivtmp.7373,
	cmp	r0, #0	@ D.48695,
	beq	.L2297	@,
	cmp	ip, r0	@ temp.7399, D.48695
	beq	.L2326	@,
.L2297:
	ldr	r2, [r2, #4]	@ D.48695, <variable>.DPB.fs
	cmp	r2, #0	@ D.48695,
	beq	.L2311	@,
	cmp	ip, r2	@ temp.7399, D.48695
	beq	.L2326	@,
.L2311:
	add	r1, r1, #1	@ i, tmp208,
	add	r2, sl, #4	@ ivtmp.7373, tmp209,
	cmp	r1, r9	@ i, D.48694
	bcc	.L2299	@,
.L2296:
	mov	ip, #1	@ D.48693,
.L2298:
	mov	r2, r4	@, i.7400
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC63	@,
	movt	r1, #:upper16:.LC63	@,
	str	lr, [sp, #0]	@ D.48384,
	add	r4, r4, #1	@ i.7400, i.7400,
	str	ip, [sp, #4]	@ D.48693,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #48]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r6, r6, #712	@ ivtmp.7392, ivtmp.7392,
	cmp	r3, r4	@ <variable>.TotalFsNum, i.7400
	bhi	.L2300	@,
.L2295:
	ldr	r2, [fp, #-48]	@, ReadImgNum
	mov	r0, #0	@,
	ldr	r3, [fp, #-52]	@, NewImgNum
	movw	r1, #:lower16:.LC64	@,
	movt	r1, #:upper16:.LC64	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:11123116	@ tmp188,
	movt	r2, #:upper16:11123116	@ tmp188,
	ldr	r0, [r5, #48]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	ldr	r1, [fp, #-52]	@ NewImgNum, NewImgNum
	ldr	r3, [r5, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	sub	ip, r0, #2	@ tmp186, <variable>.TotalFsNum,
	ldr	r2, [fp, #-48]	@ ReadImgNum, ReadImgNum
	rsb	r0, r3, ip	@ tmp189, <variable>.DPB.used_size, tmp186
	add	ip, r1, r2	@ tmp183, NewImgNum, ReadImgNum
	cmp	ip, r0	@ tmp183, tmp189
	bge	.L2292	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC65	@,
	movt	r1, #:upper16:.LC65	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mov	r0, #0	@ D.48361,
	b	.L2293	@
.L2287:
	mov	r0, #1	@ D.48361,
	b	.L2293	@
.L2326:
	mov	ip, #0	@ D.48693,
	b	.L2298	@
.L2337:
	add	r1, r5, #584	@, pMvcCtx,
	ldr	r0, [r5, #120]	@, <variable>.ChanID
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, #0	@ D.48361,
	b	.L2293	@
	.fnend
	.size	MVC_DEC_GetImageBuffer, .-MVC_DEC_GetImageBuffer
	.align	2
	.global	MVC_DEC_Init
	.type	MVC_DEC_Init, %function
MVC_DEC_Init:
	.fnstart
.LFB1679:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r6, [r0, #928]	@ D.48041, <variable>.ImageQue.ResetMagicWord
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ pstExtraData, pstExtraData
	movw	r1, #:lower16:11155200	@,
	movt	r1, #:upper16:11155200	@,
	bl	__memzero	@
	add	r0, r4, #584	@, pMvcCtx,
	str	r6, [r4, #928]	@ D.48041, <variable>.ImageQue.ResetMagicWord
	bl	ResetVoQueue	@
	str	r5, [r4, #224]	@ pstExtraData, <variable>.pstExtraData
	mov	r0, #0	@ tmp152,
	strb	r0, [r4, #0]	@ tmp152, <variable>.StartMode
	str	r0, [r4, #228]	@ tmp152, <variable>.pMvcDecParam
	ldr	r3, [r5, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r3, #25	@ <variable>.eCapLevel,
	ldreq	r3, [r5, #760]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.stChanOption.s32MaxSpsNum
	movne	r3, #32	@ tmp159,
	strne	r3, [r4, #36]	@ tmp159, <variable>.MaxSpsNum
	movne	r3, #256	@ tmp160,
	strne	r3, [r4, #40]	@ tmp160, <variable>.MaxPpsNum
	movne	r3, #136	@ tmp161,
	streq	r3, [r4, #36]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.MaxSpsNum
	ldreq	r3, [r5, #764]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.stChanOption.s32MaxPpsNum
	streq	r3, [r4, #40]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.MaxPpsNum
	ldreq	r3, [r5, #752]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.stChanOption.s32MaxSliceNum
	str	r3, [r4, #32]	@ tmp161, <variable>.MaxSliceNum
	ldr	r0, [r5, #676]	@, <variable>.s32ContextMemAddr
	bl	MEM_Phy2Vir	@
	ldr	r3, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	ldr	ip, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r1, #3992	@ tmp167,
	ldr	r2, [r4, #40]	@ prephitmp.7430, <variable>.MaxPpsNum
	mul	r1, r1, r3	@ tmp165, tmp167, <variable>.MaxSpsNum
	ldr	ip, [ip, #672]	@ <variable>.s32BasicCtxSize, <variable>.s32BasicCtxSize
	add	r0, r0, ip	@ D.48062,, <variable>.s32BasicCtxSize
	mov	ip, #2240	@ tmp170,
	add	lr, r0, r1	@ prephitmp.7432, D.48062, tmp165
	cmp	r0, #0	@ D.48062,
	str	r0, [r4, #248]	@ D.48062, <variable>.SPS
	mla	ip, ip, r2, lr	@ D.48074, tmp170, prephitmp.7430, prephitmp.7432
	str	lr, [r4, #252]	@ prephitmp.7432, <variable>.PPS
	str	ip, [r4, #544]	@ D.48074, <variable>.DecSlicePara
	beq	.L2341	@,
	cmp	lr, #0	@ prephitmp.7432,
	beq	.L2341	@,
	cmp	ip, #0	@ D.48074,
	beq	.L2341	@,
	ldr	r6, [r5, #696]	@ <variable>.s32KeepSPSPPS, <variable>.s32KeepSPSPPS
	cmp	r6, #0	@ <variable>.s32KeepSPSPPS,
	beq	.L2355	@,
.L2345:
	ldr	ip, [r4, #32]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	movw	lr, #4060	@ tmp183,
	movw	r8, #:lower16:11113808	@ tmp179,
	movw	r7, #:lower16:11110536	@ tmp180,
	movt	r8, #:upper16:11113808	@ tmp179,
	movt	r7, #:upper16:11110536	@ tmp180,
	mul	r1, lr, ip	@ __n, tmp183, <variable>.MaxSliceNum
	str	r2, [r4, r8]	@ prephitmp.7430, <variable>.CurrPPS.pic_parameter_set_id
	str	r3, [r4, r7]	@ <variable>.MaxSpsNum, <variable>.CurrSPS.seq_parameter_set_id
	ldr	r0, [r4, #544]	@ __p, <variable>.DecSlicePara
	cmp	r1, #0	@ __n,
	bne	.L2356	@,
.L2347:
	ldr	r5, [r4, #108]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	add	r7, r4, #12992	@ tmp211, pMvcCtx,
	add	r7, r7, #12	@ tmp211, tmp211,
	movw	r6, #:lower16:10770764	@ tmp214,
	movt	r6, #:upper16:10770764	@ tmp214,
	ubfx	r0, r5, #16, #2	@ tmp186, <variable>.advanced_cfg,,
	add	r5, r4, r6	@ tmp214, pMvcCtx, tmp214
	strb	r0, [r4, #8]	@ tmp186, <variable>.OldDecMode
	mov	r6, #0	@ tmp188,
	mov	r0, r7	@, tmp211
	mov	r3, #40	@ tmp196,
	mov	r1, #18	@ tmp197,
	mov	r2, #25	@ tmp210,
	str	r1, [r4, #52]	@ tmp197, <variable>.TotalPmvNum
	str	r6, [r4, #68]	@ tmp188, <variable>.TotalNal
	movw	r1, #:lower16:10757760	@,
	str	r6, [r4, #72]	@ tmp188, <variable>.TotalSPS
	movt	r1, #:upper16:10757760	@,
	str	r6, [r4, #76]	@ tmp188, <variable>.TotalPPS
	str	r3, [r4, #48]	@ tmp196, <variable>.TotalFsNum
	str	r2, [r4, #56]	@ tmp210, <variable>.frame_rate
	str	r6, [r4, #80]	@ tmp188, <variable>.TotalSlice
	str	r6, [r4, #84]	@ tmp188, <variable>.SeqCnt
	str	r6, [r4, #88]	@ tmp188, <variable>.TotalPicNum
	str	r6, [r4, #92]	@ tmp188, <variable>.TotalFrameNum
	str	r6, [r4, #96]	@ tmp188, <variable>.TotalFieldNum
	str	r6, [r4, #60]	@ tmp188, <variable>.TotalUsrDatNum
	str	r6, [r4, #528]	@ tmp188, <variable>.pUsrDatArray
	str	r6, [r4, #532]	@ tmp188, <variable>.pUsrDatArray
	str	r6, [r4, #536]	@ tmp188, <variable>.pUsrDatArray
	str	r6, [r4, #540]	@ tmp188, <variable>.pUsrDatArray
	strb	r6, [r4, #4]	@ tmp188, <variable>.AllowStartDec
	strb	r6, [r4, #6]	@ tmp188, <variable>.IDRFound
	str	r6, [r4, #220]	@ tmp188, <variable>.FirstFrameDisplayed
	strb	r6, [r4, #7]	@ tmp188, <variable>.PPicFound
	bl	__memzero	@
	movw	r1, #:lower16:336180	@,
	mov	r0, r5	@, tmp214
	movt	r1, #:upper16:336180	@,
	bl	__memzero	@
.L2348:
	add	r8, r7, #335872	@ ivtmp.7454, ivtmp.7454,
	add	lr, r7, #274432	@ tmp221, ivtmp.7454,
	strb	r6, [r7, #0]	@ tmp242, <variable>.is_valid
	add	r7, r8, #308	@ ivtmp.7454, ivtmp.7454,
	add	ip, lr, #241	@ tmp221, tmp221,
	cmp	r7, r5	@ ivtmp.7454, tmp214
	mov	r8, #0	@ tmp219,
	strb	r8, [ip, #0]	@ tmp219, <variable>.sps.is_valid
	bne	.L2348	@,
	mov	r0, #12992	@ tmp226,
	movw	r3, #:lower16:11109792	@ tmp235,
	movt	r3, #:upper16:11109792	@ tmp235,
	mov	r2, #32	@ tmp230,
	strb	r8, [r4, r0]	@ tmp219, <variable>.CurrNalMvcInfo.is_valid
	add	r1, r4, r3	@ tmp235, pMvcCtx, tmp235
	str	r8, [r4, #20]	@ tmp219, <variable>.TotalSUBSPS
	mov	r0, r4	@, pMvcCtx
	str	r1, [r4, #236]	@ tmp235, <variable>.pCurrSPS
	str	r2, [r4, #28]	@ tmp230, <variable>.CurrSUBSPSID
	str	r2, [r4, #24]	@ tmp230, <variable>.CurrSPSID
	strb	r8, [r4, #2]	@ tmp219, <variable>.Init_Subsps_Flag
	bl	VCTRL_GetChanIDByCtx	@
	cmn	r0, #1	@ D.48120,
	str	r0, [r4, #120]	@ D.48120, <variable>.ChanID
	beq	.L2357	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r8	@, tmp219
	bl	MVC_ClearAll	@
	mov	r0, #1	@ D.48081,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2355:
	cmp	r1, #0	@ tmp165,
	bne	.L2358	@,
.L2346:
	mov	r5, #2240	@ tmp178,
	mul	r1, r5, r2	@ __n, tmp178, prephitmp.7430
	cmp	r1, #0	@ __n,
	bne	.L2353	@,
	ldr	r3, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	b	.L2345	@
.L2356:
	bl	__memzero	@
	b	.L2347	@
.L2353:
	mov	r0, lr	@, prephitmp.7432
	bl	__memzero	@
	ldr	r2, [r4, #40]	@ prephitmp.7430, <variable>.MaxPpsNum
	ldr	r3, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	b	.L2345	@
.L2358:
	bl	__memzero	@
	ldr	lr, [r4, #252]	@ prephitmp.7432, <variable>.PPS
	ldr	r2, [r4, #40]	@ prephitmp.7430, <variable>.MaxPpsNum
	b	.L2346	@
.L2357:
	mov	r0, r8	@, tmp219
	movw	r1, #:lower16:.LC67	@,
	movt	r1, #:upper16:.LC67	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.48081,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2341:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC66	@,
	ldr	r2, .L2359	@,
	movt	r1, #:upper16:.LC66	@,
	movw	r3, #12984	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.48081,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2360:
	.align	2
.L2359:
	.word	.LANCHOR0+252
	.fnend
	.size	MVC_DEC_Init, .-MVC_DEC_Init
	.align	2
	.global	MVC_AllocFrameStore
	.type	MVC_AllocFrameStore, %function
MVC_AllocFrameStore:
	.fnstart
.LFB1622:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117161	@ tmp166,
	movt	r3, #:upper16:11117161	@ tmp166,
	str	r1, [fp, #-48]	@ IsDecGap, %sfp
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r5, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L2363	@,
	movw	r0, #:lower16:11117162	@ tmp168,
	movt	r0, #:upper16:11117162	@ tmp168,
	ldrb	r5, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r5, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r5, #2	@ structure,
	moveq	r5, #1	@ structure,
.L2363:
	ldr	r1, [fp, #-48]	@, %sfp
	ldrb	r2, [r4, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r1, #1	@,
	moveq	r5, #0	@ structure,
	cmp	r2, #2	@ <variable>.OldDecMode,
	beq	.L2382	@,
	sub	ip, r5, #1	@ tmp177, structure,
	movw	r6, #:lower16:11151961	@ tmp174,
	cmp	ip, #1	@ tmp177,
	movt	r6, #:upper16:11151961	@ tmp174,
	mov	r1, #0	@ tmp175,
	strb	r1, [r4, r6]	@ tmp175, <variable>.CurrPic.field_pair_flag
	bls	.L2459	@,
.L2367:
	ldr	sl, [r4, #48]	@ D.42947, <variable>.TotalFsNum
	mov	r6, #0	@ tmp266,
	movw	r0, #:lower16:11151960	@ tmp265,
	movt	r0, #:upper16:11151960	@ tmp265,
	cmp	sl, r6	@ D.42947,
	strb	r6, [r4, r0]	@ tmp266, <variable>.CurrPic.state
	beq	.L2389	@,
	movw	r7, #:lower16:11123482	@ ivtmp.7501,
	movw	r9, #:lower16:11122920	@ ivtmp.7496,
	movt	r7, #:upper16:11123482	@ ivtmp.7501,
	movt	r9, #:upper16:11122920	@ ivtmp.7496,
	add	r8, r4, r9	@ ivtmp.7496, pMvcCtx, ivtmp.7496
	add	r7, r4, r7	@ ivtmp.7501, pMvcCtx, ivtmp.7501
	movw	r9, #:lower16:11123112	@ tmp426,
	movt	r9, #:upper16:11123112	@ tmp426,
.L2395:
	ldrb	r3, [r7, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r3, #0	@ <variable>.is_used,
	bne	.L2390	@,
	mov	lr, #712	@,
	movw	r1, #:lower16:11123480	@ tmp272,
	mul	r2, lr, r6	@ tmp270,, i
	movt	r1, #:upper16:11123480	@ tmp272,
	add	ip, r2, r1	@ tmp272, tmp270, tmp272
	adds	r3, r4, ip	@ D.42943, pMvcCtx, tmp272
	beq	.L2391	@,
	ldr	lr, [r4, r9]	@ D.48701, <variable>.DPB.size
	cmp	lr, #0	@ D.48701,
	beq	.L2391	@,
	ldr	r2, [r8, #0]	@ D.48702, <variable>.DPB.fs
	sub	r0, lr, #1	@ tmp434, D.48701,
	and	r0, r0, #1	@ tmp436, tmp434,
	cmp	r2, #0	@ D.48702,
	beq	.L2408	@,
	cmp	r3, r2	@ D.42943, D.48702
	beq	.L2390	@,
.L2408:
	mov	r1, #1	@ i,
	cmp	r1, lr	@ i, D.48701
	add	r2, r8, #4	@ ivtmp.7496, ivtmp.7496,
	bcs	.L2391	@,
	cmp	r0, #0	@ tmp436,
	beq	.L2393	@,
	ldr	r0, [r8, #4]	@ D.48702, <variable>.DPB.fs
	cmp	r0, #0	@ D.48702,
	beq	.L2410	@,
	cmp	r3, r0	@ D.42943, D.48702
	beq	.L2390	@,
.L2410:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.7496, ivtmp.7496,
	cmp	r1, lr	@ i, D.48701
	bcs	.L2391	@,
.L2393:
	ldr	r0, [r2, #0]	@ D.48702, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp437, i,
	add	ip, r2, #4	@ tmp438, ivtmp.7496,
	cmp	r0, #0	@ D.48702,
	beq	.L2392	@,
	cmp	r3, r0	@ D.42943, D.48702
	beq	.L2390	@,
.L2392:
	ldr	r2, [r2, #4]	@ D.48702, <variable>.DPB.fs
	cmp	r2, #0	@ D.48702,
	beq	.L2413	@,
	cmp	r3, r2	@ D.42943, D.48702
	beq	.L2390	@,
.L2413:
	add	r1, r1, #1	@ i, tmp437,
	add	r2, ip, #4	@ ivtmp.7496, tmp438,
	cmp	r1, lr	@ i, D.48701
	bcc	.L2393	@,
.L2391:
	mov	r7, #712	@ tmp286,
	movw	sl, #:lower16:11151960	@ tmp276,
	mla	r6, r7, r6, r4	@ tmp287, tmp286, i, pMvcCtx
	movt	sl, #:upper16:11151960	@ tmp276,
	movw	r7, #:lower16:11152504	@ tmp279,
	movw	lr, #:lower16:11152556	@ tmp281,
	movt	r7, #:upper16:11152504	@ tmp279,
	movt	lr, #:upper16:11152556	@ tmp281,
	movw	r8, #:lower16:11151976	@,
	movw	ip, #:lower16:11123552	@,
	movt	r8, #:upper16:11151976	@,
	movt	ip, #:upper16:11123552	@,
	add	r1, r6, ip	@, tmp287,
	str	r3, [r4, r7]	@ D.42943, <variable>.CurrPic.frame_store
	mov	r6, #0	@ tmp280,
	add	r0, r4, r8	@, pMvcCtx,
	mov	r9, #101	@ tmp282,
	mov	r8, #1	@ tmp277,
	mov	r2, #528	@,
	strb	r8, [r4, sl]	@ tmp277, <variable>.CurrPic.state
	str	r6, [r3, #44]	@ tmp280, <variable>.err_level
	str	r9, [r4, lr]	@ tmp282, <variable>.CurrPic.err_level
	bl	memcpy	@
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11152176	@ tmp293,
	movt	r0, #:upper16:11152176	@ tmp293,
	str	r6, [r4, r0]	@ tmp280, <variable>.CurrPic.fs_image.error_level
	strb	r6, [r2, #4]	@ tmp280, <variable>.mode_skip_flag
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r6, [r1, #7]	@ tmp280, <variable>.is_displayed
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r6, [ip, #3]	@ tmp280, <variable>.is_reference
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r8, [r3, #5]	@ tmp277, <variable>.is_in_dpb
	ldr	r9, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r6, [r9, #16]	@ tmp280, <variable>.eFoState
	ldrb	r9, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r9, r8	@ <variable>.CurrPic.state,
	bne	.L2389	@,
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	rsbs	r1, r3, #1	@,
	movcc	r1, #0	@
	bl	FSP_NewLogicFs	@
	mov	r6, r0	@ LogicFsID,
	mov	r1, r0	@, LogicFsID
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ tmp329, pstLFs.7532,
	movne	r3, #1	@ tmp329
	cmp	r6, #0	@ LogicFsID,
	mov	r8, r0	@ pstLFs.7532,
	movlt	r3, #0	@, tmp329,
	cmp	r3, #0	@ tmp329,
	beq	.L2396	@,
	ldr	r2, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [r2, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r1, #25	@ <variable>.eCapLevel,
	beq	.L2460	@,
.L2397:
	movw	r7, #:lower16:11152504	@ tmp341,
	movt	r7, #:upper16:11152504	@ tmp341,
	add	r1, r8, #8	@, pstLFs.7532,
	mov	r2, #528	@,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r0, lr, #72	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11151976	@,
	movt	r0, #:upper16:11151976	@,
	mov	r2, #528	@,
	add	r0, r4, r0	@, pMvcCtx,
	add	r1, r1, #72	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r3, #:lower16:11152580	@ tmp361,
	movt	r3, #:upper16:11152580	@ tmp361,
	strb	r6, [r2, #6]	@ LogicFsID, <variable>.logic_fs_id
	ldrsb	ip, [r8, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	str	ip, [r4, r3]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
.L2398:
	ldr	r3, [fp, #-48]	@, %sfp
	movw	r2, #:lower16:11151963	@ tmp371,
	movt	r2, #:upper16:11151963	@ tmp371,
	cmp	r3, #1	@,
	uxtb	r3, r5	@ D.42997, structure
	strb	r3, [r4, r2]	@ D.42997, <variable>.CurrPic.structure
	moveq	r0, #0	@ D.42894,
	beq	.L2377	@,
	movw	r0, #:lower16:11117161	@ tmp374,
	movt	r0, #:upper16:11117161	@ tmp374,
	movw	r1, #:lower16:11152504	@ tmp373,
	movt	r1, #:upper16:11152504	@ tmp373,
	ldrb	r8, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r9, #:lower16:11151961	@ tmp377,
	ldr	r7, [r4, r1]	@ temp.7541, <variable>.CurrPic.frame_store
	movt	r9, #:upper16:11151961	@ tmp377,
	cmp	r8, #0	@ <variable>.CurrSlice.field_pic_flag,
	movne	r8, #3	@, iftmp.681,
	strb	r8, [r7, #600]	@ iftmp.681, <variable>.frame.structure
	ldrb	sl, [r4, r9]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	sl, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2461	@,
	movw	r2, #:lower16:11118800	@ tmp408,
	movt	r2, #:upper16:11118800	@ tmp408,
	movw	r0, #:lower16:11117188	@ tmp400,
	movw	r1, #:lower16:11117168	@ tmp403,
	ldr	r7, [r4, r2]	@, <variable>.CurrSlice.view_id
	movt	r0, #:upper16:11117188	@ tmp400,
	movt	r1, #:upper16:11117168	@ tmp403,
	movw	r8, #:lower16:11153224	@ tmp397,
	movt	r8, #:upper16:11153224	@ tmp397,
	ldr	sl, [r4, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldrb	r9, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	ip, #:lower16:11153228	@ tmp402,
	str	r7, [fp, #-52]	@, %sfp
	movt	ip, #:upper16:11153228	@ tmp402,
	strb	r3, [r4, r8]	@ D.42997, <variable>.PrevPic.structure
	movw	r7, #:lower16:11153232	@ tmp399,
	ldr	r8, [r4, #128]	@, <variable>.PicCounter
	movt	r7, #:upper16:11153232	@ tmp399,
	movw	r0, #:lower16:11153236	@ tmp405,
	movt	r0, #:upper16:11153236	@ tmp405,
	str	sl, [r4, r7]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	movw	r1, #:lower16:11153248	@ tmp407,
	str	r8, [r4, r0]	@, <variable>.PrevPic.pic_counter
	movt	r1, #:upper16:11153248	@ tmp407,
	str	r9, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r5, #0	@ structure,
	ldr	ip, [fp, #-52]	@, %sfp
	movw	r2, #:lower16:11153240	@ tmp410,
	movt	r2, #:upper16:11153240	@ tmp410,
	movne	r0, #0	@ D.42894,
	moveq	r0, r5	@ D.42894, structure
	str	ip, [r4, r1]	@, <variable>.PrevPic.view_id
	movw	r1, #:lower16:11153225	@ tmp411,
	movt	r1, #:upper16:11153225	@ tmp411,
	str	r6, [r4, r2]	@ LogicFsID, <variable>.PrevPic.image_id
	movne	r2, #1	@ tmp412,
	streqb	r5, [r4, r1]	@ structure, <variable>.PrevPic.FrameStoreFlag
	strneb	r2, [r4, r1]	@ tmp412, <variable>.PrevPic.FrameStoreFlag
.L2377:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2390:
	add	r6, r6, #1	@ i, i,
	add	r7, r7, #712	@ ivtmp.7501, ivtmp.7501,
	cmp	sl, r6	@ D.42947, i
	bhi	.L2395	@,
.L2389:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC69	@,
	movt	r1, #:upper16:.LC69	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.42894,
	b	.L2377	@
.L2467:
	cmp	r3, #1	@ D.42859,
	beq	.L2381	@,
.L2382:
	movw	r3, #:lower16:11151961	@ tmp260,
	movt	r3, #:upper16:11151961	@ tmp260,
	mov	r2, #0	@ tmp261,
.L2456:
	strb	r2, [r4, r3]	@ tmp261, <variable>.CurrPic.field_pair_flag
	b	.L2367	@
.L2459:
	movw	r3, #:lower16:11153224	@ tmp178,
	movt	r3, #:upper16:11153224	@ tmp178,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ D.42859, <variable>.PrevPic.structure
	cmp	r3, r1	@ D.42859,
	beq	.L2368	@,
	movw	r0, #:lower16:11153248	@ tmp179,
	movw	r6, #:lower16:11118800	@ tmp180,
	movt	r0, #:upper16:11153248	@ tmp179,
	movt	r6, #:upper16:11118800	@ tmp180,
	ldr	r0, [r4, r0]	@ <variable>.PrevPic.view_id, <variable>.PrevPic.view_id
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	r0, r1	@ <variable>.PrevPic.view_id, <variable>.CurrSlice.view_id
	beq	.L2369	@,
.L2368:
	movw	sl, #:lower16:11123112	@ tmp183,
	movt	sl, #:upper16:11123112	@ tmp183,
	ldr	r2, [r4, sl]	@ D.42863, <variable>.DPB.size
	subs	r3, r2, #1	@ j, D.42863,
	bmi	.L2367	@,
	movw	lr, #:lower16:2780730	@ tmp184,
	movt	lr, #:upper16:2780730	@ tmp184,
	add	r7, r2, lr	@ tmp184, D.42863, tmp184
	mov	lr, #0	@ tmp430,
	movw	ip, #:lower16:11151961	@ tmp429,
	movw	r6, #:lower16:11117188	@ tmp431,
	add	r1, r4, r7, asl #2	@, ivtmp.7510, pMvcCtx, tmp184,
	movw	sl, #:lower16:11117168	@ tmp433,
	movw	r7, #:lower16:11118800	@ tmp432,
	movt	ip, #:upper16:11151961	@ tmp429,
	ldr	r2, [r1, #-4]	@ D.42866, <variable>.DPB.fs
	movt	r6, #:upper16:11117188	@ tmp431,
	movt	r7, #:upper16:11118800	@ tmp432,
	movt	sl, #:upper16:11117168	@ tmp433,
	cmp	r2, lr	@ D.42866,
	and	r0, r3, #1	@ tmp440, j,
	beq	.L2415	@,
	cmp	r5, #1	@ structure,
	beq	.L2462	@,
	ldrb	r8, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #1	@ <variable>.is_used,
	beq	.L2419	@,
.L2417:
	strb	lr, [r4, ip]	@ tmp430, <variable>.CurrPic.field_pair_flag
.L2415:
	subs	r3, r3, #1	@ j, j,
	sub	r2, r1, #4	@ ivtmp.7510, ivtmp.7510,
	bmi	.L2367	@,
	cmp	r0, #0	@ tmp440,
	beq	.L2379	@,
	ldr	r1, [r2, #-4]	@ D.42866, <variable>.DPB.fs
	cmp	r1, #0	@ D.42866,
	beq	.L2421	@,
	cmp	r5, #1	@ structure,
	beq	.L2463	@,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #1	@ <variable>.is_used,
	beq	.L2425	@,
.L2423:
	strb	lr, [r4, ip]	@ tmp430, <variable>.CurrPic.field_pair_flag
.L2421:
	subs	r3, r3, #1	@ j, j,
	sub	r2, r2, #4	@ ivtmp.7510, ivtmp.7510,
	bmi	.L2367	@,
.L2379:
	ldr	r1, [r2, #-4]	@ D.42866, <variable>.DPB.fs
	cmp	r1, #0	@ D.42866,
	beq	.L2370	@,
	cmp	r5, #1	@ structure,
	beq	.L2464	@,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #1	@ <variable>.is_used,
	beq	.L2372	@,
.L2373:
	strb	lr, [r4, ip]	@ tmp430, <variable>.CurrPic.field_pair_flag
.L2370:
	sub	r2, r2, #4	@ tmp442, ivtmp.7510,
	sub	r3, r3, #1	@ j, j,
	ldr	r0, [r2, #-4]	@ D.42866, <variable>.DPB.fs
	mov	r1, r3	@ tmp441, j
	cmp	r0, #0	@ D.42866,
	beq	.L2428	@,
	cmp	r5, #1	@ structure,
	beq	.L2465	@,
	ldrb	r8, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #1	@ <variable>.is_used,
	beq	.L2432	@,
.L2430:
	strb	lr, [r4, ip]	@ tmp430, <variable>.CurrPic.field_pair_flag
.L2428:
	subs	r3, r1, #1	@ j, tmp441,
	sub	r2, r2, #4	@ ivtmp.7510, tmp442,
	bpl	.L2379	@,
	b	.L2367	@
.L2465:
	ldrb	r8, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #2	@ <variable>.is_used,
	bne	.L2430	@,
.L2432:
	ldr	r9, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r8, [r0, #20]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r9, r8	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2430	@,
	ldr	r9, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r8, [r0, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r9, r8	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2430	@,
	ldrb	r8, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r8, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2446	@,
	ldrb	r0, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2430	@,
	b	.L2375	@
.L2464:
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #2	@ <variable>.is_used,
	bne	.L2373	@,
.L2372:
	ldr	r8, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r1, #20]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r8, r0	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2373	@,
	ldr	r8, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r0, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r8, r0	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2373	@,
	ldrb	r0, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2374	@,
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L2373	@,
.L2375:
	movw	r8, #:lower16:2780730	@ tmp202,
	movt	r8, #:upper16:2780730	@ tmp202,
	add	r6, r3, r8	@ tmp202, j, tmp202
	movw	r7, #:lower16:11152504	@ tmp204,
	movw	r8, #:lower16:11151961	@ tmp199,
	movt	r7, #:upper16:11152504	@ tmp204,
	ldr	sl, [r4, r6, asl #2]	@ temp.7520, <variable>.DPB.fs
	movt	r8, #:upper16:11151961	@ tmp199,
	movw	r1, #:lower16:11151976	@,
	movt	r1, #:upper16:11151976	@,
	mov	lr, #1	@ tmp200,
	add	r0, r4, r1	@, pMvcCtx,
	mov	r2, #528	@,
	add	r1, sl, #72	@, temp.7520,
	strb	lr, [r4, r8]	@ tmp200, <variable>.CurrPic.field_pair_flag
	str	sl, [r4, r7]	@ temp.7520, <variable>.CurrPic.frame_store
	bl	memcpy	@
	ldr	r3, [r4, r6, asl #2]	@ tmp215, <variable>.DPB.fs
	ldrb	ip, [r3, #6]	@ zero_extendqisi2	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	strb	ip, [sl, #6]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	ldr	r2, [r4, r6, asl #2]	@ tmp220, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r2, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLFs,
	beq	.L2466	@,
	ldrb	ip, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	movw	r6, #:lower16:11152580	@ tmp224,
	ldrsb	r2, [r3, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	movt	r6, #:upper16:11152580	@ tmp224,
	cmp	ip, #0	@ <variable>.CurrPic.field_pair_flag,
	str	r2, [r4, r6]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
	beq	.L2367	@,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	cmp	lr, #0	@ <variable>.CurrPic.frame_store,
	beq	.L2367	@,
.L2388:
	mov	r6, #0	@ LogicFsID,
	b	.L2398	@
.L2461:
	movw	r2, #:lower16:11117168	@ tmp386,
	movt	r2, #:upper16:11117168	@ tmp386,
	movw	r3, #:lower16:11117188	@ tmp383,
	movw	r5, #:lower16:11118800	@ tmp395,
	ldrb	r9, [r4, r2]	@ zero_extendqisi2	@, <variable>.CurrSlice.nal_ref_idc
	movt	r3, #:upper16:11117188	@ tmp383,
	movt	r5, #:upper16:11118800	@ tmp395,
	movw	r8, #:lower16:11153232	@ tmp382,
	ldr	sl, [r4, r3]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movt	r8, #:upper16:11153232	@ tmp382,
	str	r9, [fp, #-48]	@, %sfp
	movw	r0, #:lower16:11153248	@ tmp394,
	ldr	r9, [r4, r5]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movt	r0, #:upper16:11153248	@ tmp394,
	str	sl, [r4, r8]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	movw	r7, #:lower16:11153228	@ tmp385,
	movt	r7, #:upper16:11153228	@ tmp385,
	movw	r1, #:lower16:11153224	@ tmp379,
	str	r9, [r4, r0]	@ <variable>.CurrSlice.view_id, <variable>.PrevPic.view_id
	movt	r1, #:upper16:11153224	@ tmp379,
	ldr	r8, [fp, #-48]	@, %sfp
	movw	r5, #:lower16:11153236	@ tmp388,
	movw	ip, #:lower16:11153240	@ tmp390,
	movt	r5, #:upper16:11153236	@ tmp388,
	movt	ip, #:upper16:11153240	@ tmp390,
	movw	r3, #:lower16:11153225	@ tmp391,
	str	r8, [r4, r7]	@, <variable>.PrevPic.nal_ref_idc
	movt	r3, #:upper16:11153225	@ tmp391,
	ldr	r7, [r4, #128]	@, <variable>.PicCounter
	mov	r2, #0	@ tmp380,
	mov	r0, r2	@ D.42894, tmp380
	str	r6, [r4, ip]	@ LogicFsID, <variable>.PrevPic.image_id
	strb	r2, [r4, r1]	@ tmp380, <variable>.PrevPic.structure
	str	r7, [r4, r5]	@, <variable>.PrevPic.pic_counter
	strb	r2, [r4, r3]	@ tmp380, <variable>.PrevPic.FrameStoreFlag
	b	.L2377	@
.L2460:
	ldr	r7, [r4, #16]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	ldr	r2, [r0, #200]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	ldr	ip, [r4, #12]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	mov	r1, r7, asl #4	@ HeightAligh, <variable>.CurHeightInMb,
	ldr	r0, [r0, #112]	@ <variable>.stDispImg.luma_phy_addr, <variable>.stDispImg.luma_phy_addr
	str	r1, [r8, #176]	@ HeightAligh, <variable>.stDispImg.image_height
	mul	r7, r2, r1	@ ChromOffset, <variable>.stDispImg.image_stride, HeightAligh
	mov	lr, ip, asl #4	@ tmp335, <variable>.CurWidthInMb,
	str	lr, [r8, #172]	@ tmp335, <variable>.stDispImg.image_width
	add	r0, r7, r0	@ D.42972, ChromOffset, <variable>.stDispImg.luma_phy_addr
	str	r0, [r8, #116]	@ D.42972, <variable>.stDispImg.chrom_phy_addr
	bl	MEM_Phy2Vir	@
	ldr	r3, [r8, #128]	@ <variable>.stDispImg.luma_2d_phy_addr, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r1, [r8, #96]	@ <variable>.stDispImg.top_luma_phy_addr, <variable>.stDispImg.top_luma_phy_addr
	add	ip, r7, r3	@ D.42986, ChromOffset, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r2, [r8, #200]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	add	r7, r7, r1	@ D.42979, ChromOffset, <variable>.stDispImg.top_luma_phy_addr
	str	ip, [r8, #132]	@ D.42986, <variable>.stDispImg.chrom_2d_phy_addr
	add	r1, r7, r2	@ tmp339, D.42979, <variable>.stDispImg.image_stride
	str	r7, [r8, #100]	@ D.42979, <variable>.stDispImg.top_chrom_phy_addr
	str	r1, [r8, #108]	@ tmp339, <variable>.stDispImg.btm_chrom_phy_addr
	str	r0, [r8, #44]	@, <variable>.stDispImg.chrom_vir_addr
	mov	r0, ip	@, D.42986
	bl	MEM_Phy2Vir	@
	str	r0, [r8, #60]	@, <variable>.stDispImg.chrom_2d_vir_addr
	b	.L2397	@
.L2463:
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #2	@ <variable>.is_used,
	bne	.L2423	@,
.L2425:
	ldr	r8, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r1, #20]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r8, r0	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2423	@,
	ldr	r8, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r0, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r8, r0	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2423	@,
	ldrb	r0, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2444	@,
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2423	@,
	b	.L2375	@
.L2462:
	ldrb	r8, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #2	@ <variable>.is_used,
	bne	.L2417	@,
.L2419:
	ldr	r9, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r8, [r2, #20]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r9, r8	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2417	@,
	ldr	r9, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r8, [r2, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	r9, r8	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2417	@,
	ldrb	r8, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r8, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2442	@,
	ldrb	r2, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	beq	.L2417	@,
	b	.L2375	@
.L2369:
	cmp	r5, #2	@ structure,
	beq	.L2467	@,
	cmp	r3, #2	@ D.42859,
	bne	.L2382	@,
.L2381:
	cmp	r2, #2	@ <variable>.OldDecMode,
	beq	.L2383	@,
	movw	r2, #:lower16:11153232	@ tmp232,
	movw	r6, #:lower16:11117188	@ tmp233,
	movt	r2, #:upper16:11153232	@ tmp232,
	movt	r6, #:upper16:11117188	@ tmp233,
	ldr	r1, [r4, r2]	@ <variable>.PrevPic.frame_num, <variable>.PrevPic.frame_num
	ldr	r3, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	cmp	r1, r3	@ <variable>.PrevPic.frame_num, <variable>.CurrSlice.frame_num
	bne	.L2367	@,
.L2383:
	movw	r1, #:lower16:11117168	@ tmp236,
	movt	r1, #:upper16:11117168	@ tmp236,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2384	@,
	movw	r6, #:lower16:11153228	@ tmp238,
	movt	r6, #:upper16:11153228	@ tmp238,
	ldr	r3, [r4, r6]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r3, #0	@ <variable>.PrevPic.nal_ref_idc,
	bne	.L2367	@,
.L2385:
	ldr	r6, [r4, #128]	@ <variable>.PicCounter, <variable>.PicCounter
	ldr	r3, [r4, #124]	@ <variable>.PrevStorePicCounter, <variable>.PrevStorePicCounter
	rsb	r1, r3, r6	@ tmp242, <variable>.PrevStorePicCounter, <variable>.PicCounter
	cmp	r1, #2	@ tmp242,
	bhi	.L2367	@,
	movw	r2, #:lower16:11152504	@ tmp248,
	movt	r2, #:upper16:11152504	@ tmp248,
	movw	r3, #:lower16:11151961	@ tmp245,
	movt	r3, #:upper16:11151961	@ tmp245,
	ldr	r2, [r4, r2]	@ D.42886, <variable>.CurrPic.frame_store
	mov	r1, #1	@ tmp246,
	strb	r1, [r4, r3]	@ tmp246, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ D.42886,
	beq	.L2456	@,
	cmp	r5, #2	@ structure,
	beq	.L2468	@,
	ldrb	r1, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r1, #2	@ <variable>.is_used,
	beq	.L2388	@,
.L2457:
	mov	sl, #0	@ tmp255,
	strb	sl, [r4, r3]	@ tmp255, <variable>.CurrPic.field_pair_flag
	b	.L2367	@
.L2374:
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2373	@,
	b	.L2375	@
.L2446:
	ldrb	r0, [r0, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L2430	@,
	b	.L2375	@
.L2396:
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, r3	@, tmp329
	strb	r3, [r4, sl]	@ tmp329, <variable>.CurrPic.state
	movw	r1, #:lower16:.LC70	@,
	movt	r1, #:upper16:.LC70	@,
	strb	r3, [ip, #5]	@ tmp329, <variable>.is_in_dpb
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r9	@, <variable>.CurrPic.state
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.42894,
	b	.L2377	@
.L2466:
	movw	r1, #:lower16:.LC68	@,
	movw	r2, #6294	@,
	movt	r1, #:upper16:.LC68	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42894,
	b	.L2377	@
.L2468:
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, r1	@ <variable>.is_used,
	bne	.L2457	@,
	mov	r6, #0	@ LogicFsID,
	b	.L2398	@
.L2384:
	movw	ip, #:lower16:11153228	@ tmp240,
	movt	ip, #:upper16:11153228	@ tmp240,
	ldr	r2, [r4, ip]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r2, #0	@ <variable>.PrevPic.nal_ref_idc,
	beq	.L2367	@,
	b	.L2385	@
.L2442:
	ldrb	r2, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L2417	@,
	b	.L2375	@
.L2444:
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L2423	@,
	b	.L2375	@
	.fnend
	.size	MVC_AllocFrameStore, .-MVC_AllocFrameStore
	.align	2
	.global	MVC_OutputFrmToVO
	.type	MVC_OutputFrmToVO, %function
MVC_OutputFrmToVO:
	.fnstart
.LFB1563:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pMvcCtx,
	cmpne	r1, #0	@, pFrameStore,
	mov	r5, r1	@ pFrameStore, pFrameStore
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movne	r3, #0	@, tmp153
	moveq	r3, #1	@, tmp153
	mov	r6, r2	@ is_last_frame, is_last_frame
	beq	.L2485	@,
	ldr	r1, [r0, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ <variable>.s32DecOrderOutput,
	ble	.L2472	@,
	ldrb	ip, [r0, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	ip, #2	@ <variable>.OldDecMode,
	beq	.L2472	@,
	ldr	r2, [r0, #520]	@ D.39781, <variable>.pDirectOutBuf
	cmp	r2, #0	@ D.39781,
	strneb	r3, [r2, #2]	@ tmp153, <variable>.is_used
	movne	r0, #1	@ D.39773,
	strne	r3, [r4, #520]	@ tmp153, <variable>.pDirectOutBuf
	beq	.L2473	@,
.L2471:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2472:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_CheckFrameStore	@
	cmn	r0, #3	@,
	beq	.L2473	@,
	ldr	r1, [r4, #520]	@ temp.7582, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.7582,
	beq	.L2474	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetImagePara	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, #520]	@, <variable>.pDirectOutBuf
	bl	MVC_CheckFrameStore	@
	subs	r3, r0, #0	@ ret.7584,
	beq	.L2486	@,
	cmn	r3, #3	@ ret.7584,
	beq	.L2479	@,
	movw	r2, #1881	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC74	@,
	movt	r1, #:upper16:.LC74	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r2, #268]	@, <variable>.fs_image.image_id
	bl	MVC_DEC_RecycleImage	@
.L2479:
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	lr, #0	@ tmp197,
	strb	lr, [r1, #2]	@ tmp197, <variable>.is_used
	str	lr, [r4, #520]	@ tmp197, <variable>.pDirectOutBuf
.L2474:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_GetImagePara	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_CheckFrameStore	@
	subs	r3, r0, #0	@ ret.7600,
	beq	.L2487	@,
	movw	r2, #1926	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC74	@,
	movt	r1, #:upper16:.LC74	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r5, #268]	@, <variable>.fs_image.image_id
	bl	MVC_DEC_RecycleImage	@
	mov	r0, #2	@ D.39773,
	b	.L2471	@
.L2485:
	mov	r2, r0	@, pMvcCtx
	mov	r3, r1	@, pFrameStore
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC71	@,
	movt	r1, #:upper16:.LC71	@,
	bl	dprint_vfmw	@
	mov	r0, #2	@ D.39773,
	b	.L2471	@
.L2473:
	mov	r0, #1	@ D.39773,
	b	.L2471	@
.L2486:
	ldr	r7, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r7, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pstLogicFsImage,
	beq	.L2488	@,
	ldr	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r1, #15	@,
	mov	r2, r4	@, pMvcCtx
	add	r3, r4, #584	@, pMvcCtx,
	cmp	r6, #1	@ is_last_frame,
	cmpeq	r0, r5	@, <variable>.pDirectOutBuf, pFrameStore
	moveq	r0, #1	@ tmp178,
	streq	r0, [r7, #268]	@ tmp178, <variable>.last_frame
	ldr	r0, [r4, #120]	@ <variable>.ChanID, <variable>.ChanID
	str	r7, [sp, #0]	@ pstLogicFsImage,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.7592,
	bne	.L2489	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, pstLogicFsImage
	bl	MVC_SetFrmRepeatCount	@
	ldr	ip, [r4, #144]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	r3, [r4, #136]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, ip, #1	@ tmp190, <variable>.numOutputFrame,
	str	r0, [r4, #144]	@ tmp190, <variable>.numOutputFrame
	add	r2, r3, #2	@ tmp192, <variable>.PicOutCounter,
	str	r2, [r4, #136]	@ tmp192, <variable>.PicOutCounter
	b	.L2479	@
.L2487:
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pstLogicFsImage.7605,
	beq	.L2490	@,
	cmp	r6, #1	@ is_last_frame,
	mov	r1, #15	@,
	streq	r6, [r7, #268]	@ is_last_frame, <variable>.last_frame
	mov	r2, r4	@, pMvcCtx
	ldr	r0, [r4, #120]	@ <variable>.ChanID, <variable>.ChanID
	add	r3, r4, #584	@, pMvcCtx,
	str	r7, [sp, #0]	@ pstLogicFsImage.7605,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.7609,
	bne	.L2491	@,
	mov	r1, r7	@, pstLogicFsImage.7605
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SetFrmRepeatCount	@
	ldr	r1, [r4, #144]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	ip, [r4, #136]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	mov	r0, #0	@ D.39773,
	add	r2, r1, #1	@ tmp213, <variable>.numOutputFrame,
	str	r2, [r4, #144]	@ tmp213, <variable>.numOutputFrame
	add	r3, ip, #2	@ tmp215, <variable>.PicOutCounter,
	str	r3, [r4, #136]	@ tmp215, <variable>.PicOutCounter
	b	.L2471	@
.L2489:
	mov	r2, r0	@, ret.7592
	movw	r1, #:lower16:.LC73	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC73	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r5, #0	@ tmp183,
	mov	r2, r5	@, tmp183
	strb	r5, [r1, #2]	@ tmp183, <variable>.is_used
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	str	r5, [r4, #520]	@ tmp183, <variable>.pDirectOutBuf
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.39773,
	b	.L2471	@
.L2491:
	mov	r2, r0	@, ret.7609
	movw	r1, #:lower16:.LC73	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC73	@,
	bl	dprint_vfmw	@
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.39773,
	b	.L2471	@
.L2488:
	movw	r1, #:lower16:.LC72	@,
	movw	r2, #1854	@,
	movt	r1, #:upper16:.LC72	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39773,
	b	.L2471	@
.L2490:
	movw	r1, #:lower16:.LC72	@,
	movw	r2, #1901	@,
	movt	r1, #:upper16:.LC72	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39773,
	b	.L2471	@
	.fnend
	.size	MVC_OutputFrmToVO, .-MVC_OutputFrmToVO
	.align	2
	.global	MVC_InitDPB
	.type	MVC_InitDPB, %function
MVC_InitDPB:
	.fnstart
.LFB1614:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pMvcCtx, pMvcCtx
	mvneq	r0, #0	@ D.42330,
	beq	.L2549	@,
	bl	MVC_ClearAllSlice	@
	movw	r3, #:lower16:11122920	@ tmp193,
	movt	r3, #:upper16:11122920	@ tmp193,
	ldr	r3, [r4, r3]	@ temp.7694, <variable>.DPB.fs
	cmp	r3, #0	@ temp.7694,
	beq	.L2494	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2494:
	movw	r0, #:lower16:11122984	@ tmp196,
	movt	r0, #:upper16:11122984	@ tmp196,
	ldr	r3, [r4, r0]	@ temp.7693, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7693,
	beq	.L2495	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2495:
	movw	r1, #:lower16:11123048	@ tmp199,
	movt	r1, #:upper16:11123048	@ tmp199,
	ldr	r3, [r4, r1]	@ D.42343, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.42343,
	beq	.L2496	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2496:
	movw	r8, #:lower16:11122920	@ tmp206,
	movw	r7, #:lower16:11122924	@ tmp208,
	movt	r8, #:upper16:11122920	@ tmp206,
	movt	r7, #:upper16:11122924	@ tmp208,
	mov	r2, #0	@ tmp203,
	movw	r6, #:lower16:11123048	@ tmp202,
	str	r2, [r4, r8]	@ tmp203, <variable>.DPB.fs
	movt	r6, #:upper16:11123048	@ tmp202,
	ldr	r0, [r4, r7]	@ temp.7696, <variable>.DPB.fs
	movw	r5, #:lower16:11122984	@ tmp204,
	movt	r5, #:upper16:11122984	@ tmp204,
	str	r2, [r4, r6]	@ tmp203, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.7696,
	str	r2, [r4, r5]	@ tmp203, <variable>.DPB.fs_ref
	beq	.L2497	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2497:
	movw	ip, #:lower16:11122988	@ tmp211,
	movt	ip, #:upper16:11122988	@ tmp211,
	ldr	r3, [r4, ip]	@ temp.7700, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7700,
	beq	.L2498	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2498:
	movw	lr, #:lower16:11123052	@ tmp214,
	movt	lr, #:upper16:11123052	@ tmp214,
	ldr	r3, [r4, lr]	@ temp.7704, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7704,
	beq	.L2499	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2499:
	movw	r0, #:lower16:11122924	@ tmp221,
	movw	r5, #:lower16:11122928	@ tmp223,
	movt	r0, #:upper16:11122924	@ tmp221,
	movt	r5, #:upper16:11122928	@ tmp223,
	mov	r2, #0	@ tmp218,
	movw	r1, #:lower16:11123052	@ tmp217,
	str	r2, [r4, r0]	@ tmp218, <variable>.DPB.fs
	movt	r1, #:upper16:11123052	@ tmp217,
	ldr	r0, [r4, r5]	@ temp.7708, <variable>.DPB.fs
	movw	r3, #:lower16:11122988	@ tmp219,
	movt	r3, #:upper16:11122988	@ tmp219,
	str	r2, [r4, r1]	@ tmp218, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.7708,
	str	r2, [r4, r3]	@ tmp218, <variable>.DPB.fs_ref
	beq	.L2500	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2500:
	movw	r6, #:lower16:11122992	@ tmp226,
	movt	r6, #:upper16:11122992	@ tmp226,
	ldr	r3, [r4, r6]	@ temp.7712, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7712,
	beq	.L2501	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2501:
	movw	r7, #:lower16:11123056	@ tmp229,
	movt	r7, #:upper16:11123056	@ tmp229,
	ldr	r3, [r4, r7]	@ temp.7716, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7716,
	beq	.L2502	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2502:
	movw	r3, #:lower16:11122928	@ tmp236,
	movw	r2, #:lower16:11122932	@ tmp238,
	movt	r3, #:upper16:11122928	@ tmp236,
	movt	r2, #:upper16:11122932	@ tmp238,
	mov	r8, #0	@ tmp233,
	movw	lr, #:lower16:11123056	@ tmp232,
	str	r8, [r4, r3]	@ tmp233, <variable>.DPB.fs
	movt	lr, #:upper16:11123056	@ tmp232,
	ldr	r0, [r4, r2]	@ temp.7720, <variable>.DPB.fs
	movw	ip, #:lower16:11122992	@ tmp234,
	movt	ip, #:upper16:11122992	@ tmp234,
	str	r8, [r4, lr]	@ tmp233, <variable>.DPB.fs_ltref
	cmp	r0, r8	@ temp.7720,
	str	r8, [r4, ip]	@ tmp233, <variable>.DPB.fs_ref
	beq	.L2503	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2503:
	movw	r1, #:lower16:11122996	@ tmp241,
	movt	r1, #:upper16:11122996	@ tmp241,
	ldr	r3, [r4, r1]	@ temp.7724, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7724,
	beq	.L2504	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2504:
	movw	r5, #:lower16:11123060	@ tmp244,
	movt	r5, #:upper16:11123060	@ tmp244,
	ldr	r3, [r4, r5]	@ temp.7728, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7728,
	beq	.L2505	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2505:
	movw	r0, #:lower16:11122932	@ tmp251,
	movw	ip, #:lower16:11122936	@ tmp253,
	movt	r0, #:upper16:11122932	@ tmp251,
	movt	ip, #:upper16:11122936	@ tmp253,
	mov	r6, #0	@ tmp248,
	movw	r8, #:lower16:11123060	@ tmp247,
	str	r6, [r4, r0]	@ tmp248, <variable>.DPB.fs
	movt	r8, #:upper16:11123060	@ tmp247,
	ldr	r0, [r4, ip]	@ temp.7732, <variable>.DPB.fs
	movw	r7, #:lower16:11122996	@ tmp249,
	movt	r7, #:upper16:11122996	@ tmp249,
	str	r6, [r4, r8]	@ tmp248, <variable>.DPB.fs_ltref
	cmp	r0, r6	@ temp.7732,
	str	r6, [r4, r7]	@ tmp248, <variable>.DPB.fs_ref
	beq	.L2506	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2506:
	movw	lr, #:lower16:11123000	@ tmp256,
	movt	lr, #:upper16:11123000	@ tmp256,
	ldr	r3, [r4, lr]	@ temp.7736, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7736,
	beq	.L2507	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2507:
	movw	r2, #:lower16:11123064	@ tmp259,
	movt	r2, #:upper16:11123064	@ tmp259,
	ldr	r3, [r4, r2]	@ temp.7740, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7740,
	beq	.L2508	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2508:
	movw	r7, #:lower16:11122936	@ tmp266,
	movw	r6, #:lower16:11122940	@ tmp268,
	movt	r7, #:upper16:11122936	@ tmp266,
	movt	r6, #:upper16:11122940	@ tmp268,
	mov	r5, #0	@ tmp263,
	movw	r1, #:lower16:11123064	@ tmp262,
	str	r5, [r4, r7]	@ tmp263, <variable>.DPB.fs
	movt	r1, #:upper16:11123064	@ tmp262,
	ldr	r0, [r4, r6]	@ temp.7744, <variable>.DPB.fs
	movw	r3, #:lower16:11123000	@ tmp264,
	movt	r3, #:upper16:11123000	@ tmp264,
	str	r5, [r4, r1]	@ tmp263, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.7744,
	str	r5, [r4, r3]	@ tmp263, <variable>.DPB.fs_ref
	beq	.L2509	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2509:
	movw	r8, #:lower16:11123004	@ tmp271,
	movt	r8, #:upper16:11123004	@ tmp271,
	ldr	r3, [r4, r8]	@ temp.7748, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7748,
	beq	.L2510	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2510:
	movw	ip, #:lower16:11123068	@ tmp274,
	movt	ip, #:upper16:11123068	@ tmp274,
	ldr	r3, [r4, ip]	@ temp.7752, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7752,
	beq	.L2511	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2511:
	movw	r0, #:lower16:11122940	@ tmp281,
	movw	r3, #:lower16:11122944	@ tmp283,
	movt	r0, #:upper16:11122940	@ tmp281,
	movt	r3, #:upper16:11122944	@ tmp283,
	mov	lr, #0	@ tmp278,
	movw	r5, #:lower16:11123068	@ tmp277,
	str	lr, [r4, r0]	@ tmp278, <variable>.DPB.fs
	movt	r5, #:upper16:11123068	@ tmp277,
	ldr	r0, [r4, r3]	@ temp.7756, <variable>.DPB.fs
	movw	r2, #:lower16:11123004	@ tmp279,
	movt	r2, #:upper16:11123004	@ tmp279,
	str	lr, [r4, r5]	@ tmp278, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.7756,
	str	lr, [r4, r2]	@ tmp278, <variable>.DPB.fs_ref
	beq	.L2512	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2512:
	movw	r1, #:lower16:11123008	@ tmp286,
	movt	r1, #:upper16:11123008	@ tmp286,
	ldr	r3, [r4, r1]	@ temp.7760, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7760,
	beq	.L2513	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2513:
	movw	r6, #:lower16:11123072	@ tmp289,
	movt	r6, #:upper16:11123072	@ tmp289,
	ldr	r3, [r4, r6]	@ temp.7764, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7764,
	beq	.L2514	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2514:
	movw	r2, #:lower16:11122944	@ tmp296,
	movw	lr, #:lower16:11122948	@ tmp298,
	movt	r2, #:upper16:11122944	@ tmp296,
	movt	lr, #:upper16:11122948	@ tmp298,
	mov	r7, #0	@ tmp293,
	movw	ip, #:lower16:11123072	@ tmp292,
	str	r7, [r4, r2]	@ tmp293, <variable>.DPB.fs
	movt	ip, #:upper16:11123072	@ tmp292,
	ldr	r0, [r4, lr]	@ temp.7768, <variable>.DPB.fs
	movw	r8, #:lower16:11123008	@ tmp294,
	movt	r8, #:upper16:11123008	@ tmp294,
	str	r7, [r4, ip]	@ tmp293, <variable>.DPB.fs_ltref
	cmp	r0, r7	@ temp.7768,
	str	r7, [r4, r8]	@ tmp293, <variable>.DPB.fs_ref
	beq	.L2515	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2515:
	movw	r5, #:lower16:11123012	@ tmp301,
	movt	r5, #:upper16:11123012	@ tmp301,
	ldr	r3, [r4, r5]	@ temp.7772, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7772,
	beq	.L2516	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2516:
	movw	r3, #:lower16:11123076	@ tmp304,
	movt	r3, #:upper16:11123076	@ tmp304,
	ldr	r3, [r4, r3]	@ temp.7776, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7776,
	beq	.L2517	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2517:
	movw	r0, #:lower16:11122948	@ tmp311,
	movw	r8, #:lower16:11122952	@ tmp313,
	movt	r0, #:upper16:11122948	@ tmp311,
	movt	r8, #:upper16:11122952	@ tmp313,
	mov	r6, #0	@ tmp308,
	movw	r1, #:lower16:11123076	@ tmp307,
	str	r6, [r4, r0]	@ tmp308, <variable>.DPB.fs
	movt	r1, #:upper16:11123076	@ tmp307,
	ldr	r0, [r4, r8]	@ temp.7780, <variable>.DPB.fs
	movw	r7, #:lower16:11123012	@ tmp309,
	movt	r7, #:upper16:11123012	@ tmp309,
	str	r6, [r4, r1]	@ tmp308, <variable>.DPB.fs_ltref
	cmp	r0, r6	@ temp.7780,
	str	r6, [r4, r7]	@ tmp308, <variable>.DPB.fs_ref
	beq	.L2518	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2518:
	movw	ip, #:lower16:11123016	@ tmp316,
	movt	ip, #:upper16:11123016	@ tmp316,
	ldr	r3, [r4, ip]	@ temp.7784, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7784,
	beq	.L2519	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2519:
	movw	lr, #:lower16:11123080	@ tmp319,
	movt	lr, #:upper16:11123080	@ tmp319,
	ldr	r3, [r4, lr]	@ temp.7788, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7788,
	beq	.L2520	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2520:
	movw	r7, #:lower16:11122952	@ tmp326,
	movw	r6, #:lower16:11122956	@ tmp328,
	movt	r7, #:upper16:11122952	@ tmp326,
	movt	r6, #:upper16:11122956	@ tmp328,
	mov	r2, #0	@ tmp323,
	movw	r3, #:lower16:11123080	@ tmp322,
	str	r2, [r4, r7]	@ tmp323, <variable>.DPB.fs
	movt	r3, #:upper16:11123080	@ tmp322,
	ldr	r0, [r4, r6]	@ temp.7792, <variable>.DPB.fs
	movw	r5, #:lower16:11123016	@ tmp324,
	movt	r5, #:upper16:11123016	@ tmp324,
	str	r2, [r4, r3]	@ tmp323, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.7792,
	str	r2, [r4, r5]	@ tmp323, <variable>.DPB.fs_ref
	beq	.L2521	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2521:
	movw	r1, #:lower16:11123020	@ tmp331,
	movt	r1, #:upper16:11123020	@ tmp331,
	ldr	r3, [r4, r1]	@ temp.7796, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7796,
	beq	.L2522	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2522:
	movw	r8, #:lower16:11123084	@ tmp334,
	movt	r8, #:upper16:11123084	@ tmp334,
	ldr	r3, [r4, r8]	@ temp.7800, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7800,
	beq	.L2523	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2523:
	movw	r0, #:lower16:11122956	@ tmp341,
	movw	r5, #:lower16:11122960	@ tmp343,
	movt	r0, #:upper16:11122956	@ tmp341,
	movt	r5, #:upper16:11122960	@ tmp343,
	mov	ip, #0	@ tmp338,
	movw	r2, #:lower16:11123084	@ tmp337,
	str	ip, [r4, r0]	@ tmp338, <variable>.DPB.fs
	movt	r2, #:upper16:11123084	@ tmp337,
	ldr	r0, [r4, r5]	@ temp.7804, <variable>.DPB.fs
	movw	lr, #:lower16:11123020	@ tmp339,
	movt	lr, #:upper16:11123020	@ tmp339,
	str	ip, [r4, r2]	@ tmp338, <variable>.DPB.fs_ltref
	cmp	r0, ip	@ temp.7804,
	str	ip, [r4, lr]	@ tmp338, <variable>.DPB.fs_ref
	beq	.L2524	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2524:
	movw	r3, #:lower16:11123024	@ tmp346,
	movt	r3, #:upper16:11123024	@ tmp346,
	ldr	r3, [r4, r3]	@ temp.7808, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7808,
	beq	.L2525	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2525:
	movw	r6, #:lower16:11123088	@ tmp349,
	movt	r6, #:upper16:11123088	@ tmp349,
	ldr	r3, [r4, r6]	@ temp.7812, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7812,
	beq	.L2526	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2526:
	movw	lr, #:lower16:11122960	@ tmp356,
	movw	ip, #:lower16:11122964	@ tmp358,
	movt	lr, #:upper16:11122960	@ tmp356,
	movt	ip, #:upper16:11122964	@ tmp358,
	mov	r7, #0	@ tmp353,
	movw	r1, #:lower16:11123088	@ tmp352,
	str	r7, [r4, lr]	@ tmp353, <variable>.DPB.fs
	movt	r1, #:upper16:11123088	@ tmp352,
	ldr	r0, [r4, ip]	@ temp.7816, <variable>.DPB.fs
	movw	r8, #:lower16:11123024	@ tmp354,
	movt	r8, #:upper16:11123024	@ tmp354,
	str	r7, [r4, r1]	@ tmp353, <variable>.DPB.fs_ltref
	cmp	r0, r7	@ temp.7816,
	str	r7, [r4, r8]	@ tmp353, <variable>.DPB.fs_ref
	beq	.L2527	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2527:
	movw	r2, #:lower16:11123028	@ tmp361,
	movt	r2, #:upper16:11123028	@ tmp361,
	ldr	r3, [r4, r2]	@ temp.7820, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7820,
	beq	.L2528	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2528:
	movw	r5, #:lower16:11123092	@ tmp364,
	movt	r5, #:upper16:11123092	@ tmp364,
	ldr	r3, [r4, r5]	@ temp.7824, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7824,
	beq	.L2529	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2529:
	movw	r0, #:lower16:11122964	@ tmp371,
	movw	r8, #:lower16:11122968	@ tmp373,
	movt	r0, #:upper16:11122964	@ tmp371,
	movt	r8, #:upper16:11122968	@ tmp373,
	mov	r6, #0	@ tmp368,
	movw	r7, #:lower16:11123092	@ tmp367,
	str	r6, [r4, r0]	@ tmp368, <variable>.DPB.fs
	movt	r7, #:upper16:11123092	@ tmp367,
	ldr	r0, [r4, r8]	@ temp.7828, <variable>.DPB.fs
	movw	r3, #:lower16:11123028	@ tmp369,
	movt	r3, #:upper16:11123028	@ tmp369,
	str	r6, [r4, r7]	@ tmp368, <variable>.DPB.fs_ltref
	cmp	r0, r6	@ temp.7828,
	str	r6, [r4, r3]	@ tmp368, <variable>.DPB.fs_ref
	beq	.L2530	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2530:
	movw	r1, #:lower16:11123032	@ tmp376,
	movt	r1, #:upper16:11123032	@ tmp376,
	ldr	r3, [r4, r1]	@ temp.7832, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7832,
	beq	.L2531	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2531:
	movw	ip, #:lower16:11123096	@ tmp379,
	movt	ip, #:upper16:11123096	@ tmp379,
	ldr	r3, [r4, ip]	@ temp.7836, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7836,
	beq	.L2532	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2532:
	movw	r3, #:lower16:11122968	@ tmp386,
	movw	r6, #:lower16:11122972	@ tmp388,
	movt	r3, #:upper16:11122968	@ tmp386,
	movt	r6, #:upper16:11122972	@ tmp388,
	mov	lr, #0	@ tmp383,
	movw	r5, #:lower16:11123096	@ tmp382,
	str	lr, [r4, r3]	@ tmp383, <variable>.DPB.fs
	movt	r5, #:upper16:11123096	@ tmp382,
	ldr	r0, [r4, r6]	@ temp.7840, <variable>.DPB.fs
	movw	r2, #:lower16:11123032	@ tmp384,
	movt	r2, #:upper16:11123032	@ tmp384,
	str	lr, [r4, r5]	@ tmp383, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.7840,
	str	lr, [r4, r2]	@ tmp383, <variable>.DPB.fs_ref
	beq	.L2533	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2533:
	movw	r7, #:lower16:11123036	@ tmp391,
	movt	r7, #:upper16:11123036	@ tmp391,
	ldr	r3, [r4, r7]	@ temp.7844, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7844,
	beq	.L2534	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2534:
	movw	r8, #:lower16:11123100	@ tmp394,
	movt	r8, #:upper16:11123100	@ tmp394,
	ldr	r3, [r4, r8]	@ temp.7848, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7848,
	beq	.L2535	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2535:
	movw	r0, #:lower16:11122972	@ tmp401,
	movw	r2, #:lower16:11122976	@ tmp403,
	movt	r0, #:upper16:11122972	@ tmp401,
	movt	r2, #:upper16:11122976	@ tmp403,
	mov	ip, #0	@ tmp398,
	movw	r1, #:lower16:11123100	@ tmp397,
	str	ip, [r4, r0]	@ tmp398, <variable>.DPB.fs
	movt	r1, #:upper16:11123100	@ tmp397,
	ldr	r0, [r4, r2]	@ temp.7852, <variable>.DPB.fs
	movw	lr, #:lower16:11123036	@ tmp399,
	movt	lr, #:upper16:11123036	@ tmp399,
	str	ip, [r4, r1]	@ tmp398, <variable>.DPB.fs_ltref
	cmp	r0, ip	@ temp.7852,
	str	ip, [r4, lr]	@ tmp398, <variable>.DPB.fs_ref
	beq	.L2536	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2536:
	movw	r5, #:lower16:11123040	@ tmp406,
	movt	r5, #:upper16:11123040	@ tmp406,
	ldr	r3, [r4, r5]	@ temp.7856, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7856,
	beq	.L2537	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2537:
	movw	r6, #:lower16:11123104	@ tmp409,
	movt	r6, #:upper16:11123104	@ tmp409,
	ldr	r3, [r4, r6]	@ temp.7860, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7860,
	beq	.L2538	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2538:
	movw	lr, #:lower16:11122976	@ tmp416,
	movw	ip, #:lower16:11122980	@ tmp418,
	movt	lr, #:upper16:11122976	@ tmp416,
	movt	ip, #:upper16:11122980	@ tmp418,
	mov	r7, #0	@ tmp413,
	movw	r8, #:lower16:11123104	@ tmp412,
	str	r7, [r4, lr]	@ tmp413, <variable>.DPB.fs
	movt	r8, #:upper16:11123104	@ tmp412,
	ldr	r0, [r4, ip]	@ D.42332, <variable>.DPB.fs
	movw	r3, #:lower16:11123040	@ tmp414,
	movt	r3, #:upper16:11123040	@ tmp414,
	str	r7, [r4, r8]	@ tmp413, <variable>.DPB.fs_ltref
	cmp	r0, r7	@ D.42332,
	str	r7, [r4, r3]	@ tmp413, <variable>.DPB.fs_ref
	beq	.L2539	@,
	ldrsb	r1, [r0, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2539:
	movw	r1, #:lower16:11123044	@ tmp421,
	movt	r1, #:upper16:11123044	@ tmp421,
	ldr	r3, [r4, r1]	@ D.42338, <variable>.DPB.fs_ref
	cmp	r3, #0	@ D.42338,
	beq	.L2540	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2540:
	movw	r2, #:lower16:11123108	@ tmp424,
	movt	r2, #:upper16:11123108	@ tmp424,
	ldr	r3, [r4, r2]	@ temp.7682, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7682,
	beq	.L2541	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2541:
	ldr	r7, [r4, #520]	@ D.42349, <variable>.pDirectOutBuf
	movw	r1, #:lower16:11123108	@ tmp427,
	ldr	r8, [r4, #44]	@ <variable>.CurrDPBSize, <variable>.CurrDPBSize
	movt	r1, #:upper16:11123108	@ tmp427,
	movw	r6, #:lower16:11123044	@ tmp429,
	movw	r5, #:lower16:11122980	@ tmp431,
	movt	r6, #:upper16:11123044	@ tmp429,
	movt	r5, #:upper16:11122980	@ tmp431,
	movw	r2, #:lower16:11123112	@ tmp433,
	movw	lr, #:lower16:11123116	@ tmp435,
	movt	r2, #:upper16:11123112	@ tmp433,
	movt	lr, #:upper16:11123116	@ tmp435,
	movw	ip, #:lower16:11123120	@ tmp437,
	movw	r0, #:lower16:11123124	@ tmp439,
	movt	ip, #:upper16:11123120	@ tmp437,
	movt	r0, #:upper16:11123124	@ tmp439,
	movw	r3, #:lower16:11123128	@ tmp441,
	cmp	r7, #0	@ D.42349,
	movt	r3, #:upper16:11123128	@ tmp441,
	str	r8, [r4, r2]	@ <variable>.CurrDPBSize, <variable>.DPB.size
	mov	r2, #0	@ tmp428,
	str	r2, [r4, r1]	@ tmp428, <variable>.DPB.fs_ltref
	str	r2, [r4, r6]	@ tmp428, <variable>.DPB.fs_ref
	str	r2, [r4, r5]	@ tmp428, <variable>.DPB.fs
	str	r2, [r4, lr]	@ tmp428, <variable>.DPB.used_size
	str	r2, [r4, ip]	@ tmp428, <variable>.DPB.ref_frames_in_buffer
	str	r2, [r4, r0]	@ tmp428, <variable>.DPB.ltref_frames_in_buffer
	str	r2, [r4, r3]	@ tmp428, <variable>.DPB.max_long_term_pic_idx
	beq	.L2542	@,
	ldrb	r3, [r4, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r3, #2	@ <variable>.OldDecMode,
	beq	.L2560	@,
.L2543:
	movw	ip, #:lower16:11152504	@ tmp449,
	movt	ip, #:upper16:11152504	@ tmp449,
	ldr	r3, [r4, ip]	@ D.42361, <variable>.CurrPic.frame_store
	cmp	r3, #0	@ D.42361,
	beq	.L2545	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2545:
	mov	lr, #0	@ tmp452,
	str	lr, [r4, #520]	@ tmp452, <variable>.pDirectOutBuf
.L2542:
	movw	r3, #:lower16:11123132	@,
	movt	r3, #:upper16:11123132	@,
	add	r0, r4, r3	@, pMvcCtx,
	mov	r1, #344	@,
	bl	__memzero	@
	movw	r2, #:lower16:11123112	@ tmp456,
	movt	r2, #:upper16:11123112	@ tmp456,
	mov	r5, #0	@ tmp459,
	movw	ip, #:lower16:11123340	@ tmp455,
	movw	r1, #:lower16:11123344	@ tmp458,
	ldr	r6, [r4, r2]	@ <variable>.DPB.size, <variable>.DPB.size
	movt	ip, #:upper16:11123340	@ tmp455,
	movt	r1, #:upper16:11123344	@ tmp458,
	mov	r3, r5	@ i, tmp459
	mov	r2, r4	@ ivtmp.7678, pMvcCtx
	mov	r0, r5	@ tmp522, i
	str	r6, [r4, ip]	@ <variable>.DPB.size, <variable>.APC.size
	str	r5, [r4, r1]	@ tmp459, <variable>.APC.used_size
.L2546:
	add	r3, r3, #2	@ i, i,
	add	lr, r2, #4	@ tmp528, ivtmp.7678,
	cmp	r3, #18	@ i,
	str	r0, [r2, #148]	@ tmp522, <variable>.PmvStoreUsedFlag
	str	r0, [lr, #148]	@ tmp522, <variable>.PmvStoreUsedFlag
	add	r2, lr, #4	@ ivtmp.7678, tmp528,
	bne	.L2546	@,
	movw	r1, #:lower16:11117208	@ ivtmp.7668,
	movt	r1, #:upper16:11117208	@ ivtmp.7668,
	add	r5, r4, r1	@ ivtmp.7668, pMvcCtx, ivtmp.7668
	mov	ip, r0	@ j, i.7688
	mov	r6, r0	@ tmp521, i.7688
.L2547:
	add	r2, r0, r0, asl #5	@, tmp466, i.7688, i.7688,
	mov	r1, #1	@ j,
	mov	r3, r2, asl #2	@ tmp467, tmp466,
	add	lr, r3, #256	@ tmp468, tmp467,
	add	r2, r4, lr	@ ivtmp.7660, pMvcCtx, tmp468
	add	r2, r2, #4	@ ivtmp.7660, ivtmp.7660,
	str	ip, [r4, lr]	@ j, <variable>.pListX
.L2548:
	add	r1, r1, #2	@ j, j,
	mov	r3, r2	@ tmp526, ivtmp.7660
	cmp	r1, #33	@ j,
	str	ip, [r3], #4	@ j, <variable>.pListX
	str	ip, [r2, #4]	@ j, <variable>.pListX
	add	r2, r3, #4	@ ivtmp.7660, tmp526,
	bne	.L2548	@,
	add	r0, r0, #1	@ i.7688, i.7688,
	str	r6, [r5], #4	@ tmp521, <variable>.CurrSlice.listXsize
	cmp	r0, #2	@ i.7688,
	bne	.L2547	@,
	mov	r0, r6	@ D.42330, tmp521
.L2549:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L2560:
	mov	r1, r7	@, D.42349
	mov	r0, r4	@, pMvcCtx
	bl	MVC_OutputFrmToVO	@
	subs	ip, r0, #0	@ ret,
	bne	.L2561	@,
.L2544:
	ldr	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, #0	@ <variable>.pDirectOutBuf,
	bne	.L2543	@,
	b	.L2542	@
.L2561:
	movw	r1, #:lower16:.LC75	@,
	ldr	r2, .L2562	@,
	movt	r1, #:upper16:.LC75	@,
	movw	r3, #5657	@,
	mov	r0, #22	@,
	str	ip, [sp, #0]	@ ret,
	bl	dprint_vfmw	@
	b	.L2544	@
.L2563:
	.align	2
.L2562:
	.word	.LANCHOR0+268
	.fnend
	.size	MVC_InitDPB, .-MVC_InitDPB
	.align	2
	.global	MVC_DEC_GetRemainImg
	.type	MVC_DEC_GetRemainImg, %function
MVC_DEC_GetRemainImg:
	.fnstart
.LFB1571:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #:lower16:11123112	@ tmp148,
	movt	sl, #:upper16:11123112	@ tmp148,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L2565	@,
	movw	r5, #:lower16:11122920	@ ivtmp.7900,
	movt	r5, #:upper16:11122920	@ ivtmp.7900,
	add	r5, r0, r5	@ ivtmp.7900, pMvcCtx, ivtmp.7900
	mov	r6, #0	@ flush_size,
	mov	r8, r6	@ i, flush_size
	mov	r7, r5	@ ivtmp.7906, ivtmp.7900
	b	.L2567	@
.L2566:
	ldr	r3, [r4, sl]	@ prephitmp.7878, <variable>.DPB.size
	cmp	r3, r8	@ prephitmp.7878, i
	bls	.L2592	@,
.L2567:
	ldr	r3, [r7, #0]	@ D.40340, <variable>.DPB.fs
	add	r8, r8, #1	@ i, i,
	add	r7, r7, #4	@ ivtmp.7906, ivtmp.7906,
	cmp	r3, #0	@ D.40340,
	beq	.L2566	@,
	ldrb	r2, [r3, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	beq	.L2566	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pLogicfs
	beq	.L2566	@,
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	ldr	r3, [r4, sl]	@ prephitmp.7878, <variable>.DPB.size
	sub	r1, ip, #1	@ tmp156, <variable>.s32DispState,
	uxtb	r0, r1	@ tmp157, tmp156
	cmp	r0, #1	@ tmp157,
	addls	r6, r6, #1	@ flush_size, flush_size,
	cmp	r3, r8	@ prephitmp.7878, i
	bhi	.L2567	@,
.L2592:
	cmp	r6, #0	@ flush_size,
	mvneq	r7, #0	@ ret,
	beq	.L2569	@,
	sub	sl, fp, #52	@ tmp171,,
	sub	r8, fp, #48	@ tmp172,,
	mvn	r7, #0	@ ret,
	mov	r0, r4	@, pMvcCtx
	mov	r2, sl	@, tmp171
	mov	r3, r8	@, tmp172
	mov	r1, r7	@, ret
	add	r9, r6, r7	@ tmp177, flush_size, tmp1
	bl	MVC_GetMinPOC	@
	ldr	r2, [fp, #-48]	@ pos.542, pos
	and	r3, r9, #1	@ tmp178, tmp177,
	cmp	r2, r7	@ pos.542,
	beq	.L2590	@,
	movw	lr, #:lower16:2780730	@ tmp184,
	movt	lr, #:upper16:2780730	@ tmp184,
	add	r7, r2, lr	@ tmp184, pos.542, tmp184
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, flush_size
	ldr	r1, [r4, r7, asl #2]	@, <variable>.DPB.fs
	str	r3, [fp, #-56]	@,
	bl	MVC_OutputFrmToVO	@
	subs	r6, r9, #0	@ flush_size, tmp177
	ldr	r3, [fp, #-56]	@,
	mov	r7, r0	@ ret,
	beq	.L2590	@,
	cmp	r3, #0	@ tmp178,
	beq	.L2573	@,
	mov	r2, sl	@, tmp171
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	mov	r3, r8	@, tmp172
	bl	MVC_GetMinPOC	@
	ldr	r2, [fp, #-48]	@ pos.542, pos
	cmn	r2, #1	@ pos.542,
	beq	.L2590	@,
	movw	r3, #:lower16:2780730	@ tmp187,
	movt	r3, #:upper16:2780730	@ tmp187,
	add	r3, r2, r3	@ tmp187, pos.542, tmp187
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, flush_size
	b	.L2587	@
.L2573:
	mov	r3, r8	@, tmp172
	mvn	r1, #0	@,
	mov	r2, sl	@, tmp171
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.542, pos
	movw	r3, #:lower16:2780730	@ tmp162,
	movt	r3, #:upper16:2780730	@ tmp162,
	cmn	r1, #1	@ pos.542,
	mov	r2, r6	@, flush_size
	mov	r0, r4	@, pMvcCtx
	sub	r6, r6, #1	@ tmp179, flush_size,
	add	r3, r1, r3	@ tmp162, pos.542, tmp162
	beq	.L2590	@,
	ldr	r1, [r4, r3, asl #2]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	mvn	r1, #0	@,
	mov	r2, sl	@, tmp171
	mov	r3, r8	@, tmp172
	mov	r7, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetMinPOC	@
	ldr	ip, [fp, #-48]	@ pos.542, pos
	movw	r1, #:lower16:2780730	@ tmp189,
	movt	r1, #:upper16:2780730	@ tmp189,
	cmn	ip, #1	@ pos.542,
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, tmp179
	add	r3, ip, r1	@ tmp189, pos.542, tmp189
	beq	.L2590	@,
.L2587:
	ldr	r1, [r4, r3, asl #2]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	subs	r6, r6, #1	@ flush_size, tmp179,
	mov	r7, r0	@ ret,
	bne	.L2573	@,
.L2590:
	movw	lr, #:lower16:11123112	@ tmp161,
	movt	lr, #:upper16:11123112	@ tmp161,
	ldr	r3, [r4, lr]	@ prephitmp.7878, <variable>.DPB.size
.L2569:
	cmp	r3, #0	@ prephitmp.7878,
	movwne	r8, #:lower16:11123112	@ tmp174,
	movne	r6, #0	@ i.7905,
	movtne	r8, #:upper16:11123112	@ tmp174,
	bne	.L2575	@,
	b	.L2572	@
.L2574:
	ldr	r0, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i.7905
	bls	.L2572	@,
.L2575:
	ldr	r1, [r5, #0]	@ temp.7904, <variable>.DPB.fs
	add	r6, r6, #1	@ i.7905, i.7905,
	add	r5, r5, #4	@ ivtmp.7900, ivtmp.7900,
	cmp	r1, #0	@ temp.7904,
	beq	.L2574	@,
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	beq	.L2574	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r0, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i.7905
	bhi	.L2575	@,
.L2572:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_RemoveUnUsedFrameStore	@
	cmp	r7, #0	@ ret,
	bne	.L2577	@,
.L2576:
	mov	r0, r7	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2565:
	mvn	r1, #0	@,
	bl	MVC_RemoveUnUsedFrameStore	@
.L2577:
	add	r0, r4, #584	@, pMvcCtx,
	bl	GetVoLastImageID	@
	mov	r7, r0	@ ret,
	b	.L2576	@
	.fnend
	.size	MVC_DEC_GetRemainImg, .-MVC_DEC_GetRemainImg
	.align	2
	.global	MVC_DirectOutput
	.type	MVC_DirectOutput, %function
MVC_DirectOutput:
	.fnstart
.LFB1569:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11151963	@ tmp183,
	movt	r3, #:upper16:11151963	@ tmp183,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #1	@ <variable>.CurrPic.structure,
	beq	.L2596	@,
	bcc	.L2595	@,
	cmp	r3, #2	@ <variable>.CurrPic.structure,
	movne	r5, #0	@ ret,
	beq	.L2641	@,
.L2598:
	mov	r0, r5	@, ret
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L2595:
	movw	r5, #:lower16:11152504	@ tmp186,
	movt	r5, #:upper16:11152504	@ tmp186,
	mov	r2, #0	@ tmp187,
	ldr	r1, [r0, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r2, [r1, #600]	@ tmp187, <variable>.frame.structure
	ldr	r1, [r0, #520]	@ temp.7961, <variable>.pDirectOutBuf
	cmp	r1, r2	@ temp.7961,
	beq	.L2599	@,
	bl	MVC_OutputFrmToVO	@
	subs	ip, r0, #0	@ ret.7962,
	bne	.L2642	@,
.L2600:
	ldr	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, #0	@ <variable>.pDirectOutBuf,
	beq	.L2601	@,
	movw	r7, #:lower16:11152504	@ tmp195,
	movt	r7, #:upper16:11152504	@ tmp195,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r6, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrsb	r1, [r6, #6]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2601:
	mov	r2, #0	@ tmp197,
	str	r2, [r4, #520]	@ tmp197, <variable>.pDirectOutBuf
.L2599:
	movw	r6, #:lower16:11152504	@ tmp198,
	movt	r6, #:upper16:11152504	@ tmp198,
	movw	lr, #:lower16:11151962	@ tmp208,
	movt	lr, #:upper16:11151962	@ tmp208,
	ldr	ip, [r4, r6]	@ temp.7965, <variable>.CurrPic.frame_store
	mov	r5, #0	@ tmp215,
	movw	r1, #:lower16:11151976	@,
	movt	r1, #:upper16:11151976	@,
	mov	r2, #528	@,
	add	r1, r4, r1	@, pMvcCtx,
	str	ip, [r4, #520]	@ temp.7965, <variable>.pDirectOutBuf
	str	ip, [ip, #604]	@ temp.7965, <variable>.frame.frame_store
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r3, #640]	@ <variable>.CurrPic.frame_store, <variable>.top_field.frame_store
	ldr	r8, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r7, [r8, #676]	@ <variable>.CurrPic.frame_store, <variable>.bottom_field.frame_store
	mov	r7, #3	@ tmp212,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [ip, #1]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r3, #2]	@ tmp212, <variable>.is_used
	ldr	r8, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [r8, #3]	@ tmp215, <variable>.is_reference
	movw	r8, #:lower16:11151972	@ tmp234,
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r8, #:upper16:11151972	@ tmp234,
	strb	r5, [lr, #5]	@ tmp215, <variable>.is_in_dpb
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [ip, #7]	@ tmp215, <variable>.is_displayed
	ldr	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, r0, #72	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r1, #:lower16:11152556	@ tmp229,
	movt	r1, #:upper16:11152556	@ tmp229,
	ldr	r2, [r4, #520]	@ temp.7977, <variable>.pDirectOutBuf
	movw	lr, #:lower16:11151969	@ tmp238,
	movt	lr, #:upper16:11151969	@ tmp238,
	ldr	r3, [r4, r1]	@ D.40150, <variable>.CurrPic.err_level
	movw	ip, #:lower16:11151967	@ tmp240,
	movt	ip, #:upper16:11151967	@ tmp240,
	movw	r0, #:lower16:11152524	@ tmp244,
	movt	r0, #:upper16:11152524	@ tmp244,
	movw	r1, #:lower16:11152584	@ tmp247,
	str	r3, [r2, #44]	@ D.40150, <variable>.err_level
	movt	r1, #:upper16:11152584	@ tmp247,
	str	r3, [r2, #624]	@ D.40150, <variable>.frame.err_level
	movw	r3, #:lower16:11152588	@ tmp250,
	ldr	r7, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r3, #:upper16:11152588	@ tmp250,
	mov	r2, r5	@, tmp215
	strb	r5, [r7, #600]	@ tmp215, <variable>.frame.structure
	ldrb	r7, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r8, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r8, #0]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldrb	r8, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [lr, #40]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	lr, [r4, #520]	@ temp.7981, <variable>.pDirectOutBuf
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	ip, r5	@ iftmp.522, tmp2
	moveq	ip, #3	@ iftmp.522,
	strb	ip, [lr, #4]	@ iftmp.522, <variable>.mode_skip_flag
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [lr, #32]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [ip, #56]	@ <variable>.CurrPic.view_id, <variable>.view_id
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.voidx, <variable>.CurrPic.voidx
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r1, [r3, #60]	@ <variable>.CurrPic.voidx, <variable>.voidx
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r2, r5	@, tmp215
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, #520]	@, <variable>.pDirectOutBuf
	bl	MVC_OutputFrmToVO	@
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, #0	@ <variable>.pDirectOutBuf,
	mov	r5, r0	@ ret,
	beq	.L2632	@,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2632:
	mov	r2, #0	@ tmp545,
	str	r2, [r4, #520]	@ tmp545, <variable>.pDirectOutBuf
	b	.L2598	@
.L2596:
	movw	r6, #:lower16:11152504	@ tmp263,
	movt	r6, #:upper16:11152504	@ tmp263,
	movw	r5, #:lower16:11151961	@ tmp266,
	movt	r5, #:upper16:11151961	@ tmp266,
	ldr	r2, [r0, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r8, #3	@ tmp264,
	strb	r8, [r2, #600]	@ tmp264, <variable>.frame.structure
	ldrb	r2, [r0, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2605	@,
	ldr	r1, [r0, #520]	@ temp.7994, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.7994,
	beq	.L2606	@,
	bl	MVC_OutputFrmToVO	@
	ldr	r7, [r4, r6]	@ temp.7995, <variable>.CurrPic.frame_store
	str	r7, [r4, #520]	@ temp.7995, <variable>.pDirectOutBuf
	str	r7, [r7, #640]	@ temp.7995, <variable>.top_field.frame_store
	mov	r5, r0	@ ret,
.L2607:
	movw	r6, #:lower16:11151962	@ tmp273,
	movt	r6, #:upper16:11151962	@ tmp273,
	ldr	r2, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r8, #1	@ tmp277,
	ldrb	lr, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r6, #0	@ tmp280,
	movw	ip, #:lower16:11151972	@ tmp289,
	movt	ip, #:upper16:11151972	@ tmp289,
	movw	r1, #:lower16:11151976	@,
	movt	r1, #:upper16:11151976	@,
	strb	lr, [r2, #1]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	add	r1, r4, r1	@, pMvcCtx,
	ldr	r7, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, #528	@,
	strb	r8, [r7, #2]	@ tmp277, <variable>.is_used
	ldr	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [r0, #5]	@ tmp280, <variable>.is_in_dpb
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [r3, #7]	@ tmp280, <variable>.is_displayed
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [lr, #3]	@ tmp280, <variable>.is_reference
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r7, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [r7, #0]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r6, [r3, #40]	@ tmp280, <variable>.MbaffFrameFlag
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #72	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r1, #:lower16:11152556	@ tmp301,
	movt	r1, #:upper16:11152556	@ tmp301,
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r0, #:lower16:11151967	@ tmp307,
	movt	r0, #:upper16:11151967	@ tmp307,
	ldr	r7, [r4, r1]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r2, #:lower16:11152584	@ tmp315,
	movw	r1, #:lower16:11152524	@ tmp312,
	movw	r3, #:lower16:11152588	@ tmp318,
	movt	r1, #:upper16:11152524	@ tmp312,
	movt	r2, #:upper16:11152584	@ tmp315,
	str	r7, [ip, #660]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	movt	r3, #:upper16:11152588	@ tmp318,
	ldr	ip, [r4, #520]	@ temp.8010, <variable>.pDirectOutBuf
	ldr	r7, [ip, #660]	@ D.40175, <variable>.top_field.err_level
	str	r7, [ip, #44]	@ D.40175, <variable>.err_level
	str	r7, [ip, #624]	@ D.40175, <variable>.frame.err_level
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [ip, #636]	@ tmp277, <variable>.top_field.structure
	ldrb	r0, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, r8	@ <variable>.CurrPic.mode_skip_flag,
	movne	r0, #0	@, tmp309
	moveq	r0, #1	@, tmp309
	b	.L2640	@
.L2641:
	movw	r6, #:lower16:11152504	@ tmp406,
	movt	r6, #:upper16:11152504	@ tmp406,
	movw	r7, #:lower16:11151961	@ tmp409,
	movt	r7, #:upper16:11151961	@ tmp409,
	ldr	r2, [r0, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	ip, #3	@ tmp407,
	strb	ip, [r2, #600]	@ tmp407, <variable>.frame.structure
	ldrb	r2, [r0, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2618	@,
	ldr	r1, [r0, #520]	@ temp.8062, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.8062,
	beq	.L2619	@,
	bl	MVC_OutputFrmToVO	@
	mov	r5, r0	@ ret,
	ldr	r0, [r4, r6]	@ temp.8063, <variable>.CurrPic.frame_store
	str	r0, [r4, #520]	@ temp.8063, <variable>.pDirectOutBuf
	str	r0, [r0, #676]	@ temp.8063, <variable>.bottom_field.frame_store
.L2620:
	movw	r6, #:lower16:11151962	@ tmp416,
	movt	r6, #:upper16:11151962	@ tmp416,
	ldr	r2, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r8, #2	@ tmp420,
	ldrb	lr, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r6, #0	@ tmp423,
	movw	ip, #:lower16:11151972	@ tmp432,
	movt	ip, #:upper16:11151972	@ tmp432,
	movw	r1, #:lower16:11151976	@,
	movt	r1, #:upper16:11151976	@,
	strb	lr, [r2, #1]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	add	r1, r4, r1	@, pMvcCtx,
	ldr	r7, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, #528	@,
	strb	r8, [r7, #2]	@ tmp420, <variable>.is_used
	ldr	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [r0, #5]	@ tmp423, <variable>.is_in_dpb
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [r3, #7]	@ tmp423, <variable>.is_displayed
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [lr, #3]	@ tmp423, <variable>.is_reference
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r7, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [r7, #0]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r6, [r3, #40]	@ tmp423, <variable>.MbaffFrameFlag
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #72	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r1, #:lower16:11152556	@ tmp444,
	movt	r1, #:upper16:11152556	@ tmp444,
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r0, #:lower16:11151967	@ tmp449,
	movt	r0, #:upper16:11151967	@ tmp449,
	ldr	r7, [r4, r1]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r2, #:lower16:11152584	@ tmp456,
	movw	r1, #:lower16:11152524	@ tmp453,
	movw	r3, #:lower16:11152588	@ tmp459,
	movt	r1, #:upper16:11152524	@ tmp453,
	movt	r2, #:upper16:11152584	@ tmp456,
	str	r7, [ip, #696]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	movt	r3, #:upper16:11152588	@ tmp459,
	ldr	ip, [r4, #520]	@ temp.8078, <variable>.pDirectOutBuf
	ldr	r7, [ip, #696]	@ temp.8079, <variable>.bottom_field.err_level
	str	r7, [ip, #44]	@ temp.8079, <variable>.err_level
	str	r7, [ip, #624]	@ temp.8079, <variable>.frame.err_level
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [ip, #672]	@ tmp420, <variable>.bottom_field.structure
	ldrb	r0, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	ip, [r4, #520]	@ temp.8081, <variable>.pDirectOutBuf
	cmp	r0, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r0, r8	@ iftmp.530,
	movne	r0, r6	@ iftmp.530,
.L2640:
	strb	r0, [ip, #4]	@ iftmp.530, <variable>.mode_skip_flag
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r8, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	lr, [r8, #32]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r0, [r4, r2]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [r1, #56]	@ <variable>.CurrPic.view_id, <variable>.view_id
	ldr	r8, [r4, r3]	@ <variable>.CurrPic.voidx, <variable>.CurrPic.voidx
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [ip, #60]	@ <variable>.CurrPic.voidx, <variable>.voidx
	ldrb	r8, [r4, #9]	@ zero_extendqisi2	@ <variable>.IModeOutFlag, <variable>.IModeOutFlag
	cmp	r8, #1	@ <variable>.IModeOutFlag,
	bne	.L2598	@,
	ldr	r5, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, r6	@, tmp423
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, tmp423
	ldr	r1, [r4, #520]	@, <variable>.pDirectOutBuf
	bl	MVC_OutputFrmToVO	@
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, r6	@ <variable>.pDirectOutBuf,
	mov	r5, r0	@ ret,
	beq	.L2632	@,
	movw	r1, #:lower16:11152504	@ tmp469,
	movt	r1, #:upper16:11152504	@ tmp469,
	mov	r2, r8	@, <variable>.IModeOutFlag
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	ip, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	b	.L2632	@
.L2618:
	ldr	lr, [r0, #520]	@ prephitmp.8044, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11151976	@,
	movt	r7, #:upper16:11151976	@,
	mov	r2, #528	@,
	cmp	lr, #0	@ prephitmp.8044,
	add	r1, r4, r7	@, pMvcCtx,
	ldreq	lr, [r0, r6]	@ temp.8100, <variable>.CurrPic.frame_store
	streq	lr, [r0, #520]	@ temp.8100, <variable>.pDirectOutBuf
	streq	lr, [lr, #676]	@ temp.8100, <variable>.bottom_field.frame_store
	ldreq	lr, [r0, #520]	@ prephitmp.8044, <variable>.pDirectOutBuf
	add	r0, lr, #72	@, prephitmp.8044,
	ldrd	r6, [lr, #88]	@, prephitmp.8044,
	ldr	r5, [lr, #80]	@ OtherFieldPts.8101, <variable>.fs_image.PTS
	ldr	r8, [lr, #84]	@ OtherFieldPts.8101, <variable>.fs_image.PTS
	strd	r6, [fp, #-52]	@,,
	ldrd	r6, [lr, #96]	@, prephitmp.8044,
	strd	r6, [fp, #-44]	@,,
	bl	memcpy	@
	movw	r1, #:lower16:11151984	@ tmp487,
	movt	r1, #:upper16:11151984	@ tmp487,
	add	r3, r4, r1	@ tmp487, pMvcCtx, tmp487
	movw	r0, #:lower16:11151984	@ tmp481,
	movt	r0, #:upper16:11151984	@ tmp481,
	and	r1, r5, r8	@ tmp479, OtherFieldPts.8101, OtherFieldPts.8101
	ldr	ip, [r3, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	and	r3, r2, ip	@ tmp483, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	ip, #:lower16:11151992	@ tmp495,
	cmn	r3, #1	@ tmp483,
	movne	r0, #0	@, tmp492
	moveq	r0, #1	@, tmp492
	cmn	r1, #1	@ tmp479,
	movt	ip, #:upper16:11151992	@ tmp495,
	movw	r3, #:lower16:11152000	@ tmp498,
	moveq	r0, #0	@, tmp492,
	cmp	r0, #0	@ tmp492,
	movt	r3, #:upper16:11152000	@ tmp498,
	ldrne	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r5, [r0, #80]	@ OtherFieldPts.8101, <variable>.fs_image.PTS
	strne	r8, [r0, #84]	@ OtherFieldPts.8101, <variable>.fs_image.PTS
	ldrd	r0, [r4, ip]	@ <variable>.CurrPic.fs_image.Usertag, pMvcCtx, tmp495
	ldrd	r6, [fp, #-52]	@,,
	ldr	r2, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r1, r7	@ <variable>.CurrPic.fs_image.Usertag,
	cmpeq	r0, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r0, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r1, r7	@ <variable>.CurrPic.fs_image.Usertag,
	strd	r0, [r2, #88]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	ldrd	r6, [fp, #-44]	@,,
	ldrd	r2, [r3, r4]	@ <variable>.CurrPic.fs_image.DispTime, tmp498, pMvcCtx
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, r7	@ <variable>.CurrPic.fs_image.DispTime,
	cmpeq	r2, r6	@ <variable>.CurrPic.fs_image.DispTime,
	movhi	r2, r6	@ <variable>.CurrPic.fs_image.DispTime,
	movhi	r3, r7	@ <variable>.CurrPic.fs_image.DispTime,
	strd	r2, [r1, #96]	@ <variable>.CurrPic.fs_image.DispTime, <variable>.pDirectOutBuf,
	movw	r2, #:lower16:11151972	@ tmp507,
	ldr	r3, [r4, #520]	@ temp.8115, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11151972	@ tmp507,
	ldrb	r5, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r5, #0	@ <variable>.non_existing,
	movwne	r5, #:lower16:11151962	@ tmp501,
	movtne	r5, #:upper16:11151962	@ tmp501,
	ldrneb	r5, [r4, r5]	@ zero_extendqisi2	@ iftmp.532, <variable>.CurrPic.non_existing
	strb	r5, [r3, #1]	@ iftmp.532, <variable>.non_existing
	movw	r5, #:lower16:11152556	@ tmp519,
	ldr	r0, [r4, #520]	@ temp.8117, <variable>.pDirectOutBuf
	movt	r5, #:upper16:11152556	@ tmp519,
	movw	r3, #:lower16:11151967	@ tmp527,
	movt	r3, #:upper16:11151967	@ tmp527,
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r1, ip, #2	@ tmp505, <variable>.is_used,
	strb	r1, [r0, #2]	@ tmp505, <variable>.is_used
	ldr	r0, [r4, #520]	@ temp.8120, <variable>.pDirectOutBuf
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldrb	ip, [r0, #0]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	cmp	ip, r1	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	movcs	r1, ip	@ tmp510, <variable>.pic_type
	strb	r1, [r0, #0]	@ tmp510, <variable>.pic_type
	ldr	r2, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r0, #2	@ tmp513,
	mov	ip, #3	@ tmp516,
	strb	r0, [r2, #672]	@ tmp513, <variable>.bottom_field.structure
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	ip, [r1, #600]	@ tmp516, <variable>.frame.structure
	ldr	r0, [r4, r5]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r2, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [r2, #696]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	ldr	r2, [r4, #520]	@ temp.8127, <variable>.pDirectOutBuf
	ldr	r1, [r2, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	ip, [r2, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r5, r1, ip	@ tmp521, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	r0, r5, lsr #1	@ tmp524, tmp521,
	str	r0, [r2, #624]	@ tmp524, <variable>.frame.err_level
	ldr	r1, [r4, #520]	@ temp.8132, <variable>.pDirectOutBuf
	ldr	ip, [r1, #624]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	ip, [r1, #44]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	r5, [r4, #520]	@ temp.8134, <variable>.pDirectOutBuf
	ldr	r0, [r5, #676]	@ <variable>.bottom_field.frame_store, <variable>.bottom_field.frame_store
	str	r0, [r5, #604]	@ <variable>.bottom_field.frame_store, <variable>.frame.frame_store
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r2, #1	@ <variable>.CurrPic.mode_skip_flag,
	beq	.L2643	@,
.L2630:
	ldr	r2, [r4, #520]	@ temp.7960, <variable>.pDirectOutBuf
	ldrb	r1, [r2, #4]	@ zero_extendqisi2	@ iftmp.533, <variable>.mode_skip_flag
.L2631:
	movw	lr, #:lower16:11152524	@ tmp534,
	movt	lr, #:upper16:11152524	@ tmp534,
	strb	r1, [r2, #4]	@ iftmp.533, <variable>.mode_skip_flag
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [r1, #32]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r3, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, #520]	@, <variable>.pDirectOutBuf
	mov	r2, #0	@,
	bl	MVC_OutputFrmToVO	@
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, #0	@ <variable>.pDirectOutBuf,
	mov	r5, r0	@ ret,
	beq	.L2632	@,
	movw	r3, #:lower16:11152504	@ tmp543,
	movt	r3, #:upper16:11152504	@ tmp543,
	mov	r2, #1	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	mov	r2, #0	@ tmp545,
	str	r2, [r4, #520]	@ tmp545, <variable>.pDirectOutBuf
	b	.L2598	@
.L2605:
	ldr	lr, [r0, #520]	@ prephitmp.7938, <variable>.pDirectOutBuf
	movw	r8, #:lower16:11151976	@,
	movt	r8, #:upper16:11151976	@,
	mov	r2, #528	@,
	cmp	lr, #0	@ prephitmp.7938,
	add	r1, r4, r8	@, pMvcCtx,
	ldreq	lr, [r0, r6]	@ temp.8030, <variable>.CurrPic.frame_store
	streq	lr, [r0, #520]	@ temp.8030, <variable>.pDirectOutBuf
	streq	lr, [lr, #640]	@ temp.8030, <variable>.top_field.frame_store
	ldreq	lr, [r0, #520]	@ prephitmp.7938, <variable>.pDirectOutBuf
	add	r0, lr, #72	@, prephitmp.7938,
	ldrd	r6, [lr, #88]	@, prephitmp.7938,
	ldr	r5, [lr, #80]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	r8, [lr, #84]	@ OtherFieldPts, <variable>.fs_image.PTS
	strd	r6, [fp, #-52]	@,,
	ldrd	r6, [lr, #96]	@, prephitmp.7938,
	strd	r6, [fp, #-44]	@,,
	bl	memcpy	@
	movw	r1, #:lower16:11151984	@ tmp346,
	movt	r1, #:upper16:11151984	@ tmp346,
	add	r3, r4, r1	@ tmp346, pMvcCtx, tmp346
	movw	r0, #:lower16:11151984	@ tmp340,
	movt	r0, #:upper16:11151984	@ tmp340,
	and	r1, r5, r8	@ tmp338, OtherFieldPts, OtherFieldPts
	ldr	ip, [r3, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	and	r3, r2, ip	@ tmp342, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	cmn	r3, #1	@ tmp342,
	movne	r0, #0	@, tmp351
	moveq	r0, #1	@, tmp351
	cmn	r1, #1	@ tmp338,
	movw	r3, #:lower16:11152000	@ tmp357,
	movt	r3, #:upper16:11152000	@ tmp357,
	moveq	r0, #0	@, tmp351,
	cmp	r0, #0	@ tmp351,
	ldrd	r2, [r3, r4]	@ <variable>.CurrPic.fs_image.DispTime, tmp357, pMvcCtx
	ldrne	r0, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r5, [r0, #80]	@ OtherFieldPts, <variable>.fs_image.PTS
	movw	r5, #:lower16:11151992	@ tmp354,
	movt	r5, #:upper16:11151992	@ tmp354,
	strne	r8, [r0, #84]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	r6, [fp, #-52]	@,,
	ldrd	r0, [r4, r5]	@ <variable>.CurrPic.fs_image.Usertag, pMvcCtx, tmp354
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r1, r7	@ <variable>.CurrPic.fs_image.Usertag,
	cmpeq	r0, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r0, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r1, r7	@ <variable>.CurrPic.fs_image.Usertag,
	strd	r0, [ip, #88]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	ldrd	r6, [fp, #-44]	@,,
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, r7	@ <variable>.CurrPic.fs_image.DispTime,
	cmpeq	r2, r6	@ <variable>.CurrPic.fs_image.DispTime,
	movhi	r2, r6	@ <variable>.CurrPic.fs_image.DispTime,
	movhi	r3, r7	@ <variable>.CurrPic.fs_image.DispTime,
	strd	r2, [r1, #96]	@ <variable>.CurrPic.fs_image.DispTime, <variable>.pDirectOutBuf,
	movw	r1, #:lower16:11151972	@ tmp366,
	ldr	r3, [r4, #520]	@ temp.8034, <variable>.pDirectOutBuf
	movt	r1, #:upper16:11151972	@ tmp366,
	ldrb	r2, [r3, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	movwne	r2, #:lower16:11151962	@ tmp360,
	movtne	r2, #:upper16:11151962	@ tmp360,
	ldrneb	r2, [r4, r2]	@ zero_extendqisi2	@ iftmp.526, <variable>.CurrPic.non_existing
	strb	r2, [r3, #1]	@ iftmp.526, <variable>.non_existing
	movw	r2, #:lower16:11152556	@ tmp378,
	ldr	r0, [r4, #520]	@ temp.8035, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11152556	@ tmp378,
	movw	r3, #:lower16:11151967	@ tmp386,
	movt	r3, #:upper16:11151967	@ tmp386,
	ldrb	r5, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	ip, r5, #1	@ tmp364, <variable>.is_used,
	strb	ip, [r0, #2]	@ tmp364, <variable>.is_used
	ldr	r0, [r4, #520]	@ temp.8037, <variable>.pDirectOutBuf
	ldrb	r1, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldrb	r5, [r0, #0]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	cmp	r5, r1	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	movcs	r1, r5	@ tmp369, <variable>.pic_type
	strb	r1, [r0, #0]	@ tmp369, <variable>.pic_type
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r5, #1	@ tmp372,
	mov	r0, #3	@ tmp375,
	strb	r5, [ip, #636]	@ tmp372, <variable>.top_field.structure
	ldr	r1, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [r1, #600]	@ tmp375, <variable>.frame.structure
	ldr	r5, [r4, r2]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	ip, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r5, [ip, #660]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	ldr	ip, [r4, #520]	@ temp.8042, <variable>.pDirectOutBuf
	ldr	r0, [ip, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r2, [ip, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r1, r0, r2	@ tmp380, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	r5, r1, lsr #1	@ tmp383, tmp380,
	str	r5, [ip, #624]	@ tmp383, <variable>.frame.err_level
	ldr	r2, [r4, #520]	@ temp.8045, <variable>.pDirectOutBuf
	ldr	r1, [r2, #624]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	r1, [r2, #44]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	r0, [r4, #520]	@ temp.8046, <variable>.pDirectOutBuf
	ldr	ip, [r0, #640]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	str	ip, [r0, #604]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	ldrb	r5, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r5, #1	@ <variable>.CurrPic.mode_skip_flag,
	bne	.L2630	@,
	ldr	r2, [r4, #520]	@ D.40137, <variable>.pDirectOutBuf
	ldrb	r5, [r2, #4]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r1, r5, #1	@ iftmp.527, <variable>.mode_skip_flag,
	b	.L2631	@
.L2642:
	movw	r1, #:lower16:.LC76	@,
	ldr	r2, .L2644	@,
	movt	r1, #:upper16:.LC76	@,
	movw	r3, #2442	@,
	mov	r0, #22	@,
	str	ip, [sp, #0]	@ ret.7962,
	bl	dprint_vfmw	@
	b	.L2600	@
.L2606:
	ldr	r3, [r0, r6]	@ temp.7997, <variable>.CurrPic.frame_store
	mov	r5, r1	@ ret, temp.7994
	str	r3, [r0, #520]	@ temp.7997, <variable>.pDirectOutBuf
	str	r3, [r3, #640]	@ temp.7997, <variable>.top_field.frame_store
	b	.L2607	@
.L2619:
	ldr	r3, [r0, r6]	@ temp.8065, <variable>.CurrPic.frame_store
	mov	r5, r1	@ ret, temp.8062
	str	r3, [r0, #520]	@ temp.8065, <variable>.pDirectOutBuf
	str	r3, [r3, #676]	@ temp.8065, <variable>.bottom_field.frame_store
	b	.L2620	@
.L2643:
	ldr	r2, [r4, #520]	@ temp.7960, <variable>.pDirectOutBuf
	ldrb	r5, [r2, #4]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r1, r5, #2	@ iftmp.533, <variable>.mode_skip_flag,
	b	.L2631	@
.L2645:
	.align	2
.L2644:
	.word	.LANCHOR0+280
	.fnend
	.size	MVC_DirectOutput, .-MVC_DirectOutput
	.align	2
	.global	MVC_OutputFrmFromDPB
	.type	MVC_OutputFrmFromDPB, %function
MVC_OutputFrmFromDPB:
	.fnstart
.LFB1564:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:2780730	@ tmp138,
	movt	r4, #:upper16:2780730	@ tmp138,
	mov	r6, r1	@ pos, pos
	add	r4, r1, r4	@ tmp138, pos, tmp138
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r4, asl #2]	@ D.39843, <variable>.DPB.fs
	cmp	r3, #0	@ D.39843,
	moveq	r4, r3	@ ret, D.39843
	beq	.L2648	@,
	mov	r2, #0	@ tmp140,
	strb	r2, [r3, #5]	@ tmp140, <variable>.is_in_dpb
	ldr	r1, [r0, r4, asl #2]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	ldr	r1, [r5, r4, asl #2]	@ tmp147, <variable>.DPB.fs
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmn	r0, #1	@ ret,
	moveq	r4, r0	@, ret, ret
	movne	r4, #0	@, ret,
	cmp	r3, #0	@ <variable>.is_reference,
	beq	.L2651	@,
.L2648:
	mov	r0, r4	@, ret
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2651:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r6	@, pos
	bl	MVC_RemoveFrameStoreOutDPB	@
	mov	r0, r4	@, ret
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_OutputFrmFromDPB, .-MVC_OutputFrmFromDPB
	.align	2
	.global	MVC_FlushDPB
	.type	MVC_FlushDPB, %function
MVC_FlushDPB:
	.fnstart
.LFB1570:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r0, #0	@ pMvcCtx, pMvcCtx
	mov	r4, r1	@ CurrViewId, CurrViewId
	beq	.L2653	@,
	movw	r8, #:lower16:11123112	@ tmp158,
	movt	r8, #:upper16:11123112	@ tmp158,
	ldr	r3, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L2654	@,
	movw	r6, #:lower16:11122920	@ ivtmp.8211,
	movt	r6, #:upper16:11122920	@ ivtmp.8211,
	add	r6, r5, r6	@ ivtmp.8211, pMvcCtx, ivtmp.8211
	mov	r7, #0	@ i,
	b	.L2656	@
.L2655:
	ldr	r1, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r1, r7	@ <variable>.DPB.size, i
	bls	.L2654	@,
.L2656:
	ldr	r1, [r6, #0]	@ D.40276, <variable>.DPB.fs
	add	r7, r7, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.8211, ivtmp.8211,
	cmp	r1, #0	@ D.40276,
	beq	.L2655	@,
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2655	@,
	ldr	r2, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r2, r4	@, <variable>.view_id, CurrViewId
	bne	.L2655	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r1, r7	@ <variable>.DPB.size, i
	bhi	.L2656	@,
.L2654:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r4	@, CurrViewId
	bl	MVC_RemoveUnUsedFrameStore	@
	movw	ip, #:lower16:11123112	@ tmp172,
	movt	ip, #:upper16:11123112	@ tmp172,
	ldr	r0, [r5, ip]	@ temp.8214, <variable>.DPB.size
	cmp	r0, #0	@ temp.8214,
	beq	.L2657	@,
	mov	r0, r0, asl #2	@ D.56392, temp.8214,
	mov	sl, #0	@ flush_size,
	tst	r0, #4	@ D.56392,
	mov	r2, sl	@ ivtmp.8207, flush_size
	mvn	ip, #0	@ other_view_id.8227,
	beq	.L2691	@,
.L2662:
	add	r6, r5, r2	@ tmp173, pMvcCtx, ivtmp.8207
	movw	r3, #:lower16:11122920	@ tmp174,
	movt	r3, #:upper16:11122920	@ tmp174,
	add	lr, r6, r3	@ tmp174, tmp173, tmp174
	ldr	r3, [lr, #0]	@ temp.8216, <variable>.DPB.fs
	cmp	r3, #0	@ temp.8216,
	beq	.L2658	@,
	ldr	r6, [r3, #56]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r6, r4	@, other_view_id, CurrViewId
	bne	.L2659	@,
	cmn	r4, #1	@ CurrViewId,
	add	sl, sl, #1	@ flush_size, flush_size,
	bne	.L2659	@,
.L2658:
	add	r2, r2, #4	@ tmp213, ivtmp.8207,
	mov	r6, ip	@ other_view_id, other_view_id.8227
	cmp	r2, r0	@ tmp213, D.56392
	beq	.L2661	@,
.L2717:
	add	r1, r5, r2	@ tmp216, pMvcCtx, tmp213
	movw	lr, #:lower16:11122920	@ tmp218,
	movt	lr, #:upper16:11122920	@ tmp218,
	add	ip, r1, lr	@ tmp218, tmp216, tmp218
	ldr	r3, [ip, #0]	@ temp.8216, <variable>.DPB.fs
	cmp	r3, #0	@ temp.8216,
	beq	.L2685	@,
	ldr	ip, [r3, #56]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	ip, r4	@, other_view_id, CurrViewId
	bne	.L2686	@,
	cmn	r4, #1	@ CurrViewId,
	add	sl, sl, #1	@ flush_size, flush_size,
	bne	.L2686	@,
.L2685:
	mov	ip, r6	@ other_view_id, other_view_id
	add	r2, r2, #4	@ ivtmp.8207, tmp213,
	b	.L2662	@
.L2659:
	cmp	r4, r6	@ CurrViewId, other_view_id
	beq	.L2658	@,
	add	r2, r2, #4	@ tmp213, ivtmp.8207,
	cmp	r2, r0	@ tmp213, D.56392
	bne	.L2717	@,
.L2661:
	cmp	sl, #0	@ flush_size,
	beq	.L2657	@,
	adds	r9, r6, #1	@ pretmp.8188, other_view_id,
	movne	r9, #1	@ pretmp.8188
	sub	r0, sl, #1	@ tmp206, flush_size,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movge	r7, #0	@,
	andlt	r7, r9, #1	@,,, pretmp.8188
	and	r8, r0, #1	@, tmp206,
	cmp	r7, #0	@,
	str	r7, [fp, #-56]	@, %sfp
	str	r8, [fp, #-60]	@, %sfp
	sub	r7, fp, #48	@ tmp202,,
	sub	r8, fp, #52	@ tmp201,,
	bne	.L2718	@,
.L2670:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.8220, pos
	cmn	r1, #1	@ pos.8220,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2653	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	lr, #0	@, tmp229
	andgt	lr, r9, #1	@,, tmp229, pretmp.8188
	cmp	lr, #0	@ tmp229,
	bne	.L2719	@,
.L2671:
	subs	sl, sl, #1	@ flush_size, flush_size,
	beq	.L2657	@,
	ldr	r1, [fp, #-60]	@, %sfp
	cmp	r1, #0	@,
	beq	.L2665	@,
	ldr	r0, [fp, #-56]	@, %sfp
	cmp	r0, #0	@,
	bne	.L2694	@,
.L2677:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.8220, pos
	cmn	r1, #1	@ pos.8220,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2653	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	r2, #0	@, tmp249
	andgt	r2, r9, #1	@,, tmp249, pretmp.8188
	cmp	r2, #0	@ tmp249,
	bne	.L2720	@,
.L2678:
	subs	sl, sl, #1	@ flush_size, tmp208,
	beq	.L2657	@,
.L2665:
	ldr	r2, [fp, #-56]	@, %sfp
	cmp	r2, #0	@,
	beq	.L2663	@,
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.536, pos
	cmn	r1, #1	@ pos.536,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2653	@,
.L2663:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.8220, pos
	cmn	r1, #1	@ pos.8220,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2653	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	r3, #0	@, tmp196
	andgt	r3, r9, #1	@,, tmp196, pretmp.8188
	cmp	r3, #0	@ tmp196,
	bne	.L2721	@,
.L2664:
	ldr	ip, [fp, #-56]	@, %sfp
	sub	sl, sl, #1	@ tmp208, flush_size,
	cmp	ip, #0	@,
	beq	.L2677	@,
.L2694:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.536, pos
	cmn	r1, #1	@ pos.536,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2677	@,
.L2653:
	mvn	r0, #0	@ D.40274,
	b	.L2666	@
.L2686:
	cmp	r4, ip	@ CurrViewId, other_view_id
	beq	.L2685	@,
	add	r2, r2, #4	@ ivtmp.8207, tmp213,
	b	.L2662	@
.L2691:
	movw	r3, #:lower16:11122920	@ tmp254,
	movt	r3, #:upper16:11122920	@ tmp254,
	add	r6, r5, r3	@ tmp254, pMvcCtx, tmp254
	ldr	r3, [r6, #0]	@ temp.8216, <variable>.DPB.fs
	cmp	r3, #0	@ temp.8216,
	beq	.L2681	@,
	ldr	ip, [r3, #56]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	ip, r4	@, other_view_id, CurrViewId
	bne	.L2682	@,
	cmn	r4, #1	@ CurrViewId,
	mov	sl, #1	@ flush_size,
	bne	.L2682	@,
.L2681:
	mvn	ip, #0	@ other_view_id,
	mov	r2, #4	@ ivtmp.8207,
	b	.L2662	@
.L2682:
	cmp	r4, ip	@ CurrViewId, other_view_id
	beq	.L2681	@,
	mov	r2, #4	@ ivtmp.8207,
	b	.L2662	@
.L2720:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.8222, pos
	cmn	r1, #1	@ pos.8222,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2678	@,
	mvn	r0, #0	@ D.40274,
	b	.L2666	@
.L2721:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.8222, pos
	cmn	r1, #1	@ pos.8222,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2664	@,
	mvn	r0, #0	@ D.40274,
	b	.L2666	@
.L2657:
	mov	r0, #0	@ D.40274,
.L2666:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2718:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.536, pos
	cmn	r1, #1	@ pos.536,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2670	@,
	mvn	r0, #0	@ D.40274,
	b	.L2666	@
.L2719:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r8	@, tmp201
	mov	r3, r7	@, tmp202
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.8222, pos
	cmn	r1, #1	@ pos.8222,
	beq	.L2657	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2671	@,
	mvn	r0, #0	@ D.40274,
	b	.L2666	@
	.fnend
	.size	MVC_FlushDPB, .-MVC_FlushDPB
	.align	2
	.global	MVC_IDRMemMarking
	.type	MVC_IDRMemMarking, %function
MVC_IDRMemMarking:
	.fnstart
.LFB1575:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11152508	@ tmp150,
	movt	r2, #:upper16:11152508	@ tmp150,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r1, [r0, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r3, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2723	@,
	ldr	lr, [r0, #52]	@ D.40542, <variable>.TotalPmvNum
	cmp	lr, #0	@ D.40542,
	beq	.L2724	@,
	movw	r5, #:lower16:11122920	@ ivtmp.8271,
	movt	r5, #:upper16:11122920	@ ivtmp.8271,
	add	r3, r0, r5	@ ivtmp.8271, pMvcCtx, ivtmp.8271
	mov	r5, #0	@ tmp245,
	sub	r0, lr, #1	@ tmp251, D.40542,
	ldr	r2, [r3, #0]	@ prephitmp.8248, <variable>.DPB.fs
	and	ip, r0, #1	@ tmp253, tmp251,
	movw	r0, #:lower16:11152584	@ tmp244,
	movt	r0, #:upper16:11152584	@ tmp244,
	cmp	r2, r5	@ prephitmp.8248,
	beq	.L2749	@,
	ldr	sl, [r2, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	sl, #1	@ <variable>.eFoState,
	streqb	sl, [r4, #6]	@ <variable>.eFoState, <variable>.IDRFound
	ldr	r1, [r2, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	movweq	r2, #:lower16:-11122772	@ tmp360,
	movteq	r2, #:upper16:-11122772	@ tmp360,
	addeq	r2, r3, r2	@ tmp360, ivtmp.8271, tmp360
	streq	r5, [r2, #0]	@ tmp245, <variable>.PmvStoreUsedFlag
.L2749:
	mov	r1, #1	@ i,
	cmp	r1, lr	@ i, D.40542
	add	r3, r3, #4	@ ivtmp.8271, ivtmp.8271,
	bcs	.L2724	@,
	cmp	ip, #0	@ tmp253,
	beq	.L2727	@,
	ldr	r2, [r3, #0]	@ prephitmp.8248, <variable>.DPB.fs
	cmp	r2, #0	@ prephitmp.8248,
	beq	.L2756	@,
	ldr	ip, [r2, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	ip, r1	@ <variable>.eFoState,
	streqb	r1, [r4, #6]	@ i, <variable>.IDRFound
	ldr	ip, [r2, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	movweq	r2, #:lower16:-11122772	@ tmp373,
	movteq	r2, #:upper16:-11122772	@ tmp373,
	addeq	r2, r3, r2	@ tmp373, tmp255, tmp373
	streq	r5, [r2, #0]	@ tmp245, <variable>.PmvStoreUsedFlag
.L2756:
	add	r1, r1, #1	@ i, tmp254,
	add	r3, r3, #4	@ ivtmp.8271, tmp255,
	cmp	r1, lr	@ i, D.40542
	bcs	.L2724	@,
.L2727:
	ldr	r2, [r3, #0]	@ prephitmp.8248, <variable>.DPB.fs
	cmp	r2, #0	@ prephitmp.8248,
	beq	.L2725	@,
	ldr	sl, [r2, #16]	@ <variable>.eFoState, <variable>.eFoState
	cmp	sl, #1	@ <variable>.eFoState,
	streqb	sl, [r4, #6]	@ <variable>.eFoState, <variable>.IDRFound
	ldr	sl, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r2, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	movweq	sl, #:lower16:-11122772	@ tmp159,
	movteq	sl, #:upper16:-11122772	@ tmp159,
	addeq	sl, r3, sl	@ tmp159, ivtmp.8271, tmp159
	streq	r5, [sl, #0]	@ tmp245, <variable>.PmvStoreUsedFlag
.L2725:
	ldr	r2, [r3, #4]	@ prephitmp.8248, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp254, i,
	add	r3, r3, #4	@ tmp255, ivtmp.8271,
	cmp	r2, #0	@ prephitmp.8248,
	beq	.L2756	@,
	ldr	sl, [r2, #16]	@ <variable>.eFoState, <variable>.eFoState
	add	r1, r1, #1	@ i, tmp254,
	cmp	sl, #1	@ <variable>.eFoState,
	streqb	sl, [r4, #6]	@ <variable>.eFoState, <variable>.IDRFound
	ldr	ip, [r2, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	movweq	r2, #:lower16:-11122772	@ tmp373,
	movteq	r2, #:upper16:-11122772	@ tmp373,
	addeq	r2, r3, r2	@ tmp373, tmp255, tmp373
	add	r3, r3, #4	@ ivtmp.8271, tmp255,
	streq	r5, [r2, #0]	@ tmp245, <variable>.PmvStoreUsedFlag
	cmp	r1, lr	@ i, D.40542
	bcc	.L2727	@,
.L2724:
	movw	lr, #:lower16:11123112	@ tmp162,
	movt	lr, #:upper16:11123112	@ tmp162,
	ldr	sl, [r4, lr]	@ D.40543, <variable>.DPB.size
	cmp	sl, #0	@ D.40543,
	beq	.L2728	@,
	movw	r7, #:lower16:11122984	@ ivtmp.8267,
	movt	r7, #:upper16:11122984	@ ivtmp.8267,
	add	r5, r4, r7	@ ivtmp.8267, pMvcCtx, ivtmp.8267
	sub	r6, sl, #1	@ tmp246, D.40543,
	movw	r8, #:lower16:11152584	@ tmp239,
	movw	r9, #:lower16:11123116	@ tmp243,
	ldr	r1, [r5, #-64]	@ D.40532, <variable>.DPB.fs
	and	r3, r6, #1	@ tmp248, tmp246,
	movt	r8, #:upper16:11152584	@ tmp239,
	movt	r9, #:upper16:11123116	@ tmp243,
	cmp	r1, #0	@ D.40532,
	mov	r7, #0	@ tmp240,
	beq	.L2739	@,
	ldr	r6, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2775	@,
.L2739:
	mov	r6, #1	@ i.8286,
	cmp	sl, r6	@ D.40543, i.8286
	add	r5, r5, #4	@ ivtmp.8267, ivtmp.8267,
	bls	.L2728	@,
	cmp	r3, #0	@ tmp248,
	beq	.L2731	@,
	ldr	r3, [r5, #-64]	@ D.40532, <variable>.DPB.fs
	cmp	r3, #0	@ D.40532,
	beq	.L2746	@,
	ldr	r1, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2776	@,
.L2746:
	add	r6, r6, #1	@ i.8286, tmp249,
	add	r5, r5, #4	@ ivtmp.8267, tmp250,
	cmp	sl, r6	@ D.40543, i.8286
	bls	.L2728	@,
.L2731:
	ldr	r3, [r5, #-64]	@ D.40532, <variable>.DPB.fs
	cmp	r3, #0	@ D.40532,
	beq	.L2729	@,
	ldr	r1, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2777	@,
.L2729:
	add	r5, r5, #4	@ tmp250, ivtmp.8267,
	add	r6, r6, #1	@ tmp249, i.8286,
	ldr	r3, [r5, #-64]	@ D.40532, <variable>.DPB.fs
	cmp	r3, #0	@ D.40532,
	beq	.L2746	@,
	ldr	r0, [r3, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2746	@,
	strb	r7, [r3, #601]	@ tmp240, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r7, [r3, #602]	@ tmp240, <variable>.frame.is_short_term
	ldr	r1, [r5, #-64]	@ temp.8277, <variable>.DPB.fs
	strb	r7, [r1, #637]	@ tmp240, <variable>.top_field.is_long_term
	strb	r7, [r1, #638]	@ tmp240, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.8278, <variable>.DPB.fs
	strb	r7, [ip, #673]	@ tmp240, <variable>.bottom_field.is_long_term
	strb	r7, [ip, #674]	@ tmp240, <variable>.bottom_field.is_short_term
	ldr	lr, [r5, #-64]	@ tmp333, <variable>.DPB.fs
	strb	r7, [lr, #3]	@ tmp240, <variable>.is_reference
	ldr	r3, [r5, #-64]	@ tmp335, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r2, [r5, #-64]	@ tmp337, <variable>.DPB.fs
	movw	r3, #:lower16:11123128	@ tmp345,
	movt	r3, #:upper16:11123128	@ tmp345,
	mov	ip, #1	@,
	strb	r7, [r2, #2]	@ tmp240, <variable>.is_used
	ldr	r0, [r5, #-64]	@ tmp338, <variable>.DPB.fs
	strb	r7, [r0, #5]	@ tmp240, <variable>.is_in_dpb
	ldr	r1, [r5, #-64]	@ tmp339, <variable>.DPB.fs
	strb	ip, [r1, #7]	@, <variable>.is_displayed
.L2774:
	ldr	r2, [r5, #-64]	@ temp.8284, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	ip, [r2, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	add	lr, r4, ip	@ tmp344, pMvcCtx, <variable>.apc_idc
	add	r3, lr, r3	@ tmp345, tmp344, tmp345
	strb	r7, [r3, #4]	@ tmp240, <variable>.APC.is_used
	ldrsb	r1, [r2, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	beq	.L2747	@,
	ldr	r3, [r5, #-64]	@ tmp354, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2747:
	add	r6, r6, #1	@ i.8286, tmp249,
	ldr	r1, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	sl, r6	@ D.40543, i.8286
	str	r7, [r5, #-64]	@ tmp240, <variable>.DPB.fs
	sub	r0, r1, #1	@ tmp352, <variable>.DPB.used_size,
	str	r7, [r5, #0]	@ tmp240, <variable>.DPB.fs_ref
	str	r7, [r5, #64]	@ tmp240, <variable>.DPB.fs_ltref
	add	r5, r5, #4	@ ivtmp.8267, tmp250,
	str	r0, [r4, r9]	@ tmp352, <variable>.DPB.used_size
	bhi	.L2731	@,
.L2728:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	ip, #:lower16:11152508	@ tmp215,
	movt	ip, #:upper16:11152508	@ tmp215,
	ldr	r0, [r4, ip]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.long_term_reference_flag, <variable>.long_term_reference_flag
	cmp	r3, #0	@ <variable>.long_term_reference_flag,
	bne	.L2778	@,
	movw	r1, #:lower16:11123128	@ tmp227,
	movw	r2, #:lower16:11151964	@ tmp229,
	movt	r1, #:upper16:11123128	@ tmp227,
	movt	r2, #:upper16:11151964	@ tmp229,
	movw	lr, #:lower16:11151965	@ tmp232,
	movt	lr, #:upper16:11151965	@ tmp232,
	mov	r0, r3	@ D.40565, <variable>.long_term_reference_flag
	str	r3, [r4, r1]	@ <variable>.long_term_reference_flag, <variable>.DPB.max_long_term_pic_idx
	strb	r3, [r4, r2]	@ <variable>.long_term_reference_flag, <variable>.CurrPic.is_long_term
	mov	r3, #1	@ tmp233,
	strb	r3, [r4, lr]	@ tmp233, <variable>.CurrPic.is_short_term
.L2732:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2777:
	strb	r7, [r3, #601]	@ tmp240, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r7, [r3, #602]	@ tmp240, <variable>.frame.is_short_term
	ldr	ip, [r5, #-64]	@ temp.8277, <variable>.DPB.fs
	strb	r7, [ip, #637]	@ tmp240, <variable>.top_field.is_long_term
	strb	r7, [ip, #638]	@ tmp240, <variable>.top_field.is_short_term
	ldr	r0, [r5, #-64]	@ temp.8278, <variable>.DPB.fs
	strb	r7, [r0, #673]	@ tmp240, <variable>.bottom_field.is_long_term
	strb	r7, [r0, #674]	@ tmp240, <variable>.bottom_field.is_short_term
	ldr	r3, [r5, #-64]	@ tmp179, <variable>.DPB.fs
	strb	r7, [r3, #3]	@ tmp240, <variable>.is_reference
	ldr	lr, [r5, #-64]	@ tmp183, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r2, [r5, #-64]	@ tmp185, <variable>.DPB.fs
	mov	r0, #1	@,
	movw	r3, #:lower16:11123128	@ tmp197,
	movt	r3, #:upper16:11123128	@ tmp197,
	strb	r7, [r2, #2]	@ tmp240, <variable>.is_used
	ldr	r1, [r5, #-64]	@ tmp188, <variable>.DPB.fs
	strb	r7, [r1, #5]	@ tmp240, <variable>.is_in_dpb
	ldr	ip, [r5, #-64]	@ tmp191, <variable>.DPB.fs
	strb	r0, [ip, #7]	@, <variable>.is_displayed
	ldr	ip, [r5, #-64]	@ temp.8284, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	r2, [ip, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	add	r1, r4, r2	@ tmp196, pMvcCtx, <variable>.apc_idc
	add	r3, r1, r3	@ tmp197, tmp196, tmp197
	strb	r7, [r3, #4]	@ tmp240, <variable>.APC.is_used
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	beq	.L2730	@,
	ldr	lr, [r5, #-64]	@ tmp203, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2730:
	ldr	r2, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r7, [r5, #-64]	@ tmp240, <variable>.DPB.fs
	sub	r1, r2, #1	@ tmp211, <variable>.DPB.used_size,
	str	r7, [r5, #0]	@ tmp240, <variable>.DPB.fs_ref
	str	r1, [r4, r9]	@ tmp211, <variable>.DPB.used_size
	str	r7, [r5, #64]	@ tmp240, <variable>.DPB.fs_ltref
	b	.L2729	@
.L2778:
	movw	r3, #:lower16:11123128	@ tmp217,
	movw	ip, #:lower16:11152516	@ tmp219,
	movt	r3, #:upper16:11123128	@ tmp217,
	movt	ip, #:upper16:11152516	@ tmp219,
	movw	r2, #:lower16:11151964	@ tmp221,
	movw	r1, #:lower16:11151965	@ tmp224,
	movt	r2, #:upper16:11151964	@ tmp221,
	movt	r1, #:upper16:11151965	@ tmp224,
	mov	r0, #0	@ tmp220,
	mov	lr, #1	@ tmp218,
	str	r0, [r4, ip]	@ tmp220, <variable>.CurrPic.long_term_frame_idx
	strb	r0, [r4, r1]	@ tmp220, <variable>.CurrPic.is_short_term
	strb	lr, [r4, r2]	@ tmp218, <variable>.CurrPic.is_long_term
	str	lr, [r4, r3]	@ tmp218, <variable>.DPB.max_long_term_pic_idx
	b	.L2732	@
.L2775:
	strb	r7, [r1, #601]	@ tmp240, <variable>.frame.is_long_term
	mov	r2, r7	@, tmp240
	strb	r7, [r1, #602]	@ tmp240, <variable>.frame.is_short_term
	ldr	r0, [r5, #-64]	@ temp.8277, <variable>.DPB.fs
	strb	r7, [r0, #637]	@ tmp240, <variable>.top_field.is_long_term
	strb	r7, [r0, #638]	@ tmp240, <variable>.top_field.is_short_term
	ldr	r1, [r5, #-64]	@ temp.8278, <variable>.DPB.fs
	strb	r7, [r1, #673]	@ tmp240, <variable>.bottom_field.is_long_term
	strb	r7, [r1, #674]	@ tmp240, <variable>.bottom_field.is_short_term
	ldr	r6, [r5, #-64]	@ tmp274, <variable>.DPB.fs
	strb	r7, [r6, #3]	@ tmp240, <variable>.is_reference
	movw	r6, #:lower16:11123128	@ tmp286,
	ldr	lr, [r5, #-64]	@ tmp276, <variable>.DPB.fs
	movt	r6, #:upper16:11123128	@ tmp286,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	str	r3, [fp, #-48]	@,
	bl	FSP_SetRef	@
	ldr	ip, [r5, #-64]	@ tmp278, <variable>.DPB.fs
	mov	r0, #1	@,
	strb	r7, [ip, #2]	@ tmp240, <variable>.is_used
	ldr	r2, [r5, #-64]	@ tmp279, <variable>.DPB.fs
	strb	r7, [r2, #5]	@ tmp240, <variable>.is_in_dpb
	ldr	r3, [r5, #-64]	@ tmp280, <variable>.DPB.fs
	strb	r0, [r3, #7]	@, <variable>.is_displayed
	ldr	r3, [r5, #-64]	@ temp.8284, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	r1, [r3, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	add	ip, r4, r1	@ tmp285, pMvcCtx, <variable>.apc_idc
	add	r2, ip, r6	@ tmp286, tmp285, tmp286
	strb	r7, [r2, #4]	@ tmp240, <variable>.APC.is_used
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	ldr	r3, [fp, #-48]	@,
	cmp	r0, #3	@,
	beq	.L2740	@,
	ldr	lr, [r5, #-64]	@ tmp295, <variable>.DPB.fs
	mov	r2, r7	@, tmp240
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	str	r3, [fp, #-48]	@,
	bl	FSP_SetDisplay	@
	ldr	r3, [fp, #-48]	@,
.L2740:
	ldr	ip, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r7, [r5, #-64]	@ tmp240, <variable>.DPB.fs
	sub	r2, ip, #1	@ tmp293, <variable>.DPB.used_size,
	str	r7, [r5, #0]	@ tmp240, <variable>.DPB.fs_ref
	str	r2, [r4, r9]	@ tmp293, <variable>.DPB.used_size
	str	r7, [r5, #64]	@ tmp240, <variable>.DPB.fs_ltref
	b	.L2739	@
.L2776:
	strb	r7, [r3, #601]	@ tmp240, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r7, [r3, #602]	@ tmp240, <variable>.frame.is_short_term
	ldr	r1, [r5, #-64]	@ temp.8277, <variable>.DPB.fs
	strb	r7, [r1, #637]	@ tmp240, <variable>.top_field.is_long_term
	strb	r7, [r1, #638]	@ tmp240, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.8278, <variable>.DPB.fs
	strb	r7, [ip, #673]	@ tmp240, <variable>.bottom_field.is_long_term
	strb	r7, [ip, #674]	@ tmp240, <variable>.bottom_field.is_short_term
	ldr	lr, [r5, #-64]	@ tmp304, <variable>.DPB.fs
	strb	r7, [lr, #3]	@ tmp240, <variable>.is_reference
	ldr	r3, [r5, #-64]	@ tmp306, <variable>.DPB.fs
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r0, [r5, #-64]	@ tmp308, <variable>.DPB.fs
	movw	r3, #:lower16:11123128	@ tmp316,
	mov	ip, #1	@,
	movt	r3, #:upper16:11123128	@ tmp316,
	strb	r7, [r0, #2]	@ tmp240, <variable>.is_used
	ldr	r1, [r5, #-64]	@ tmp309, <variable>.DPB.fs
	strb	r7, [r1, #5]	@ tmp240, <variable>.is_in_dpb
	ldr	r2, [r5, #-64]	@ tmp310, <variable>.DPB.fs
	strb	ip, [r2, #7]	@, <variable>.is_displayed
	b	.L2774	@
.L2723:
	movw	r3, #:lower16:11152584	@ tmp212,
	movt	r3, #:upper16:11152584	@ tmp212,
	ldr	r1, [r0, r3]	@, <variable>.CurrPic.view_id
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.40565,
	beq	.L2728	@,
	b	.L2732	@
	.fnend
	.size	MVC_IDRMemMarking, .-MVC_IDRMemMarking
	.align	2
	.global	MVC_AdaptiveMemMark
	.type	MVC_AdaptiveMemMark, %function
MVC_AdaptiveMemMark:
	.fnstart
.LFB1574:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11152508	@ tmp153,
	movt	r3, #:upper16:11152508	@ tmp153,
	movw	r7, #:lower16:11151960	@ D.40482,
	movt	r7, #:upper16:11151960	@ D.40482,
	movw	r8, #:lower16:11116024	@ tmp225,
	ldr	r4, [r0, r3]	@ ivtmp.8326, <variable>.CurrPic.pMarkPara
	add	r7, r0, r7	@ D.40482, pMvcCtx, D.40482
	movt	r8, #:upper16:11116024	@ tmp225,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	add	r6, r4, #2000	@ D.56525, ivtmp.8326,
	mov	sl, #1	@ tmp226,
.L2789:
	ldr	r0, [r4, #4]	@ <variable>.memory_management_control_operation, <variable>.memory_management_control_operation
	cmp	r0, #6	@ <variable>.memory_management_control_operation,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.memory_management_control_operation
	b	.L2780	@
.L2788:
	.word	.L2781
	.word	.L2782
	.word	.L2783
	.word	.L2784
	.word	.L2785
	.word	.L2786
	.word	.L2787
.L2787:
	ldr	r2, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.40482
	bl	MVC_MarkCurrPicLT	@
.L2780:
	add	r4, r4, #20	@ ivtmp.8326, ivtmp.8326,
	cmp	r4, r6	@ ivtmp.8326, D.56525
	bne	.L2789	@,
.L2781:
	movw	r2, #:lower16:11116024	@ tmp164,
	movt	r2, #:upper16:11116024	@ tmp164,
	ldrsb	r1, [r5, r2]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r1, #1	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L2799	@,
.L2790:
	mov	r0, #0	@ D.40514,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2786:
	mov	r0, r5	@, pMvcCtx
	add	r4, r4, #20	@ ivtmp.8326, ivtmp.8326,
	bl	MVC_UnMarkAllSTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r5	@, pMvcCtx
	mov	r1, #0	@,
	bl	MVC_UpdateMaxLTFrmIdx	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.8326, D.56525
	strb	sl, [r5, r8]	@ tmp226, <variable>.CurrPOC.last_has_mmco_5
	bne	.L2789	@,
	b	.L2781	@
.L2785:
	ldr	r1, [r4, #20]	@, <variable>.max_long_term_frame_idx_plus1
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateMaxLTFrmIdx	@
	add	r4, r4, #20	@ ivtmp.8326, ivtmp.8326,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.8326, D.56525
	bne	.L2789	@,
	b	.L2781	@
.L2784:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r1, r7	@, D.40482
	ldr	r3, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pMvcCtx
	bl	MVC_MarkSTToLTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	add	r4, r4, #20	@ ivtmp.8326, ivtmp.8326,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.8326, D.56525
	bne	.L2789	@,
	b	.L2781	@
.L2783:
	ldr	r2, [r4, #12]	@, <variable>.long_term_pic_num
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.40482
	add	r4, r4, #20	@ ivtmp.8326, ivtmp.8326,
	bl	MVC_UnMarkLTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.8326, D.56525
	bne	.L2789	@,
	b	.L2781	@
.L2782:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.40482
	add	r4, r4, #20	@ ivtmp.8326, ivtmp.8326,
	bl	MVC_UnMarkSTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	cmp	r4, r6	@ ivtmp.8326, D.56525
	bne	.L2789	@,
	b	.L2781	@
.L2799:
	movw	r0, #:lower16:11118804	@ tmp171,
	movt	r0, #:upper16:11118804	@ tmp171,
	movw	r2, #:lower16:11151963	@ tmp179,
	movt	r2, #:upper16:11151963	@ tmp179,
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	lr, #:lower16:2779294	@ tmp168,
	movt	lr, #:upper16:2779294	@ tmp168,
	ldrb	r0, [r5, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r3, ip, lr	@ tmp168, <variable>.CurrSlice.voidx, tmp168
	movw	r1, #:lower16:11152512	@ tmp166,
	movw	lr, #:lower16:11153232	@ tmp177,
	movt	r1, #:upper16:11152512	@ tmp166,
	add	ip, r5, r3, asl #2	@, tmp174, pMvcCtx, tmp168,
	movt	lr, #:upper16:11153232	@ tmp177,
	cmp	r0, #1	@ <variable>.CurrPic.structure,
	mov	r3, #0	@ tmp167,
	str	r3, [r5, r1]	@ tmp167, <variable>.CurrPic.frame_num
	str	r3, [ip, #4]	@ tmp167, <variable>.CurrSlice.prev_frame_num
	str	r3, [r5, lr]	@ tmp167, <variable>.PrevPic.frame_num
	beq	.L2793	@,
	bcs	.L2800	@,
	movw	r0, #:lower16:11152532	@ tmp197,
	movw	lr, #:lower16:11152524	@ tmp198,
	movt	r0, #:upper16:11152532	@ tmp197,
	movt	lr, #:upper16:11152524	@ tmp198,
	movw	r1, #:lower16:11152536	@ tmp202,
	movt	r1, #:upper16:11152536	@ tmp202,
	ldr	r7, [r5, lr]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	movw	r2, #:lower16:11116048	@ tmp209,
	ldr	r8, [r5, r0]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	movt	r2, #:upper16:11116048	@ tmp209,
	ldr	sl, [r5, r1]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	movw	ip, #:lower16:11116060	@ tmp210,
	movt	ip, #:upper16:11116060	@ tmp210,
	rsb	r9, r7, r8	@, <variable>.CurrPic.thispoc, <variable>.CurrPic.toppoc
	rsb	sl, r7, sl	@, <variable>.CurrPic.thispoc, <variable>.CurrPic.bottompoc
	ldr	r8, [r5, r2]	@, <variable>.CurrPOC.toppoc
	str	r9, [r5, r0]	@, <variable>.CurrPic.toppoc
	movw	r3, #:lower16:11116052	@ tmp214,
	ldr	r9, [r5, ip]	@, <variable>.CurrPOC.ThisPOC
	movt	r3, #:upper16:11116052	@ tmp214,
	str	sl, [r5, r1]	@, <variable>.CurrPic.bottompoc
	movw	r6, #:lower16:11152528	@ tmp207,
	rsb	r7, r9, r8	@ D.40506,,
	mov	r8, sl	@ D.40503,
	ldr	sl, [r5, r0]	@, <variable>.CurrPic.toppoc
	movt	r6, #:upper16:11152528	@ tmp207,
	movw	r4, #:lower16:11116056	@ tmp219,
	movt	r4, #:upper16:11116056	@ tmp219,
	cmp	r8, sl	@ D.40503,
	movge	r8, sl	@ D.40503,
	ldr	sl, [r5, r3]	@, <variable>.CurrPOC.bottompoc
	str	r8, [r5, lr]	@ D.40503, <variable>.CurrPic.thispoc
	rsb	r9, r9, sl	@,,
	str	r8, [r5, r6]	@ D.40503, <variable>.CurrPic.framepoc
	str	r9, [r5, r3]	@, <variable>.CurrPOC.bottompoc
	mov	r1, r9	@ D.40508,
	str	r7, [r5, r2]	@ D.40506, <variable>.CurrPOC.toppoc
	cmp	r1, r7	@ D.40508, D.40506
	movge	r1, r7	@ D.40508, D.40506
	str	r1, [r5, ip]	@ D.40508, <variable>.CurrPOC.ThisPOC
	str	r1, [r5, r4]	@ D.40508, <variable>.CurrPOC.framepoc
.L2791:
	movw	r2, #:lower16:11152584	@ tmp221,
	movt	r2, #:upper16:11152584	@ tmp221,
	mov	r0, r5	@, pMvcCtx
	ldr	r1, [r5, r2]	@, <variable>.CurrPic.view_id
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.40514,
	beq	.L2790	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2800:
	cmp	r0, #2	@ <variable>.CurrPic.structure,
	bne	.L2791	@,
	movw	ip, #:lower16:11152536	@ tmp189,
	movw	r1, #:lower16:11152524	@ tmp191,
	movw	r2, #:lower16:11116052	@ tmp193,
	movt	ip, #:upper16:11152536	@ tmp189,
	movt	r1, #:upper16:11152524	@ tmp191,
	movt	r2, #:upper16:11116052	@ tmp193,
.L2798:
	movw	lr, #:lower16:11116060	@ tmp195,
	movt	lr, #:upper16:11116060	@ tmp195,
	str	r3, [r5, ip]	@ tmp167,
	str	r3, [r5, lr]	@ tmp167, <variable>.CurrPOC.ThisPOC
	str	r3, [r5, r1]	@ tmp167, <variable>.CurrPic.thispoc
	str	r3, [r5, r2]	@ tmp167,
	b	.L2791	@
.L2793:
	movw	ip, #:lower16:11152532	@ tmp181,
	movw	r1, #:lower16:11152524	@ tmp183,
	movw	r2, #:lower16:11116048	@ tmp185,
	movt	ip, #:upper16:11152532	@ tmp181,
	movt	r1, #:upper16:11152524	@ tmp183,
	movt	r2, #:upper16:11116048	@ tmp185,
	b	.L2798	@
	.fnend
	.size	MVC_AdaptiveMemMark, .-MVC_AdaptiveMemMark
	.align	2
	.global	MVC_Marking
	.type	MVC_Marking, %function
MVC_Marking:
	.fnstart
.LFB1576:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11151963	@ tmp144,
	movw	r3, #:lower16:11151966	@ tmp148,
	movt	ip, #:upper16:11151963	@ tmp144,
	movt	r3, #:upper16:11151966	@ tmp148,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:11116024	@ tmp140,
	ldrb	r0, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	movt	r1, #:upper16:11116024	@ tmp140,
	cmp	r2, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, tmp146
	moveq	r2, #1	@, tmp146
	movw	ip, #:lower16:11116025	@ tmp143,
	cmp	r0, #5	@ <variable>.CurrPic.nal_unit_type,
	movt	ip, #:upper16:11116025	@ tmp143,
	mov	r3, #0	@ tmp141,
	strb	r3, [r4, r1]	@ tmp141, <variable>.CurrPOC.last_has_mmco_5
	strb	r2, [r4, ip]	@ tmp146, <variable>.CurrPOC.last_pic_bottom_field
	beq	.L2802	@,
	movw	r0, #:lower16:11151972	@ tmp150,
	movt	r0, #:upper16:11151972	@ tmp150,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r1, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2803	@,
	ldr	r3, [r4, #224]	@ D.40583, <variable>.pstExtraData
	ldr	r2, [r3, #716]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	r2, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L2814	@,
.L2803:
	movw	r5, #:lower16:11152508	@ tmp158,
	movt	r5, #:upper16:11152508	@ tmp158,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r2, [ip, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L2813	@,
	movw	r3, #:lower16:11152520	@ tmp161,
	movt	r3, #:upper16:11152520	@ tmp161,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2815	@,
.L2808:
	mov	r0, #0	@ D.40596,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2814:
	ldr	ip, [r3, #712]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	ip, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L2803	@,
	ldr	r1, [r3, #720]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r1, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L2803	@,
	ldr	r0, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r0, #1024	@ tmp155, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp155,
	bls	.L2803	@,
.L2802:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IDRMemMarking	@
	cmp	r0, #0	@,
	bne	.L2804	@,
.L2805:
	movw	r0, #:lower16:11151966	@ tmp167,
	movt	r0, #:upper16:11151966	@ tmp167,
	ldrb	lr, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	cmp	lr, #5	@ <variable>.CurrPic.nal_unit_type,
	beq	.L2809	@,
.L2813:
	movw	r3, #:lower16:11152520	@ tmp169,
	movt	r3, #:upper16:11152520	@ tmp169,
	ldr	r1, [r4, r3]	@ prephitmp.8350, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ prephitmp.8350,
	beq	.L2808	@,
	movw	r5, #:lower16:11152508	@ tmp171,
	movt	r5, #:upper16:11152508	@ tmp171,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r2, [ip, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L2810	@,
	movw	r0, #:lower16:11151961	@ tmp173,
	movt	r0, #:upper16:11151961	@ tmp173,
	ldrb	r6, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r6, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2810	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SlidingWinMark	@
	ldr	r3, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	movw	r1, #:lower16:11151964	@ tmp179,
	movt	r1, #:upper16:11151964	@ tmp179,
	strb	r6, [r3, #0]	@ <variable>.CurrPic.field_pair_flag, <variable>.is_valid
	strb	r6, [r4, r1]	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.is_long_term
.L2809:
	movw	r2, #:lower16:11152520	@ tmp182,
	movt	r2, #:upper16:11152520	@ tmp182,
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2808	@,
.L2810:
	movw	r0, #:lower16:11151964	@ tmp185,
	movt	r0, #:upper16:11151964	@ tmp185,
	movw	r1, #:lower16:11151965	@ tmp184,
	movt	r1, #:upper16:11151965	@ tmp184,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	mov	r0, #0	@ D.40596,
	cmp	r3, r0	@ <variable>.CurrPic.is_long_term,
	movne	ip, #0	@, tmp187
	moveq	ip, #1	@, tmp187
	strb	ip, [r4, r1]	@ tmp187, <variable>.CurrPic.is_short_term
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2815:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_AdaptiveMemMark	@
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r2, #0	@ tmp165,
	strb	r2, [ip, #0]	@ tmp165, <variable>.is_valid
	cmp	r0, r2	@,
	beq	.L2805	@,
.L2804:
	mvn	r0, #0	@ D.40596,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_Marking, .-MVC_Marking
	.align	2
	.global	MVC_ClearDPB
	.type	MVC_ClearDPB, %function
MVC_ClearDPB:
	.fnstart
.LFB1537:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L2820	@,
.L2817:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	beq	.L2818	@,
	movw	r1, #:lower16:.LC60	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC60	@,
	ldr	r2, .L2821	@,
	movw	r3, #353	@,
	bl	dprint_vfmw	@
.L2818:
	mov	r0, #0	@ tmp144,
	str	r0, [r4, #220]	@ tmp144, <variable>.FirstFrameDisplayed
	strb	r0, [r4, #6]	@ tmp144, <variable>.IDRFound
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L2820:
	movw	r1, #:lower16:.LC77	@,
	ldr	r2, .L2821	@,
	movt	r1, #:upper16:.LC77	@,
	mov	r3, #348	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L2817	@
.L2822:
	.align	2
.L2821:
	.word	.LANCHOR0+300
	.fnend
	.size	MVC_ClearDPB, .-MVC_ClearDPB
	.align	2
	.global	MVC_ReceivePacket
	.type	MVC_ReceivePacket, %function
MVC_ReceivePacket:
	.fnstart
.LFB1674:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pPacket, pPacket
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r2, [r1, #4]	@ <variable>.p_stream, <variable>.p_stream
	mov	r0, #7	@,
	ldr	r3, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	movw	r1, #:lower16:.LC78	@,
	movt	r1, #:upper16:.LC78	@,
	str	ip, [sp, #0]	@ <variable>.stream_len,
	bl	dprint_vfmw	@
	ldr	r2, [r4, #224]	@ D.47778, <variable>.pstExtraData
	movw	r0, #:lower16:11155192	@ tmp159,
	movt	r0, #:upper16:11155192	@ tmp159,
	mov	r1, #0	@ tmp160,
	str	r1, [r4, r0]	@ tmp160, <variable>.u32SCDWrapAround
	ldr	r3, [r2, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r3, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L2852	@,
.L2824:
	ldr	r3, [r4, #232]	@ D.47785, <variable>.pCurrNal
	cmp	r3, #0	@ D.47785,
	beq	.L2826	@,
	ldrb	r2, [r5, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	cmp	r2, #1	@ <variable>.last_pack_in_nal,
	beq	.L2853	@,
.L2827:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC79	@,
	movt	r1, #:upper16:.LC79	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
.L2825:
	ldr	r3, [r4, #232]	@ D.47785, <variable>.pCurrNal
	cmp	r3, #0	@ D.47785,
	ldrneb	r2, [r5, #0]	@ zero_extendqisi2	@ prephitmp.8406, <variable>.last_pack_in_nal
	beq	.L2826	@,
.L2828:
	strb	r2, [r3, #3]	@ prephitmp.8406, <variable>.nal_integ
	ldr	r3, [r4, #224]	@ temp.8447, <variable>.pstExtraData
	ldr	ip, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	ip, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L2854	@,
.L2837:
	ldr	r0, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r0, #0	@ <variable>.stream_len,
	ble	.L2838	@,
	ldr	r2, [r5, #4]	@ temp.8451, <variable>.p_stream
	cmp	r2, #0	@ temp.8451,
	beq	.L2838	@,
	ldr	r3, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	r3, #0	@ <variable>.strm_phy_addr,
	beq	.L2838	@,
	ldr	r3, [r4, #232]	@ prephitmp.8408, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ temp.8453, <variable>.nal_segment
	cmp	r1, #1	@ temp.8453,
	bls	.L2855	@,
.L2840:
	mov	r1, #1	@ tmp273,
	strb	r1, [r3, #3]	@ tmp273, <variable>.nal_integ
	ldr	r1, [r5, #16]	@, <variable>.StreamID
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r0, #:lower16:g_event_report	@ tmp277,
	movt	r0, #:upper16:g_event_report	@ tmp277,
	ldr	ip, [r0, #0]	@ g_event_report.8470, g_event_report
	cmp	ip, #0	@ g_event_report.8470,
	beq	.L2834	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8470
.L2834:
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r2, [r3, #3]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r2, #0	@ <variable>.nal_integ,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L2836:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2853:
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bhi	.L2827	@,
	ldrb	r0, [r3, #3]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r0, #1	@ <variable>.nal_integ,
	bne	.L2828	@,
	b	.L2827	@
.L2838:
	ldr	r3, [r4, #232]	@ prephitmp.8408, <variable>.pCurrNal
	b	.L2840	@
.L2826:
	ldr	r2, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r2, #0	@ <variable>.stream_len,
	ble	.L2830	@,
	ldr	r3, [r5, #4]	@ <variable>.p_stream, <variable>.p_stream
	cmp	r3, #0	@ <variable>.p_stream,
	beq	.L2830	@,
	ldr	ip, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	ip, #0	@ <variable>.strm_phy_addr,
	beq	.L2830	@,
	ldrb	r2, [r4, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r1, r4, #88	@ ivtmp.8427, pMvcCtx,
	movne	r3, #1	@ Pos,
	bne	.L2832	@,
	b	.L2831	@
.L2856:
	ldrb	r2, [r1, #1025]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r1, r1, #176	@ ivtmp.8427, ivtmp.8427,
	cmp	r2, #0	@ <variable>.is_valid,
	beq	.L2831	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L2833	@,
.L2832:
	ldrb	r2, [r1, #937]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	bne	.L2856	@,
.L2831:
	cmp	r3, #136	@ Pos,
	bhi	.L2833	@,
	mov	lr, #88	@ tmp178,
	mov	ip, #1	@ tmp181,
	mul	r3, lr, r3	@ tmp177, tmp178, Pos
	add	lr, r3, r4	@ tmp179, tmp177, pMvcCtx
	add	r0, r3, #936	@ tmp185, tmp177,
	add	r1, r4, r0	@ tmp186, pMvcCtx, tmp185
	strb	ip, [lr, #937]	@ tmp181, <variable>.is_valid
	str	r1, [r4, #232]	@ tmp186, <variable>.pCurrNal
	ldr	r7, [r5, #4]	@ <variable>.p_stream, <variable>.p_stream
	str	r7, [lr, #944]	@ <variable>.p_stream, <variable>.streamBuffer
	ldr	r6, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	str	r6, [lr, #948]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r0, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	str	r0, [r3, #16]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	r1, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [r1, #24]	@ <variable>.is_valid, <variable>.bitsoffset
	ldr	r7, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r6, [r5, #16]	@ <variable>.StreamID, <variable>.StreamID
	str	r6, [r7, #32]	@ <variable>.StreamID, <variable>.StreamID
	ldr	lr, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrd	r6, [r5, #24]	@ <variable>.pts, pPacket,
	strd	r6, [lr, #80]	@ <variable>.pts, <variable>.pCurrNal,
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	ip, [r3, #68]	@ tmp181, <variable>.nal_segment
	ldr	r0, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r2, [r0, #0]	@ <variable>.is_valid, <variable>.nal_used_segment
	ldrb	lr, [r5, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	ldr	r1, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	lr, [r1, #3]	@ <variable>.last_pack_in_nal, <variable>.nal_integ
	b	.L2834	@
.L2852:
	ldr	lr, [r2, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	lr, r1	@ <variable>.s32WaitFsFlag,
	bne	.L2825	@,
	b	.L2824	@
.L2854:
	ldr	r1, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r1, #0	@ <variable>.s32WaitFsFlag,
	bne	.L2834	@,
	b	.L2837	@
.L2833:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC80	@,
	movt	r1, #:upper16:.LC80	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearAllNal	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
.L2851:
	movw	r2, #:lower16:g_event_report	@ tmp220,
	movt	r2, #:upper16:g_event_report	@ tmp220,
	ldr	ip, [r2, #0]	@ g_event_report.8445, g_event_report
	cmp	ip, #0	@ g_event_report.8445,
	mvneq	r0, #0	@ ret,
	beq	.L2836	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.8445
	mvn	r0, #0	@ ret,
	b	.L2836	@
.L2855:
	rsb	lr, r1, r1, asl #3	@, tmp229, temp.8453, temp.8453,
	mov	r0, r4	@, pMvcCtx
	add	ip, r3, lr, asl #2	@, tmp231, prephitmp.8408, tmp229,
	str	r2, [ip, #8]	@ temp.8451, <variable>.streamBuffer
	ldr	r1, [r4, #232]	@ temp.8454, <variable>.pCurrNal
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	r3, [r1, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r3, r3, asl #3	@, tmp237, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, r1, r2, asl #2	@, tmp239, temp.8454, tmp237,
	str	ip, [lr, #12]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r1, [r4, #232]	@ temp.8458, <variable>.pCurrNal
	ldr	ip, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	ldr	r3, [r1, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r3, r3, asl #3	@, tmp246, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, r1, r2, asl #2	@, tmp248, temp.8458, tmp246,
	str	ip, [lr, #16]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	mov	ip, #0	@ tmp259,
	ldr	r1, [r4, #232]	@ temp.8461, <variable>.pCurrNal
	ldr	r3, [r1, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r3, r3, asl #3	@, tmp255, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, r1, r2, asl #2	@, tmp257, temp.8461, tmp255,
	str	ip, [lr, #24]	@ tmp259, <variable>.bitsoffset
	ldr	r1, [r4, #232]	@ temp.8463, <variable>.pCurrNal
	ldr	ip, [r5, #16]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r3, [r1, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r3, r3, asl #3	@, tmp264, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, r1, r2, asl #2	@, tmp266, temp.8463, tmp264,
	str	ip, [lr, #32]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r1, [r4, #232]	@ temp.8466, <variable>.pCurrNal
	ldr	r3, [r1, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	add	lr, r3, #1	@ tmp270, <variable>.nal_segment,
	str	lr, [r1, #68]	@ tmp270, <variable>.nal_segment
	bl	MVC_CombinePacket	@
	movw	ip, #:lower16:11155192	@ tmp271,
	movt	ip, #:upper16:11155192	@ tmp271,
	mov	r2, #1	@ tmp272,
	str	r2, [r4, ip]	@ tmp272, <variable>.u32SCDWrapAround
	b	.L2834	@
.L2830:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC81	@,
	movt	r1, #:upper16:.LC81	@,
	bl	dprint_vfmw	@
	ldr	r1, [r5, #16]	@, <variable>.StreamID
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	b	.L2851	@
	.fnend
	.size	MVC_ReceivePacket, .-MVC_ReceivePacket
	.align	2
	.global	MVC_DecVDM
	.type	MVC_DecVDM, %function
MVC_DecVDM:
	.fnstart
.LFB1632:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11151963	@ tmp148,
	movt	r1, #:upper16:11151963	@ tmp148,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #0	@ <variable>.CurrPic.structure,
	beq	.L2858	@,
	movw	r2, #:lower16:11151961	@ tmp150,
	movt	r2, #:upper16:11151961	@ tmp150,
	ldrb	r0, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r0, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2858	@,
.L2859:
	ldr	r5, [r4, #108]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	ldrb	r3, [r4, #8]	@ zero_extendqisi2	@ D.44090, <variable>.OldDecMode
	ubfx	r5, r5, #16, #2	@ IPBDecMode, <variable>.advanced_cfg,,
	cmp	r5, #2	@ IPBDecMode,
	cmpne	r3, r5	@, D.44090, IPBDecMode
	beq	.L2860	@,
	sub	lr, r3, #2	@ tmp166, D.44090,
	uxtb	ip, lr	@ tmp167, tmp166
	cmp	ip, #1	@ tmp167,
	bls	.L2895	@,
.L2860:
	uxtb	r5, r5	@ temp.8517, IPBDecMode
	strb	r5, [r4, #8]	@ temp.8517, <variable>.OldDecMode
	cmp	r5, #2	@ temp.8517,
	beq	.L2864	@,
	cmp	r5, #3	@ temp.8517,
	beq	.L2865	@,
	cmp	r5, #1	@ temp.8517,
	beq	.L2863	@,
.L2890:
	ldr	r2, [r4, #64]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
.L2862:
	movw	r3, #:lower16:11151973	@ tmp195,
	movt	r3, #:upper16:11151973	@ tmp195,
	cmp	r2, #0	@ <variable>.SliceParaNum,
	ldrb	lr, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	strb	lr, [r4, #11]	@ <variable>.CurrPic.is_idr_pic, <variable>.PrevPicIsIDR
	beq	.L2894	@,
	ldrb	r5, [r4, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r5, #4	@ <variable>.OldDecMode,
	beq	.L2870	@,
	movw	r0, #:lower16:11151972	@ tmp200,
	movt	r0, #:upper16:11151972	@ tmp200,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ prephitmp.8502, <variable>.CurrPic.pic_type
.L2871:
	cmp	r3, #2	@ prephitmp.8502,
	beq	.L2896	@,
	cmp	r3, #1	@ prephitmp.8502,
	beq	.L2897	@,
.L2874:
	ldr	r7, [r4, #88]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	movw	lr, #:lower16:11151963	@ tmp228,
	movt	lr, #:upper16:11151963	@ tmp228,
	mov	r0, #2	@,
	sub	r2, r7, #1	@, <variable>.TotalPicNum,
	movw	r1, #:lower16:.LC84	@,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@, <variable>.CurrPic.structure
	movt	r1, #:upper16:.LC84	@,
	movw	r6, #:lower16:11152572	@ tmp231,
	movw	r5, #:lower16:11152576	@ tmp237,
	movt	r6, #:upper16:11152572	@ tmp231,
	movt	r5, #:upper16:11152576	@ tmp237,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #88]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.pic_mbs, <variable>.CurrPic.pic_mbs
	movw	ip, #:lower16:11154720	@ tmp230,
	ldr	r6, [r4, r5]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	movt	ip, #:upper16:11154720	@ tmp230,
	ldr	r5, [r4, #64]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	movw	r2, #:lower16:11153802	@ tmp233,
	movw	r1, #:lower16:11154716	@ tmp236,
	movt	r2, #:upper16:11153802	@ tmp233,
	movt	r1, #:upper16:11154716	@ tmp236,
	movw	r3, #:lower16:11154920	@ tmp239,
	cmp	r0, #0	@ <variable>.TotalPicNum,
	movt	r3, #:upper16:11154920	@ tmp239,
	str	r7, [r4, ip]	@ <variable>.CurrPic.pic_mbs, <variable>.DecPicPara.mbtodec
	mov	ip, #1	@ tmp234,
	str	r6, [r4, r1]	@ <variable>.CurrPic.stream_base_addr, <variable>.DecPicPara.stream_base_addr
	strb	ip, [r4, r2]	@ tmp234, <variable>.DecPicPara.NewPicFlag
	str	r5, [r4, r3]	@ <variable>.SliceParaNum, <variable>.DecPicPara.SliceParaNum
	beq	.L2861	@,
	movw	r3, #:lower16:11151972	@ tmp242,
	movt	r3, #:upper16:11151972	@ tmp242,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2876	@,
	movw	r5, #:lower16:g_event_report	@ tmp244,
	movt	r5, #:upper16:g_event_report	@ tmp244,
	ldr	r2, [r5, #0]	@ g_event_report, g_event_report
	cmp	r2, #0	@ g_event_report,
	beq	.L2891	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetPicStreamSize	@
	sub	r2, fp, #28	@ tmp248,,
	ldr	ip, [r5, #0]	@ g_event_report, g_event_report
	mov	r1, #20	@,
	mov	r3, #4	@,
	str	r0, [r2, #-4]!	@, para
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	blx	ip	@ g_event_report
.L2891:
	ldr	r2, [r4, #224]	@ temp.8534, <variable>.pstExtraData
.L2877:
	movw	r3, #:lower16:11153800	@ D.44180,
	movt	r3, #:upper16:11153800	@ D.44180,
	add	r3, r4, r3	@ D.44180, pMvcCtx, D.44180
	str	r3, [r4, #228]	@ D.44180, <variable>.pMvcDecParam
	ldr	r1, [r2, #896]	@ D.44181, <variable>.stDisParams.s32Mode
	cmp	r1, #1	@ D.44181,
	beq	.L2898	@,
	cmp	r1, #2	@ D.44181,
	beq	.L2899	@,
.L2879:
	ldr	r1, [r2, #684]	@ <variable>.s32Compress_en, <variable>.s32Compress_en
	movw	ip, #:lower16:11155184	@ tmp270,
	movt	ip, #:upper16:11155184	@ tmp270,
	mov	r0, #0	@ D.44107,
	str	r1, [r4, ip]	@ <variable>.s32Compress_en, <variable>.DecPicPara.Compress_en
.L2861:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2858:
	ldr	r2, [r4, #140]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	ip, [r4, #224]	@ D.44082, <variable>.pstExtraData
	ldr	r1, [r4, #144]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	add	r0, r2, #1	@ D.44084, <variable>.numTotalFrame,
	cmp	r0, r1	@ D.44084, <variable>.numOutputFrame
	movlt	r0, r1	@ D.44086, <variable>.numOutputFrame
	str	r0, [r4, #140]	@ D.44086, <variable>.numTotalFrame
	str	r0, [ip, #608]	@ D.44086, <variable>.stChanState.total_frame_num
	ldr	r3, [r4, #140]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	lr, [r4, #144]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	rsb	r5, lr, r3	@ tmp156, <variable>.numOutputFrame, <variable>.numTotalFrame
	str	r5, [ip, #612]	@ tmp156, <variable>.stChanState.error_frame_num
	b	.L2859	@
.L2897:
	movw	r5, #:lower16:11152584	@ tmp221,
	movt	r5, #:upper16:11152584	@ tmp221,
	ldr	r7, [r4, r5]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, #0	@ <variable>.CurrPic.view_id,
	streqb	r3, [r4, #7]	@ prephitmp.8502, <variable>.PPicFound
	b	.L2874	@
.L2863:
	movw	r0, #:lower16:11151972	@ tmp182,
	movt	r0, #:upper16:11151972	@ tmp182,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2890	@,
	movw	ip, #:lower16:11152520	@ tmp184,
	movt	ip, #:upper16:11152520	@ tmp184,
	ldr	r1, [r4, ip]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2890	@,
	movw	r2, #:lower16:11151967	@ tmp186,
	movt	r2, #:upper16:11151967	@ tmp186,
	mov	r0, r4	@, pMvcCtx
	strb	r5, [r4, r2]	@ temp.8517, <variable>.CurrPic.mode_skip_flag
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.44107,
	b	.L2861	@
.L2895:
	cmp	r5, #1	@ IPBDecMode,
	bhi	.L2860	@,
	mov	r2, r5	@, IPBDecMode
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC82	@,
	movt	r1, #:upper16:.LC82	@,
	bl	dprint_vfmw	@
	strb	r5, [r4, #8]	@ IPBDecMode, <variable>.OldDecMode
.L2865:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	mvn	r0, #0	@ D.44107,
	b	.L2861	@
.L2864:
	movw	r0, #:lower16:11151972	@ tmp171,
	movt	r0, #:upper16:11151972	@ tmp171,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2892	@,
	ldr	r2, [r4, #64]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r2, #0	@ <variable>.SliceParaNum,
	beq	.L2862	@,
	ldr	ip, [r4, #544]	@ <variable>.DecSlicePara, <variable>.DecSlicePara
	ldr	r1, [ip, #48]	@ <variable>.first_mb_in_slice, <variable>.first_mb_in_slice
	cmp	r1, #0	@ <variable>.first_mb_in_slice,
	beq	.L2862	@,
.L2892:
	movw	lr, #:lower16:11151967	@ tmp179,
	movt	lr, #:upper16:11151967	@ tmp179,
	mov	r2, #1	@ tmp180,
	mov	r0, r4	@, pMvcCtx
	strb	r2, [r4, lr]	@ tmp180, <variable>.CurrPic.mode_skip_flag
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.44107,
	b	.L2861	@
.L2876:
	movw	lr, #:lower16:11123116	@ tmp250,
	movt	lr, #:upper16:11123116	@ tmp250,
	ldr	r1, [r4, lr]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, #0	@ <variable>.DPB.used_size,
	bne	.L2891	@,
	ldr	r2, [r4, #224]	@ temp.8534, <variable>.pstExtraData
	ldr	r0, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	beq	.L2877	@,
.L2894:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.44107,
	b	.L2861	@
.L2896:
	ldrb	ip, [r4, #7]	@ zero_extendqisi2	@ <variable>.PPicFound, <variable>.PPicFound
	cmp	ip, #2	@ <variable>.PPicFound,
	bne	.L2874	@,
	ldr	r2, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r5, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r5, #0	@ <variable>.s32DecOrderOutput,
	bne	.L2874	@,
	movw	r0, #:lower16:11152524	@ tmp213,
	movw	lr, #:lower16:11152520	@ tmp215,
	movt	r0, #:upper16:11152524	@ tmp213,
	movt	lr, #:upper16:11152520	@ tmp215,
	movw	r1, #:lower16:.LC83	@,
	movt	r1, #:upper16:.LC83	@,
	ldr	r2, [r4, r0]	@, <variable>.CurrPic.thispoc
	mov	r0, #1	@,
	ldr	r3, [r4, lr]	@, <variable>.CurrPic.nal_ref_idc
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	movw	r1, #:lower16:11152504	@ tmp219,
	movt	r1, #:upper16:11152504	@ tmp219,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, r5	@, <variable>.s32DecOrderOutput
	ldr	r3, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	mvn	r0, #0	@ D.44107,
	b	.L2861	@
.L2870:
	movw	r1, #:lower16:11151972	@ tmp201,
	movt	r1, #:upper16:11151972	@ tmp201,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.8502, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ prephitmp.8502,
	bne	.L2871	@,
	ldrb	r6, [r4, #7]	@ zero_extendqisi2	@ <variable>.PPicFound, <variable>.PPicFound
	cmp	r6, #0	@ <variable>.PPicFound,
	moveq	r6, #2	@ tmp203,
	movne	r6, #1	@ tmp206,
	strb	r6, [r4, #7]	@ tmp206, <variable>.PPicFound
	b	.L2874	@
.L2898:
	cmp	r3, #0	@ D.44180,
	beq	.L2879	@,
	movw	r1, #:lower16:11151972	@ tmp255,
	movt	r1, #:upper16:11151972	@ tmp255,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	ip, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2879	@,
	movw	r0, #:lower16:11152504	@ tmp259,
	movt	r0, #:upper16:11152504	@ tmp259,
	mov	r2, #0	@ tmp257,
	str	r2, [r4, #228]	@ tmp257, <variable>.pMvcDecParam
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	b	.L2894	@
.L2899:
	ldr	ip, [r2, #900]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	cmp	ip, #0	@ <variable>.stDisParams.s32DisNums,
	ble	.L2879	@,
	cmp	r3, #0	@ D.44180,
	beq	.L2879	@,
	movw	r1, #:lower16:11151972	@ tmp262,
	movt	r1, #:upper16:11151972	@ tmp262,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2879	@,
	movw	r0, #:lower16:11152504	@ tmp266,
	movt	r0, #:upper16:11152504	@ tmp266,
	mov	r2, #0	@ tmp264,
	str	r2, [r4, #228]	@ tmp264, <variable>.pMvcDecParam
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	ip, [r4, #224]	@ temp.8545, <variable>.pstExtraData
	mov	r0, r4	@, pMvcCtx
	ldr	r3, [ip, #900]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	sub	r2, r3, #1	@ tmp269, <variable>.stDisParams.s32DisNums,
	str	r2, [ip, #900]	@ tmp269, <variable>.stDisParams.s32DisNums
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.44107,
	b	.L2861	@
	.fnend
	.size	MVC_DecVDM, .-MVC_DecVDM
	.align	2
	.global	MVC_FlushDecoder
	.type	MVC_FlushDecoder, %function
MVC_FlushDecoder:
	.fnstart
.LFB1668:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11117216	@ tmp135,
	movw	r3, #:lower16:11117165	@ tmp137,
	movt	r1, #:upper16:11117216	@ tmp135,
	movt	r3, #:upper16:11117165	@ tmp137,
	mov	ip, #1	@ tmp138,
	mov	lr, #0	@ tmp136,
	strb	ip, [r0, #0]	@ tmp138, <variable>.StartMode
	str	lr, [r0, r1]	@ tmp136, <variable>.CurrSlice.first_mb_in_slice
	strb	ip, [r0, r3]	@ tmp138, <variable>.CurrSlice.new_pic_flag
	bl	MVC_DecVDM	@
	cmp	r0, #0	@,
	ldmeqfd	sp, {fp, sp, pc}	@
	movw	r1, #:lower16:.LC85	@,
	ldr	r2, .L2903	@,
	movt	r1, #:upper16:.LC85	@,
	movw	r3, #12129	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {fp, sp, pc}	@
.L2904:
	.align	2
.L2903:
	.word	.LANCHOR0+316
	.fnend
	.size	MVC_FlushDecoder, .-MVC_FlushDecoder
	.align	2
	.global	MVC_InsertFrmInDPB
	.type	MVC_InsertFrmInDPB, %function
MVC_InsertFrmInDPB:
	.fnstart
.LFB1568:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:11123116	@ tmp201,
	movt	r6, #:upper16:11123116	@ tmp201,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ pos, pos
	ldr	r3, [r0, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r6, r2	@ pCurrPic, pCurrPic
	cmp	r3, #0	@ <variable>.DPB.used_size,
	movweq	r2, #:lower16:.LANCHOR1	@ tmp203,
	movteq	r2, #:upper16:.LANCHOR1	@ tmp203,
	streq	r3, [r2, #68]	@ <variable>.DPB.used_size, cnt
	ldrb	r2, [r6, #3]	@ zero_extendqisi2	@ D.39969, <variable>.structure
	cmp	r2, #1	@ D.39969,
	beq	.L2909	@,
	bcc	.L2908	@,
	cmp	r2, #2	@ D.39969,
	beq	.L2954	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC87	@,
	movt	r1, #:upper16:.LC87	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mov	r0, #0	@ D.40024,
.L2916:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2908:
	ldr	r7, [r6, #544]	@ D.39972, <variable>.frame_store
	movw	r3, #:lower16:2780730	@ tmp205,
	movt	r3, #:upper16:2780730	@ tmp205,
	mov	lr, #3	@ tmp212,
	add	r0, r1, r3	@ tmp205, pos, tmp205
	str	r7, [r4, r0, asl #2]	@ D.39972, <variable>.DPB.fs
	ldrb	r1, [r6, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r1, [r7, #1]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r2, [r4, r0, asl #2]	@ tmp211, <variable>.DPB.fs
	strb	lr, [r2, #2]	@ tmp212, <variable>.is_used
	ldr	ip, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	sl, [r4, r0, asl #2]	@ tmp216, <variable>.DPB.fs
	ldrb	r9, [ip, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r9, [sl, #5]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r8, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r4, r0, asl #2]	@ tmp222, <variable>.DPB.fs
	ldrb	r1, [r8, #7]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	strb	r1, [r7, #7]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	ldr	r3, [r4, r0, asl #2]	@ temp.8618, <variable>.DPB.fs
	cmp	r2, #0	@ <variable>.is_long_term,
	beq	.L2955	@,
.L2911:
	mov	r2, #3	@ iftmp.507,
.L2912:
	movw	r7, #:lower16:2780730	@ tmp231,
	movt	r7, #:upper16:2780730	@ tmp231,
	add	r7, r5, r7	@ tmp231, pos, tmp231
	strb	r2, [r3, #3]	@ iftmp.507, <variable>.is_reference
	ldr	lr, [r6, #620]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	add	r1, r6, #16	@, pCurrPic,
	ldr	sl, [r4, r7, asl #2]	@ tmp233, <variable>.DPB.fs
	mov	r2, #528	@,
	mov	r5, #0	@ tmp257,
	str	lr, [sl, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	sl, #:lower16:.LANCHOR1	@ tmp332,
	ldr	r0, [r4, r7, asl #2]	@ tmp237, <variable>.DPB.fs
	movt	sl, #:upper16:.LANCHOR1	@ tmp332,
	add	r0, r0, #72	@, tmp237,
	bl	memcpy	@
	ldr	r3, [r4, r7, asl #2]	@ temp.8621, <variable>.DPB.fs
	ldr	r1, [r6, #596]	@ D.39988, <variable>.err_level
	mov	r2, r5	@, tmp257
	mov	r0, r4	@, pMvcCtx
	str	r1, [r3, #44]	@ D.39988, <variable>.err_level
	str	r1, [r3, #624]	@ D.39988, <variable>.frame.err_level
	ldr	r9, [r4, r7, asl #2]	@ temp.8622, <variable>.DPB.fs
	ldr	ip, [r6, #544]	@ temp.8623, <variable>.frame_store
	str	ip, [r9, #604]	@ temp.8623, <variable>.frame.frame_store
	str	ip, [r9, #676]	@ temp.8623, <variable>.bottom_field.frame_store
	str	ip, [r9, #640]	@ temp.8623, <variable>.top_field.frame_store
	ldr	r1, [r4, r7, asl #2]	@ tmp248, <variable>.DPB.fs
	ldr	r8, [r6, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	str	r8, [r1, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	ldr	r9, [r4, r7, asl #2]	@ tmp252, <variable>.DPB.fs
	ldr	r3, [r6, #552]	@ <variable>.frame_num, <variable>.frame_num
	str	r3, [r9, #20]	@ <variable>.frame_num, <variable>.frame_num
	ldr	ip, [r4, r7, asl #2]	@ tmp256, <variable>.DPB.fs
	strb	r5, [ip, #600]	@ tmp257, <variable>.frame.structure
	ldr	r1, [r4, r7, asl #2]	@ tmp261, <variable>.DPB.fs
	ldrb	r8, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r8, [r1, #601]	@ <variable>.is_long_term, <variable>.frame.is_long_term
	ldr	r9, [r4, r7, asl #2]	@ tmp266, <variable>.DPB.fs
	ldrb	r3, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r3, [r9, #602]	@ <variable>.is_short_term, <variable>.frame.is_short_term
	ldr	r8, [r4, r7, asl #2]	@ temp.8631, <variable>.DPB.fs
	ldrb	ip, [r6, #12]	@ zero_extendqisi2	@ D.39994, <variable>.pic_type
	strb	ip, [r8, #0]	@ D.39994, <variable>.pic_type
	strb	ip, [r8, #603]	@ D.39994, <variable>.frame.pic_type
	ldr	r3, [r4, r7, asl #2]	@ tmp275, <variable>.DPB.fs
	ldrb	r1, [r6, #9]	@ zero_extendqisi2	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	str	r1, [r3, #40]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldr	r8, [r4, r7, asl #2]	@ tmp279, <variable>.DPB.fs
	ldr	r9, [r6, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	r9, [r8, #32]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r4, r7, asl #2]	@ tmp283, <variable>.DPB.fs
	ldr	ip, [r6, #568]	@ <variable>.framepoc, <variable>.framepoc
	str	ip, [r1, #616]	@ <variable>.framepoc, <variable>.frame.poc
	ldr	r9, [r4, r7, asl #2]	@ tmp287, <variable>.DPB.fs
	ldr	r3, [r6, #572]	@ <variable>.toppoc, <variable>.toppoc
	str	r3, [r9, #652]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r1, [r4, r7, asl #2]	@ tmp291, <variable>.DPB.fs
	ldr	r8, [r6, #576]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r8, [r1, #688]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	r3, [r4, r7, asl #2]	@ tmp295, <variable>.DPB.fs
	ldr	ip, [r6, #580]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r3, #36]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r8, [r4, r7, asl #2]	@ tmp299, <variable>.DPB.fs
	ldr	r9, [r6, #584]	@ <variable>.decframepoc, <variable>.decframepoc
	str	r9, [r8, #620]	@ <variable>.decframepoc, <variable>.frame.MVC_DecPOC
	ldr	r3, [r4, r7, asl #2]	@ tmp303, <variable>.DPB.fs
	ldr	r1, [r6, #588]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	r1, [r3, #656]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r9, [r4, r7, asl #2]	@ tmp307, <variable>.DPB.fs
	ldr	ip, [r6, #592]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	ip, [r9, #692]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldrb	r8, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r1, [r4, r7, asl #2]	@ temp.8641, <variable>.DPB.fs
	cmp	r8, #1	@ <variable>.mode_skip_flag,
	moveq	r8, #3	@ iftmp.509,
	movne	r8, r5	@ iftmp.509, tmp2
	strb	r8, [r1, #4]	@ iftmp.509, <variable>.mode_skip_flag
	ldr	r9, [r4, r7, asl #2]	@ tmp315, <variable>.DPB.fs
	ldr	r3, [r6, #624]	@ <variable>.view_id, <variable>.view_id
	str	r3, [r9, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r4, r7, asl #2]	@ tmp319, <variable>.DPB.fs
	ldr	ip, [r6, #628]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r8, #60]	@ <variable>.voidx, <variable>.voidx
	ldr	r3, [r4, r7, asl #2]	@ temp.8644, <variable>.DPB.fs
	ldrb	r1, [r6, #11]	@ zero_extendqisi2	@ D.40013, <variable>.inter_view_flag
	strb	r1, [r3, #12]	@ D.40013, <variable>.inter_view_flag
	strb	r1, [r3, #13]	@ D.40013, <variable>.inter_view_flag
	ldr	r8, [r4, r7, asl #2]	@ temp.8645, <variable>.DPB.fs
	ldrb	r9, [r6, #10]	@ zero_extendqisi2	@ D.40015, <variable>.anchor_pic_flag
	strb	r9, [r8, #11]	@ D.40015, <variable>.anchor_pic_flag
	strb	r9, [r8, #10]	@ D.40015, <variable>.anchor_pic_flag
	mov	r8, #1	@ tmp343,
	ldr	ip, [sl, #68]	@ cnt, cnt
	ldr	r1, [r4, r7, asl #2]	@ tmp331, <variable>.DPB.fs
	str	ip, [r1, #64]	@ cnt, <variable>.dpb_cnt
	ldr	r3, [sl, #68]	@ cnt, cnt
	add	r9, r3, #1	@ tmp337, cnt,
	str	r9, [sl, #68]	@ tmp337, cnt
	ldr	r3, [r4, r7, asl #2]	@ temp.8648, <variable>.DPB.fs
	ldrb	r1, [r3, #603]	@ zero_extendqisi2	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldrb	lr, [r3, #601]	@ zero_extendqisi2	@ D.48722, <variable>.frame.is_long_term
	ldrb	ip, [r3, #602]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	ldr	sl, [r3, #624]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldr	r9, [r3, #604]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r8, [r3, #636]	@ tmp343, <variable>.top_field.structure
	mov	r8, #2	@ tmp352,
	strb	lr, [r3, #673]	@ D.48722, <variable>.bottom_field.is_long_term
	str	r9, [r3, #676]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r3, #674]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r8, [r3, #672]	@ tmp352, <variable>.bottom_field.structure
	str	sl, [r3, #696]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	strb	r1, [r3, #675]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	lr, [r3, #637]	@ D.48722, <variable>.top_field.is_long_term
	strb	ip, [r3, #638]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	sl, [r3, #660]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	strb	r1, [r3, #639]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r9, [r3, #640]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldr	r1, [r6, #544]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@ ret
	movne	r3, r0	@, ret
	movwne	r2, #2164	@,
	movne	r0, r5	@, tmp257
	bne	.L2953	@,
.L2915:
	ldr	r3, [r4, r7, asl #2]	@ prephitmp.8596, <variable>.DPB.fs
.L2922:
	ldrb	r0, [r3, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2916	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r0, #0	@ D.40024,
	b	.L2916	@
.L2909:
	ldr	r3, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	mov	r1, #3	@ tmp361,
	strb	r1, [r3, #600]	@ tmp361, <variable>.frame.structure
	ldrb	ip, [r6, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	ip, #0	@ <variable>.field_pair_flag,
	beq	.L2917	@,
	movw	r0, #:lower16:2780730	@ tmp364,
	movt	r0, #:upper16:2780730	@ tmp364,
	add	r3, r5, r0	@ tmp364, pos, tmp364
	ldr	r1, [r4, r3, asl #2]	@ temp.8651, <variable>.DPB.fs
	cmp	r1, #0	@ temp.8651,
	beq	.L2917	@,
	strb	r2, [r1, #636]	@ D.39969, <variable>.top_field.structure
	ldr	r8, [r4, r3, asl #2]	@ tmp510, <variable>.DPB.fs
	ldrb	r1, [r6, #12]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	strb	r1, [r8, #639]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	lr, [r4, r3, asl #2]	@ tmp515, <variable>.DPB.fs
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [lr, #637]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r2, [r4, r3, asl #2]	@ tmp520, <variable>.DPB.fs
	ldrb	r7, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r7, [r2, #638]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	sl, [r4, r3, asl #2]	@ tmp525, <variable>.DPB.fs
	ldr	r9, [r6, #572]	@ <variable>.toppoc, <variable>.toppoc
	str	r9, [sl, #652]	@ <variable>.toppoc, <variable>.top_field.poc
	movw	r9, #:lower16:2780730	@ tmp544,
	ldr	ip, [r4, r3, asl #2]	@ tmp529, <variable>.DPB.fs
	movt	r9, #:upper16:2780730	@ tmp544,
	ldrb	r8, [r6, #12]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	strb	r8, [ip, #639]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	r1, [r4, r3, asl #2]	@ tmp534, <variable>.DPB.fs
	ldr	lr, [r6, #596]	@ <variable>.err_level, <variable>.err_level
	str	lr, [r1, #660]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	r7, [r4, r3, asl #2]	@ temp.8664, <variable>.DPB.fs
	ldr	r0, [r7, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r2, [r7, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r8, r0, r2	@ D.40041, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	r8, [r7, #44]	@ D.40041, <variable>.err_level
	str	r8, [r7, #624]	@ D.40041, <variable>.frame.err_level
	movw	r7, #:lower16:2780730	@ tmp559,
	ldr	ip, [r4, r3, asl #2]	@ temp.8665, <variable>.DPB.fs
	add	r3, r5, r9	@ tmp544, pos, tmp544
	movt	r7, #:upper16:2780730	@ tmp559,
	add	r7, r5, r7	@ tmp559, pos, tmp559
	ldrb	sl, [ip, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	sl, #0	@ <variable>.non_existing,
	ldrneb	r8, [r6, #2]	@ zero_extendqisi2	@ iftmp.515, <variable>.non_existing
	moveq	r8, sl	@ iftmp.515, <variable>.non_existing
	strb	r8, [ip, #1]	@ iftmp.515, <variable>.non_existing
	ldr	lr, [r4, r3, asl #2]	@ temp.8666, <variable>.DPB.fs
	ldrb	r1, [lr, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r0, r1, #1	@ tmp548, <variable>.is_used,
	strb	r0, [lr, #2]	@ tmp548, <variable>.is_used
	ldr	sl, [r4, r3, asl #2]	@ D.39973, <variable>.DPB.fs
	add	r1, r6, #16	@, pCurrPic,
	ldrb	r2, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	r9, [sl, #4]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r2, #1	@ <variable>.mode_skip_flag,
	mov	r2, #528	@,
	orreq	r9, r9, #1	@ iftmp.516, <variable>.mode_skip_flag,
	strb	r9, [sl, #4]	@ iftmp.516, <variable>.mode_skip_flag
	ldr	ip, [r4, r7, asl #2]	@ temp.8668, <variable>.DPB.fs
	add	r0, ip, #72	@, temp.8668,
	ldrd	r8, [ip, #88]	@, temp.8668,
	ldr	sl, [ip, #80]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	lr, [ip, #84]	@ OtherFieldPts, <variable>.fs_image.PTS
	strd	r8, [fp, #-60]	@,,
	ldrd	r8, [ip, #96]	@, temp.8668,
	str	lr, [fp, #-64]	@,
	strd	r8, [fp, #-52]	@,,
	bl	memcpy	@
	ldr	ip, [fp, #-64]	@,
	ldr	r1, [r6, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	r0, [r6, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r2, sl, ip	@ tmp566, OtherFieldPts, OtherFieldPts
	ldrd	r8, [r6, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	and	r3, r1, r0	@ tmp569, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	movw	r1, #:lower16:2780730	@ tmp579,
	cmn	r3, #1	@ tmp569,
	movne	r0, #0	@, tmp575
	moveq	r0, #1	@, tmp575
	cmn	r2, #1	@ tmp566,
	movt	r1, #:upper16:2780730	@ tmp579,
	moveq	r0, #0	@, tmp575,
	cmp	r0, #0	@ tmp575,
	add	r3, r5, r1	@ tmp579, pos, tmp579
	ldrne	r0, [r4, r7, asl #2]	@ tmp578, <variable>.DPB.fs
	movw	r7, #:lower16:2780730	@ tmp583,
	movt	r7, #:upper16:2780730	@ tmp583,
	strne	ip, [r0, #84]	@ OtherFieldPts, <variable>.fs_image.PTS
	add	ip, r5, r7	@ tmp583, pos, tmp583
	strne	sl, [r0, #80]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	r0, [fp, #-60]	@,,
	ldr	r2, [r4, r3, asl #2]	@ tmp581, <variable>.DPB.fs
	cmp	r9, r1	@ <variable>.fs_image.Usertag,
	cmpeq	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r9, r1	@ <variable>.fs_image.Usertag,
	strd	r8, [r2, #88]	@ <variable>.fs_image.Usertag, tmp581,
	ldrd	r0, [r6, #40]	@ <variable>.fs_image.DispTime, pCurrPic,
	ldrd	r8, [fp, #-52]	@,,
	ldr	r3, [r4, ip, asl #2]	@ tmp585, <variable>.DPB.fs
	cmp	r1, r9	@ <variable>.fs_image.DispTime,
	cmpeq	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r1, r9	@ <variable>.fs_image.DispTime,
	strd	r0, [r3, #96]	@ <variable>.fs_image.DispTime, tmp585,
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2930	@,
	ldrb	r3, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r3, #1	@ <variable>.is_short_term,
	beq	.L2930	@,
.L2931:
	movw	r7, #:lower16:2780730	@ tmp600,
	movt	r7, #:upper16:2780730	@ tmp600,
	add	r7, r5, r7	@ tmp600, pos, tmp600
	ldr	r0, [r4, r7, asl #2]	@ temp.8678, <variable>.DPB.fs
	ldrb	r1, [r0, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldrb	r2, [r0, #639]	@ zero_extendqisi2	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r1, r2	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	movcs	r2, r1	@ tmp604, <variable>.bottom_field.pic_type
	strb	r2, [r0, #0]	@ tmp604, <variable>.pic_type
	ldr	r3, [r4, r7, asl #2]	@ tmp608, <variable>.DPB.fs
	ldr	ip, [r6, #588]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	ip, [r3, #656]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	lr, [r4, r7, asl #2]	@ temp.8681, <variable>.DPB.fs
	ldr	r0, [lr, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	ldr	r1, [lr, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r0, r1	@ <variable>.bottom_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	strle	r0, [lr, #36]	@, <variable>.bottom_field.MVC_DecPOC, <variable>.MVC_DecPOC
	strgt	r1, [lr, #36]	@, <variable>.top_field.MVC_DecPOC, <variable>.MVC_DecPOC
	ldr	r2, [r4, r7, asl #2]	@ tmp617, <variable>.DPB.fs
	ldrb	ip, [r6, #11]	@ zero_extendqisi2	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	strb	ip, [r2, #12]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r3, [r4, r7, asl #2]	@ tmp622, <variable>.DPB.fs
	ldrb	lr, [r6, #10]	@ zero_extendqisi2	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	strb	lr, [r3, #10]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r0, [r4, r7, asl #2]	@, <variable>.DPB.fs
	bl	MVC_CombineFldsToFrm	@
	ldr	r1, [r4, r7, asl #2]	@ temp.8687, <variable>.DPB.fs
	movw	r2, #:lower16:2780802	@ tmp630,
	movt	r2, #:upper16:2780802	@ tmp630,
	ldr	r0, [r1, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r1	@ prephitmp.8596, temp.8687
	ldr	ip, [r1, #652]	@ <variable>.top_field.poc, <variable>.top_field.poc
	add	r2, r0, r2	@ tmp630, <variable>.apc_idc, tmp630
	add	r0, r4, r2, asl #2	@, tmp635, pMvcCtx, tmp630,
	str	ip, [r0, #4]	@ <variable>.top_field.poc, <variable>.APC.poc
	b	.L2922	@
.L2954:
	ldr	r3, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	mov	ip, #3	@ tmp641,
	strb	ip, [r3, #600]	@ tmp641, <variable>.frame.structure
	ldrb	lr, [r6, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	lr, #0	@ <variable>.field_pair_flag,
	beq	.L2932	@,
	movw	r0, #:lower16:2780730	@ tmp644,
	movt	r0, #:upper16:2780730	@ tmp644,
	add	r3, r1, r0	@ tmp644, pos, tmp644
	ldr	r1, [r4, r3, asl #2]	@ temp.8752, <variable>.DPB.fs
	cmp	r1, #0	@ temp.8752,
	beq	.L2932	@,
	strb	r2, [r1, #672]	@ D.39969, <variable>.bottom_field.structure
	ldr	r8, [r4, r3, asl #2]	@ tmp787, <variable>.DPB.fs
	ldr	r1, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	str	r1, [r8, #676]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	lr, [r4, r3, asl #2]	@ tmp791, <variable>.DPB.fs
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [lr, #673]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	r2, [r4, r3, asl #2]	@ tmp796, <variable>.DPB.fs
	ldrb	r7, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r7, [r2, #674]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	sl, [r4, r3, asl #2]	@ tmp801, <variable>.DPB.fs
	ldr	r9, [r6, #576]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r9, [sl, #688]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	movw	r9, #:lower16:2780730	@ tmp820,
	ldr	ip, [r4, r3, asl #2]	@ tmp805, <variable>.DPB.fs
	movt	r9, #:upper16:2780730	@ tmp820,
	ldrb	r8, [r6, #12]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	strb	r8, [ip, #675]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	r1, [r4, r3, asl #2]	@ tmp810, <variable>.DPB.fs
	ldr	lr, [r6, #596]	@ <variable>.err_level, <variable>.err_level
	str	lr, [r1, #696]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	r7, [r4, r3, asl #2]	@ temp.8765, <variable>.DPB.fs
	ldr	r0, [r7, #696]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r2, [r7, #660]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r8, r0, r2	@ temp.8768, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	r8, [r7, #44]	@ temp.8768, <variable>.err_level
	str	r8, [r7, #624]	@ temp.8768, <variable>.frame.err_level
	movw	r7, #:lower16:2780730	@ tmp835,
	ldr	ip, [r4, r3, asl #2]	@ temp.8769, <variable>.DPB.fs
	add	r3, r5, r9	@ tmp820, pos, tmp820
	movt	r7, #:upper16:2780730	@ tmp835,
	add	r7, r5, r7	@ tmp835, pos, tmp835
	ldrb	sl, [ip, #1]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	sl, #0	@ <variable>.non_existing,
	ldrneb	r8, [r6, #2]	@ zero_extendqisi2	@ iftmp.519, <variable>.non_existing
	moveq	r8, sl	@ iftmp.519, <variable>.non_existing
	strb	r8, [ip, #1]	@ iftmp.519, <variable>.non_existing
	ldr	lr, [r4, r3, asl #2]	@ temp.8771, <variable>.DPB.fs
	ldrb	r1, [lr, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r0, r1, #2	@ tmp824, <variable>.is_used,
	strb	r0, [lr, #2]	@ tmp824, <variable>.is_used
	ldr	sl, [r4, r3, asl #2]	@ temp.8612, <variable>.DPB.fs
	add	r1, r6, #16	@, pCurrPic,
	ldrb	r2, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	r9, [sl, #4]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r2, #1	@ <variable>.mode_skip_flag,
	mov	r2, #528	@,
	orreq	r9, r9, #2	@ iftmp.520, <variable>.mode_skip_flag,
	strb	r9, [sl, #4]	@ iftmp.520, <variable>.mode_skip_flag
	ldr	ip, [r4, r7, asl #2]	@ temp.8775, <variable>.DPB.fs
	add	r0, ip, #72	@, temp.8775,
	ldrd	r8, [ip, #88]	@, temp.8775,
	ldr	sl, [ip, #80]	@ OtherFieldPts.8776, <variable>.fs_image.PTS
	ldr	lr, [ip, #84]	@ OtherFieldPts.8776, <variable>.fs_image.PTS
	strd	r8, [fp, #-60]	@,,
	ldrd	r8, [ip, #96]	@, temp.8775,
	str	lr, [fp, #-64]	@,
	strd	r8, [fp, #-52]	@,,
	bl	memcpy	@
	ldr	ip, [fp, #-64]	@,
	ldr	r1, [r6, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	r0, [r6, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r2, sl, ip	@ tmp842, OtherFieldPts.8776, OtherFieldPts.8776
	ldrd	r8, [r6, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	and	r3, r1, r0	@ tmp845, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	movw	r1, #:lower16:2780730	@ tmp855,
	cmn	r3, #1	@ tmp845,
	movne	r0, #0	@, tmp851
	moveq	r0, #1	@, tmp851
	cmn	r2, #1	@ tmp842,
	movt	r1, #:upper16:2780730	@ tmp855,
	moveq	r0, #0	@, tmp851,
	cmp	r0, #0	@ tmp851,
	add	r3, r5, r1	@ tmp855, pos, tmp855
	ldrne	r0, [r4, r7, asl #2]	@ tmp854, <variable>.DPB.fs
	movw	r7, #:lower16:2780730	@ tmp859,
	movt	r7, #:upper16:2780730	@ tmp859,
	strne	ip, [r0, #84]	@ OtherFieldPts.8776, <variable>.fs_image.PTS
	add	ip, r5, r7	@ tmp859, pos, tmp859
	strne	sl, [r0, #80]	@ OtherFieldPts.8776, <variable>.fs_image.PTS
	ldrd	r0, [fp, #-60]	@,,
	ldr	r2, [r4, r3, asl #2]	@ tmp857, <variable>.DPB.fs
	cmp	r9, r1	@ <variable>.fs_image.Usertag,
	cmpeq	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r9, r1	@ <variable>.fs_image.Usertag,
	strd	r8, [r2, #88]	@ <variable>.fs_image.Usertag, tmp857,
	ldrd	r0, [r6, #40]	@ <variable>.fs_image.DispTime, pCurrPic,
	ldrd	r8, [fp, #-52]	@,,
	ldr	r3, [r4, ip, asl #2]	@ tmp861, <variable>.DPB.fs
	cmp	r1, r9	@ <variable>.fs_image.DispTime,
	cmpeq	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r1, r9	@ <variable>.fs_image.DispTime,
	strd	r0, [r3, #96]	@ <variable>.fs_image.DispTime, tmp861,
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2946	@,
	ldrb	r3, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r3, #1	@ <variable>.is_short_term,
	beq	.L2946	@,
.L2947:
	movw	r7, #:lower16:2780730	@ tmp876,
	movt	r7, #:upper16:2780730	@ tmp876,
	add	r7, r5, r7	@ tmp876, pos, tmp876
	ldr	r2, [r4, r7, asl #2]	@ temp.8797, <variable>.DPB.fs
	ldrb	r1, [r2, #675]	@ zero_extendqisi2	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldrb	lr, [r2, #639]	@ zero_extendqisi2	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r1, lr	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	movcs	lr, r1	@ tmp880, <variable>.bottom_field.pic_type
	strb	lr, [r2, #0]	@ tmp880, <variable>.pic_type
	ldr	r3, [r4, r7, asl #2]	@ tmp884, <variable>.DPB.fs
	ldr	r0, [r6, #592]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	r0, [r3, #692]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldr	ip, [r4, r7, asl #2]	@ temp.8803, <variable>.DPB.fs
	ldr	r2, [ip, #656]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	ldr	lr, [ip, #692]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	lr, r2	@ <variable>.bottom_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	strle	lr, [ip, #36]	@, <variable>.bottom_field.MVC_DecPOC, <variable>.MVC_DecPOC
	strgt	r2, [ip, #36]	@, <variable>.top_field.MVC_DecPOC, <variable>.MVC_DecPOC
	ldr	r0, [r4, r7, asl #2]	@, <variable>.DPB.fs
	bl	MVC_CombineFldsToFrm	@
	ldrb	r0, [r6, #11]	@ zero_extendqisi2	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r4, r7, asl #2]	@ tmp896, <variable>.DPB.fs
	movw	r2, #:lower16:2780818	@ tmp906,
	movt	r2, #:upper16:2780818	@ tmp906,
	strb	r0, [r1, #13]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldrb	ip, [r6, #10]	@ zero_extendqisi2	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r3, [r4, r7, asl #2]	@ tmp901, <variable>.DPB.fs
	strb	ip, [r3, #11]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r3, [r4, r7, asl #2]	@ prephitmp.8596, <variable>.DPB.fs
	ldr	r1, [r3, #52]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	ip, [r3, #688]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	add	r2, r1, r2	@ tmp906, <variable>.apc_idc, tmp906
	add	r0, r4, r2, asl #2	@, tmp911, pMvcCtx, tmp906,
	str	ip, [r0, #4]	@ <variable>.bottom_field.poc, <variable>.APC.poc
	b	.L2922	@
.L2932:
	ldr	r0, [r6, #544]	@ temp.8813, <variable>.frame_store
	movw	r3, #:lower16:2780730	@ tmp646,
	movt	r3, #:upper16:2780730	@ tmp646,
	mov	r7, #2	@ tmp648,
	add	ip, r5, r3	@ tmp646, pos, tmp646
	str	r0, [r4, ip, asl #2]	@ temp.8813, <variable>.DPB.fs
	strb	r7, [r0, #672]	@ tmp648, <variable>.bottom_field.structure
	ldr	lr, [r4, ip, asl #2]	@ tmp652, <variable>.DPB.fs
	ldr	r1, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	str	r1, [lr, #676]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	r2, [r4, ip, asl #2]	@ tmp656, <variable>.DPB.fs
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r2, #673]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	lr, [r4, ip, asl #2]	@ tmp661, <variable>.DPB.fs
	ldrb	r1, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r1, [lr, #674]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	r2, [r4, ip, asl #2]	@ tmp666, <variable>.DPB.fs
	ldr	r0, [r6, #576]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r0, [r2, #688]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	lr, [r4, ip, asl #2]	@ tmp670, <variable>.DPB.fs
	ldrb	r1, [r6, #12]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	strb	r1, [lr, #675]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	r2, [r4, ip, asl #2]	@ tmp675, <variable>.DPB.fs
	ldr	r0, [r6, #596]	@ <variable>.err_level, <variable>.err_level
	str	r0, [r2, #696]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	lr, [r4, ip, asl #2]	@ temp.8826, <variable>.DPB.fs
	ldr	r1, [lr, #660]	@ temp.8827, <variable>.top_field.err_level
	str	r1, [lr, #44]	@ temp.8827, <variable>.err_level
	str	r1, [lr, #624]	@ temp.8827, <variable>.frame.err_level
	ldr	r2, [r4, ip, asl #2]	@ tmp681, <variable>.DPB.fs
	ldrb	r0, [r6, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r0, [r2, #1]	@ <variable>.non_existing, <variable>.non_existing
	ldr	lr, [r4, ip, asl #2]	@ tmp686, <variable>.DPB.fs
	strb	r7, [lr, #2]	@ tmp648, <variable>.is_used
	ldr	r1, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r4, ip, asl #2]	@ tmp691, <variable>.DPB.fs
	ldrb	r0, [r1, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r0, [r2, #5]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	lr, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r4, ip, asl #2]	@ tmp697, <variable>.DPB.fs
	ldrb	r1, [lr, #7]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	strb	r1, [r7, #7]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2934	@,
	ldrb	ip, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	ip, #1	@ <variable>.is_short_term,
	beq	.L2934	@,
.L2935:
	movw	r7, #:lower16:2780730	@ tmp713,
	movt	r7, #:upper16:2780730	@ tmp713,
	add	r7, r5, r7	@ tmp713, pos, tmp713
	mov	r5, #0	@ tmp716,
	add	r1, r6, #16	@, pCurrPic,
	mov	r2, #528	@,
	ldr	r0, [r4, r7, asl #2]	@ tmp715, <variable>.DPB.fs
	str	r5, [r0, #40]	@ tmp716, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r7, asl #2]	@ tmp719, <variable>.DPB.fs
	add	r0, lr, #72	@, tmp719,
	bl	memcpy	@
	ldr	r1, [r4, r7, asl #2]	@ tmp726, <variable>.DPB.fs
	ldr	ip, [r6, #620]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r3, #:lower16:.LANCHOR1	@ tmp769,
	movt	r3, #:upper16:.LANCHOR1	@ tmp769,
	mov	r2, #2	@,
	mov	r0, r4	@, pMvcCtx
	str	ip, [r1, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r4, r7, asl #2]	@ tmp730, <variable>.DPB.fs
	ldr	ip, [r6, #552]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r1, #20]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r4, r7, asl #2]	@ tmp734, <variable>.DPB.fs
	ldr	ip, [r6, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	ip, [r1, #32]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r4, r7, asl #2]	@ tmp738, <variable>.DPB.fs
	ldr	ip, [r6, #580]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r1, #36]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r1, [r4, r7, asl #2]	@ temp.8853, <variable>.DPB.fs
	ldrb	ip, [r6, #12]	@ zero_extendqisi2	@ temp.8854, <variable>.pic_type
	strb	ip, [r1, #0]	@ temp.8854, <variable>.pic_type
	strb	ip, [r1, #675]	@ temp.8854, <variable>.bottom_field.pic_type
	ldr	r1, [r4, r7, asl #2]	@ tmp746, <variable>.DPB.fs
	ldr	ip, [r6, #592]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	ip, [r1, #692]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldr	r1, [r4, r7, asl #2]	@ tmp750, <variable>.DPB.fs
	ldr	ip, [r6, #624]	@ <variable>.view_id, <variable>.view_id
	str	ip, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r7, asl #2]	@ tmp754, <variable>.DPB.fs
	ldr	ip, [r6, #628]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r1, #60]	@ <variable>.voidx, <variable>.voidx
	ldr	r1, [r4, r7, asl #2]	@ tmp758, <variable>.DPB.fs
	ldrb	ip, [r6, #11]	@ zero_extendqisi2	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	strb	ip, [r1, #13]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r4, r7, asl #2]	@ tmp763, <variable>.DPB.fs
	ldrb	ip, [r6, #10]	@ zero_extendqisi2	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	strb	ip, [r1, #11]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	ip, [r3, #68]	@ cnt, cnt
	ldr	r1, [r4, r7, asl #2]	@ tmp768, <variable>.DPB.fs
	str	ip, [r1, #64]	@ cnt, <variable>.dpb_cnt
	ldr	ip, [r3, #68]	@ cnt, cnt
	add	r1, ip, #1	@ tmp774, cnt,
	str	r1, [r3, #68]	@ tmp774, cnt
	ldrb	ip, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r3, [r4, r7, asl #2]	@ temp.8870, <variable>.DPB.fs
	cmp	ip, #1	@ <variable>.mode_skip_flag,
	moveq	ip, r2	@ iftmp.517,
	movne	ip, r5	@ iftmp.517,
	strb	ip, [r3, #4]	@ iftmp.517, <variable>.mode_skip_flag
	ldr	r1, [r6, #544]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@ ret.8873
	beq	.L2915	@,
	mov	r3, r0	@, ret.8873
	movw	r2, #2333	@,
	mov	r0, r5	@, tmp716
.L2953:
	movw	r1, #:lower16:.LC86	@,
	movt	r1, #:upper16:.LC86	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	mvn	r0, #0	@ D.40024,
	b	.L2916	@
.L2917:
	ldr	r1, [r6, #544]	@ temp.8688, <variable>.frame_store
	movw	r3, #:lower16:2780730	@ tmp366,
	movt	r3, #:upper16:2780730	@ tmp366,
	mov	lr, #1	@ tmp368,
	add	r3, r5, r3	@ tmp366, pos, tmp366
	str	r1, [r4, r3, asl #2]	@ temp.8688, <variable>.DPB.fs
	strb	lr, [r1, #636]	@ tmp368, <variable>.top_field.structure
	ldr	r2, [r4, r3, asl #2]	@ tmp372, <variable>.DPB.fs
	ldr	ip, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	str	ip, [r2, #640]	@ <variable>.frame_store, <variable>.top_field.frame_store
	ldr	r7, [r4, r3, asl #2]	@ tmp376, <variable>.DPB.fs
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r7, #637]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r1, [r4, r3, asl #2]	@ tmp381, <variable>.DPB.fs
	ldrb	ip, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	ip, [r1, #638]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	r2, [r4, r3, asl #2]	@ tmp386, <variable>.DPB.fs
	ldr	r7, [r6, #572]	@ <variable>.toppoc, <variable>.toppoc
	str	r7, [r2, #652]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r0, [r4, r3, asl #2]	@ tmp390, <variable>.DPB.fs
	ldrb	r1, [r6, #12]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	strb	r1, [r0, #639]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	ip, [r4, r3, asl #2]	@ tmp395, <variable>.DPB.fs
	ldr	r7, [r6, #596]	@ <variable>.err_level, <variable>.err_level
	str	r7, [ip, #660]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	r2, [r4, r3, asl #2]	@ temp.8701, <variable>.DPB.fs
	ldr	r0, [r2, #660]	@ temp.8702, <variable>.top_field.err_level
	str	r0, [r2, #44]	@ temp.8702, <variable>.err_level
	str	r0, [r2, #624]	@ temp.8702, <variable>.frame.err_level
	ldr	r1, [r4, r3, asl #2]	@ tmp401, <variable>.DPB.fs
	ldrb	ip, [r6, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	ip, [r1, #1]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r7, [r4, r3, asl #2]	@ tmp406, <variable>.DPB.fs
	strb	lr, [r7, #2]	@ tmp368, <variable>.is_used
	ldr	r2, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r4, r3, asl #2]	@ tmp411, <variable>.DPB.fs
	ldrb	r1, [r2, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r1, [r0, #5]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	ip, [r6, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r4, r3, asl #2]	@ tmp417, <variable>.DPB.fs
	ldrb	lr, [ip, #7]	@ zero_extendqisi2	@ <variable>.is_displayed, <variable>.is_displayed
	strb	lr, [r7, #7]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2919	@,
	ldrb	lr, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	lr, #1	@ <variable>.is_short_term,
	beq	.L2919	@,
.L2920:
	movw	r7, #:lower16:2780730	@ tmp433,
	movt	r7, #:upper16:2780730	@ tmp433,
	add	r7, r5, r7	@ tmp433, pos, tmp433
	mov	r5, #0	@ tmp436,
	add	r1, r6, #16	@, pCurrPic,
	mov	r2, #528	@,
	ldr	r0, [r4, r7, asl #2]	@ tmp435, <variable>.DPB.fs
	str	r5, [r0, #40]	@ tmp436, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r7, asl #2]	@ tmp439, <variable>.DPB.fs
	add	r0, lr, #72	@, tmp439,
	bl	memcpy	@
	ldr	r1, [r4, r7, asl #2]	@ tmp446, <variable>.DPB.fs
	ldr	ip, [r6, #620]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r3, #:lower16:.LANCHOR1	@ tmp490,
	movt	r3, #:upper16:.LANCHOR1	@ tmp490,
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	str	ip, [r1, #48]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r4, r7, asl #2]	@ tmp450, <variable>.DPB.fs
	ldr	ip, [r6, #552]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r1, #20]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r4, r7, asl #2]	@ tmp454, <variable>.DPB.fs
	ldr	ip, [r6, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	ip, [r1, #32]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r4, r7, asl #2]	@ tmp458, <variable>.DPB.fs
	ldr	ip, [r6, #580]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r1, #36]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r1, [r4, r7, asl #2]	@ tmp462, <variable>.DPB.fs
	ldrb	ip, [r6, #12]	@ zero_extendqisi2	@ <variable>.pic_type, <variable>.pic_type
	strb	ip, [r1, #0]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r1, [r4, r7, asl #2]	@ tmp467, <variable>.DPB.fs
	ldr	ip, [r6, #588]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	ip, [r1, #656]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r1, [r4, r7, asl #2]	@ tmp471, <variable>.DPB.fs
	ldr	ip, [r6, #624]	@ <variable>.view_id, <variable>.view_id
	str	ip, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r7, asl #2]	@ tmp475, <variable>.DPB.fs
	ldr	ip, [r6, #628]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r1, #60]	@ <variable>.voidx, <variable>.voidx
	ldr	r1, [r4, r7, asl #2]	@ tmp479, <variable>.DPB.fs
	ldrb	ip, [r6, #11]	@ zero_extendqisi2	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	strb	ip, [r1, #12]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r4, r7, asl #2]	@ tmp484, <variable>.DPB.fs
	ldrb	ip, [r6, #10]	@ zero_extendqisi2	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	strb	ip, [r1, #10]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	ip, [r3, #68]	@ cnt, cnt
	ldr	r1, [r4, r7, asl #2]	@ tmp489, <variable>.DPB.fs
	str	ip, [r1, #64]	@ cnt, <variable>.dpb_cnt
	ldr	r1, [r3, #68]	@ cnt, cnt
	add	ip, r1, r2	@ tmp495, cnt,
	str	ip, [r3, #68]	@ tmp495, cnt
	ldr	r3, [r4, r7, asl #2]	@ tmp498, <variable>.DPB.fs
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r1, r2	@ <variable>.mode_skip_flag,
	movne	ip, #0	@, tmp500
	moveq	ip, #1	@, tmp500
	strb	ip, [r3, #4]	@ tmp500, <variable>.mode_skip_flag
	ldr	r1, [r6, #544]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@ ret.8748
	beq	.L2915	@,
	mov	r3, r0	@, ret.8748
	movw	r2, #2220	@,
	mov	r0, r5	@, tmp436
	b	.L2953	@
.L2955:
	ldrb	r2, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #0	@ <variable>.is_short_term,
	beq	.L2912	@,
	b	.L2911	@
.L2934:
	movw	r0, #:lower16:2780730	@ tmp703,
	movt	r0, #:upper16:2780730	@ tmp703,
	add	lr, r5, r0	@ tmp703, pos, tmp703
	mov	r1, #2	@ tmp706,
	ldr	r2, [r4, lr, asl #2]	@ tmp705, <variable>.DPB.fs
	strb	r1, [r2, #3]	@ tmp706, <variable>.is_reference
	ldrb	r7, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r7, #1	@ <variable>.is_long_term,
	ldreq	lr, [r4, lr, asl #2]	@ tmp711, <variable>.DPB.fs
	ldreq	r7, [r6, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r7, [lr, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2935	@
.L2919:
	movw	r1, #:lower16:2780730	@ tmp423,
	movt	r1, #:upper16:2780730	@ tmp423,
	add	r7, r5, r1	@ tmp423, pos, tmp423
	mov	ip, #1	@ tmp426,
	ldr	r2, [r4, r7, asl #2]	@ tmp425, <variable>.DPB.fs
	strb	ip, [r2, #3]	@ tmp426, <variable>.is_reference
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, ip	@ <variable>.is_long_term,
	ldreq	r7, [r4, r7, asl #2]	@ tmp431, <variable>.DPB.fs
	ldreq	r0, [r6, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r0, [r7, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2920	@
.L2946:
	movw	r1, #:lower16:2780730	@ tmp865,
	movt	r1, #:upper16:2780730	@ tmp865,
	add	r7, r5, r1	@ tmp865, pos, tmp865
	ldr	r2, [r4, r7, asl #2]	@ temp.8792, <variable>.DPB.fs
	ldrb	lr, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	r0, lr, #2	@ tmp869, <variable>.is_reference,
	strb	r0, [r2, #3]	@ tmp869, <variable>.is_reference
	ldrb	ip, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #1	@ <variable>.is_long_term,
	ldreq	r7, [r4, r7, asl #2]	@ tmp874, <variable>.DPB.fs
	ldreq	ip, [r6, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r7, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2947	@
.L2930:
	movw	r1, #:lower16:2780730	@ tmp589,
	movt	r1, #:upper16:2780730	@ tmp589,
	add	r7, r5, r1	@ tmp589, pos, tmp589
	ldr	r2, [r4, r7, asl #2]	@ temp.8674, <variable>.DPB.fs
	ldrb	lr, [r2, #3]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	r0, lr, #1	@ tmp593, <variable>.is_reference,
	strb	r0, [r2, #3]	@ tmp593, <variable>.is_reference
	ldrb	ip, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #1	@ <variable>.is_long_term,
	ldreq	r7, [r4, r7, asl #2]	@ tmp598, <variable>.DPB.fs
	ldreq	ip, [r6, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r7, #28]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2931	@
	.fnend
	.size	MVC_InsertFrmInDPB, .-MVC_InsertFrmInDPB
	.align	2
	.global	MVC_StorePicInDpb
	.type	MVC_StorePicInDpb, %function
MVC_StorePicInDpb:
	.fnstart
.LFB1579:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11151963	@ tmp187,
	movw	r6, #:lower16:11151960	@ tmp191,
	movt	r1, #:upper16:11151963	@ tmp187,
	movt	r6, #:upper16:11151960	@ tmp191,
	movw	r3, #:lower16:11116024	@ tmp183,
	ldrb	r5, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movt	r3, #:upper16:11116024	@ tmp183,
	ldrb	r1, [r0, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	movw	r2, #:lower16:11116025	@ tmp186,
	cmp	r5, #2	@ <variable>.CurrPic.structure,
	movne	ip, #0	@, tmp189
	moveq	ip, #1	@, tmp189
	movt	r2, #:upper16:11116025	@ tmp186,
	cmp	r1, #0	@ <variable>.CurrPic.state,
	mov	r6, #0	@ tmp184,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	strb	ip, [r0, r2]	@ tmp189, <variable>.CurrPOC.last_pic_bottom_field
	strb	r6, [r0, r3]	@ tmp184, <variable>.CurrPOC.last_has_mmco_5
	beq	.L3056	@,
	movw	r2, #:lower16:11151973	@ tmp196,
	movt	r2, #:upper16:11151973	@ tmp196,
	ldr	lr, [r0, #128]	@ <variable>.PicCounter, <variable>.PicCounter
	ldrb	r3, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	cmp	r3, #0	@ <variable>.CurrPic.is_idr_pic,
	str	lr, [r0, #124]	@ <variable>.PicCounter, <variable>.PrevStorePicCounter
	bne	.L3057	@,
.L2959:
	ldrb	r0, [r4, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L3058	@,
	ldr	lr, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [lr, #12]	@ prephitmp.8941, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ prephitmp.8941,
	ble	.L3059	@,
.L2964:
	movw	r0, #:lower16:11151962	@ tmp220,
	movt	r0, #:upper16:11151962	@ tmp220,
	ldrb	r5, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	r5, #0	@ <variable>.CurrPic.non_existing,
	beq	.L3060	@,
.L2966:
	cmp	r2, #2	@ prephitmp.8941,
	beq	.L3061	@,
.L2965:
	movw	r0, #:lower16:11152520	@ tmp302,
	movt	r0, #:upper16:11152520	@ tmp302,
	ldr	r6, [r4, r0]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2984	@,
	movw	r5, #:lower16:11152556	@ tmp304,
	movt	r5, #:upper16:11152556	@ tmp304,
	ldr	r3, [r4, #112]	@ D.40890, <variable>.ref_error_thr
	ldr	r2, [r4, r5]	@ D.40891, <variable>.CurrPic.err_level
	cmp	r3, r2	@ D.40890, D.40891
	bcs	.L2991	@,
	movw	ip, #:lower16:11151962	@ tmp305,
	movt	ip, #:upper16:11151962	@ tmp305,
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	lr, #0	@ <variable>.CurrPic.non_existing,
	beq	.L3062	@,
.L2991:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_Marking	@
	cmp	r0, #0	@ ret.9019
	bne	.L3063	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	r2, #:lower16:11152584	@ tmp320,
	movt	r2, #:upper16:11152584	@ tmp320,
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r2]	@, <variable>.CurrPic.view_id
	bl	MVC_RemoveUnUsedFrameStore	@
.L2984:
	movw	r1, #:lower16:11151961	@ tmp322,
	movt	r1, #:upper16:11151961	@ tmp322,
	ldrb	r6, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r6, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2994	@,
	movw	r0, #:lower16:11123112	@ tmp324,
	movt	r0, #:upper16:11123112	@ tmp324,
	ldr	ip, [r4, r0]	@ prephitmp.8943, <variable>.DPB.size
.L2995:
	movw	r1, #:lower16:11152520	@ tmp338,
	movt	r1, #:upper16:11152520	@ tmp338,
	ldr	r6, [r4, r1]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L3064	@,
.L3003:
	mvn	r8, #0	@ pre_used_size,
	movw	r5, #:lower16:11123116	@ tmp441,
	movw	r6, #:lower16:11152520	@ tmp445,
	movw	sl, #:lower16:11152524	@ tmp446,
	movw	r7, #:lower16:11123112	@ tmp447,
	movt	r5, #:upper16:11123116	@ tmp441,
	movt	r6, #:upper16:11152520	@ tmp445,
	movt	sl, #:upper16:11152524	@ tmp446,
	movt	r7, #:upper16:11123112	@ tmp447,
	mov	r9, r8	@ pre_pos, pre_used_size
	b	.L3012	@
.L3007:
	ldr	r9, [r4, r6]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	mov	r1, r3	@, pre_pos.9031
	cmp	r9, #0	@ <variable>.CurrPic.nal_ref_idc,
	mov	r9, r3	@ pre_pos, pre_pos.9031
	bne	.L3008	@,
	ldr	ip, [r4, sl]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r2, [fp, #-48]	@ min_poc, min_poc
	cmp	ip, r2	@ <variable>.CurrPic.thispoc, min_poc
	blt	.L3065	@,
.L3008:
	bl	MVC_OutputFrmFromDPB	@
	cmn	r0, #1	@ ret.9040,
	beq	.L3011	@,
	ldr	ip, [r4, r7]	@ prephitmp.8943, <variable>.DPB.size
.L3012:
	ldr	lr, [r4, r5]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	sub	r2, fp, #48	@,,
	sub	r3, fp, #52	@,,
	mov	r0, r4	@, pMvcCtx
	cmp	lr, ip	@ <variable>.DPB.used_size, prephitmp.8943
	mvn	r1, #0	@,
	bcc	.L3005	@,
	bl	MVC_GetMinPOC	@
	cmp	r0, #0	@,
	mov	r0, r4	@, pMvcCtx
	blt	.L3066	@,
	ldr	r3, [r4, r5]	@ pre_used_size.9030, <variable>.DPB.used_size
	cmp	r3, r8	@ pre_used_size.9030, pre_used_size
	mov	r8, r3	@ pre_used_size, pre_used_size.9030
	ldrne	r3, [fp, #-52]	@ pre_pos.9031, pos
	bne	.L3007	@,
	ldr	r3, [fp, #-52]	@ pre_pos.9031, pos
	cmp	r3, r9	@ pre_pos.9031, pre_pos
	bne	.L3007	@,
	mov	r3, r9	@, pre_pos
	ldr	r2, .L3080	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC99	@,
	movt	r1, #:upper16:.LC99	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3717	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3057:
	movw	r5, #:lower16:11152508	@ tmp199,
	movt	r5, #:upper16:11152508	@ tmp199,
	ldr	ip, [r0, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r5, [ip, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r5, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2960	@,
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	beq	.L2959	@,
	mov	r0, r6	@, tmp184
	movw	r1, #:lower16:.LC91	@,
	movt	r1, #:upper16:.LC91	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3446	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3060:
	movw	r7, #:lower16:11151963	@ tmp223,
	movt	r7, #:upper16:11151963	@ tmp223,
	movw	ip, #:lower16:11152504	@ tmp222,
	movt	ip, #:upper16:11152504	@ tmp222,
	ldrb	r1, [r4, r7]	@ zero_extendqisi2	@ temp.8987, <variable>.CurrPic.structure
	ldr	r7, [r4, ip]	@ pFrameStore, <variable>.CurrPic.frame_store
	sub	lr, r1, #1	@ tmp224, temp.8987,
	uxtb	r3, lr	@ tmp225, tmp224
	cmp	r3, #1	@ tmp225,
	movhi	r3, #0	@, one_fld_flg
	movls	r3, #1	@, one_fld_flg
	cmp	r1, #0	@ temp.8987,
	bne	.L3067	@,
.L2967:
	cmp	r3, #0	@ one_fld_flg,
	beq	.L2968	@,
	ldr	r0, [r4, #220]	@ temp.8988, <variable>.FirstFrameDisplayed
	cmp	r0, #0	@ temp.8988,
	bne	.L2969	@,
	movw	lr, #:lower16:11152592	@,
	movw	r3, #:lower16:11151960	@,
	movt	lr, #:upper16:11152592	@,
	movt	r3, #:upper16:11151960	@,
	add	r1, r4, r3	@, pMvcCtx,
	mov	r2, #1	@ tmp234,
	add	r0, r4, lr	@, pMvcCtx,
	str	r2, [r4, #220]	@ tmp234, <variable>.FirstFrameDisplayed
	mov	r2, #632	@,
	bl	memcpy	@
	ldr	r1, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r1, #12]	@ prephitmp.8941, <variable>.s32DecOrderOutput
	b	.L2966	@
.L3064:
	movw	lr, #:lower16:11123120	@ tmp340,
	movw	r0, #:lower16:11123124	@ tmp341,
	movt	lr, #:upper16:11123120	@ tmp340,
	movt	r0, #:upper16:11123124	@ tmp341,
	ldr	r5, [r4, lr]	@ D.40925, <variable>.DPB.ref_frames_in_buffer
	ldr	lr, [r4, r0]	@ D.40926, <variable>.DPB.ltref_frames_in_buffer
	add	r3, lr, r5	@ tmp342, D.40926, D.40925
	cmp	r3, ip	@ tmp342, prephitmp.8943
	bcc	.L3003	@,
	mov	r3, ip	@, prephitmp.8943
	movw	r2, #3697	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC97	@,
	movt	r1, #:upper16:.LC97	@,
	stmia	sp, {r5, lr}	@ phole stm
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3700	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3011:
	mov	r3, r0	@, ret.9040
	mov	r7, r0	@ ret.9040, ret.9040
	movw	r2, #3743	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mov	r2, r7	@, ret.9040
	movt	r1, #:upper16:.LC89	@,
	mov	r3, #3744	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
.L2958:
	movw	r6, #:lower16:11152504	@ tmp414,
	movt	r6, #:upper16:11152504	@ tmp414,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mvn	r5, #0	@ ret,
	ldrsb	r1, [lr, #6]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	movw	r2, #3798	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC90	@,
	mov	r3, r5	@, ret
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r1, #0	@ tmp418,
	strb	r1, [r2, #5]	@ tmp418, <variable>.is_in_dpb
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r1, [r0, #2]	@ tmp418, <variable>.is_used
.L3024:
	movw	r3, #:lower16:11151960	@ tmp424,
	movt	r3, #:upper16:11151960	@ tmp424,
	mov	ip, #0	@ tmp425,
	mov	r0, r5	@, ret
	strb	ip, [r4, r3]	@ tmp425, <variable>.CurrPic.state
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2960:
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	beq	.L2959	@,
	mov	r0, r5	@, <variable>.no_output_of_prior_pics_flag
	movw	r1, #:lower16:.LC92	@,
	movt	r1, #:upper16:.LC92	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3455	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3061:
	movw	ip, #:lower16:11152520	@ tmp286,
	movt	ip, #:upper16:11152520	@ tmp286,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2984	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SimpleSlideDPB	@
	movw	r0, #:lower16:11123112	@ tmp288,
	movt	r0, #:upper16:11123112	@ tmp288,
	ldr	ip, [r4, r0]	@ D.40880, <variable>.DPB.size
	cmp	ip, #0	@ D.40880,
	beq	.L2985	@,
	movw	r5, #:lower16:11122920	@ tmp289,
	movt	r5, #:upper16:11122920	@ tmp289,
	ldr	r1, [r4, r5]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r1, #0	@ <variable>.DPB.fs,
	beq	.L2985	@,
	tst	ip, #1	@ D.40880,
	movw	r2, #:lower16:11122924	@ ivtmp.8963,
	movt	r2, #:upper16:11122924	@ ivtmp.8963,
	mov	r1, #0	@ i,
	add	r3, r4, r2	@ ivtmp.8963, pMvcCtx, ivtmp.8963
	bne	.L2986	@,
	ldr	r5, [r3], #4	@ D.40878, <variable>.DPB.fs
	mov	r1, #1	@ i,
	cmp	r5, #0	@ D.40878,
	bne	.L2986	@,
.L2987:
	movw	r3, #:lower16:11151960	@,
	movt	r3, #:upper16:11151960	@,
	add	r2, r4, r3	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	subs	r5, r0, #0	@ ret.9007,
	bne	.L3068	@,
	movw	r1, #:lower16:11123116	@ tmp297,
	movt	r1, #:upper16:11123116	@ tmp297,
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [r4, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	ip, r2, #1	@ tmp300, <variable>.DPB.used_size,
	str	ip, [r4, r1]	@ tmp300, <variable>.DPB.used_size
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r2, r5	@, ret.9007
	movw	r1, #:lower16:.LC89	@,
	movw	r3, #3612	@,
	movt	r1, #:upper16:.LC89	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	mov	r5, #0	@ ret,
	b	.L3024	@
.L3059:
	ldr	ip, [r4, #220]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	ip, #2	@ <variable>.FirstFrameDisplayed,
	bne	.L2964	@,
	b	.L2965	@
.L2994:
	movw	ip, #:lower16:11152504	@ tmp325,
	movt	ip, #:upper16:11152504	@ tmp325,
	ldr	lr, [r4, #520]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, ip]	@ D.40907, <variable>.CurrPic.frame_store
	cmp	r0, lr	@ D.40907, <variable>.pDirectOutBuf
	beq	.L3069	@,
.L2996:
	movw	r3, #:lower16:11123112	@ tmp327,
	movt	r3, #:upper16:11123112	@ tmp327,
	ldr	ip, [r4, r3]	@ prephitmp.8943, <variable>.DPB.size
	cmp	ip, #0	@ prephitmp.8943,
	beq	.L2995	@,
	movw	r2, #:lower16:11122920	@ ivtmp.8978,
	movt	r2, #:upper16:11122920	@ ivtmp.8978,
	add	r3, r4, r2	@ ivtmp.8978, pMvcCtx, ivtmp.8978
	mov	r1, #0	@ i.9045,
	sub	r5, ip, #1	@ tmp458, prephitmp.8943,
	ldr	r2, [r3, #0]	@ temp.9022, <variable>.DPB.fs
	and	lr, r5, #1	@ tmp460, tmp458,
	cmp	r2, r1	@ temp.9022,
	beq	.L3034	@,
	cmp	r0, r2	@ D.40907, temp.9022
	beq	.L3048	@,
.L3034:
	mov	r1, #1	@ i.9045,
	cmp	r1, ip	@ i.9045, prephitmp.8943
	add	r3, r3, #4	@ ivtmp.8978, ivtmp.8978,
	bcs	.L2995	@,
	cmp	lr, #0	@ tmp460,
	beq	.L3002	@,
	ldr	r2, [r3, #0]	@ temp.9022, <variable>.DPB.fs
	cmp	r2, #0	@ temp.9022,
	beq	.L3036	@,
	cmp	r0, r2	@ D.40907, temp.9022
	beq	.L3048	@,
.L3036:
	add	r1, r1, #1	@ i.9045, i.9045,
	add	r3, r3, #4	@ ivtmp.8978, ivtmp.8978,
	cmp	r1, ip	@ i.9045, prephitmp.8943
	bcc	.L3002	@,
	b	.L2995	@
.L3000:
	ldr	r3, [r3, #4]	@ temp.9022, <variable>.DPB.fs
	add	r1, r1, #1	@ i.9045, i.9045,
	cmp	r3, #0	@ temp.9022,
	mov	r2, r1	@ tmp461, i.9045
	beq	.L3039	@,
	cmp	r0, r3	@ D.40907, temp.9022
	beq	.L3048	@,
.L3039:
	add	r1, r2, #1	@ i.9045, tmp461,
	add	r3, lr, #4	@ ivtmp.8978, tmp462,
	cmp	r1, ip	@ i.9045, prephitmp.8943
	bcs	.L2995	@,
.L3002:
	ldr	r2, [r3, #0]	@ temp.9022, <variable>.DPB.fs
	add	lr, r3, #4	@ tmp462, ivtmp.8978,
	cmp	r2, #0	@ temp.9022,
	beq	.L3000	@,
	cmp	r0, r2	@ D.40907, temp.9022
	bne	.L3000	@,
.L3048:
	movw	r0, #:lower16:11151960	@,
	movt	r0, #:upper16:11151960	@,
	add	r2, r4, r0	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmn	r0, #1	@ ret.9024,
	mov	r5, r0	@ ret.9024,
	beq	.L3070	@,
	mov	r0, r4	@, pMvcCtx
	mov	r5, #0	@ ret,
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	r1, #:lower16:.LC89	@,
	mov	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3684	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L3024	@
.L3067:
	ldrb	r0, [r7, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #0	@ <variable>.is_used,
	moveq	r5, r3	@, tmp233, one_fld_flg
	orrne	r5, r3, #1	@,, tmp233, one_fld_flg
	cmp	r5, #0	@ tmp233,
	beq	.L2966	@,
	b	.L2967	@
.L2969:
	cmp	r0, #1	@ temp.8988,
	beq	.L2970	@,
.L2968:
	cmp	r1, #0	@ temp.8987,
	beq	.L2971	@,
	ldrb	ip, [r7, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #0	@ <variable>.is_used,
	beq	.L2966	@,
.L2971:
	cmp	r3, #0	@ one_fld_flg,
	bne	.L3071	@,
.L2972:
	movw	r1, #:lower16:11151960	@ pOutPic,
	movt	r1, #:upper16:11151960	@ pOutPic,
	add	r8, r4, r1	@ pOutPic, pMvcCtx, pOutPic
	mov	r5, r7	@ pOutFrameStore, pFrameStore
.L2973:
	cmp	r2, #0	@ prephitmp.8941,
	ble	.L2974	@,
	ldrb	r6, [r8, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r6, #0	@ <variable>.structure,
	beq	.L2975	@,
	ldrb	r2, [r8, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r2, #1	@ <variable>.field_pair_flag,
	beq	.L3072	@,
.L2975:
	ldr	r1, [r8, #596]	@ <variable>.err_level, <variable>.err_level
	str	r1, [r5, #44]	@ <variable>.err_level, <variable>.err_level
.L2976:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pOutFrameStore
	bl	MVC_GetImagePara	@
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r6, r0, #0	@ pImg,
	beq	.L3073	@,
	ldrd	r2, [r8, #40]	@, pOutPic,
	ldrd	r0, [r8, #24]	@ <variable>.fs_image.PTS, pOutPic,
	strd	r2, [r6, #24]	@, pImg,
	ldrd	r2, [r8, #32]	@ <variable>.fs_image.Usertag, pOutPic,
	strd	r0, [r6, #8]	@ <variable>.fs_image.PTS, pImg,
	strd	r2, [r6, #16]	@ <variable>.fs_image.Usertag, pImg,
	ldr	r3, [r5, #44]	@ D.40847, <variable>.err_level
	cmp	r3, #0	@ D.40847,
	str	r3, [r6, #200]	@ D.40847, <variable>.error_level
	beq	.L2978	@,
	ldr	r8, [r6, #160]	@ <variable>.format, <variable>.format
	ands	r8, r8, #3	@ tmp262, <variable>.format,
	beq	.L3074	@,
.L2979:
	ldr	ip, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	lr, [ip, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	lr, r3	@ <variable>.s32OutErrThr, D.40847
	bcc	.L2981	@,
.L2978:
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, #120]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #15	@,
	mov	r2, r4	@, pMvcCtx
	add	r3, r4, #584	@, pMvcCtx,
	str	r6, [sp, #0]	@ pImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	beq	.L2982	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2982:
	mov	r1, r6	@, pImg
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SetFrmRepeatCount	@
	ldr	r1, [r4, #136]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, r1, #2	@ tmp276, <variable>.PicOutCounter,
	str	r0, [r4, #136]	@ tmp276, <variable>.PicOutCounter
.L2974:
	ldr	r3, [r4, #220]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	mov	r2, #2	@ tmp284,
	cmp	r3, #2	@ <variable>.FirstFrameDisplayed,
	movne	r3, #1	@ tmp281,
	strneb	r3, [r7, #8]	@ tmp281, <variable>.as_first_out
	strne	r3, [r5, #16]	@ tmp281, <variable>.eFoState
	ldr	r5, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	str	r2, [r4, #220]	@ tmp284, <variable>.FirstFrameDisplayed
	ldr	r2, [r5, #12]	@ prephitmp.8941, <variable>.s32DecOrderOutput
	b	.L2966	@
.L2988:
	ldr	lr, [r2], #4	@ D.40878, <variable>.DPB.fs
	cmp	lr, #0	@ D.40878,
	beq	.L2987	@,
	ldr	r0, [r3, #4]	@ D.40878, <variable>.DPB.fs
	add	r1, r1, #1	@ i, i,
	add	r3, r2, #4	@ ivtmp.8963, tmp451,
	cmp	r0, #0	@ D.40878,
	beq	.L2987	@,
.L2986:
	add	r1, r1, #1	@ i, i,
	mov	r2, r3	@ tmp451, ivtmp.8963
	cmp	r1, ip	@ i, D.40880
	bcc	.L2988	@,
	b	.L2987	@
.L3058:
	movw	r1, #:lower16:.LC93	@,
	movt	r1, #:upper16:.LC93	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	movw	r1, #:lower16:11152580	@ tmp207,
	movt	r1, #:upper16:11152580	@ tmp207,
	ldr	r3, [r4, #52]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	mov	r5, r0	@ ret,
	ldr	r0, [r4, r1]	@ D.40793, <variable>.CurrPic.pmv_address_idc
	mov	r2, r5	@, ret
	cmp	r0, r3	@ D.40793, <variable>.TotalPmvNum
	strne	r3, [r4, r1]	@ <variable>.TotalPmvNum, <variable>.CurrPic.pmv_address_idc
	addne	r0, r0, #36	@ tmp209, D.40793,
	movw	r3, #3474	@,
	movne	r1, #0	@ tmp214,
	addne	r0, r4, r0, asl #2	@, tmp212, pMvcCtx, tmp209,
	strne	r1, [r0, #4]	@ tmp214, <variable>.PmvStoreUsedFlag
	movw	r1, #:lower16:.LC89	@,
	mov	r0, #14	@,
	movt	r1, #:upper16:.LC89	@,
	bl	dprint_vfmw	@
.L2963:
	cmn	r5, #1	@ ret,
	bne	.L3024	@,
	b	.L2958	@
.L3066:
	movw	r2, #3708	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC98	@,
	movt	r1, #:upper16:.LC98	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
.L3005:
	movw	ip, #:lower16:11152520	@ tmp369,
	movt	ip, #:upper16:11152520	@ tmp369,
	ldr	r0, [r4, ip]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L3014	@,
	movw	r5, #:lower16:11151964	@ tmp371,
	movt	r5, #:upper16:11151964	@ tmp371,
	ldrb	r2, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	beq	.L3075	@,
.L3014:
	movw	r2, #:lower16:11123112	@ tmp375,
	movt	r2, #:upper16:11123112	@ tmp375,
	ldr	ip, [r4, r2]	@ temp.9063, <variable>.DPB.size
	cmp	ip, #0	@ temp.9063,
	beq	.L3016	@,
	movw	lr, #:lower16:11122920	@ tmp376,
	movt	lr, #:upper16:11122920	@ tmp376,
	ldr	r3, [r4, lr]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r3, #0	@ <variable>.DPB.fs,
	beq	.L3016	@,
	tst	ip, #1	@ temp.9063,
	movw	r0, #:lower16:11122924	@ ivtmp.8968,
	movt	r0, #:upper16:11122924	@ ivtmp.8968,
	mov	r1, #0	@ i.9039,
	add	r3, r4, r0	@ ivtmp.8968, pMvcCtx, ivtmp.8968
	bne	.L3017	@,
	ldr	r2, [r3], #4	@ temp.9051, <variable>.DPB.fs
	mov	r1, #1	@ i.9039,
	cmp	r2, #0	@ temp.9051,
	bne	.L3017	@,
	b	.L3021	@
.L3022:
	ldr	r5, [r2], #4	@ temp.9051, <variable>.DPB.fs
	cmp	r5, #0	@ temp.9051,
	beq	.L3021	@,
	ldr	lr, [r3, #4]	@ temp.9051, <variable>.DPB.fs
	add	r1, r1, #1	@ i.9039, i.9039,
	add	r3, r2, #4	@ ivtmp.8968, tmp457,
	cmp	lr, #0	@ temp.9051,
	beq	.L3021	@,
.L3017:
	add	r1, r1, #1	@ i.9039, i.9039,
	mov	r2, r3	@ tmp457, ivtmp.8968
	cmp	r1, ip	@ i.9039, temp.9063
	bcc	.L3022	@,
.L3021:
	movw	r2, #:lower16:11151960	@,
	movt	r2, #:upper16:11151960	@,
	add	r2, r4, r2	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmp	r0, #0	@ ret.9053
	bne	.L3076	@,
	movw	r3, #:lower16:11123116	@ tmp408,
	movt	r3, #:upper16:11123116	@ tmp408,
	mov	r0, r4	@, pMvcCtx
	mov	r5, #0	@ ret,
	ldr	ip, [r4, r3]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	lr, ip, #1	@ tmp411, <variable>.DPB.used_size,
	str	lr, [r4, r3]	@ tmp411, <variable>.DPB.used_size
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	b	.L3024	@
.L3071:
	ldr	r8, [r4, #220]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	r8, #1	@ <variable>.FirstFrameDisplayed,
	bne	.L2972	@,
.L2970:
	movw	r0, #:lower16:11153136	@ tmp245,
	movt	r0, #:upper16:11153136	@ tmp245,
	movw	r5, #:lower16:11152592	@ pOutPic,
	movt	r5, #:upper16:11152592	@ pOutPic,
	add	r8, r4, r5	@ pOutPic, pMvcCtx, pOutPic
	ldr	r5, [r4, r0]	@ pOutFrameStore, <variable>.LastPic.frame_store
	b	.L2973	@
.L3075:
	movw	r5, #:lower16:11123120	@ tmp373,
	movt	r5, #:upper16:11123120	@ tmp373,
	ldr	r1, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L3014	@,
	movw	r7, #:lower16:11122984	@ ivtmp.8973,
	movt	r7, #:upper16:11122984	@ ivtmp.8973,
	add	r3, r4, r7	@ ivtmp.8973, pMvcCtx, ivtmp.8973
	movw	lr, #:lower16:11152512	@ tmp437,
	movw	r6, #:lower16:11152584	@ tmp438,
	movt	lr, #:upper16:11152512	@ tmp437,
	movt	r6, #:upper16:11152584	@ tmp438,
	mov	r7, r2	@ tmp439, i.9012
	b	.L3020	@
.L3018:
	ldr	r1, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.8973, ivtmp.8973,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.9012
	bls	.L3014	@,
.L3020:
	ldr	r1, [r3, #0]	@ D.40961, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.9012, i.9012,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	ldr	ip, [r1, #20]	@ <variable>.frame_num, <variable>.frame_num
	cmp	ip, r0	@ <variable>.frame_num, <variable>.CurrPic.frame_num
	bne	.L3018	@,
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r1, #56]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L3018	@,
	strb	r7, [r1, #3]	@ tmp439, <variable>.is_reference
	ldr	r1, [r3, #0]	@ tmp435, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #5]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	ip, #1	@ <variable>.is_in_dpb,
	streqb	ip, [r1, #7]	@ <variable>.is_in_dpb, <variable>.is_displayed
	ldreq	r1, [r3, #0]	@ tmp391, <variable>.DPB.fs_ref
	streqb	r7, [r1, #5]	@ tmp439, <variable>.is_in_dpb
	ldreq	r1, [r3, #0]	@ tmp435, <variable>.DPB.fs_ref
	ldr	ip, [r4, #52]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	ldr	r0, [r1, #48]	@ D.40972, <variable>.pmv_address_idc
	cmp	r0, ip	@ D.40972, <variable>.TotalPmvNum
	add	r0, r4, r0, asl #2	@, tmp398, pMvcCtx, D.40972,
	strne	r7, [r0, #148]	@ tmp439, <variable>.PmvStoreUsedFlag
	strne	ip, [r1, #48]	@ <variable>.TotalPmvNum, <variable>.pmv_address_idc
	b	.L3018	@
.L3069:
	cmp	r0, #0	@ D.40907,
	beq	.L2996	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3077	@,
.L2999:
	movw	r1, #:lower16:.LC89	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3661	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2963	@
.L3074:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC94	@,
	movw	r2, #3550	@,
	movt	r1, #:upper16:.LC94	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp265,
	movt	r3, #:upper16:g_event_report	@ tmp265,
	ldr	ip, [r3, #0]	@ g_event_report.569, g_event_report
	cmp	ip, #0	@ g_event_report.569,
	beq	.L2980	@,
	mov	r2, r8	@, tmp262
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #111	@,
	mov	r3, r8	@, tmp2
	blx	ip	@ g_event_report.569
.L2980:
	ldr	r3, [r6, #200]	@ D.40847, <variable>.error_level
	cmp	r3, #0	@ D.40847,
	bne	.L2979	@,
	b	.L2978	@
.L3072:
	ldr	ip, [r5, #44]	@ <variable>.err_level, <variable>.err_level
	mov	r0, #3	@ tmp249,
	strb	r0, [r5, #2]	@ tmp249, <variable>.is_used
	ldr	lr, [r8, #596]	@ <variable>.err_level, <variable>.err_level
	add	r3, ip, lr	@ tmp253, <variable>.err_level, <variable>.err_level
	str	r3, [r5, #44]	@ tmp253, <variable>.err_level
	b	.L2976	@
.L3065:
	ldrb	r5, [r4, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r5, #2	@ <variable>.OldDecMode,
	beq	.L3078	@,
.L3009:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3079	@,
.L3010:
	movw	r1, #:lower16:.LC89	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3737	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2963	@
.L3056:
	mov	r0, r1	@, <variable>.CurrPic.state
	movw	r1, #:lower16:.LC88	@,
	movt	r1, #:upper16:.LC88	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3433	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3063:
	mov	r2, r0	@, ret.9019
	movw	r1, #:lower16:.LC96	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC96	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3636	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3078:
	movw	r3, #:lower16:11151963	@ tmp359,
	movt	r3, #:upper16:11151963	@ tmp359,
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r1, #0	@ <variable>.CurrPic.structure,
	movwne	r1, #:lower16:11152504	@ tmp361,
	movtne	r1, #:upper16:11152504	@ tmp361,
	ldrne	r1, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strne	r1, [r4, #524]	@ <variable>.CurrPic.frame_store, <variable>.pLastFieldBuf
	b	.L3009	@
.L3016:
	mov	r1, #0	@ i.9039,
	b	.L3021	@
.L3079:
	movw	r1, #:lower16:.LC90	@,
	movw	r2, #3735	@,
	movt	r1, #:upper16:.LC90	@,
	mov	r3, r5	@, ret
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	b	.L3010	@
.L2985:
	mov	r1, #0	@ i,
	b	.L2987	@
.L3076:
	mov	r3, r0	@, ret.9053
	movw	r2, #3785	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3786	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3062:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC95	@,
	movt	r1, #:upper16:.LC95	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp308,
	movt	r3, #:upper16:g_event_report	@ tmp308,
	ldr	ip, [r3, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L2992	@,
	ldr	r5, [r4, r5]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	mov	r1, #104	@,
	ldr	r6, [r4, #112]	@ <variable>.ref_error_thr, <variable>.ref_error_thr
	sub	r2, fp, #60	@,,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #8	@,
	str	r5, [fp, #-60]	@ <variable>.CurrPic.err_level, para
	str	r6, [fp, #-56]	@ <variable>.ref_error_thr, para
	blx	ip	@ g_event_report
.L2992:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3628	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3077:
	mov	r0, r6	@, <variable>.CurrPic.field_pair_flag
	movw	r1, #:lower16:.LC90	@,
	movw	r2, #3658	@,
	movt	r1, #:upper16:.LC90	@,
	mov	r3, r5	@, ret
	bl	dprint_vfmw	@
	b	.L2999	@
.L3068:
	mov	r3, r5	@, ret.9007
	movw	r2, #3604	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3605	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L2981:
	ldrsb	r1, [r5, #6]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3566	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3070:
	mov	r3, r0	@, ret.9024
	movw	r2, #3678	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	mov	r2, r5	@, ret.9024
	movw	r1, #:lower16:.LC89	@,
	movw	r3, #3679	@,
	movt	r1, #:upper16:.LC89	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3073:
	movw	r1, #:lower16:.LC89	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC89	@,
	movw	r3, #3540	@,
	add	r0, r0, #14	@,,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3081:
	.align	2
.L3080:
	.word	.LANCHOR0+336
	.fnend
	.size	MVC_StorePicInDpb, .-MVC_StorePicInDpb
	.align	2
	.global	MVC_DEC_VDMPostProc
	.type	MVC_DEC_VDMPostProc, %function
MVC_DEC_VDMPostProc:
	.fnstart
.LFB1683:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r5, [r0, #0]	@ zero_extendqisi2	@ <variable>.StartMode, <variable>.StartMode
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r5, #0	@ <variable>.StartMode,
	bne	.L3083	@,
	movw	r3, #:lower16:11152556	@ tmp142,
	movt	r3, #:upper16:11152556	@ tmp142,
	str	r1, [r0, r3]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	MVC_ClearAllSlice	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_StorePicInDpb	@
	subs	r7, r0, #0	@ ret,
	moveq	r3, #1	@ tmp150,
	moveq	r0, r7	@ D.48336, ret
	streqb	r3, [r4, #4]	@ tmp150, <variable>.AllowStartDec
	bne	.L3089	@,
.L3085:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3083:
	movw	r2, #:lower16:11152556	@ tmp152,
	movt	r2, #:upper16:11152556	@ tmp152,
	str	r1, [r0, r2]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	MVC_ClearAllSlice	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_StorePicInDpb	@
	subs	r2, r0, #0	@ ret.9091,
	bne	.L3090	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r2, r0, #0	@ ret.9092,
	bne	.L3091	@,
.L3087:
	movw	sl, #:lower16:11118844	@,
	movw	ip, #:lower16:11118852	@,
	movt	sl, #:upper16:11118844	@,
	movt	ip, #:upper16:11118852	@,
	str	sl, [fp, #-56]	@, %sfp
	movw	r0, #:lower16:11118856	@,
	str	ip, [fp, #-48]	@, %sfp
	movt	r0, #:upper16:11118856	@,
	str	r0, [fp, #-52]	@, %sfp
	movw	r9, #:lower16:11118828	@ tmp157,
	ldr	r2, [r4, #40]	@, <variable>.MaxPpsNum
	movt	r9, #:upper16:11118828	@ tmp157,
	movw	r7, #:lower16:11118832	@ tmp159,
	movw	r8, #:lower16:11118816	@ tmp161,
	movt	r7, #:upper16:11118832	@ tmp159,
	movt	r8, #:upper16:11118816	@ tmp161,
	movw	r6, #:lower16:11118817	@ tmp164,
	movw	r5, #:lower16:11118819	@ tmp167,
	movt	r6, #:upper16:11118817	@ tmp164,
	movt	r5, #:upper16:11118819	@ tmp167,
	movw	r1, #:lower16:11118818	@ tmp170,
	movw	r3, #:lower16:11118840	@ tmp173,
	movt	r1, #:upper16:11118818	@ tmp170,
	movt	r3, #:upper16:11118840	@ tmp173,
	movw	sl, #:lower16:11118848	@ tmp177,
	movt	sl, #:upper16:11118848	@ tmp177,
	mov	lr, #0	@ tmp155,
	str	r2, [r4, r9]	@, <variable>.PrevSlice.pic_parameter_set_id
	str	lr, [r4, sl]	@ tmp155, <variable>.PrevSlice.delta_pic_order_cnt
	mov	ip, #3	@ tmp174,
	strb	lr, [r4, r8]	@ tmp155, <variable>.PrevSlice.field_pic_flag
	movw	sl, #:lower16:88888	@ tmp160,
	str	ip, [r4, r3]	@ tmp174, <variable>.PrevSlice.pic_oder_cnt_lsb
	movt	sl, #:upper16:88888	@ tmp160,
	str	sl, [r4, r7]	@ tmp160, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp165,
	strb	r7, [r4, r6]	@ tmp165, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp168,
	strb	r6, [r4, r5]	@ tmp168, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp171,
	strb	r5, [r4, r1]	@ tmp171, <variable>.PrevSlice.nal_unit_type
	mvn	r1, #0	@ tmp176,
	ldr	r2, [fp, #-56]	@, %sfp
	mov	ip, #262144	@ tmp182,
	mov	r0, lr	@ D.48336, tmp155
	str	r1, [r4, r2]	@ tmp176, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	r3, [fp, #-52]	@, %sfp
	str	ip, [r4, r3]	@ tmp182, <variable>.PrevSlice.first_mb_in_slice
	ldr	r1, [fp, #-48]	@, %sfp
	strb	lr, [r4, #4]	@ tmp155, <variable>.AllowStartDec
	str	lr, [r4, r1]	@ tmp155, <variable>.PrevSlice.delta_pic_order_cnt
	b	.L3085	@
.L3089:
	movw	r6, #:lower16:11152504	@ tmp145,
	movt	r6, #:upper16:11152504	@ tmp145,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrsb	r1, [ip, #6]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	mov	r2, r7	@, ret
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC100	@,
	movt	r1, #:upper16:.LC100	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	str	r5, [r4, r6]	@ <variable>.StartMode, <variable>.CurrPic.frame_store
	mvn	r0, #0	@ D.48336,
	b	.L3085	@
.L3091:
	movw	r1, #:lower16:.LC102	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC102	@,
	bl	dprint_vfmw	@
	b	.L3087	@
.L3090:
	movw	r1, #:lower16:.LC101	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC101	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r2, r0, #0	@ ret.9092,
	beq	.L3087	@,
	b	.L3091	@
	.fnend
	.size	MVC_DEC_VDMPostProc, .-MVC_DEC_VDMPostProc
	.global	__aeabi_idivmod
	.align	2
	.global	MVC_DecGap
	.type	MVC_DecGap, %function
MVC_DecGap:
	.fnstart
.LFB1623:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r6, [r0, #3]	@ zero_extendqisi2	@ D.43036, <variable>.CurrMarkIdx
	movw	lr, #:lower16:11118804	@ tmp156,
	movt	lr, #:upper16:11118804	@ tmp156,
	movw	r3, #2004	@ tmp165,
	ldr	ip, [r0, #236]	@ D.43027, <variable>.pCurrSPS
	ldr	r1, [r0, lr]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r2, #:lower16:11123116	@ tmp175,
	mul	lr, r3, r6	@ tmp164, tmp165, D.43036
	movt	r2, #:upper16:11123116	@ tmp175,
	ldrb	r7, [ip, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	movw	r5, #:lower16:2779294	@ tmp153,
	movt	r5, #:upper16:2779294	@ tmp153,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r6, r1, r5	@ tmp153, <variable>.CurrSlice.voidx, tmp153
	movw	r9, #:lower16:11118864	@ tmp167,
	ldr	r5, [r0, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	movt	r9, #:upper16:11118864	@ tmp167,
	add	r0, lr, r0	@ tmp166, tmp164, pMvcCtx
	cmp	r7, #1	@ <variable>.gaps_in_frame_num_value_allowed_flag,
	add	r2, r0, r9	@ tmp167, tmp166, tmp167
	movw	r3, #:lower16:11118864	@ tmp172,
	movt	r3, #:upper16:11118864	@ tmp172,
	moveq	r7, #2	@,
	movne	r7, #0	@,
	add	r3, lr, r3	@ tmp172, tmp164, tmp172
	str	r7, [fp, #-72]	@, %sfp
	movw	r1, #:lower16:11117188	@ tmp152,
	ldrb	lr, [r2, #3]	@ zero_extendqisi2	@, <variable>.adaptive_ref_pic_marking_mode_flag
	movt	r1, #:upper16:11117188	@ tmp152,
	add	r0, r4, r6, asl #2	@, tmp159, pMvcCtx, tmp153,
	movw	r6, #:lower16:11116064	@ tmp161,
	movt	r6, #:upper16:11116064	@ tmp161,
	movw	r7, #:lower16:11116068	@ tmp162,
	str	lr, [fp, #-92]	@, %sfp
	movt	r7, #:upper16:11116068	@ tmp162,
	ldr	r2, [r4, r1]	@, <variable>.CurrSlice.frame_num
	movw	r9, #:lower16:11152508	@ tmp169,
	movt	r9, #:upper16:11152508	@ tmp169,
	add	lr, r4, r3	@ tmp174, pMvcCtx, tmp172
	cmp	r5, #0	@ <variable>.DPB.used_size,
	str	r2, [fp, #-48]	@, %sfp
	ldr	r1, [r4, r6]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r2, [ip, #2896]	@ D.43028, <variable>.log2_max_frame_num_minus4
	ldr	r0, [r0, #4]	@ D.43032, <variable>.CurrSlice.prev_frame_num
	str	lr, [r4, r9]	@ tmp174, <variable>.CurrPic.pMarkPara
	str	r1, [fp, #-88]	@, %sfp
	ldr	r3, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	str	r3, [fp, #-84]	@, %sfp
	beq	.L3105	@,
	add	r2, r2, #4	@ tmp178, D.43028,
	mov	r1, #1	@ tmp179,
	mov	r5, r1, asl r2	@, tmp179,
	add	r0, r0, #1	@, D.43032,
	str	r5, [fp, #-68]	@, %sfp
	mov	r1, r5	@,
	bl	__aeabi_uidivmod	@
	mov	r0, #0	@ tmp187,
	str	r0, [r4, r7]	@ tmp187, <variable>.CurrPOC.delta_pic_order_cnt
	str	r0, [r4, r6]	@ tmp187, <variable>.CurrPOC.delta_pic_order_cnt
	mov	r0, #2	@,
	mov	r5, r1	@ UnusedShortTermFrameNum,
	movw	r1, #:lower16:.LC104	@,
	movt	r1, #:upper16:.LC104	@,
	bl	dprint_vfmw	@
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC105	@,
	ldr	r2, [fp, #-48]	@, %sfp
	movt	r1, #:upper16:.LC105	@,
	mov	r3, r5	@, UnusedShortTermFrameNum
	bl	dprint_vfmw	@
	ldr	ip, [fp, #-48]	@, %sfp
	cmp	ip, r5	@, UnusedShortTermFrameNum
	ble	.L3097	@,
	movw	r6, #:lower16:11151966	@,
	movw	r3, #:lower16:11152520	@,
	movt	r6, #:upper16:11151966	@,
	movt	r3, #:upper16:11152520	@,
	str	r6, [fp, #-52]	@, %sfp
	movw	r7, #:lower16:11151962	@,
	movw	r6, #:lower16:11152504	@ tmp283,
	movt	r7, #:upper16:11151962	@,
	movw	sl, #:lower16:11152584	@,
	movw	r8, #:lower16:11116080	@,
	movt	sl, #:upper16:11152584	@,
	movt	r8, #:upper16:11116080	@,
	str	sl, [fp, #-64]	@, %sfp
	movt	r6, #:upper16:11152504	@ tmp283,
	movw	sl, #:lower16:11118800	@ tmp287,
	str	r3, [fp, #-56]	@, %sfp
	str	r7, [fp, #-60]	@, %sfp
	movt	sl, #:upper16:11118800	@ tmp287,
	str	r8, [fp, #-80]	@, %sfp
	b	.L3103	@
.L3099:
	movw	lr, #:lower16:11151964	@ tmp248,
	movt	lr, #:upper16:11151964	@ tmp248,
	mov	r0, r4	@, pMvcCtx
	strb	r8, [r4, lr]	@ tmp249, <variable>.CurrPic.is_long_term
	bl	MVC_StorePicInDpb	@
	movw	r2, #:lower16:11118804	@ tmp260,
	movw	r3, #:lower16:2779294	@ tmp257,
	movt	r2, #:upper16:11118804	@ tmp260,
	movt	r3, #:upper16:2779294	@ tmp257,
	ldr	r1, [fp, #-68]	@, %sfp
	subs	ip, r0, #0	@ ret.9123,
	add	r0, r5, #1	@, UnusedShortTermFrameNum,
	bne	.L3106	@,
	ldr	r2, [r4, r2]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	add	r3, r2, r3	@ tmp257, <variable>.CurrSlice.voidx, tmp257
	add	lr, r4, r3, asl #2	@, tmp263, pMvcCtx, tmp257,
	str	r5, [lr, #4]	@ UnusedShortTermFrameNum, <variable>.CurrSlice.prev_frame_num
	bl	__aeabi_idivmod	@
	ldr	ip, [fp, #-48]	@, %sfp
	cmp	ip, r1	@, UnusedShortTermFrameNum
	mov	r5, r1	@ UnusedShortTermFrameNum,
	ble	.L3097	@,
.L3103:
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_AllocFrameStore	@
	mov	r8, #0	@ tmp249,
	movw	r1, #:lower16:.LC107	@,
	movt	r1, #:upper16:.LC107	@,
	subs	r7, r0, #0	@ ret,
	mov	r0, #2	@,
	bne	.L3107	@,
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-52]	@, %sfp
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r3, #1	@ tmp200,
	movw	ip, #:lower16:11152512	@ tmp204,
	movt	ip, #:upper16:11152512	@ tmp204,
	strb	r3, [r4, r0]	@ tmp200, <variable>.CurrPic.nal_unit_type
	str	r5, [r2, #20]	@ UnusedShortTermFrameNum, <variable>.frame_num
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r5, [r4, ip]	@ UnusedShortTermFrameNum, <variable>.CurrPic.frame_num
	str	r5, [r1, #612]	@ UnusedShortTermFrameNum, <variable>.frame.pic_num
	ldr	r0, [fp, #-72]	@, %sfp
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r4, r2]	@, <variable>.CurrPic.nal_ref_idc
	str	r7, [ip, #608]	@ ret, <variable>.frame.long_term_pic_num
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r3, [r1, #7]	@ tmp200, <variable>.is_displayed
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r0, #5]	@ ret, <variable>.is_in_dpb
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r3, [r2, #1]	@ tmp200, <variable>.non_existing
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r1, [r4, sl]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r2, [r4, r9]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	strb	r3, [r4, ip]	@ tmp200, <variable>.CurrPic.non_existing
	ldr	r0, [fp, #-64]	@, %sfp
	str	r1, [r4, r0]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.view_id
	strb	r7, [r2, #3]	@ ret, <variable>.adaptive_ref_pic_marking_mode_flag
	ldr	r3, [r4, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldr	r2, [r3, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r2, #0	@ <variable>.pic_order_cnt_type,
	beq	.L3099	@,
	ldr	r7, [fp, #-80]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	str	r5, [r4, r7]	@ UnusedShortTermFrameNum, <variable>.CurrPOC.frame_num
	bl	MVC_DecPOC	@
	movw	r1, #:lower16:11116060	@ tmp237,
	movw	ip, #:lower16:11116056	@ tmp240,
	movt	r1, #:upper16:11116060	@ tmp237,
	movt	ip, #:upper16:11116056	@ tmp240,
	movw	r2, #:lower16:11116048	@ tmp243,
	movw	r3, #:lower16:11116052	@ tmp246,
	movt	r2, #:upper16:11116048	@ tmp243,
	movt	r3, #:upper16:11116052	@ tmp246,
	ldr	lr, [r4, ip]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPOC.framepoc
	ldr	r7, [r4, r1]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r0, #:lower16:11152524	@ tmp236,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	movt	r0, #:upper16:11152524	@ tmp236,
	ldr	r3, [r4, r3]	@, <variable>.CurrPOC.bottompoc
	movw	r1, #:lower16:11152528	@ tmp239,
	movw	r2, #:lower16:11152532	@ tmp242,
	movt	r1, #:upper16:11152528	@ tmp239,
	movt	r2, #:upper16:11152532	@ tmp242,
	str	r3, [fp, #-76]	@, %sfp
	movw	r3, #:lower16:11152536	@ tmp245,
	str	r7, [r4, r0]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPic.thispoc
	movt	r3, #:upper16:11152536	@ tmp245,
	str	lr, [r4, r1]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPic.framepoc
	str	ip, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPic.toppoc
	ldr	lr, [fp, #-76]	@, %sfp
	str	lr, [r4, r3]	@, <variable>.CurrPic.bottompoc
	b	.L3099	@
.L3105:
	mov	r0, r5	@, <variable>.DPB.used_size
	movw	r1, #:lower16:.LC103	@,
	movt	r1, #:upper16:.LC103	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.43052, <variable>.DPB.used_size
.L3096:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3097:
	ldr	ip, [fp, #-88]	@, %sfp
	movw	r2, #:lower16:11116064	@ tmp270,
	movt	r2, #:upper16:11116064	@ tmp270,
	movw	r3, #:lower16:11116068	@ tmp271,
	movt	r3, #:upper16:11116068	@ tmp271,
	movw	r0, #:lower16:11152508	@ tmp273,
	str	ip, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r0, #:upper16:11152508	@ tmp273,
	ldr	lr, [fp, #-84]	@, %sfp
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r0, #0	@ D.43052,
	str	lr, [r4, r3]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	ip, [fp, #-92]	@, %sfp
	strb	ip, [r1, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	b	.L3096	@
.L3107:
	ldr	r0, [fp, #-88]	@, %sfp
	movw	r1, #:lower16:11116064	@ tmp192,
	movt	r1, #:upper16:11116064	@ tmp192,
	movw	r2, #:lower16:11116068	@ tmp193,
	movt	r2, #:upper16:11116068	@ tmp193,
	movw	ip, #:lower16:11152508	@ tmp195,
	str	r0, [r4, r1]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	ip, #:upper16:11152508	@ tmp195,
	ldr	r3, [fp, #-84]	@, %sfp
	mov	r0, r8	@, tmp249
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	movw	r1, #:lower16:.LC106	@,
	movt	r1, #:upper16:.LC106	@,
	str	r3, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	ip, [fp, #-92]	@, %sfp
	strb	ip, [lr, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43052,
	b	.L3096	@
.L3106:
	ldr	r0, [fp, #-88]	@, %sfp
	movw	r3, #:lower16:11116064	@ tmp251,
	movt	r3, #:upper16:11116064	@ tmp251,
	movw	r1, #:lower16:11116068	@ tmp252,
	movt	r1, #:upper16:11116068	@ tmp252,
	movw	r2, #:lower16:11152508	@ tmp254,
	str	r0, [r4, r3]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11152508	@ tmp254,
	ldr	lr, [fp, #-84]	@, %sfp
	mov	r3, ip	@, ret.9123
	ldr	r2, [r4, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r0, r8	@, tmp249
	str	lr, [r4, r1]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r1, #:lower16:.LC108	@,
	ldr	ip, [fp, #-92]	@, %sfp
	movt	r1, #:upper16:.LC108	@,
	strb	ip, [r2, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	movw	r2, #6581	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43052,
	b	.L3096	@
	.fnend
	.size	MVC_DecGap, .-MVC_DecGap
	.align	2
	.global	MVC_InitPic
	.type	MVC_InitPic, %function
MVC_InitPic:
	.fnstart
.LFB1626:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #84
	sub	sp, sp, #84	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:11151960	@ tmp214,
	movt	r6, #:upper16:11151960	@ tmp214,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r0, #:lower16:11117176	@ tmp209,
	movt	r0, #:upper16:11117176	@ tmp209,
	ldrb	r1, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	mov	r5, #2240	@ tmp212,
	ldr	r3, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	ldr	r2, [r4, r0]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmp	r1, #0	@ <variable>.CurrPic.state,
	mov	r1, #0	@ tmp208,
	str	r1, [fp, #-48]	@ tmp208, dpb_changed
	mla	r5, r5, r2, r3	@ pPPS, tmp212, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L3109	@,
	movw	r6, #:lower16:11152504	@ tmp216,
	movt	r6, #:upper16:11152504	@ tmp216,
	ldr	r3, [r4, r6]	@ D.43228, <variable>.CurrPic.frame_store
	cmp	r3, r1	@ D.43228,
	beq	.L3110	@,
	ldrb	r7, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r7, r1	@ <variable>.is_used,
	beq	.L3210	@,
.L3110:
	movw	r3, #:lower16:11151960	@ tmp228,
	movt	r3, #:upper16:11151960	@ tmp228,
	mov	lr, #0	@ tmp229,
	strb	lr, [r4, r3]	@ tmp229, <variable>.CurrPic.state
.L3109:
	sub	r1, fp, #48	@,,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetReRangeFlag	@
	movw	r1, #:lower16:11117172	@ tmp232,
	movt	r1, #:upper16:11117172	@ tmp232,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.9166, <variable>.CurrSlice.svc_extension_flag
	cmp	r3, #255	@ prephitmp.9166,
	mov	r6, r0	@ D.43237,
	beq	.L3211	@,
.L3111:
	cmp	r3, #0	@ prephitmp.9166,
	bne	.L3114	@,
	ldrb	r0, [r4, #2]	@ zero_extendqisi2	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r0, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L3212	@,
	ldr	r2, [r4, #28]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	ldr	r3, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r2, r3	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	bne	.L3213	@,
	movw	r0, #:lower16:11045412	@ tmp274,
	movt	r0, #:upper16:11045412	@ tmp274,
	add	lr, r4, r0	@ tmp274, pMvcCtx, tmp274
	str	lr, [r4, #236]	@ tmp274, <variable>.pCurrSPS
.L3114:
	movw	r2, #:lower16:11113808	@ tmp275,
	movt	r2, #:upper16:11113808	@ tmp275,
	ldr	ip, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r1, [r4, r2]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r1, ip	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	beq	.L3214	@,
.L3118:
	mov	r1, r5	@, pPPS
	mov	lr, #0	@ tmp279,
	strb	lr, [r5, #20]	@ tmp279, <variable>.is_refreshed
	ldr	r0, [r4, #236]	@, <variable>.pCurrSPS
	bl	mvc_assign_quant_params	@
	movw	r0, #:lower16:11113784	@,
	movt	r0, #:upper16:11113784	@,
	mov	r1, r5	@, pPPS
	add	r0, r4, r0	@, pMvcCtx,
	mov	r2, #2240	@,
	bl	memmove	@
.L3119:
	ldr	ip, [fp, #-48]	@ dpb_changed, dpb_changed
	cmp	ip, #0	@ dpb_changed,
	bne	.L3215	@,
	ldr	r3, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	ip, #1	@ <variable>.s32WaitFsFlag,
	beq	.L3121	@,
.L3130:
	movw	r6, #:lower16:11113808	@ tmp353,
	movt	r6, #:upper16:11113808	@ tmp353,
	ldr	r2, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r0, [r4, r6]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r0, r2	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	bne	.L3137	@,
	ldrb	r1, [r5, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	r1, #0	@ <variable>.is_refreshed,
	beq	.L3138	@,
.L3137:
	movw	r3, #:lower16:11113784	@,
	movt	r3, #:upper16:11113784	@,
	mov	r2, #0	@ tmp357,
	add	r0, r4, r3	@, pMvcCtx,
	strb	r2, [r5, #20]	@ tmp357, <variable>.is_refreshed
	mov	r1, r5	@, pPPS
	mov	r2, #2240	@,
	bl	memmove	@
.L3138:
	movw	lr, #:lower16:11117172	@ tmp361,
	movt	lr, #:upper16:11117172	@ tmp361,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ prephitmp.9279, <variable>.CurrSlice.svc_extension_flag
	cmp	r0, #255	@ prephitmp.9279,
	movweq	lr, #:lower16:11118804	@ tmp363,
	movteq	lr, #:upper16:11118804	@ tmp363,
	moveq	r2, #0	@ tmp364,
	streq	r2, [r4, lr]	@ tmp364, <variable>.CurrSlice.voidx
	cmp	r0, #0	@ prephitmp.9279,
	bne	.L3140	@,
	movw	ip, #:lower16:10770768	@ tmp366,
	movt	ip, #:upper16:10770768	@ tmp366,
	movw	r5, #:lower16:11118800	@ tmp368,
	movt	r5, #:upper16:11118800	@ tmp368,
	ldr	r2, [r4, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	ldr	ip, [r4, r5]	@ D.43372, <variable>.CurrSlice.view_id
	adds	r5, r2, #1	@ D.43371, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L3141	@,
	movw	r6, #:lower16:10770772	@ tmp369,
	movt	r6, #:upper16:10770772	@ tmp369,
	ldr	r8, [r4, r6]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	ip, r8	@ D.43372, <variable>.CurrSUBSPS.view_id
	beq	.L3141	@,
	tst	r2, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r1, #:lower16:10770776	@ ivtmp.9224,
	movt	r1, #:upper16:10770776	@ ivtmp.9224,
	add	r2, r4, r1	@ ivtmp.9224, pMvcCtx, ivtmp.9224
	beq	.L3142	@,
	ldr	r8, [r2], #4	@ temp.9383, <variable>.CurrSUBSPS.view_id
	mov	r0, #1	@ i,
	mov	r3, r0	@ i.636, i
	cmp	ip, r8	@ D.43372, temp.9383
	bne	.L3142	@,
	b	.L3143	@
.L3144:
	ldr	lr, [r1], #4	@ temp.9383, <variable>.CurrSUBSPS.view_id
	cmp	ip, lr	@ D.43372, temp.9383
	beq	.L3143	@,
	ldr	lr, [r2, #4]	@ temp.9383, <variable>.CurrSUBSPS.view_id
	mov	r3, r0	@ i.636, i
	add	r2, r1, #4	@ ivtmp.9224, tmp826,
	cmp	ip, lr	@ D.43372, temp.9383
	beq	.L3143	@,
.L3142:
	add	r3, r0, #1	@ i.636, i,
	mov	r1, r2	@ tmp826, ivtmp.9224
	cmp	r3, r5	@ i.636, D.43371
	add	r0, r3, #1	@ i, i.636,
	bcc	.L3144	@,
.L3143:
	movw	r0, #:lower16:11118804	@ tmp372,
	movt	r0, #:upper16:11118804	@ tmp372,
	str	r3, [r4, r0]	@ i.636, <variable>.CurrSlice.voidx
.L3140:
	movw	ip, #:lower16:11117163	@ tmp374,
	movt	ip, #:upper16:11117163	@ tmp374,
	ldr	r2, [r4, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r3, #5	@ <variable>.CurrSlice.nal_unit_type,
	ldr	r8, [r2, #2896]	@ D.43375, <variable>.log2_max_frame_num_minus4
	beq	.L3216	@,
.L3145:
	ldrb	r6, [r4, #8]	@ zero_extendqisi2	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r6, #2	@ <variable>.OldDecMode,
	beq	.L3146	@,
	ldr	r5, [r4, #224]	@ temp.9276, <variable>.pstExtraData
	ldr	r1, [r5, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r1, #2	@ <variable>.s32DecOrderOutput,
	beq	.L3146	@,
	movw	r2, #:lower16:11118804	@ tmp393,
	movt	r2, #:upper16:11118804	@ tmp393,
	movw	r3, #:lower16:2779294	@ tmp390,
	movt	r3, #:upper16:2779294	@ tmp390,
	ldr	r6, [r4, r2]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	ip, #:lower16:11117188	@ tmp389,
	movt	ip, #:upper16:11117188	@ tmp389,
	add	r0, r6, r3	@ tmp390, <variable>.CurrSlice.voidx, tmp390
	ldr	r6, [r4, ip]	@ prephitmp.9168, <variable>.CurrSlice.frame_num
	add	lr, r4, r0, asl #2	@, tmp396, pMvcCtx, tmp390,
	ldr	r0, [lr, #4]	@ prephitmp.9278, <variable>.CurrSlice.prev_frame_num
	cmp	r6, r0	@ prephitmp.9168, prephitmp.9278
	beq	.L3148	@,
	mov	r7, #1	@ tmp399,
	add	r8, r8, #4	@ tmp398, D.43375,
	mov	r8, r7, asl r8	@ MaxFrameNum, tmp399,
	add	r0, r0, r7	@, prephitmp.9278,
	mov	r1, r8	@, MaxFrameNum
	bl	__aeabi_uidivmod	@
	cmp	r6, r1	@ prephitmp.9168,
	beq	.L3148	@,
	str	r7, [r5, #688]	@ tmp399, <variable>.s32MoreGapEnable
	ldr	r3, [r4, #224]	@ temp.9280, <variable>.pstExtraData
	ldr	r1, [r3, #688]	@ <variable>.s32MoreGapEnable, <variable>.s32MoreGapEnable
	cmp	r1, #0	@ <variable>.s32MoreGapEnable,
	bne	.L3149	@,
	ldr	lr, [r3, #716]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	lr, r7	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L3217	@,
.L3150:
	movw	r6, #:lower16:11118804	@ tmp415,
	movt	r6, #:upper16:11118804	@ tmp415,
	movw	r0, #:lower16:2779294	@ tmp416,
	movt	r0, #:upper16:2779294	@ tmp416,
	ldr	r1, [r4, r6]	@ temp.9282, <variable>.CurrSlice.voidx
	movw	r5, #:lower16:11117188	@ tmp414,
	movt	r5, #:upper16:11117188	@ tmp414,
	add	lr, r1, r0	@ tmp416, temp.9282, tmp416
	ldr	r2, [r4, r5]	@ temp.9281, <variable>.CurrSlice.frame_num
	add	r7, r4, lr, asl #2	@, tmp420, pMvcCtx, tmp416,
	ldr	r3, [r7, #4]	@ D.43390, <variable>.CurrSlice.prev_frame_num
	cmp	r2, r3	@ temp.9281, D.43390
	bls	.L3151	@,
	movw	r7, #:lower16:11113764	@ tmp422,
	movt	r7, #:upper16:11113764	@ tmp422,
	rsb	lr, r3, r2	@ tmp423, D.43390, temp.9281
	ldr	ip, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	cmp	ip, lr	@ <variable>.CurrSPS.dpb_size_plus1, tmp423
	bcs	.L3149	@,
	cmp	r3, #0	@ D.43390,
	beq	.L3149	@,
	movw	r0, #:lower16:11117160	@ tmp425,
	movt	r0, #:upper16:11117160	@ tmp425,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L3218	@,
	movw	r0, #:lower16:2779294	@ tmp443,
	movt	r0, #:upper16:2779294	@ tmp443,
	add	r3, r1, r0	@ tmp443, temp.9282, tmp443
	cmp	r2, #0	@ temp.9281,
	subeq	r2, r8, #1	@ iftmp.700, MaxFrameNum,
	subne	r2, r2, #1	@ iftmp.700, temp.9281,
	add	lr, r4, r3, asl #2	@, tmp447, pMvcCtx, tmp443,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	str	r2, [lr, #4]	@ iftmp.700, <variable>.CurrSlice.prev_frame_num
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret.9289,
	beq	.L3149	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC109	@,
	movw	r2, #7019	@,
	movt	r1, #:upper16:.LC109	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3215:
	ldr	r3, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r7, [r3, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r7, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3121	@,
	ldr	r1, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r1, #25	@ <variable>.eCapLevel,
	beq	.L3219	@,
.L3121:
	ldr	r1, [r4, #84]	@ <variable>.SeqCnt, <variable>.SeqCnt
	cmp	r6, #0	@ D.43237,
	add	r2, r1, #1	@ tmp324, <variable>.SeqCnt,
	str	r2, [r4, #84]	@ tmp324, <variable>.SeqCnt
	bne	.L3131	@,
	ldr	r3, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r3, #1	@ <variable>.s32WaitFsFlag,
	beq	.L3131	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret.9245,
	bne	.L3220	@,
.L3133:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	cmp	r0, #0	@ ret.9247
	bne	.L3221	@,
	cmp	r6, #0	@ D.43237,
	bne	.L3135	@,
	ldr	lr, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r6, [lr, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r6, #1	@ <variable>.s32WaitFsFlag,
	bne	.L3130	@,
.L3135:
	movw	r7, #:lower16:11113744	@ tmp338,
	movt	r7, #:upper16:11113744	@ tmp338,
	movw	r3, #:lower16:11109812	@ tmp342,
	movt	r3, #:upper16:11109812	@ tmp342,
	ldr	r2, [r4, r7]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	ip, #:lower16:11113740	@ tmp335,
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movt	ip, #:upper16:11113740	@ tmp335,
	add	r6, r2, #1	@ tmp339, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	movw	r3, #:lower16:11113764	@ tmp333,
	rsb	r7, r1, #2	@ tmp344, <variable>.CurrSPS.frame_mbs_only_flag,
	ldr	r0, [r4, ip]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	mov	lr, r6, asl #4	@ tmp341, tmp339,
	movt	r3, #:upper16:11113764	@ tmp333,
	add	r1, r0, #1	@ tmp336, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	mov	r0, r4	@, pMvcCtx
	mul	r7, r7, lr	@ ImageHeight.9262, tmp344, tmp341
	ldr	r2, [r4, r3]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	mov	r6, r1, asl #4	@ ImageWidth.9254, tmp336,
	add	r3, r4, #48	@, pMvcCtx,
	mov	ip, r2, asl #1	@ D.43309, <variable>.CurrSPS.dpb_size_plus1,
	mov	r1, r6	@, ImageWidth.9254
	str	ip, [r4, #52]	@ D.43309, <variable>.TotalPmvNum
	mov	r2, r7	@, ImageHeight.9262
	str	ip, [sp, #0]	@ D.43309,
	bl	MVC_ArrangeVahbMem	@
	cmp	r0, #1	@,
	bne	.L3209	@,
.L3136:
	mov	r8, r6, lsr #4	@ tmp351, ImageWidth.9254,
	mov	r7, r7, lsr #4	@ tmp352, ImageHeight.9262,
	str	r8, [r4, #12]	@ tmp351, <variable>.CurWidthInMb
	str	r7, [r4, #16]	@ tmp352, <variable>.CurHeightInMb
	b	.L3130	@
.L3217:
	ldr	r0, [r3, #712]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	r0, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L3150	@,
	ldr	ip, [r3, #720]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	ip, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L3150	@,
	ldr	r2, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r2, #1024	@ tmp412, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp412,
	bls	.L3150	@,
.L3149:
	movw	r2, #:lower16:11109811	@ tmp481,
	movt	r2, #:upper16:11109811	@ tmp481,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag, <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag
	cmp	r1, #0	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag,
	bne	.L3158	@,
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r6, [r3, #692]	@ D.43449, <variable>.s32FastForwardBackwardSpeed
	cmp	r6, #0	@ D.43449,
	cmpne	r6, #1024	@, D.43449,
	bne	.L3146	@,
	movw	lr, #:lower16:11118800	@ tmp493,
	movt	lr, #:upper16:11118800	@ tmp493,
	ldr	r5, [r4, lr]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	r5, #0	@ <variable>.CurrSlice.view_id,
	bne	.L3146	@,
	movw	sl, #:lower16:11118804	@ tmp500,
	movt	sl, #:upper16:11118804	@ tmp500,
	movw	r6, #:lower16:2779294	@ tmp497,
	movt	r6, #:upper16:2779294	@ tmp497,
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	mov	r1, r8	@, MaxFrameNum
	movw	r7, #:lower16:11117188	@ tmp496,
	movt	r7, #:upper16:11117188	@ tmp496,
	add	r3, r2, r6	@ tmp497, <variable>.CurrSlice.voidx, tmp497
	ldr	r6, [r4, r7]	@ prephitmp.9168, <variable>.CurrSlice.frame_num
	add	r0, r4, r3, asl #2	@, tmp503, pMvcCtx, tmp497,
	ldr	ip, [r0, #4]	@ tmp506, <variable>.CurrSlice.prev_frame_num
	add	r0, ip, #1	@, tmp506,
	bl	__aeabi_uidivmod	@
	cmp	r6, r1	@ prephitmp.9168,
	bcs	.L3148	@,
	movw	lr, #:lower16:11117160	@ tmp513,
	movt	lr, #:upper16:11117160	@ tmp513,
	ldrb	r1, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L3148	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r1, #0	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearDPB	@
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r1, #:lower16:2779294	@ tmp518,
	movt	r1, #:upper16:2779294	@ tmp518,
	add	r3, r2, r1	@ tmp518, <variable>.CurrSlice.voidx, tmp518
	mov	r1, r8	@, MaxFrameNum
	add	r0, r4, r3, asl #2	@, tmp524, pMvcCtx, tmp518,
	ldr	ip, [r0, #4]	@ tmp527, <variable>.CurrSlice.prev_frame_num
	add	r0, ip, #1	@, tmp527,
	bl	__aeabi_uidivmod	@
	ldr	r3, [r4, r7]	@, <variable>.CurrSlice.frame_num
	mov	r0, r5	@, <variable>.CurrSlice.view_id
	movw	r2, #7069	@,
	str	r1, [sp, #0]	@,
	movw	r1, #:lower16:.LC117	@,
	movt	r1, #:upper16:.LC117	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3158:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecGap	@
	cmp	r0, #0	@,
	bne	.L3161	@,
.L3146:
	movw	lr, #:lower16:11117188	@ tmp537,
	movt	lr, #:upper16:11117188	@ tmp537,
	ldr	r6, [r4, lr]	@ prephitmp.9168, <variable>.CurrSlice.frame_num
.L3148:
	movw	r0, #:lower16:11117168	@ tmp538,
	movt	r0, #:upper16:11117168	@ tmp538,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L3162	@,
	movw	r0, #:lower16:11118804	@ tmp543,
	movt	r0, #:upper16:11118804	@ tmp543,
	movw	ip, #:lower16:2779294	@ tmp540,
	movt	ip, #:upper16:2779294	@ tmp540,
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r2, #:lower16:11117188	@ tmp548,
	movt	r2, #:upper16:11117188	@ tmp548,
	add	lr, r1, ip	@ tmp540, <variable>.CurrSlice.voidx, tmp540
	add	r3, r4, lr, asl #2	@, tmp546, pMvcCtx, tmp540,
	str	r6, [r3, #4]	@ prephitmp.9168, <variable>.CurrSlice.prev_frame_num
	ldr	r6, [r4, r2]	@ prephitmp.9168, <variable>.CurrSlice.frame_num
.L3162:
	movw	r2, #:lower16:11116080	@ tmp549,
	movt	r2, #:upper16:11116080	@ tmp549,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, r2]	@ prephitmp.9168, <variable>.CurrPOC.frame_num
	bl	MVC_DecPOC	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #0	@,
	bl	MVC_AllocFrameStore	@
	cmp	r0, #0	@ ret.9315
	bne	.L3222	@,
	movw	sl, #:lower16:11116060	@ tmp568,
	movt	sl, #:upper16:11116060	@ tmp568,
	movw	r3, #:lower16:11117161	@ tmp602,
	movw	r5, #:lower16:11116056	@ tmp571,
	ldr	r7, [r4, sl]	@, <variable>.CurrPOC.ThisPOC
	movt	r3, #:upper16:11117161	@ tmp602,
	movt	r5, #:upper16:11116056	@ tmp571,
	movw	r6, #:lower16:11116048	@ tmp574,
	ldrb	r8, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movt	r6, #:upper16:11116048	@ tmp574,
	str	r7, [fp, #-84]	@, %sfp
	movw	r9, #:lower16:11116052	@ tmp577,
	ldr	sl, [r4, r5]	@, <variable>.CurrPOC.framepoc
	movt	r9, #:upper16:11116052	@ tmp577,
	movw	lr, #:lower16:11117163	@ tmp558,
	movt	lr, #:upper16:11117163	@ tmp558,
	movw	ip, #:lower16:11117188	@ tmp562,
	movt	ip, #:upper16:11117188	@ tmp562,
	str	sl, [fp, #-88]	@, %sfp
	movw	r1, #:lower16:11117168	@ tmp565,
	ldr	r7, [r4, r6]	@, <variable>.CurrPOC.toppoc
	movw	r6, #:lower16:11151960	@,
	movt	r6, #:upper16:11151960	@,
	movt	r1, #:upper16:11117168	@ tmp565,
	cmp	r8, #0	@ <variable>.CurrSlice.field_pic_flag,
	movw	r8, #:lower16:11152520	@,
	str	r7, [fp, #-92]	@, %sfp
	movt	r8, #:upper16:11152520	@,
	ldr	r5, [r4, r9]	@, <variable>.CurrPOC.bottompoc
	movw	r7, #:lower16:11152524	@,
	str	r6, [fp, #-56]	@, %sfp
	movt	r7, #:upper16:11152524	@,
	movw	r6, #:lower16:11152528	@,
	movt	r6, #:upper16:11152528	@,
	str	r5, [fp, #-96]	@, %sfp
	movw	r5, #:lower16:11152532	@,
	ldrb	r9, [r4, lr]	@ zero_extendqisi2	@, <variable>.CurrSlice.nal_unit_type
	movt	r5, #:upper16:11152532	@,
	movw	lr, #:lower16:11152536	@,
	movt	lr, #:upper16:11152536	@,
	movw	r2, #:lower16:11151967	@ tmp551,
	movt	r2, #:upper16:11151967	@ tmp551,
	str	r9, [fp, #-100]	@, %sfp
	movw	r9, #:lower16:11151966	@ tmp557,
	ldr	ip, [r4, ip]	@, <variable>.CurrSlice.frame_num
	movt	r9, #:upper16:11151966	@ tmp557,
	str	ip, [fp, #-104]	@, %sfp
	movw	ip, #:lower16:11151962	@,
	ldrb	sl, [r4, r1]	@ zero_extendqisi2	@, <variable>.CurrSlice.nal_ref_idc
	movt	ip, #:upper16:11151962	@,
	str	r8, [fp, #-112]	@, %sfp
	movw	r1, #:lower16:11151965	@,
	ldr	r8, [fp, #-100]	@, %sfp
	movt	r1, #:upper16:11151965	@,
	str	sl, [fp, #-108]	@, %sfp
	movw	sl, #:lower16:11152512	@ tmp561,
	str	r7, [fp, #-60]	@, %sfp
	movt	sl, #:upper16:11152512	@ tmp561,
	str	r6, [fp, #-64]	@, %sfp
	movw	r7, #:lower16:11152540	@ tmp579,
	str	r5, [fp, #-68]	@, %sfp
	movt	r7, #:upper16:11152540	@ tmp579,
	str	lr, [fp, #-72]	@, %sfp
	movw	r6, #:lower16:11152544	@ tmp582,
	str	ip, [fp, #-76]	@, %sfp
	movt	r6, #:upper16:11152544	@ tmp582,
	str	r1, [fp, #-80]	@, %sfp
	movw	r5, #:lower16:11152548	@ tmp585,
	strb	r8, [r4, r9]	@, <variable>.CurrPic.nal_unit_type
	movt	r5, #:upper16:11152548	@ tmp585,
	ldr	r8, [fp, #-104]	@, %sfp
	movw	lr, #:lower16:11152552	@ tmp588,
	movw	ip, #:lower16:11151964	@ tmp597,
	movt	lr, #:upper16:11152552	@ tmp588,
	movt	ip, #:upper16:11151964	@ tmp597,
	movw	r1, #:lower16:11152576	@ tmp600,
	str	r8, [r4, sl]	@, <variable>.CurrPic.frame_num
	movt	r1, #:upper16:11152576	@ tmp600,
	ldr	r9, [fp, #-108]	@, %sfp
	mov	sl, #1	@ tmp555,
	ldr	r8, [fp, #-112]	@, %sfp
	str	r9, [r4, r8]	@, <variable>.CurrPic.nal_ref_idc
	ldr	r9, [fp, #-84]	@, %sfp
	str	r9, [r4, r7]	@, <variable>.CurrPic.decthispoc
	ldr	r8, [fp, #-88]	@, %sfp
	str	r8, [r4, r6]	@, <variable>.CurrPic.decframepoc
	ldr	r6, [fp, #-92]	@, %sfp
	str	r6, [r4, r5]	@, <variable>.CurrPic.dectoppoc
	ldr	r7, [fp, #-96]	@, %sfp
	strb	r0, [r4, ip]	@ ret.9315, <variable>.CurrPic.is_long_term
	mvn	ip, #0	@ tmp601,
	strb	r0, [r4, r2]	@ ret.9315, <variable>.CurrPic.mode_skip_flag
	str	r7, [r4, lr]	@, <variable>.CurrPic.decbottompoc
	str	ip, [r4, r1]	@ tmp601, <variable>.CurrPic.stream_base_addr
	ldr	r5, [fp, #-56]	@, %sfp
	strb	sl, [r4, r5]	@ tmp555, <variable>.CurrPic.state
	ldr	r9, [fp, #-84]	@, %sfp
	ldr	r1, [fp, #-60]	@, %sfp
	str	r9, [r4, r1]	@, <variable>.CurrPic.thispoc
	ldr	r1, [fp, #-64]	@, %sfp
	ldr	lr, [fp, #-88]	@, %sfp
	str	lr, [r4, r1]	@, <variable>.CurrPic.framepoc
	moveq	r1, sl	@ prephitmp.9173, tmp555
	ldr	r2, [fp, #-68]	@, %sfp
	movne	r1, #2	@ prephitmp.9173,
	str	r6, [r4, r2]	@, <variable>.CurrPic.toppoc
	ldr	r8, [fp, #-72]	@, %sfp
	str	r7, [r4, r8]	@, <variable>.CurrPic.bottompoc
	movw	r8, #:lower16:11113784	@ tmp628,
	ldr	ip, [fp, #-76]	@, %sfp
	movt	r8, #:upper16:11113784	@ tmp628,
	strb	r0, [r4, ip]	@ ret.9315, <variable>.CurrPic.non_existing
	ldr	r5, [fp, #-80]	@, %sfp
	strneb	sl, [r4, r3]	@ tmp555, <variable>.CurrSlice.field_pic_flag
	strb	r0, [r4, r5]	@ ret.9315, <variable>.CurrPic.is_short_term
	ldr	r5, [r4, #236]	@ temp.9323, <variable>.pCurrSPS
	ldrb	r9, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	lr, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r0, r9, #2	@ tmp608, <variable>.frame_mbs_only_flag,
	mla	r0, lr, r0, r0	@, <variable>.pic_height_in_map_units_minus1, tmp608, tmp608
	bl	__aeabi_uidiv	@
	movw	r3, #:lower16:11152564	@ tmp615,
	movt	r3, #:upper16:11152564	@ tmp615,
	movw	ip, #:lower16:11152568	@ tmp616,
	movt	ip, #:upper16:11152568	@ tmp616,
	movw	r2, #:lower16:11117161	@ tmp631,
	movt	r2, #:upper16:11117161	@ tmp631,
	ldrb	lr, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	movw	r8, #:lower16:11152572	@ tmp625,
	movt	r8, #:upper16:11152572	@ tmp625,
	str	r0, [r4, r3]	@ tmp614, <variable>.CurrPic.pic_height_in_mb
	movw	r3, #:lower16:11151968	@ tmp627,
	ldrb	r7, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movt	r3, #:upper16:11151968	@ tmp627,
	ldr	r6, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r1, r7, #2	@ tmp618, <variable>.frame_mbs_only_flag,
	ldrb	r7, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r2, #:lower16:11152560	@ tmp624,
	movt	r2, #:upper16:11152560	@ tmp624,
	mla	r9, r6, r1, r1	@ tmp621, <variable>.pic_height_in_map_units_minus1, tmp618, tmp618
	cmp	r7, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r9, [r4, ip]	@ tmp621, <variable>.CurrPic.frame_height_in_mb
	ldr	r6, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	strb	lr, [r4, r3]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPic.entropy_coding_mode_flag
	add	r1, r6, #1	@ D.43495, <variable>.pic_width_in_mbs_minus1,
	str	r1, [r4, r2]	@ D.43495, <variable>.CurrPic.pic_width_in_mb
	mul	r9, r1, r0	@ tmp626, D.43495, tmp614
	movne	r1, #0	@ prephitmp.9174,
	str	r9, [r4, r8]	@ tmp626, <variable>.CurrPic.pic_mbs
	bne	.L3167	@,
	ldrb	r0, [r5, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	subs	r1, r0, #0	@ prephitmp.9174, <variable>.mb_adaptive_frame_field_flag,
	movne	r1, #1	@ prephitmp.9174
.L3167:
	movw	ip, #:lower16:11117168	@ tmp638,
	movt	ip, #:upper16:11117168	@ tmp638,
	movw	r3, #:lower16:11151969	@ tmp636,
	movt	r3, #:upper16:11151969	@ tmp636,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	strb	r1, [r4, r3]	@ prephitmp.9174, <variable>.CurrPic.MbaffFrameFlag
	cmp	r2, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L3168	@,
	movw	r0, #:lower16:11118804	@ tmp643,
	movt	r0, #:upper16:11118804	@ tmp643,
	movw	r8, #:lower16:2779294	@ tmp640,
	movw	r6, #:lower16:11117188	@ tmp648,
	ldr	r5, [r4, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r8, #:upper16:2779294	@ tmp640,
	movt	r6, #:upper16:11117188	@ tmp648,
	add	r9, r5, r8	@ tmp640, <variable>.CurrSlice.voidx, tmp640
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	add	lr, r4, r9, asl #2	@, tmp646, pMvcCtx, tmp640,
	str	r1, [lr, #4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
.L3168:
	movw	r3, #:lower16:11152504	@ tmp650,
	movt	r3, #:upper16:11152504	@ tmp650,
	movw	r1, #:lower16:11117171	@ tmp656,
	movt	r1, #:upper16:11117171	@ tmp656,
	ldr	lr, [r4, r3]	@ temp.9339, <variable>.CurrPic.frame_store
	mvn	ip, #0	@ tmp655,
	cmp	lr, #0	@ temp.9339,
	movwne	r3, #:lower16:11117172	@ tmp651,
	movtne	r3, #:upper16:11117172	@ tmp651,
	ldrneb	r3, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	strneb	r3, [lr, #9]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.svc_extension_flag
	movw	r3, #:lower16:11152584	@ tmp654,
	ldrb	r2, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	movt	r3, #:upper16:11152584	@ tmp654,
	cmp	r2, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	str	ip, [r4, r3]	@ tmp655, <variable>.CurrPic.view_id
	beq	.L3170	@,
	movw	r1, #:lower16:11118800	@ tmp659,
	movw	r0, #:lower16:11117169	@ tmp662,
	movt	r1, #:upper16:11118800	@ tmp659,
	movt	r0, #:upper16:11117169	@ tmp662,
	movw	r2, #:lower16:11117170	@ tmp666,
	movt	r2, #:upper16:11117170	@ tmp666,
	ldr	ip, [r4, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r8, #:lower16:11151970	@ tmp661,
	ldrb	r5, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r8, #:upper16:11151970	@ tmp661,
	ldrb	r9, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	movw	r6, #:lower16:11151971	@ tmp665,
	movt	r6, #:upper16:11151971	@ tmp665,
	str	ip, [r4, r3]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.view_id
	strb	r5, [r4, r8]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrPic.anchor_pic_flag
	strb	r9, [r4, r6]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrPic.inter_view_flag
.L3170:
	ldrb	r9, [r4, #3]	@ zero_extendqisi2	@ <variable>.CurrMarkIdx, <variable>.CurrMarkIdx
	movw	ip, #2004	@ tmp675,
	movw	r8, #:lower16:11118804	@ tmp670,
	movt	r8, #:upper16:11118804	@ tmp670,
	ldr	r2, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r3, #:lower16:11152588	@ tmp669,
	mul	r6, ip, r9	@ tmp674, tmp675, <variable>.CurrMarkIdx
	ldr	r0, [r4, r8]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r3, #:upper16:11152588	@ tmp669,
	movw	r9, #:lower16:11152508	@ tmp672,
	movw	r1, #:lower16:11118864	@ tmp676,
	movt	r9, #:upper16:11152508	@ tmp672,
	movt	r1, #:upper16:11118864	@ tmp676,
	str	r0, [r4, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrPic.voidx
	add	lr, r6, r1	@ tmp676, tmp674, tmp676
	movw	r3, #:lower16:11151984	@ tmp679,
	add	r5, r4, lr	@ tmp678, pMvcCtx, tmp676
	str	r5, [r4, r9]	@ tmp678, <variable>.CurrPic.pMarkPara
	ldrd	r0, [r2, #56]	@ <variable>.pts, <variable>.pstExtraData,
	movt	r3, #:upper16:11151984	@ tmp679,
	movw	r6, #:lower16:11151992	@ tmp682,
	movt	r6, #:upper16:11151992	@ tmp682,
	movw	ip, #:lower16:11152000	@ tmp685,
	movt	ip, #:upper16:11152000	@ tmp685,
	strd	r0, [r4, r3]	@ <variable>.pts, pMvcCtx, tmp679
	mov	r0, #29	@,
	ldrd	r8, [r2, #72]	@ <variable>.Usertag, <variable>.pstExtraData,
	movw	r1, #:lower16:.LC120	@,
	movt	r1, #:upper16:.LC120	@,
	movw	r5, #:lower16:11152136	@ tmp710,
	movt	r5, #:upper16:11152136	@ tmp710,
	strd	r8, [r4, r6]	@ <variable>.Usertag, pMvcCtx, tmp682
	ldrd	r8, [r2, #88]	@ <variable>.DispTime, <variable>.pstExtraData,
	strd	r8, [r4, ip]	@ <variable>.DispTime, pMvcCtx, tmp685
	mvn	r8, #0	@ tmp689,
	mvn	r9, #0	@,
	strd	r8, [r2, #56]	@ tmp689, <variable>.pstExtraData,
	ldrd	r2, [r3, r4]	@, tmp679, pMvcCtx
	bl	dprint_vfmw	@
	ldrd	r2, [r4, r6]	@, pMvcCtx, tmp682
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC121	@,
	movt	r1, #:upper16:.LC121	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	ip, #:lower16:11152140	@ tmp696,
	movt	ip, #:upper16:11152140	@ tmp696,
	movw	r2, #:lower16:11152144	@ tmp701,
	movt	r2, #:upper16:11152144	@ tmp701,
	ldr	r0, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movw	r1, #:lower16:11109844	@ tmp708,
	movt	r1, #:upper16:11109844	@ tmp708,
	add	r6, r0, #1	@ tmp698, <variable>.pic_width_in_mbs_minus1,
	movw	r0, #:lower16:11151976	@,
	ldr	r1, [r4, r1]	@ <variable>.CurrSPS.vui_seq_parameters.aspect_ratio, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio
	movt	r0, #:upper16:11151976	@,
	mov	lr, r6, asl #4	@ tmp700, tmp698,
	str	lr, [r4, ip]	@ tmp700, <variable>.CurrPic.fs_image.image_width
	ldrb	r6, [r3, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	add	r0, r4, r0	@, pMvcCtx,
	ldr	lr, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	and	r1, r1, #7	@, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio,
	rsb	ip, r6, #2	@ tmp703, <variable>.frame_mbs_only_flag,
	movw	r6, #8864	@ tmp711,
	str	r6, [r4, r5]	@ tmp711, <variable>.CurrPic.fs_image.format
	mla	ip, lr, ip, ip	@ tmp706, <variable>.pic_height_in_map_units_minus1, tmp703, tmp703
	mov	ip, ip, asl #4	@ tmp707, tmp706,
	str	ip, [r4, r2]	@ tmp707, <variable>.CurrPic.fs_image.image_height
	ldr	lr, [r3, #56]	@ <variable>.vui_seq_parameters.video_format, <variable>.vui_seq_parameters.video_format
	ldrb	ip, [r3, #52]	@ zero_extendqisi2	@ tmp716, <variable>.vui_seq_parameters.aspect_ratio
	ldr	r2, [r3, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	mov	r3, lr, asl #5	@ tmp713, <variable>.vui_seq_parameters.video_format,
	subs	r2, r2, #1	@ tmp723, <variable>.chroma_format_idc,
	movne	r2, #1	@ tmp723
	and	lr, r3, #255	@ tmp715, tmp713,
	orr	r3, lr, ip, asl #14	@, tmp719, tmp715, tmp716,
	orr	lr, r3, r2, asl #2	@, tmp725, tmp719, tmp723,
	str	lr, [r4, r5]	@ tmp725, <variable>.CurrPic.fs_image.format
	bl	SetAspectRatio	@
	movw	r3, #:lower16:11152504	@ tmp730,
	movt	r3, #:upper16:11152504	@ tmp730,
	ldr	ip, [r4, #84]	@ <variable>.SeqCnt, <variable>.SeqCnt
	movw	r2, #:lower16:11152180	@ tmp728,
	movt	r2, #:upper16:11152180	@ tmp728,
	ldr	r0, [r4, r3]	@ temp.9359, <variable>.CurrPic.frame_store
	str	ip, [r4, r2]	@ <variable>.SeqCnt, <variable>.CurrPic.fs_image.seq_cnt
	cmp	r0, #0	@ temp.9359,
	beq	.L3223	@,
	ldr	ip, [r4, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	r2, #:lower16:11152156	@ tmp733,
	ldr	r5, [r4, r5]	@, <variable>.CurrPic.fs_image.format
	movt	r2, #:upper16:11152156	@ tmp733,
	movw	r9, #:lower16:11152160	@ tmp737,
	movt	r9, #:upper16:11152160	@ tmp737,
	ldr	r8, [ip, #3984]	@ D.43548, <variable>.disp_center_x
	movw	r7, #:lower16:11152148	@ tmp741,
	str	r5, [fp, #-56]	@, %sfp
	movt	r7, #:upper16:11152148	@ tmp741,
	movw	r6, #:lower16:11151963	@ tmp747,
	movt	r6, #:upper16:11151963	@ tmp747,
	str	r8, [r0, #252]	@ D.43548, <variable>.fs_image.disp_center_x
	movw	r5, #:lower16:11152124	@ tmp746,
	ldr	lr, [r4, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	r5, #:upper16:11152124	@ tmp746,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	ip, #:lower16:11117188	@ tmp758,
	str	r8, [r4, r2]	@ D.43548, <variable>.CurrPic.fs_image.disp_center_x
	movt	ip, #:upper16:11117188	@ tmp758,
	ldr	sl, [lr, #3988]	@ D.43550, <variable>.disp_center_y
	movw	lr, #:lower16:11152152	@ tmp745,
	movt	lr, #:upper16:11152152	@ tmp745,
	movw	r0, #:lower16:11152240	@ tmp759,
	movw	r2, #:lower16:11118800	@ tmp761,
	movt	r0, #:upper16:11152240	@ tmp759,
	str	sl, [r1, #256]	@ D.43550, <variable>.fs_image.disp_center_y
	movt	r2, #:upper16:11118800	@ tmp761,
	str	sl, [r4, r9]	@ D.43550, <variable>.CurrPic.fs_image.disp_center_y
	movw	r1, #:lower16:11152248	@ tmp760,
	ldr	r9, [r4, #236]	@, <variable>.pCurrSPS
	movt	r1, #:upper16:11152248	@ tmp760,
	ldr	r8, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	sl, [r9, #3976]	@ D.43552, <variable>.disp_width
	str	sl, [r8, #244]	@ D.43552, <variable>.fs_image.disp_width
	ldr	r8, [r4, #236]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	str	sl, [r4, r7]	@ D.43552, <variable>.CurrPic.fs_image.disp_width
	ldr	sl, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r7, [r8, #3980]	@ D.43554, <variable>.disp_height
	str	r7, [sl, #248]	@ D.43554, <variable>.fs_image.disp_height
	str	r7, [r4, lr]	@ D.43554, <variable>.CurrPic.fs_image.disp_height
	ldr	lr, [fp, #-56]	@, %sfp
	ldr	r8, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrb	r6, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	str	lr, [r8, #232]	@, <variable>.fs_image.format
	subs	lr, r6, #0	@ tmp749, <variable>.CurrPic.structure,
	movne	lr, #1	@ tmp749
	ldr	r6, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	lr, [r4, r5]	@ tmp749, <variable>.CurrPic.fs_image.is_fld_save
	str	lr, [r6, #220]	@ tmp749, <variable>.fs_image.is_fld_save
	ldr	ip, [r4, ip]	@ temp.9369, <variable>.CurrSlice.frame_num
	ldr	r6, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	lr, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	str	ip, [r4, r0]	@ temp.9369, <variable>.CurrPic.fs_image.frame_num
	str	ip, [r6, #336]	@ temp.9369, <variable>.fs_image.frame_num
	ldr	r0, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r6, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	str	lr, [r4, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.fs_image.view_id
	str	r6, [r0, #344]	@ <variable>.CurrSlice.view_id, <variable>.fs_image.view_id
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldrsb	r1, [r2, #6]	@, <variable>.logic_fs_id
	bl	FSP_GetDispPhyFs	@
	cmp	r0, #0	@ pstDecFs
	beq	.L3172	@,
	ldr	r3, [r4, r5]	@ <variable>.CurrPic.fs_image.is_fld_save, <variable>.CurrPic.fs_image.is_fld_save
	mov	r1, #0	@,
	ldr	r2, [r0, #4]	@, <variable>.PhyFsID
	subs	r3, r3, r1	@, <variable>.CurrPic.fs_image.is_fld_save,
	movne	r3, #1	@
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_SetStoreType	@
.L3172:
	movw	r1, #:lower16:11152188	@ ivtmp.9219,
	movw	r0, #:lower16:11152204	@ D.57445,
	movt	r1, #:upper16:11152188	@ ivtmp.9219,
	movt	r0, #:upper16:11152204	@ D.57445,
	ldr	r6, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, r4, r1	@ ivtmp.9219, pMvcCtx, ivtmp.9219
	add	r2, r4, r0	@ D.57445, pMvcCtx, D.57445
	mov	lr, #0	@ tmp812,
.L3177:
	ldr	r5, [r3, #0]	@ tmp781, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r5, #0	@ tmp781,
	beq	.L3224	@,
.L3174:
	add	r3, r3, #4	@ ivtmp.9219, ivtmp.9219,
	cmp	r3, r2	@ ivtmp.9219, D.57445
	bne	.L3177	@,
	cmp	r6, #0	@ <variable>.TotalUsrDatNum,
	beq	.L3178	@,
	ble	.L3178	@,
	add	lr, r6, #132	@ tmp788, <variable>.TotalUsrDatNum,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	sub	r6, r6, #1	@ tmp814, <variable>.TotalUsrDatNum,
	mov	r7, #0	@ tmp811,
	add	r5, r4, lr, asl #2	@, ivtmp.9207, pMvcCtx, tmp788,
	and	r8, r6, #1	@ tmp815, tmp814,
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, r7	@ uidxpic,
	str	r7, [r5, #-4]!	@ tmp811, <variable>.pUsrDatArray
	ble	.L3178	@,
	cmp	r8, #0	@ tmp815,
	beq	.L3179	@,
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	r6, r6, #1	@ uidxpic, uidxpic,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r7, [r5, #-4]!	@ tmp811, <variable>.pUsrDatArray
	ble	.L3178	@,
.L3179:
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	r6, r6, #1	@ tmp817, uidxpic,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	sub	r6, r6, #1	@ uidxpic, tmp817,
	bl	FreeUsdByDec	@
	str	r7, [r5, #-4]!	@ tmp811, <variable>.pUsrDatArray
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r7, [r5, #-4]!	@ tmp811, <variable>.pUsrDatArray
	bgt	.L3179	@,
.L3178:
	movw	r2, #:lower16:11151972	@ tmp794,
	movt	r2, #:upper16:11151972	@ tmp794,
	mov	r5, #0	@ tmp793,
	mov	r0, r4	@, pMvcCtx
	strb	r5, [r4, r2]	@ tmp793, <variable>.CurrPic.pic_type
	str	r5, [r4, #60]	@ tmp793, <variable>.TotalUsrDatNum
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_CalcPicNum	@
	mov	r0, r5	@ D.43267, tmp793
.L3117:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3224:
	cmp	r6, #0	@ <variable>.TotalUsrDatNum,
	beq	.L3174	@,
	ldr	r0, [r4, #528]	@ <variable>.pUsrDatArray, <variable>.pUsrDatArray
	subs	ip, r6, #1	@ D.43575, <variable>.TotalUsrDatNum,
	str	r0, [r3, #0]	@ <variable>.pUsrDatArray, <variable>.CurrPic.fs_image.p_usrdat
	beq	.L3175	@,
	ldr	r5, [r4, #532]	@ tmp784, <variable>.pUsrDatArray
	mov	r0, #1	@ uidxsei,
	cmp	ip, r0	@ D.43575, uidxsei
	sub	r1, ip, #1	@ tmp818, D.43575,
	and	r7, r1, r0	@ tmp820, tmp818,
	add	r1, r4, #4	@ ivtmp.9324, pMvcCtx,
	str	r5, [r4, #528]	@ tmp784, <variable>.pUsrDatArray
	bls	.L3175	@,
	cmp	r7, #0	@ tmp820,
	beq	.L3176	@,
	ldr	r5, [r1, #532]	@ tmp849, <variable>.pUsrDatArray
	mov	r0, #2	@ uidxsei,
	cmp	ip, r0	@ D.43575, uidxsei
	str	r5, [r1, #528]	@ tmp849, <variable>.pUsrDatArray
	add	r1, r1, #4	@ ivtmp.9324, ivtmp.9324,
	bls	.L3175	@,
.L3176:
	ldr	r7, [r1, #532]	@ tmp833, <variable>.pUsrDatArray
	add	r5, r1, #4	@ tmp822, ivtmp.9324,
	add	r0, r0, #2	@ uidxsei, uidxsei,
	cmp	ip, r0	@ D.43575, uidxsei
	str	r7, [r1, #528]	@ tmp833, <variable>.pUsrDatArray
	add	r1, r5, #4	@ ivtmp.9324, tmp822,
	ldr	r7, [r5, #532]	@ tmp835, <variable>.pUsrDatArray
	str	r7, [r5, #528]	@ tmp835, <variable>.pUsrDatArray
	bhi	.L3176	@,
.L3175:
	add	ip, ip, #132	@ tmp785, D.43575,
	sub	r6, r6, #1	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum,
	str	r6, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	str	lr, [r4, ip, asl #2]	@ tmp812, <variable>.pUsrDatArray
	b	.L3174	@
.L3214:
	ldrb	r3, [r5, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	r3, #0	@ <variable>.is_refreshed,
	beq	.L3119	@,
	b	.L3118	@
.L3131:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC114	@,
	movt	r1, #:upper16:.LC114	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBackPicFromVOQueue	@
	b	.L3133	@
.L3211:
	mov	ip, #1	@ tmp234,
	strb	ip, [r4, #2]	@ tmp234, <variable>.Init_Subsps_Flag
	ldr	r3, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r2, #3992	@ tmp239,
	ldr	r1, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	movw	r0, #:lower16:11110536	@ tmp241,
	movt	r0, #:upper16:11110536	@ tmp241,
	str	r3, [r4, #24]	@ <variable>.seq_parameter_set_id, <variable>.CurrSPSID
	ldr	lr, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	mla	r3, r2, lr, r1	@ pSPS, tmp239, <variable>.seq_parameter_set_id, <variable>.SPS
	ldr	r0, [r3, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	ip, r0	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.seq_parameter_set_id
	beq	.L3225	@,
.L3112:
	ldr	lr, [r4, #84]	@ <variable>.SeqCnt, <variable>.SeqCnt
	movw	r0, #:lower16:11109792	@,
	movt	r0, #:upper16:11109792	@,
	mov	r2, #0	@ tmp247,
	add	ip, lr, #1	@ tmp246, <variable>.SeqCnt,
	mov	r1, r3	@, pSPS
	str	ip, [r4, #84]	@ tmp246, <variable>.SeqCnt
	add	r0, r4, r0	@, pMvcCtx,
	strb	r2, [r3, #26]	@ tmp247, <variable>.is_refreshed
	movw	r2, #3992	@,
	bl	memmove	@
.L3113:
	movw	r3, #:lower16:11117172	@ tmp253,
	movt	r3, #:upper16:11117172	@ tmp253,
	movw	r2, #:lower16:11109792	@ tmp252,
	movt	r2, #:upper16:11109792	@ tmp252,
	add	r1, r4, r2	@ tmp252, pMvcCtx, tmp252
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9166, <variable>.CurrSlice.svc_extension_flag
	str	r1, [r4, #236]	@ tmp252, <variable>.pCurrSPS
	b	.L3111	@
.L3216:
	movw	r2, #:lower16:11118804	@ tmp379,
	movt	r2, #:upper16:11118804	@ tmp379,
	movw	r3, #:lower16:2779294	@ tmp376,
	movw	r0, #:lower16:11117188	@ tmp384,
	ldr	ip, [r4, r2]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r3, #:upper16:2779294	@ tmp376,
	movt	r0, #:upper16:11117188	@ tmp384,
	add	lr, ip, r3	@ tmp376, <variable>.CurrSlice.voidx, tmp376
	ldr	r6, [r4, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	add	r1, r4, lr, asl #2	@, tmp382, pMvcCtx, tmp376,
	str	r6, [r1, #4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
	b	.L3145	@
.L3225:
	ldrb	lr, [r3, #26]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	lr, #0	@ <variable>.is_refreshed,
	beq	.L3113	@,
	b	.L3112	@
.L3210:
	mov	r2, #1	@,
	ldrsb	r1, [r3, #6]	@, <variable>.logic_fs_id
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r2, #2]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [ip, #5]	@ <variable>.is_used, <variable>.is_in_dpb
	b	.L3110	@
.L3219:
	ldr	r3, [r4, #84]	@ <variable>.SeqCnt, <variable>.SeqCnt
	cmp	r6, #0	@ D.43237,
	add	r2, r3, #1	@ tmp288, <variable>.SeqCnt,
	str	r2, [r4, #84]	@ tmp288, <variable>.SeqCnt
	beq	.L3122	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret,
	beq	.L3122	@,
	mov	r0, r7	@, <variable>.stChanOption.s32ReRangeEn
	movw	r1, #:lower16:.LC109	@,
	movw	r2, #6829	@,
	movt	r1, #:upper16:.LC109	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3212:
	strb	r3, [r4, #2]	@ prephitmp.9166, <variable>.Init_Subsps_Flag
	add	r1, r4, #12992	@ tmp259, pMvcCtx,
	ldr	r0, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	add	ip, r1, #12	@ tmp259, tmp259,
	movw	r2, #:lower16:336180	@ tmp262,
	movt	r2, #:upper16:336180	@ tmp262,
	movw	lr, #:lower16:10770764	@,
	movt	lr, #:upper16:10770764	@,
	mla	r1, r0, r2, ip	@, <variable>.seq_parameter_set_id, tmp262, tmp259
	add	r0, r4, lr	@, pMvcCtx,
	bl	memmove	@
	movw	r2, #:lower16:11046156	@ tmp268,
	movt	r2, #:upper16:11046156	@ tmp268,
	movw	r3, #:lower16:11045412	@ tmp267,
	movt	r3, #:upper16:11045412	@ tmp267,
	ldr	ip, [r4, r2]	@ <variable>.CurrSUBSPS.sps.seq_parameter_set_id, <variable>.CurrSUBSPS.sps.seq_parameter_set_id
	add	r1, r4, r3	@ tmp267, pMvcCtx, tmp267
	str	r1, [r4, #236]	@ tmp267, <variable>.pCurrSPS
	str	ip, [r4, #28]	@ <variable>.CurrSUBSPS.sps.seq_parameter_set_id, <variable>.CurrSUBSPSID
	b	.L3114	@
.L3122:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	subs	r3, r0, #0	@ ret.9236,
	bne	.L3226	@,
	movw	ip, #:lower16:11113744	@ tmp296,
	movt	ip, #:upper16:11113744	@ tmp296,
	movw	lr, #:lower16:11113740	@ tmp293,
	movw	r3, #:lower16:11109812	@ tmp300,
	ldr	r7, [r4, ip]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movt	lr, #:upper16:11113740	@ tmp293,
	movt	r3, #:upper16:11109812	@ tmp300,
	cmp	r6, #0	@ D.43237,
	ldr	r1, [r4, lr]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	add	r2, r7, #1	@ tmp297, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	add	r6, r1, #1	@ tmp294, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	mov	lr, r2, asl #4	@ tmp299, tmp297,
	rsb	r7, ip, #2	@ tmp302, <variable>.CurrSPS.frame_mbs_only_flag,
	mov	r6, r6, asl #4	@ ImageWidth, tmp294,
	mul	r7, r7, lr	@ ImageHeight, tmp302, tmp299
	beq	.L3136	@,
	ldr	r2, [r4, #12]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	cmp	r2, #0	@ <variable>.CurWidthInMb,
	bne	.L3136	@,
	movw	lr, #:lower16:11113764	@ tmp304,
	movt	lr, #:upper16:11113764	@ tmp304,
	ldr	r3, [r4, #224]	@ temp.9237, <variable>.pstExtraData
	ldr	r1, [r4, lr]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	mov	ip, r1, asl #1	@ prephitmp.9187, <variable>.CurrSPS.dpb_size_plus1,
	str	ip, [r4, #52]	@ prephitmp.9187, <variable>.TotalPmvNum
	ldr	r1, [r3, #744]	@ prephitmp.9183, <variable>.stChanOption.s32MaxWidth
	cmp	r6, r1	@ ImageWidth, prephitmp.9183
	bhi	.L3125	@,
	ldr	r2, [r3, #748]	@ prephitmp.9384, <variable>.stChanOption.s32MaxHeight
	cmp	r7, r2	@ ImageHeight, prephitmp.9384
	bhi	.L3125	@,
	movw	lr, #:lower16:11123112	@ tmp307,
	movt	lr, #:upper16:11123112	@ tmp307,
	ldr	r8, [r3, #768]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	lr, [r4, lr]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r8, lr	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.DPB.size
	bcc	.L3227	@,
	ldr	r0, [r3, #776]	@ <variable>.stChanOption.s32SupportBFrame, <variable>.stChanOption.s32SupportBFrame
	cmp	r0, #0	@ <variable>.stChanOption.s32SupportBFrame,
	mov	r0, r4	@, pMvcCtx
	moveq	ip, #1	@ tmp312,
	streq	ip, [r4, #52]	@ tmp312, <variable>.TotalPmvNum
	ldreq	r2, [r3, #748]	@ prephitmp.9384, <variable>.stChanOption.s32MaxHeight
	ldreq	r1, [r3, #744]	@ prephitmp.9183, <variable>.stChanOption.s32MaxWidth
	add	r3, r4, #48	@, pMvcCtx,
	str	ip, [sp, #0]	@ prephitmp.9187,
	bl	MVC_ArrangeVahbMem	@
	cmp	r0, #1	@,
	beq	.L3136	@,
.L3209:
	ldr	ip, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	lr, [ip, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	lr, #1	@ <variable>.s32WaitFsFlag,
	mvneq	r0, #1	@ D.43267,
	beq	.L3117	@,
	mov	r5, #0	@ tmp348,
	movw	r1, #:lower16:.LC113	@,
	str	r5, [r4, #12]	@ tmp348, <variable>.CurWidthInMb
	movt	r1, #:upper16:.LC113	@,
	str	r5, [r4, #16]	@ tmp348, <variable>.CurHeightInMb
	mov	r0, r5	@, tmp348
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, tmp348
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3151:
	movw	r7, #:lower16:11113764	@ tmp451,
	movt	r7, #:upper16:11113764	@ tmp451,
	rsb	r0, r3, r2	@ tmp452, D.43390, temp.9281
	ldr	ip, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	add	lr, r0, r8	@ tmp453, tmp452, MaxFrameNum
	cmp	ip, lr	@ <variable>.CurrSPS.dpb_size_plus1, tmp453
	bcs	.L3149	@,
	cmp	r3, #0	@ D.43390,
	beq	.L3149	@,
	movw	lr, #:lower16:11117160	@ tmp455,
	movt	lr, #:upper16:11117160	@ tmp455,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L3228	@,
	movw	r0, #:lower16:2779294	@ tmp473,
	movt	r0, #:upper16:2779294	@ tmp473,
	add	ip, r1, r0	@ tmp473, temp.9282, tmp473
	cmp	r2, #0	@ temp.9281,
	subeq	r2, r8, #1	@ iftmp.702, MaxFrameNum,
	subne	r2, r2, #1	@ iftmp.702, temp.9281,
	add	lr, r4, ip, asl #2	@, tmp477, pMvcCtx, tmp473,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	str	r2, [lr, #4]	@ iftmp.702, <variable>.CurrSlice.prev_frame_num
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret.9299,
	beq	.L3149	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC109	@,
	movw	r2, #7045	@,
	movt	r1, #:upper16:.LC109	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3161:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC118	@,
	movw	r2, #7093	@,
	movt	r1, #:upper16:.LC118	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3141:
	mov	r3, #0	@ i.636,
	b	.L3143	@
.L3213:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3222:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC119	@,
	movw	r2, #7112	@,
	movt	r1, #:upper16:.LC119	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3221:
	mov	r3, r0	@, ret.9247
	movw	r1, #:lower16:.LC110	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC110	@,
	movw	r2, #6915	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3223:
	movw	r1, #:lower16:.LC122	@,
	movw	r2, #7215	@,
	movt	r1, #:upper16:.LC122	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3220:
	mov	r0, r6	@, D.43237
	movw	r1, #:lower16:.LC109	@,
	movw	r2, #6907	@,
	movt	r1, #:upper16:.LC109	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3226:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC110	@,
	movw	r2, #6837	@,
	movt	r1, #:upper16:.LC110	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3125:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3218:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	ip, #:lower16:2779294	@ tmp430,
	movt	ip, #:upper16:2779294	@ tmp430,
	add	r1, r2, ip	@ tmp430, <variable>.CurrSlice.voidx, tmp430
	ldr	lr, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	ldr	ip, [r4, r5]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	mov	r0, #0	@,
	add	r4, r4, r1, asl #2	@, tmp436, pMvcCtx, tmp430,
	movw	r1, #:lower16:.LC115	@,
	movt	r1, #:upper16:.LC115	@,
	movw	r2, #7009	@,
.L3206:
	ldr	r3, [r4, #4]	@ tmp470, <variable>.CurrSlice.prev_frame_num
	str	lr, [sp, #0]	@ <variable>.CurrSPS.dpb_size_plus1,
	rsb	r3, r3, ip	@, tmp470, <variable>.CurrSlice.frame_num
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
.L3228:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	ip, #:lower16:2779294	@ tmp460,
	movt	ip, #:upper16:2779294	@ tmp460,
	add	r1, r2, ip	@ tmp460, <variable>.CurrSlice.voidx, tmp460
	ldr	lr, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	ldr	ip, [r4, r5]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	mov	r0, #0	@,
	add	r4, r4, r1, asl #2	@, tmp466, pMvcCtx, tmp460,
	movw	r2, #7035	@,
	movw	r1, #:lower16:.LC115	@,
	movt	r1, #:upper16:.LC115	@,
	b	.L3206	@
.L3227:
	movw	r1, #:lower16:.LC112	@,
	movt	r1, #:upper16:.LC112	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43267,
	b	.L3117	@
	.fnend
	.size	MVC_InitPic, .-MVC_InitPic
	.align	2
	.global	mvc_se_v
	.type	mvc_se_v, %function
mvc_se_v:
	.fnstart
.LFB1529:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r7, r0, #548	@ D.38593, pMvcCtx,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ SE_TRACEstring, SE_TRACEstring
	mov	r0, r7	@, D.38593
	mov	r1, #32	@,
	bl	BsShow	@
	mov	r4, r0	@ D.38594,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r5, r0	@ zeros,
	bhi	.L3230	@,
	mov	r5, r0, asl #1	@ tmp147, zeros,
	mov	r0, r7	@, D.38593
	add	r5, r5, #1	@ NumBits, tmp147,
	rsb	r3, r5, #32	@ tmp148, NumBits,
	mov	r4, r4, lsr r3	@ D.38601, D.38594,
	mov	r1, r5	@, NumBits
	tst	r4, #1	@ D.38601,
	mov	r4, r4, lsr #1	@ tmp, D.38601,
	rsbne	r4, r4, #0	@ INFO, tmp
	bl	BsSkip	@
.L3233:
	ldr	ip, [r6, #232]	@ D.38625, <variable>.pCurrNal
	mov	r2, r8	@, SE_TRACEstring
	mov	r3, r4	@, INFO
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp155, <variable>.nal_bitoffset, NumBits
	str	r5, [ip, #64]	@ tmp155, <variable>.nal_bitoffset
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3230:
	cmp	r0, #31	@ zeros,
	bls	.L3237	@,
	mov	r1, #1	@ tmp152,
	mvn	r4, #-2147483648	@ INFO,
	mov	r5, #32	@ NumBits,
	strb	r1, [r6, #10]	@ tmp152, <variable>.SeErrFlg
	b	.L3233	@
.L3237:
	mov	r1, r5	@, zeros
	mov	r0, r7	@, D.38593
	bl	BsSkip	@
	mov	r1, r5	@, zeros
	mov	r0, r7	@, D.38593
	bl	BsGet	@
	mov	r1, #1	@,
	mov	r4, r0	@ INFO,
	mov	r0, r7	@, D.38593
	bl	BsGet	@
	tst	r0, #1	@,
	mov	r0, r5, asl #1	@ tmp151, zeros,
	rsbne	r4, r4, #0	@ INFO, INFO
	add	r5, r0, #1	@ NumBits, tmp151,
	b	.L3233	@
	.fnend
	.size	mvc_se_v, .-mvc_se_v
	.align	2
	.global	MVC_Scaling_List
	.type	MVC_Scaling_List, %function
MVC_Scaling_List:
	.fnstart
.LFB1648:
	@ args = 4, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r3, #0	@ sizeOfScalingList, sizeOfScalingList
	str	r0, [fp, #-52]	@ pMvcCtx, %sfp
	mov	r9, r1	@ scalingList_Org, scalingList_Org
	mov	r6, r2	@ scalingList, scalingList
	ble	.L3245	@,
	cmp	r4, #16	@ sizeOfScalingList,
	sub	r0, r4, #1	@ tmp178, sizeOfScalingList,
	movw	r1, #:lower16:.LANCHOR0	@,
	and	r3, r0, #1	@, tmp178,
	movt	r1, #:upper16:.LANCHOR0	@,
	str	r3, [fp, #-56]	@, %sfp
	str	r1, [fp, #-48]	@, %sfp
	mov	sl, #255	@ tmp177,
	beq	.L3272	@,
	ldr	r8, .L3275	@,
	ldrb	r5, [r8, #0]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
.L3260:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC123	@,
	movt	r1, #:upper16:.LC123	@,
	and	r8, r5, #252	@ tmp202, scanj,
	bl	mvc_se_v	@
	add	r0, r0, #264	@ tmp193,,
	mov	r7, r0, asr #31	@ tmp194, tmp193,
	mov	r2, r7, lsr #24	@ tmp195, tmp194,
	and	r7, r5, #3	@ tmp204, scanj,
	add	ip, r0, r2	@ tmp196, tmp193, tmp195
	and	r3, ip, #255	@ tmp197, tmp196,
	mov	ip, r7, asl #3	@ D.45299, tmp204,
	cmp	r3, r2	@ tmp197, tmp195
	cmpeq	r5, #0	@, scanj,
	movne	r1, #0	@, tmp200
	moveq	r1, #1	@, tmp200
	subs	r3, r3, r2	@ nextScale, tmp197, tmp195
	ldr	r2, [fp, #4]	@, UseDefaultScalingMatrix
	str	r1, [r2, #0]	@ tmp200,
	add	r1, r6, r8	@ D.45297, scalingList, tmp202
	moveq	r2, #8	@ tmpscale,
	movne	r2, r3	@ tmpscale, nextScale
	str	r2, [r9, r5, asl #2]	@ tmpscale,* scalingList_Org
	and	r7, r2, #255	@ tmp206, tmpscale,
	ldr	r0, [r1, #0]	@ tmp211,* D.45297
	mov	r5, #1	@ j,
	cmp	r4, r5	@ sizeOfScalingList, j
	mov	r8, r2	@ lastScale, tmpscale
	bic	r0, r0, sl, asl ip	@ tmp212, tmp211, tmp177,
	orr	r0, r0, r7, asl ip	@, tmp213, tmp212, tmp206,
	str	r0, [r1, #0]	@ tmp213,* D.45297
	ble	.L3245	@,
	ldr	r1, [fp, #-56]	@, %sfp
	cmp	r1, #0	@,
	beq	.L3244	@,
	cmp	r4, #16	@ sizeOfScalingList,
	ldrne	r1, .L3275	@,
	ldreq	r1, [fp, #-48]	@, %sfp
	cmp	r3, #0	@ nextScale,
	ldrb	r7, [r1, r5]	@ zero_extendqisi2	@ scanj,* j
	bne	.L3265	@,
.L3251:
	mov	r8, r2	@ tmpscale, tmpscale
	mov	r3, #0	@ nextScale,
.L3266:
	and	r2, r7, #252	@ tmp228, scanj,
	and	r1, r7, #3	@ tmp230, scanj,
	add	r2, r6, r2	@ D.45297, scalingList, tmp228
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	mov	lr, r1, asl #3	@ D.45299, tmp230,
	add	r5, r5, #1	@ j, j,
	ldr	r0, [r2, #0]	@ tmp237,* D.45297
	and	ip, r8, #255	@ tmp232, tmpscale,
	cmp	r4, r5	@ sizeOfScalingList, j
	bic	r0, r0, sl, asl lr	@ tmp238, tmp237, tmp177,
	orr	r1, r0, ip, asl lr	@, tmp239, tmp238, tmp232,
	str	r1, [r2, #0]	@ tmp239,* D.45297
	ble	.L3245	@,
.L3244:
	cmp	r4, #16	@ sizeOfScalingList,
	ldreq	r2, [fp, #-48]	@, %sfp
	ldrne	r1, .L3275	@,
	ldreqb	r7, [r2, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	ldrneb	r7, [r1, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
	cmp	r3, #0	@ nextScale,
	bne	.L3273	@,
.L3242:
	mov	r3, #0	@ nextScale,
.L3243:
	and	ip, r7, #3	@ tmp164, scanj,
	mov	lr, r7, lsr #2	@ tmp162, scanj,
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	and	r0, r8, #255	@ tmp165, tmpscale,
	mov	r1, ip, asl #3	@ D.45299, tmp164,
	ldr	r2, [r6, lr, asl #2]	@ tmp171,* scalingList
	cmp	r4, #16	@ sizeOfScalingList,
	add	r5, r5, #1	@ tmp181, j,
	bic	ip, r2, sl, asl r1	@ tmp170, tmp171, tmp177,
	orr	r7, ip, r0, asl r1	@, tmp172, tmp170, tmp165,
	str	r7, [r6, lr, asl #2]	@ tmp172,* scalingList
	beq	.L3274	@,
	ldr	lr, .L3275	@,
	ldrb	r7, [lr, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
.L3267:
	cmp	r3, #0	@ nextScale,
	bne	.L3268	@,
.L3255:
	mov	r3, #0	@ nextScale,
.L3269:
	and	r1, r7, #3	@ tmp256, scanj,
	mov	r2, r7, lsr #2	@ tmp253, scanj,
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	add	r5, r5, #1	@ j, tmp181,
	mov	lr, r1, asl #3	@ D.45299, tmp256,
	ldr	r0, [r6, r2, asl #2]	@ tmp263,* scalingList
	and	ip, r8, #255	@ tmp258, tmpscale,
	cmp	r4, r5	@ sizeOfScalingList, j
	bic	r0, r0, sl, asl lr	@ tmp264, tmp263, tmp177,
	orr	r1, r0, ip, asl lr	@, tmp265, tmp264, tmp258,
	str	r1, [r6, r2, asl #2]	@ tmp265,* scalingList
	bgt	.L3244	@,
.L3245:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3268:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC123	@,
	movt	r1, #:upper16:.LC123	@,
	bl	mvc_se_v	@
	add	r3, r8, #256	@ tmp244, tmpscale,
	add	r1, r3, r0	@ tmp245, tmp244,
	mov	r0, r1, asr #31	@ tmp246, tmp245,
	mov	r2, r0, lsr #24	@ tmp247, tmp246,
	add	ip, r1, r2	@ tmp248, tmp245, tmp247
	ldr	r1, [fp, #4]	@, UseDefaultScalingMatrix
	and	r3, ip, #255	@ tmp249, tmp248,
	cmp	r3, r2	@ tmp249, tmp247
	cmpeq	r7, #0	@, scanj,
	movne	r0, #0	@, tmp252
	moveq	r0, #1	@, tmp252
	subs	r3, r3, r2	@ nextScale, tmp249, tmp247
	str	r0, [r1, #0]	@ tmp252,
	beq	.L3255	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L3269	@
.L3273:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC123	@,
	movt	r1, #:upper16:.LC123	@,
	bl	mvc_se_v	@
	add	r3, r8, #256	@ tmp150, lastScale,
	add	ip, r3, r0	@ tmp151, tmp150,
	mov	r2, ip, asr #31	@ tmp152, tmp151,
	mov	r0, r2, lsr #24	@ tmp153, tmp152,
	ldr	r2, [fp, #4]	@, UseDefaultScalingMatrix
	add	r1, ip, r0	@ tmp154, tmp151, tmp153
	and	r3, r1, #255	@ tmp155, tmp154,
	cmp	r3, r0	@ tmp155, tmp153
	cmpeq	r7, #0	@, scanj,
	movne	ip, #0	@, tmp161
	moveq	ip, #1	@, tmp161
	subs	r3, r3, r0	@ nextScale, tmp155, tmp153
	str	ip, [r2, #0]	@ tmp161,
	movne	r8, r3	@ tmpscale, nextScale
	bne	.L3243	@,
	b	.L3242	@
.L3274:
	ldr	ip, [fp, #-48]	@, %sfp
	ldrb	r7, [ip, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	b	.L3267	@
.L3272:
	ldr	r3, [fp, #-48]	@, %sfp
	ldrb	r5, [r3, #0]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	b	.L3260	@
.L3265:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC123	@,
	movt	r1, #:upper16:.LC123	@,
	str	r2, [fp, #-60]	@,
	bl	mvc_se_v	@
	ldr	r2, [fp, #-60]	@,
	add	r3, r2, #256	@ tmp218, tmpscale,
	add	r0, r3, r0	@ tmp219, tmp218,
	mov	r1, r0, asr #31	@ tmp220, tmp219,
	mov	ip, r1, lsr #24	@ tmp221, tmp220,
	ldr	r1, [fp, #4]	@, UseDefaultScalingMatrix
	add	r8, r0, ip	@ tmp222, tmp219, tmp221
	and	r3, r8, #255	@ tmp223, tmp222,
	cmp	r3, ip	@ tmp223, tmp221
	cmpeq	r7, #0	@, scanj,
	movne	r8, #0	@, tmp226
	moveq	r8, #1	@, tmp226
	subs	r3, r3, ip	@ nextScale, tmp223, tmp221
	str	r8, [r1, #0]	@ tmp226,
	beq	.L3251	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L3266	@
.L3276:
	.align	2
.L3275:
	.word	.LANCHOR0+16
	.fnend
	.size	MVC_Scaling_List, .-MVC_Scaling_List
	.align	2
	.global	mvc_ue_v
	.type	mvc_ue_v, %function
mvc_ue_v:
	.fnstart
.LFB1528:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r7, r0, #548	@ D.38559, pMvcCtx,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ SE_TRACEstring, SE_TRACEstring
	mov	r0, r7	@, D.38559
	mov	r1, #32	@,
	bl	BsShow	@
	mov	r4, r0	@ D.38560,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r5, r0	@ zeros,
	bls	.L3282	@,
	cmp	r0, #31	@ zeros,
	bls	.L3283	@,
	mvn	r4, #0	@ INFO,
	mov	r5, #32	@ NumBits,
	mov	r1, #1	@ tmp149,
	strb	r1, [r6, #10]	@ tmp149, <variable>.SeErrFlg
.L3279:
	ldr	ip, [r6, #232]	@ D.38578, <variable>.pCurrNal
	mov	r2, r8	@, SE_TRACEstring
	mov	r3, r4	@, INFO
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp152, <variable>.nal_bitoffset, NumBits
	str	r5, [ip, #64]	@ tmp152, <variable>.nal_bitoffset
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3282:
	mov	r5, r0, asl #1	@ tmp145, zeros,
	mov	r0, r7	@, D.38559
	add	r5, r5, #1	@ NumBits, tmp145,
	rsb	r3, r5, #32	@ tmp146, NumBits,
	mov	r4, r4, lsr r3	@ tmp147, D.38560,
	mov	r1, r5	@, NumBits
	sub	r4, r4, #1	@ INFO, tmp147,
	bl	BsSkip	@
	b	.L3279	@
.L3283:
	add	r4, r0, #1	@ D.38574, zeros,
	mov	r1, r0	@, zeros
	mov	r0, r7	@, D.38559
	bl	BsSkip	@
	mov	r1, r4	@, D.38574
	mov	r0, r7	@, D.38559
	bl	BsShow	@
	mov	r1, r4	@, D.38574
	sub	r4, r0, #1	@ INFO,,
	mov	r0, r7	@, D.38559
	bl	BsSkip	@
	mov	r0, r5, asl #1	@ tmp148, zeros,
	add	r5, r0, #1	@ NumBits, tmp148,
	b	.L3279	@
	.fnend
	.size	mvc_ue_v, .-mvc_ue_v
	.align	2
	.global	MVC_DecFramePackingSEI
	.type	MVC_DecFramePackingSEI, %function
MVC_DecFramePackingSEI:
	.fnstart
.LFB1664:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC124	@,
	movt	r1, #:upper16:.LC124	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11122896	@ tmp156,
	movt	ip, #:upper16:11122896	@ tmp156,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC125	@,
	movt	r2, #:upper16:.LC125	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122873	@ tmp158,
	movt	r3, #:upper16:11122873	@ tmp158,
	uxtb	r0, r0	@ D.46880,
	strb	r0, [r4, r3]	@ D.46880, <variable>.FramePackSEI.frame_packing_arrangement_cancel_flag
	cmp	r0, #0	@ D.46880,
	beq	.L3288	@,
.L3285:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC141	@,
	movt	r2, #:upper16:.LC141	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122874	@ tmp206,
	movw	r2, #:lower16:11122872	@ tmp208,
	movt	r3, #:upper16:11122874	@ tmp206,
	movt	r2, #:upper16:11122872	@ tmp208,
	mov	r1, #1	@ tmp209,
	strb	r1, [r4, r2]	@ tmp209, <variable>.FramePackSEI.frame_packing_dec_ok
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame_packing_arrangement_extension_flag
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3288:
	mov	r1, #7	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC126	@,
	movt	r2, #:upper16:.LC126	@,
	bl	mvc_u_v	@
	movw	r6, #:lower16:11122888	@ tmp161,
	movt	r6, #:upper16:11122888	@ tmp161,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC127	@,
	movt	r2, #:upper16:.LC127	@,
	movw	r5, #:lower16:11122875	@ tmp163,
	movt	r5, #:upper16:11122875	@ tmp163,
	str	r0, [r4, r6]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC128	@,
	movt	r2, #:upper16:.LC128	@,
	strb	r0, [r4, r5]	@, <variable>.FramePackSEI.quincunx_sampling_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11122892	@ tmp166,
	movt	ip, #:upper16:11122892	@ tmp166,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC129	@,
	movt	r2, #:upper16:.LC129	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.content_interpretation_type
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122876	@ tmp168,
	movt	r3, #:upper16:11122876	@ tmp168,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC130	@,
	movt	r2, #:upper16:.LC130	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.spatial_flipping_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11122877	@ tmp171,
	movt	ip, #:upper16:11122877	@ tmp171,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC131	@,
	movt	r2, #:upper16:.LC131	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_flipped_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122878	@ tmp174,
	movt	r3, #:upper16:11122878	@ tmp174,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC132	@,
	movt	r2, #:upper16:.LC132	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.field_views_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11122879	@ tmp177,
	movt	ip, #:upper16:11122879	@ tmp177,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC133	@,
	movt	r2, #:upper16:.LC133	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.current_frame_is_frame0_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122880	@ tmp180,
	movt	r3, #:upper16:11122880	@ tmp180,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC134	@,
	movt	r2, #:upper16:.LC134	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_self_contained_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldrsb	r2, [r4, r5]	@ <variable>.FramePackSEI.quincunx_sampling_flag, <variable>.FramePackSEI.quincunx_sampling_flag
	movw	r1, #:lower16:11122881	@ tmp183,
	movt	r1, #:upper16:11122881	@ tmp183,
	cmp	r2, #0	@ <variable>.FramePackSEI.quincunx_sampling_flag,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_self_contained_flag
	bne	.L3286	@,
	ldr	lr, [r4, r6]	@ <variable>.FramePackSEI.frame_packing_arrangement_type, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	lr, #5	@ <variable>.FramePackSEI.frame_packing_arrangement_type,
	beq	.L3286	@,
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC135	@,
	movt	r2, #:upper16:.LC135	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122882	@ tmp190,
	movt	r3, #:upper16:11122882	@ tmp190,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC136	@,
	movt	r2, #:upper16:.LC136	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_grid_position_x
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11122883	@ tmp193,
	movt	ip, #:upper16:11122883	@ tmp193,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC137	@,
	movt	r2, #:upper16:.LC137	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_grid_position_y
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11122884	@ tmp196,
	movt	r3, #:upper16:11122884	@ tmp196,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC138	@,
	movt	r2, #:upper16:.LC138	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame1_grid_position_x
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:11122885	@ tmp199,
	movt	r1, #:upper16:11122885	@ tmp199,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_grid_position_y
.L3286:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC139	@,
	movt	r2, #:upper16:.LC139	@,
	bl	mvc_u_v	@
	movw	ip, #:lower16:11122900	@ tmp202,
	movt	ip, #:upper16:11122900	@ tmp202,
	movw	r1, #:lower16:.LC140	@,
	movt	r1, #:upper16:.LC140	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_reserved_byte
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r2, #:lower16:11122904	@ tmp204,
	movt	r2, #:upper16:11122904	@ tmp204,
	str	r0, [r4, r2]	@, <variable>.FramePackSEI.frame_packing_arrangement_repetition_period
	b	.L3285	@
	.fnend
	.size	MVC_DecFramePackingSEI, .-MVC_DecFramePackingSEI
	.align	2
	.global	MVC_DecSEI
	.type	MVC_DecSEI, %function
MVC_DecSEI:
	.fnstart
.LFB1666:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r0, #0	@ tmp246,
	sub	r7, fp, #44	@ tmp662,,
	add	r6, r4, #548	@ D.47119, pMvcCtx,
	mov	r8, r0	@ payloadType, tmp246
	mov	r3, #32	@ tmp249,
	strb	r0, [r7, #-1]!	@ tmp246, byte_tmp
	str	r3, [r2, #24]	@ tmp249, <variable>.bitsoffset
.L3293:
	mov	r1, r7	@, tmp662
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r5, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r5, #8	@ tmp251, <variable>.BS.TotalPos,
	ldrb	r5, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.841, byte_tmp
	cmp	ip, r1, asl #3	@ tmp251, <variable>.BS.BsLen,
	mov	sl, r0	@ ret,
	ble	.L3625	@,
.L3292:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC142	@,
	movt	r1, #:upper16:.LC142	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47124,
.L3295:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3625:
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	sl, #0	@ ret,
	add	r8, r8, r5	@ payloadType, payloadType, byte_tmp.841
	ble	.L3292	@,
	ldrb	sl, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	sl, #255	@ byte_tmp,
	beq	.L3293	@,
	mov	r2, #0	@,
	movw	lr, #:lower16:g_event_report	@ tmp695,
	str	r2, [fp, #-56]	@, %sfp
	movt	lr, #:upper16:g_event_report	@ tmp695,
	str	lr, [fp, #-64]	@ tmp695, %sfp
.L3426:
	mov	r5, #0	@ payloadSize,
.L3299:
	mov	r1, r7	@, tmp662
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldrb	r3, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.9632, byte_tmp
	add	r1, ip, #8	@ tmp258, <variable>.BS.TotalPos,
	add	r5, r5, r3	@ payloadSize, payloadSize, byte_tmp.9632
	mov	sl, r0	@ ret.9631,
	ldr	r0, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	cmp	r1, r0, asl #3	@ tmp258, <variable>.BS.BsLen,
	ble	.L3626	@,
.L3298:
	mov	r3, #1	@ prephitmp.9541,
	cmp	r5, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp267, prephitmp.9541
	cmp	r3, #0	@ tmp267,
	bne	.L3627	@,
.L3301:
	ldr	r3, [r4, #232]	@ temp.9639, <variable>.pCurrNal
	ldr	r2, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r2, #2	@ <variable>.nal_segment,
	ldr	r2, [r3, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldreq	r3, [r3, #52]	@ <variable>.bitsoffset, <variable>.bitsoffset
	addeq	r2, r3, r2	@ tmp270, <variable>.bitsoffset, <variable>.bitsoffset
	moveq	r2, r2, lsr #3	@ TotalBitOffset, tmp270,
	cmp	r8, #45	@ payloadType,
	ldrls	pc, [pc, r8, asl #2]	@ payloadType
	b	.L3304	@
.L3328:
	.word	.L3305
	.word	.L3306
	.word	.L3307
	.word	.L3308
	.word	.L3309
	.word	.L3310
	.word	.L3311
	.word	.L3312
	.word	.L3313
	.word	.L3314
	.word	.L3315
	.word	.L3316
	.word	.L3317
	.word	.L3318
	.word	.L3319
	.word	.L3320
	.word	.L3321
	.word	.L3322
	.word	.L3323
	.word	.L3324
	.word	.L3325
	.word	.L3326
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3304
	.word	.L3327
.L3626:
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	sl, #0	@ ret.9631,
	ble	.L3298	@,
	ldrb	lr, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	lr, #255	@ byte_tmp,
	beq	.L3299	@,
	mov	r3, #0	@ prephitmp.9541,
	cmp	r5, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp267, prephitmp.9541
	cmp	r3, #0	@ tmp267,
	beq	.L3301	@,
.L3627:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC143	@,
	movt	r1, #:upper16:.LC143	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47124,
	b	.L3295	@
.L3327:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	ldr	r8, [r4, #572]	@ bitpos.9860, <variable>.BS.TotalPos
	bl	MVC_DecFramePackingSEI	@
	ldr	r3, [r4, #572]	@ prephitmp.9543, <variable>.BS.TotalPos
	mov	r2, r5, asl #3	@ temp.9862, payloadSize,
	rsb	r8, r8, r3	@ bitpos.9861, bitpos.9860, prephitmp.9543
	cmp	r8, r2	@ bitpos.9861, temp.9862
	bge	.L3412	@,
	rsb	r8, r8, r2	@, bitpos.9861, temp.9862
	str	r8, [fp, #-60]	@, %sfp
	cmp	r8, #0	@,
	add	r9, r8, #7	@ tmp626,,
	movge	r9, r8	@ temp.9961,
	mov	r9, r9, asr #3	@ temp.9962, temp.9961,
	cmp	r9, #0	@ temp.9962,
	ldrle	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.9895, <variable>.BS.BsLen,
	ble	.L3414	@,
	ldr	r0, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r3, #8	@ tmp630, prephitmp.9543,
	mov	r2, r0, asl #3	@ prephitmp.9895, <variable>.BS.BsLen,
	cmp	r1, r2	@ tmp630, prephitmp.9895
	bgt	.L3414	@,
	tst	r9, #1	@ temp.9962,
	mov	sl, #0	@ i.9866,
	beq	.L3628	@,
.L3415:
	add	r8, sl, #1	@ tmp801, i.9866,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9866, tmp801,
	bl	BsSkip	@
	cmp	r8, r9	@ tmp801, temp.9962
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bge	.L3565	@,
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, #572]	@ prephitmp.9543, <variable>.BS.TotalPos
	mov	r2, lr, asl #3	@ prephitmp.9895, <variable>.BS.BsLen,
	add	ip, r3, #8	@ tmp632, prephitmp.9543,
	cmp	ip, r2	@ tmp632, prephitmp.9895
	bgt	.L3414	@,
	bl	BsSkip	@
.L3624:
	ldr	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, #572]	@ prephitmp.9543, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.9895, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp1035, prephitmp.9543,
	cmp	lr, r2	@ tmp1035, prephitmp.9895
	ble	.L3415	@,
.L3414:
	ldr	ip, [fp, #-60]	@, %sfp
	mov	r1, ip, asr #31	@ tmp634,,
	mov	r1, r1, lsr #29	@ tmp635, tmp634,
	add	lr, ip, r1	@ tmp636,, tmp635
	and	r0, lr, #7	@ tmp637, tmp636,
	rsb	r1, r1, r0	@ tmp638, tmp635, tmp637
	add	r3, r3, r1	@ tmp639, prephitmp.9543, tmp638
	cmp	r3, r2	@ tmp639, prephitmp.9895
	ble	.L3629	@,
.L3412:
	mov	r1, r5	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3630	@,
.L3330:
	ldr	r1, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r1, #3	@ <variable>.TotalUsrDatNum,
	bhi	.L3631	@,
.L3420:
	mov	r8, #0	@ payloadType,
.L3424:
	mov	r1, r7	@, tmp662
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r5, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, r5, #8	@ tmp657, <variable>.BS.TotalPos,
	ldrb	r5, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.9885, byte_tmp
	mov	sl, r0	@ ret.9883,
	ldr	r0, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	cmp	r3, r0, asl #3	@ tmp657, <variable>.BS.BsLen,
	ble	.L3632	@,
.L3423:
	mov	r0, #0	@ D.47124,
	b	.L3295	@
.L3326:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC170	@,
	movt	r1, #:upper16:.LC170	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3633	@,
.L3409:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp617, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp617, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9859,
	bne	.L3410	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9859,
	cmp	r5, sl	@ payloadSize, i.9859
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp1025, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1025, <variable>.BS.BsLen,
	ble	.L3410	@,
	b	.L3330	@
.L3411:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp621, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp621, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp1029, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1029, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3410:
	add	r8, sl, #1	@ tmp797, i.9859,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9859, tmp797,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp797
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3411	@,
	b	.L3330	@
.L3322:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC166	@,
	movt	r1, #:upper16:.LC166	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3634	@,
.L3397:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp569, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp569, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9824,
	bne	.L3398	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9824,
	cmp	r5, sl	@ payloadSize, i.9824
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp993, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp993, <variable>.BS.BsLen,
	ble	.L3398	@,
	b	.L3330	@
.L3399:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp573, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp573, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp997, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp997, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3398:
	add	r8, sl, #1	@ tmp781, i.9824,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9824, tmp781,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp781
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3399	@,
	b	.L3330	@
.L3324:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC168	@,
	movt	r1, #:upper16:.LC168	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3635	@,
.L3403:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp593, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp593, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9840,
	bne	.L3404	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9840,
	cmp	r5, sl	@ payloadSize, i.9840
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp1009, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1009, <variable>.BS.BsLen,
	ble	.L3404	@,
	b	.L3330	@
.L3405:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp597, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp597, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp1013, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1013, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3404:
	add	r8, sl, #1	@ tmp789, i.9840,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9840, tmp789,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp789
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3405	@,
	b	.L3330	@
.L3320:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC164	@,
	movt	r1, #:upper16:.LC164	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3636	@,
.L3391:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp545, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp545, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9808,
	bne	.L3392	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9808,
	cmp	r5, sl	@ payloadSize, i.9808
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp977, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp977, <variable>.BS.BsLen,
	ble	.L3392	@,
	b	.L3330	@
.L3393:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp549, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp549, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp981, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp981, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3392:
	add	r8, sl, #1	@ tmp773, i.9808,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9808, tmp773,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp773
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3393	@,
	b	.L3330	@
.L3325:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC169	@,
	movt	r1, #:upper16:.LC169	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3637	@,
.L3406:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp605, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp605, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9848,
	bne	.L3407	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9848,
	cmp	r5, sl	@ payloadSize, i.9848
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp1017, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1017, <variable>.BS.BsLen,
	ble	.L3407	@,
	b	.L3330	@
.L3408:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp609, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp609, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp1021, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1021, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3407:
	add	r8, sl, #1	@ tmp793, i.9848,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9848, tmp793,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp793
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3408	@,
	b	.L3330	@
.L3321:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC165	@,
	movt	r1, #:upper16:.LC165	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3638	@,
.L3394:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp557, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp557, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9816,
	bne	.L3395	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9816,
	cmp	r5, sl	@ payloadSize, i.9816
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp985, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp985, <variable>.BS.BsLen,
	ble	.L3395	@,
	b	.L3330	@
.L3396:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp561, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp561, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp989, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp989, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3395:
	add	r8, sl, #1	@ tmp777, i.9816,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9816, tmp777,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp777
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3396	@,
	b	.L3330	@
.L3323:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3639	@,
.L3400:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp581, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp581, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9832,
	bne	.L3401	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9832,
	cmp	r5, sl	@ payloadSize, i.9832
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp1001, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1001, <variable>.BS.BsLen,
	ble	.L3401	@,
	b	.L3330	@
.L3402:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp585, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp585, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp1005, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1005, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3401:
	add	r8, sl, #1	@ tmp785, i.9832,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9832, tmp785,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp785
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3402	@,
	b	.L3330	@
.L3319:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC163	@,
	movt	r1, #:upper16:.LC163	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3640	@,
.L3388:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp533, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp533, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9800,
	bne	.L3389	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9800,
	cmp	r5, sl	@ payloadSize, i.9800
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp969, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp969, <variable>.BS.BsLen,
	ble	.L3389	@,
	b	.L3330	@
.L3390:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp537, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp537, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp973, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp973, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3389:
	add	r8, sl, #1	@ tmp769, i.9800,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9800, tmp769,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp769
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3390	@,
	b	.L3330	@
.L3318:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC162	@,
	movt	r1, #:upper16:.LC162	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3641	@,
.L3385:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp521, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp521, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9792,
	bne	.L3386	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9792,
	cmp	r5, sl	@ payloadSize, i.9792
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp961, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp961, <variable>.BS.BsLen,
	ble	.L3386	@,
	b	.L3330	@
.L3387:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp525, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp525, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp965, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp965, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3386:
	add	r8, sl, #1	@ tmp765, i.9792,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9792, tmp765,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp765
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3387	@,
	b	.L3330	@
.L3310:
	ldr	r8, [fp, #-56]	@, %sfp
	cmp	r8, #0	@,
	bne	.L3309	@,
	movw	r1, #:lower16:.LC150	@,
	mov	r0, #20	@,
	movt	r1, #:upper16:.LC150	@,
	mov	r3, r5	@, payloadSize
	bl	dprint_vfmw	@
.L3345:
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	ldr	r8, [r4, #60]	@ D.47181, <variable>.TotalUsrDatNum
	bl	GetUsd	@
	ldr	ip, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r1, r8, #132	@ tmp332, D.47181,
	add	r3, ip, #132	@ tmp333, <variable>.TotalUsrDatNum,
	str	r0, [r4, r1, asl #2]	@, <variable>.pUsrDatArray
	ldr	r1, [r4, r3, asl #2]	@ prephitmp.9551, <variable>.pUsrDatArray
	cmp	r1, #0	@ prephitmp.9551,
	beq	.L3346	@,
	ldr	ip, [r4, #232]	@ temp.9675, <variable>.pCurrNal
	cmp	r5, #1024	@ payloadSize,
	movlt	r9, r5	@ D.47187, payloadSize
	movge	r9, #1024	@ D.47187,
	ldrb	r3, [ip, #0]	@ zero_extendqisi2	@ segment_idx, <variable>.nal_used_segment
	ldr	r2, [ip, #68]	@ temp.9897, <variable>.nal_segment
	cmp	r3, r2	@ segment_idx, temp.9897
	movcs	ip, #0	@ prephitmp.9545,
	movcs	r3, ip	@ lenth_not_parse.9678, prephitmp.9545
	bcs	.L3348	@,
	rsb	lr, r3, r3, asl #3	@, tmp337, segment_idx, segment_idx,
	add	r0, r3, #1	@ segment_idx, segment_idx,
	mvn	r3, r3	@ tmp730, segment_idx
	add	sl, r3, r2	@ tmp729, tmp730, temp.9897
	add	r8, ip, lr, asl #2	@, tmp339, temp.9675, tmp337,
	cmp	r0, r2	@ segment_idx, temp.9897
	add	ip, r8, #8	@ tmp340, tmp339,
	and	r8, sl, #1	@ tmp731, tmp729,
	add	lr, ip, #32	@ ivtmp.9588, tmp340,
	ldr	r3, [ip, #16]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	sl, [ip, #4]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r3, r3, #7	@ tmp341, <variable>.bitsoffset,
	sub	r3, sl, r3, lsr #3	@ lenth_not_parse.9678, <variable>.bitstream_length, tmp341,
	beq	.L3522	@,
	cmp	r8, #0	@ tmp731,
	beq	.L3599	@,
	ldr	sl, [lr, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	r0, r0, #1	@ segment_idx, segment_idx,
	ldr	r8, [ip, #32]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r0, r2	@ segment_idx, temp.9897
	add	sl, sl, #7	@ tmp900, <variable>.bitsoffset,
	add	lr, ip, #60	@ ivtmp.9588, tmp340,
	sub	r8, r8, sl, lsr #3	@ tmp903, <variable>.bitstream_length, tmp900,
	add	r3, r3, r8	@ lenth_not_parse.9678, lenth_not_parse.9678, tmp903
	beq	.L3522	@,
.L3599:
	str	r1, [fp, #-72]	@ prephitmp.9551, %sfp
.L3349:
	mov	ip, lr	@ tmp733, ivtmp.9588
	ldr	r1, [lr, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	sl, [ip], #28	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r0, r0, #2	@ segment_idx, segment_idx,
	add	r8, r1, #7	@ tmp810, <variable>.bitsoffset,
	ldr	r1, [lr, #28]	@, <variable>.bitstream_length
	cmp	r0, r2	@ segment_idx, temp.9897
	add	lr, lr, #56	@ ivtmp.9588, ivtmp.9588,
	ldr	ip, [ip, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	sub	r8, sl, r8, lsr #3	@ tmp813, <variable>.bitstream_length, tmp810,
	add	r3, r3, r8	@ lenth_not_parse.9678, lenth_not_parse.9678, tmp813
	add	r8, ip, #7	@ tmp818, <variable>.bitsoffset,
	sub	ip, r1, r8, lsr #3	@ tmp821,, tmp818,
	add	r3, r3, ip	@ lenth_not_parse.9678, lenth_not_parse.9678, tmp821
	bne	.L3349	@,
	ldr	r1, [fp, #-72]	@ prephitmp.9551, %sfp
.L3522:
	mov	ip, r3	@ prephitmp.9545, lenth_not_parse.9678
.L3348:
	ldr	r0, [fp, #-56]	@, %sfp
	cmp	r9, ip	@ D.47187, prephitmp.9545
	movle	ip, r9	@ min_len_tmp, D.47187
	movgt	ip, r3	@ min_len_tmp, lenth_not_parse.9678
	sxtb	r2, r0	@ registered_flag,
	cmp	r2, #1	@ registered_flag,
	movne	sl, #0	@ prephitmp.9552,
	beq	.L3642	@,
.L3356:
	rsb	r2, sl, ip	@, prephitmp.9552, min_len_tmp
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	subs	r8, r0, #0	@ ret.9694,
	ble	.L3643	@,
	rsb	r0, sl, r9	@ tmp390, prephitmp.9552, D.47187
	cmp	r8, r0	@ ret.9694, tmp390
	blt	.L3644	@,
	ldr	r2, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r9, r5	@ D.47187, payloadSize
	rsb	r8, sl, r5	@ D.47233, prephitmp.9552, payloadSize
	add	lr, r2, #132	@ tmp398, <variable>.TotalUsrDatNum,
	ldr	r0, [r4, lr, asl #2]	@ tmp400, <variable>.pUsrDatArray
	str	r8, [r0, #1048]	@ D.47233, <variable>.data_size
	bcc	.L3645	@,
.L3361:
	cmp	r8, #0	@ D.47233,
	ble	.L3359	@,
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r1, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, r1, #8	@ tmp408, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp408, <variable>.BS.BsLen,
	bgt	.L3359	@,
	tst	r8, #1	@ D.47233,
	mov	sl, #0	@ i.9716,
	bne	.L3362	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9716,
	cmp	r8, sl	@ D.47233, i.9716
	bgt	.L3620	@,
	b	.L3359	@
.L3362:
	add	r5, sl, #1	@ tmp728, i.9716,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r5, #1	@ i.9716, tmp728,
	bl	BsSkip	@
	cmp	r8, r5	@ D.47233, tmp728
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	ble	.L3359	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp410, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp410, <variable>.BS.BsLen,
	bgt	.L3359	@,
	bl	BsSkip	@
.L3620:
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp896, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp896, <variable>.BS.BsLen,
	ble	.L3362	@,
.L3359:
	ldr	r1, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	lr, #1056	@,
	ldr	ip, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	add	r3, r1, #132	@ tmp414, <variable>.TotalUsrDatNum,
	ldrd	r0, [ip, #56]	@ <variable>.pts, <variable>.pstExtraData,
	ldr	r2, [r4, r3, asl #2]	@ tmp416, <variable>.pUsrDatArray
	strd	r0, [r2, lr]	@ <variable>.pts, tmp416,
	mov	r2, #8	@,
	ldr	ip, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, ip, #132	@ tmp420, <variable>.TotalUsrDatNum,
	ldr	lr, [r4, r3, asl #2]	@ tmp422, <variable>.pUsrDatArray
	str	r2, [lr, #1036]	@, <variable>.from
	ldr	ip, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	lr, [r4, #84]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r2, ip, #132	@ tmp424, <variable>.TotalUsrDatNum,
	ldr	r3, [r4, r2, asl #2]	@ tmp426, <variable>.pUsrDatArray
	str	lr, [r3, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r0, [fp, #-64]	@, %sfp
	ldr	ip, [r0, #0]	@ g_event_report.9726, g_event_report
	cmp	ip, #0	@ g_event_report.9726,
	beq	.L3330	@,
	ldr	r2, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #6	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #1072	@,
	add	lr, r2, #132	@ tmp430, <variable>.TotalUsrDatNum,
	ldr	r2, [r4, lr, asl #2]	@, <variable>.pUsrDatArray
	blx	ip	@ g_event_report.9726
	ldr	r1, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r1, #3	@ <variable>.TotalUsrDatNum,
	bls	.L3420	@,
.L3631:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC171	@,
	movt	r1, #:upper16:.LC171	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47124,
	b	.L3295	@
.L3314:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC158	@,
	movt	r1, #:upper16:.LC158	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3646	@,
.L3373:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp473, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp473, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9760,
	bne	.L3374	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9760,
	cmp	r5, sl	@ payloadSize, i.9760
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp929, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp929, <variable>.BS.BsLen,
	ble	.L3374	@,
	b	.L3330	@
.L3375:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp477, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp477, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp933, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp933, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3374:
	add	r8, sl, #1	@ tmp749, i.9760,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9760, tmp749,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp749
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3375	@,
	b	.L3330	@
.L3313:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC157	@,
	movt	r1, #:upper16:.LC157	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3647	@,
.L3370:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp461, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp461, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9679,
	bne	.L3371	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9679,
	cmp	r5, sl	@ payloadSize, i.9679
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp921, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp921, <variable>.BS.BsLen,
	ble	.L3371	@,
	b	.L3330	@
.L3372:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp465, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp465, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp925, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp925, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3371:
	add	r8, sl, #1	@ tmp745, i.9679,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9679, tmp745,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp745
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3372	@,
	b	.L3330	@
.L3306:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC146	@,
	movt	r1, #:upper16:.LC146	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	ldr	r8, [r4, #572]	@ bitpos, <variable>.BS.TotalPos
	bl	MVC_DecPicTimingSEI	@
	ldr	r3, [r4, #572]	@ prephitmp.9556, <variable>.BS.TotalPos
	mov	r2, r5, asl #3	@ D.47155, payloadSize,
	rsb	r8, r8, r3	@ bitpos.9648, bitpos, prephitmp.9556
	cmp	r8, r2	@ bitpos.9648, D.47155
	bge	.L3333	@,
	rsb	r2, r8, r2	@, bitpos.9648, D.47155
	str	r2, [fp, #-60]	@, %sfp
	cmp	r2, #0	@,
	add	r9, r2, #7	@ tmp287,,
	movge	r9, r2	@ D.47159,
	mov	r9, r9, asr #3	@ D.47160, D.47159,
	cmp	r9, #0	@ D.47160,
	ldrle	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.9558, <variable>.BS.BsLen,
	ble	.L3335	@,
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp291, prephitmp.9556,
	mov	r2, r1, asl #3	@ prephitmp.9558, <variable>.BS.BsLen,
	cmp	r2, r0	@ prephitmp.9558, tmp291
	blt	.L3335	@,
	tst	r9, #1	@ D.47160,
	mov	sl, #0	@ i.9652,
	beq	.L3648	@,
.L3336:
	add	r8, sl, #1	@ tmp712, i.9652,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9652, tmp712,
	bl	BsSkip	@
	cmp	r8, r9	@ tmp712, D.47160
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bge	.L3564	@,
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, #572]	@ prephitmp.9556, <variable>.BS.TotalPos
	mov	r2, lr, asl #3	@ prephitmp.9558, <variable>.BS.BsLen,
	add	ip, r3, #8	@ tmp293, prephitmp.9556,
	cmp	ip, r2	@ tmp293, prephitmp.9558
	bgt	.L3335	@,
	bl	BsSkip	@
.L3618:
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, #572]	@ prephitmp.9556, <variable>.BS.TotalPos
	mov	r2, ip, asl #3	@ prephitmp.9558, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp870, prephitmp.9556,
	cmp	lr, r2	@ tmp870, prephitmp.9558
	ble	.L3336	@,
.L3335:
	ldr	ip, [fp, #-60]	@, %sfp
	mov	r1, ip, asr #31	@ tmp295,,
	mov	r1, r1, lsr #29	@ tmp296, tmp295,
	add	lr, ip, r1	@ tmp297,, tmp296
	and	r0, lr, #7	@ tmp298, tmp297,
	rsb	r1, r1, r0	@ tmp299, tmp296, tmp298
	add	r3, r3, r1	@ tmp300, prephitmp.9556, tmp299
	cmp	r3, r2	@ tmp300, prephitmp.9558
	ble	.L3649	@,
.L3333:
	mov	r1, r5	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	bge	.L3330	@,
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11489	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3330	@
.L3316:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC160	@,
	movt	r1, #:upper16:.LC160	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3650	@,
.L3379:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp497, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp497, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9776,
	bne	.L3380	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9776,
	cmp	r5, sl	@ payloadSize, i.9776
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp945, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp945, <variable>.BS.BsLen,
	ble	.L3380	@,
	b	.L3330	@
.L3381:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp501, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp501, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp949, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp949, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3380:
	add	r8, sl, #1	@ tmp757, i.9776,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9776, tmp757,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp757
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3381	@,
	b	.L3330	@
.L3308:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC148	@,
	movt	r1, #:upper16:.LC148	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3651	@,
.L3341:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp320, <variable>.BS.TotalPos,
	cmp	r3, r1, asl #3	@ tmp320, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9673,
	bne	.L3342	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9673,
	cmp	sl, r5	@ i.9673, payloadSize
	bge	.L3330	@,
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp880, <variable>.BS.TotalPos,
	cmp	r1, lr, asl #3	@ tmp880, <variable>.BS.BsLen,
	ble	.L3342	@,
	b	.L3330	@
.L3343:
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp324, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp324, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp884, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp884, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3342:
	add	r8, sl, #1	@ tmp720, i.9673,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9673, tmp720,
	bl	BsSkip	@
	cmp	r8, r5	@ tmp720, payloadSize
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	blt	.L3343	@,
	b	.L3330	@
.L3312:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC156	@,
	movt	r1, #:upper16:.LC156	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3652	@,
.L3367:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r0, ip, #8	@ tmp451, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp451, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9640,
	bne	.L3368	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9640,
	cmp	r5, sl	@ payloadSize, i.9640
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp913, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp913, <variable>.BS.BsLen,
	ble	.L3368	@,
	b	.L3330	@
.L3369:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp453, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp453, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp917, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp917, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3368:
	add	r8, sl, #1	@ tmp741, i.9640,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9640, tmp741,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp741
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3369	@,
	b	.L3330	@
.L3304:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3653	@,
.L3417:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, r0, #8	@ tmp648, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp648, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i,
	bne	.L3418	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i,
	cmp	r5, sl	@ payloadSize, i
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp852, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp852, <variable>.BS.BsLen,
	ble	.L3418	@,
	b	.L3330	@
.L3419:
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp650, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp650, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp856, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp856, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3418:
	add	r8, sl, #1	@ tmp704, i,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i, tmp704,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp704
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3419	@,
	b	.L3330	@
.L3317:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC161	@,
	movt	r1, #:upper16:.LC161	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3654	@,
.L3382:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp509, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp509, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9784,
	bne	.L3383	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9784,
	cmp	r5, sl	@ payloadSize, i.9784
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp953, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp953, <variable>.BS.BsLen,
	ble	.L3383	@,
	b	.L3330	@
.L3384:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp513, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp513, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp957, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp957, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3383:
	add	r8, sl, #1	@ tmp761, i.9784,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9784, tmp761,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp761
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3384	@,
	b	.L3330	@
.L3307:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC147	@,
	movt	r1, #:upper16:.LC147	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3655	@,
.L3338:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp308, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp308, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9665,
	bne	.L3339	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9665,
	cmp	sl, r5	@ i.9665, payloadSize
	bge	.L3330	@,
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp872, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp872, <variable>.BS.BsLen,
	ble	.L3339	@,
	b	.L3330	@
.L3340:
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp312, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp312, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp876, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp876, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3339:
	add	r8, sl, #1	@ tmp716, i.9665,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9665, tmp716,
	bl	BsSkip	@
	cmp	r8, r5	@ tmp716, payloadSize
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	blt	.L3340	@,
	b	.L3330	@
.L3311:
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC155	@,
	mov	r3, r5	@, payloadSize
	movt	r1, #:upper16:.LC155	@,
	bl	dprint_vfmw	@
	cmp	r5, #0	@ payloadSize,
	ble	.L3364	@,
	ldr	r0, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, ip, #8	@ tmp436, <variable>.BS.TotalPos,
	cmp	r3, r0, asl #3	@ tmp436, <variable>.BS.BsLen,
	bgt	.L3364	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9735,
	bne	.L3365	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9735,
	cmp	r5, sl	@ payloadSize, i.9735
	bgt	.L3622	@,
	b	.L3364	@
.L3365:
	add	r8, sl, #1	@ tmp737, i.9735,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9735, tmp737,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp737
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	ble	.L3364	@,
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp438, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp438, <variable>.BS.BsLen,
	bgt	.L3364	@,
	bl	BsSkip	@
.L3622:
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp909, <variable>.BS.TotalPos,
	cmp	r1, lr, asl #3	@ tmp909, <variable>.BS.BsLen,
	ble	.L3365	@,
.L3364:
	mov	r1, r5	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	bge	.L3330	@,
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11683	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3330	@
.L3305:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC144	@,
	movt	r1, #:upper16:.LC144	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3656	@,
.L3329:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp277, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp277, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9647,
	bne	.L3331	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9647,
	cmp	sl, r5	@ i.9647, payloadSize
	bge	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp860, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp860, <variable>.BS.BsLen,
	ble	.L3331	@,
	b	.L3330	@
.L3332:
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp281, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp281, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp864, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp864, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3331:
	add	r8, sl, #1	@ tmp708, i.9647,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9647, tmp708,
	bl	BsSkip	@
	cmp	r8, r5	@ tmp708, payloadSize
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	blt	.L3332	@,
	b	.L3330	@
.L3315:
	mov	r3, r5	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC159	@,
	movt	r1, #:upper16:.LC159	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	blt	.L3657	@,
.L3376:
	cmp	r5, #0	@ payloadSize,
	ble	.L3330	@,
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp485, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp485, <variable>.BS.BsLen,
	bgt	.L3330	@,
	tst	r5, #1	@ payloadSize,
	mov	sl, #0	@ i.9768,
	bne	.L3377	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9768,
	cmp	r5, sl	@ payloadSize, i.9768
	ble	.L3330	@,
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp937, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp937, <variable>.BS.BsLen,
	ble	.L3377	@,
	b	.L3330	@
.L3378:
	ldr	r3, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp489, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp489, <variable>.BS.BsLen,
	bgt	.L3330	@,
	bl	BsSkip	@
	ldr	ip, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp941, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp941, <variable>.BS.BsLen,
	bgt	.L3330	@,
.L3377:
	add	r8, sl, #1	@ tmp753, i.9768,
	mov	r1, #8	@,
	mov	r0, r6	@, D.47119
	add	sl, r8, #1	@ i.9768, tmp753,
	bl	BsSkip	@
	cmp	r5, r8	@ payloadSize, tmp753
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bgt	.L3378	@,
	b	.L3330	@
.L3632:
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	sl, #0	@ ret.9883,
	add	r8, r8, r5	@ payloadType, payloadType, byte_tmp.9885
	ble	.L3423	@,
	ldrb	r3, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.9891, byte_tmp
	cmp	r3, #255	@ byte_tmp.9891,
	beq	.L3424	@,
	cmp	r3, #128	@ byte_tmp.9891,
	bne	.L3426	@,
	mov	r0, #0	@ D.47124,
	b	.L3295	@
.L3309:
	movw	r1, #:lower16:.LC149	@,
	mov	r3, r5	@, payloadSize
	movt	r1, #:upper16:.LC149	@,
	mov	r0, #20	@,
	mov	lr, #1	@,
	str	lr, [fp, #-56]	@, %sfp
	bl	dprint_vfmw	@
	b	.L3345	@
.L3644:
	ldr	r0, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	sub	sl, r8, #1	@ tmp721, ret.9694,
	and	sl, sl, #1	@ tmp723, tmp721,
	add	ip, r0, #132	@ tmp391, <variable>.TotalUsrDatNum,
	ldr	r2, [r4, ip, asl #2]	@ tmp393, <variable>.pUsrDatArray
	str	r8, [r2, #1048]	@ ret.9694, <variable>.data_size
	ldr	r1, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r1, #8	@ tmp394, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp394, <variable>.BS.BsLen,
	bgt	.L3359	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r5, #1	@ i.9705,
	cmp	r8, r5	@ ret.9694, i.9705
	ble	.L3359	@,
	cmp	sl, #0	@ tmp723,
	beq	.L3360	@,
	ldr	r0, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp888, <variable>.BS.TotalPos,
	cmp	r1, lr, asl #3	@ tmp888, <variable>.BS.BsLen,
	bgt	.L3359	@,
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r5, #2	@ i.9705,
	cmp	r8, r5	@ ret.9694, i.9705
	bgt	.L3360	@,
	b	.L3359	@
.L3658:
	bl	BsSkip	@
	ldr	r1, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	mov	r0, r6	@, D.47119
	add	r3, r1, #8	@ tmp829, <variable>.BS.TotalPos,
	mov	r1, #8	@,
	cmp	r3, ip, asl #3	@ tmp829, <variable>.BS.BsLen,
	bgt	.L3359	@,
	bl	BsSkip	@
	cmp	r8, r5	@ ret.9694, i.9705
	ble	.L3359	@,
.L3360:
	ldr	r2, [r4, #572]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	mov	r1, #8	@,
	ldr	lr, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r5, r5, #1	@ tmp724, i.9705,
	add	r3, r2, r1	@ tmp823, <variable>.BS.TotalPos,
	mov	r0, r6	@, D.47119
	add	r5, r5, #1	@ i.9705, tmp724,
	cmp	r3, lr, asl #3	@ tmp823, <variable>.BS.BsLen,
	ble	.L3658	@,
	b	.L3359	@
.L3628:
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9866,
	cmp	sl, r9	@ i.9866, temp.9962
	blt	.L3624	@,
.L3565:
	ldr	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, #572]	@ prephitmp.9543, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.9895, <variable>.BS.BsLen,
	b	.L3414	@
.L3648:
	mov	r0, r6	@, D.47119
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	sl, #1	@ i.9652,
	cmp	sl, r9	@ i.9652, D.47160
	blt	.L3618	@,
.L3564:
	ldr	r2, [r4, #564]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, #572]	@ prephitmp.9556, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.9558, <variable>.BS.BsLen,
	b	.L3335	@
.L3642:
	strb	r2, [r1, #1064]	@ registered_flag, <variable>.IsRegistered
	mov	r0, r4	@, pMvcCtx
	ldr	r3, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC151	@,
	movt	r2, #:upper16:.LC151	@,
	add	lr, r3, #132	@ tmp349, <variable>.TotalUsrDatNum,
	ldr	r8, [r4, lr, asl #2]	@ D.47184, <variable>.pUsrDatArray
	str	ip, [fp, #-68]	@,
	bl	mvc_u_v	@
	strb	r0, [r8, #1065]	@, <variable>.itu_t_t35_country_code
	ldr	r8, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	ip, [fp, #-68]	@,
	add	r3, r8, #132	@ tmp353, <variable>.TotalUsrDatNum,
	ldr	r8, [r4, r3, asl #2]	@ temp.9682, <variable>.pUsrDatArray
	ldrb	r2, [r8, #1065]	@ zero_extendqisi2	@ <variable>.itu_t_t35_country_code, <variable>.itu_t_t35_country_code
	cmp	r2, #255	@ <variable>.itu_t_t35_country_code,
	movne	r1, #0	@,
	movne	sl, #3	@ prephitmp.9552,
	strneb	r1, [r8, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	beq	.L3659	@,
.L3354:
	ldr	r8, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #16	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC153	@,
	add	lr, r8, #132	@ tmp360, <variable>.TotalUsrDatNum,
	movt	r2, #:upper16:.LC153	@,
	ldr	r8, [r4, lr, asl #2]	@ temp.9684, <variable>.pUsrDatArray
	str	ip, [fp, #-68]	@,
	bl	mvc_u_v	@
	movw	ip, #1068	@,
	mov	r1, sl	@, prephitmp.9552
	strh	r0, [r8, ip]	@ movhi	@, <variable>.itu_t_t35_provider_code
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	ldr	ip, [fp, #-68]	@,
	cmp	ip, sl	@ min_len_tmp, prephitmp.9552
	beq	.L3355	@,
	ldr	r1, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r0, r1, #132	@ tmp364, <variable>.TotalUsrDatNum,
	ldr	r1, [r4, r0, asl #2]	@ prephitmp.9551, <variable>.pUsrDatArray
	b	.L3356	@
.L3645:
	rsb	r1, r9, r5	@, D.47187, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	cmp	r0, #0	@,
	bge	.L3361	@,
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11638	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3361	@
.L3629:
	mov	r0, r6	@, D.47119
	bl	BsSkip	@
	b	.L3412	@
.L3649:
	mov	r0, r6	@, D.47119
	bl	BsSkip	@
	b	.L3333	@
.L3633:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11986	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3409	@
.L3630:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #12029	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3330	@
.L3655:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11498	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3338	@
.L3656:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11445	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3329	@
.L3657:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11755	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3376	@
.L3634:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11902	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3397	@
.L3635:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11944	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3403	@
.L3640:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11839	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3388	@
.L3641:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11818	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3385	@
.L3636:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11860	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3391	@
.L3637:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11965	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3406	@
.L3638:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11881	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3394	@
.L3639:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11923	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3400	@
.L3651:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11519	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3341	@
.L3652:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11692	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3367	@
.L3653:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #12038	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3417	@
.L3654:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11797	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3382	@
.L3650:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	mov	r3, #11776	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3379	@
.L3646:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11734	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3373	@
.L3647:
	movw	r1, #:lower16:.LC145	@,
	ldr	r2, .L3660	@,
	movt	r1, #:upper16:.LC145	@,
	movw	r3, #11713	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3370	@
.L3355:
	ldr	r1, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	ip, #1056	@,
	ldr	lr, [r4, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	add	r3, r1, #132	@ tmp366, <variable>.TotalUsrDatNum,
	ldrd	r0, [lr, #56]	@ <variable>.pts, <variable>.pstExtraData,
	ldr	r2, [r4, r3, asl #2]	@ tmp368, <variable>.pUsrDatArray
	strd	r0, [r2, ip]	@ <variable>.pts, tmp368,
	mov	r2, #8	@,
	ldr	lr, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, lr, #132	@ tmp372, <variable>.TotalUsrDatNum,
	ldr	ip, [r4, r3, asl #2]	@ tmp374, <variable>.pUsrDatArray
	str	r2, [ip, #1036]	@, <variable>.from
	ldr	r0, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	ip, [r4, #84]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	lr, r0, #132	@ tmp376, <variable>.TotalUsrDatNum,
	ldr	r3, [r4, lr, asl #2]	@ tmp378, <variable>.pUsrDatArray
	str	ip, [r3, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r2, [fp, #-64]	@, %sfp
	ldr	ip, [r2, #0]	@ g_event_report.853, g_event_report
	cmp	ip, #0	@ g_event_report.853,
	beq	.L3330	@,
	ldr	lr, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #6	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #1072	@,
	add	r2, lr, #132	@ tmp381, <variable>.TotalUsrDatNum,
	ldr	r2, [r4, r2, asl #2]	@, <variable>.pUsrDatArray
	blx	ip	@ g_event_report.853
	b	.L3330	@
.L3659:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC152	@,
	movt	r2, #:upper16:.LC152	@,
	str	ip, [fp, #-68]	@,
	bl	mvc_u_v	@
	mov	sl, #4	@ prephitmp.9552,
	strb	r0, [r8, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	ldr	ip, [fp, #-68]	@,
	b	.L3354	@
.L3643:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC154	@,
	movt	r1, #:upper16:.LC154	@,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	add	r2, ip, #132	@ tmp385, <variable>.TotalUsrDatNum,
	ldr	r1, [r4, r2, asl #2]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	ldr	r1, [r4, #60]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	ip, #0	@ tmp389,
	mvn	r0, #0	@ D.47124,
	add	r3, r1, #132	@ tmp387, <variable>.TotalUsrDatNum,
	str	ip, [r4, r3, asl #2]	@ tmp389, <variable>.pUsrDatArray
	b	.L3295	@
.L3346:
	mvn	r0, #0	@ D.47124,
	b	.L3295	@
.L3661:
	.align	2
.L3660:
	.word	.LANCHOR0+356
	.fnend
	.size	MVC_DecSEI, .-MVC_DecSEI
	.align	2
	.global	MVC_ProcessSUBSPSMvcVuiExt
	.type	MVC_ProcessSUBSPSMvcVuiExt, %function
MVC_ProcessSUBSPSMvcVuiExt:
	.fnstart
.LFB1660:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r1, [fp, #-52]	@ pSubsps, %sfp
	movw	r1, #:lower16:.LC172	@,
	movt	r1, #:upper16:.LC172	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	ldr	r1, [fp, #-52]	@, %sfp
	movw	r3, #:lower16:279088	@ tmp198,
	movt	r3, #:upper16:279088	@ tmp198,
	cmp	r0, #1024	@ D.46609,
	mov	r2, r0	@ D.46609,
	str	r0, [r1, r3]	@ D.46609, <variable>.mvcvui_subseq_parameters.vui_mvc_num_ops_minus1
	bcs	.L3691	@,
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r5, #:lower16:296280	@ ivtmp.10034,
	ldr	r3, [fp, #-52]	@, %sfp
	movt	r5, #:upper16:296280	@ ivtmp.10034,
	add	r6, r0, #315392	@ ivtmp.10027,,
	add	r5, r0, r5	@ ivtmp.10034,, ivtmp.10034
	add	r6, r6, #856	@ ivtmp.10027, ivtmp.10027,
	add	r1, r3, #278528	@,,
	add	r2, r2, #1	@, D.46609,
	add	lr, r1, #496	@,,
	str	r2, [fp, #-84]	@, %sfp
	add	ip, r1, #432	@, tmp9,
	mov	r2, #0	@,
	str	lr, [fp, #-64]	@, %sfp
	str	ip, [fp, #-60]	@, %sfp
	str	r2, [fp, #-72]	@, %sfp
	str	r2, [fp, #-68]	@, %sfp
	str	r2, [fp, #-48]	@, %sfp
.L3678:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC174	@,
	movt	r2, #:upper16:.LC174	@,
	bl	mvc_u_v	@
	ldr	r2, [fp, #-52]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	ldr	ip, [fp, #-68]	@, %sfp
	add	r1, r2, r9	@,,
	ldr	r9, [fp, #-52]	@, %sfp
	add	r3, r1, #278528	@ tmp206,,
	str	r1, [fp, #-56]	@, %sfp
	add	r3, r3, #112	@ tmp206, tmp206,
	add	r2, r9, ip	@,,
	movw	r1, #:lower16:.LC175	@,
	str	r2, [fp, #-76]	@, %sfp
	movt	r1, #:upper16:.LC175	@,
	strb	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_temporal_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	r9, [fp, #-76]	@, %sfp
	add	r2, r9, #278528	@ tmp210,,
	add	ip, r2, #564	@ tmp210, tmp210,
	adds	r9, r0, #1	@ num_target_output_views, D.46619,
	str	r0, [ip, #0]	@ D.46619, <variable>.mvcvui_subseq_parameters.vui_mvc_num_target_output_views_minus1
	beq	.L3665	@,
	ldr	r3, [fp, #-48]	@, %sfp
	sub	sl, r9, #1	@ tmp350, num_target_output_views,
	ldr	lr, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	and	r8, sl, #1	@, tmp350,
	mov	r0, r3, asl #8	@ tmp212,,
	str	r8, [fp, #-80]	@, %sfp
	add	ip, r0, #278528	@ tmp213, tmp212,
	mov	r0, r4	@, pMvcCtx
	add	r7, ip, #816	@ tmp213, tmp213,
	mov	r8, #1	@ j,
	add	r7, lr, r7	@ tmp215,, tmp213
	bl	mvc_ue_v	@
	cmp	r9, r8	@ num_target_output_views, j
	add	r3, r7, #4	@ ivtmp.10007, tmp215,
	add	sl, r3, #4	@ ivtmp.10007, ivtmp.10007,
	str	r0, [r7, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	bls	.L3665	@,
	ldr	r0, [fp, #-80]	@, %sfp
	cmp	r0, #0	@,
	beq	.L3666	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	str	r3, [fp, #-88]	@,
	bl	mvc_ue_v	@
	ldr	r1, [fp, #-88]	@,
	mov	r8, #2	@ j,
	cmp	r9, r8	@ num_target_output_views, j
	add	sl, sl, #4	@ ivtmp.10007, ivtmp.10007,
	str	r0, [r1, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	bls	.L3665	@,
.L3666:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	mov	r7, sl	@ tmp353, ivtmp.10007
	bl	mvc_ue_v	@
	add	r2, r8, #1	@ tmp354, j,
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	add	r8, r2, #1	@ j, tmp354,
	str	r0, [r7], #4	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	cmp	r9, r8	@ num_target_output_views, j
	str	r0, [sl, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	add	sl, r7, #4	@ ivtmp.10007, tmp353,
	bhi	.L3666	@,
.L3665:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC177	@,
	movt	r1, #:upper16:.LC177	@,
	bl	mvc_u_1	@
	ldr	r2, [fp, #-56]	@, %sfp
	add	r3, r2, #278528	@ tmp218,,
	add	ip, r3, #368	@ tmp218, tmp218,
	uxtb	r1, r0	@ D.46624,
	strb	r1, [ip, #0]	@ D.46624, <variable>.mvcvui_subseq_parameters.vui_mvc_timing_info_present_flag
	cmp	r1, #0	@ D.46624,
	bne	.L3692	@,
.L3667:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC181	@,
	movt	r1, #:upper16:.LC181	@,
	bl	mvc_u_1	@
	ldr	ip, [fp, #-60]	@, %sfp
	uxtb	r0, r0	@ D.46635,
	strb	r0, [ip, #0]	@ D.46635, <variable>.mvcvui_subseq_parameters.vui_mvc_nal_hrd_parameters_present_flag
	cmp	r0, #0	@ D.46635,
	beq	.L3668	@,
	ldr	lr, [fp, #-52]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [fp, #-72]	@, %sfp
	movw	r1, #:lower16:.LC182	@,
	movt	r1, #:upper16:.LC182	@,
	add	r9, lr, r2	@ D.58315,,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC183	@,
	movt	r2, #:upper16:.LC183	@,
	str	r0, [r5, #0]	@, <variable>.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:296276	@ tmp235,
	movt	r3, #:upper16:296276	@ tmp235,
	mov	r1, #4	@,
	add	ip, r9, r3	@ tmp235, D.58315, tmp235
	movw	r2, #:lower16:.LC184	@,
	movt	r2, #:upper16:.LC184	@,
	strb	r0, [ip, #0]	@, <variable>.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r2, [r5, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	movw	r1, #:lower16:296277	@ tmp239,
	movt	r1, #:upper16:296277	@ tmp239,
	add	r3, r9, r1	@ tmp239, D.58315, tmp239
	cmp	r2, #31	@ <variable>.cpb_cnt_minus1,
	strb	r0, [r3, #0]	@, <variable>.cpb_size_scale
	bhi	.L3673	@,
	ldrb	r8, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3673	@,
	ldr	r1, [fp, #-48]	@, %sfp
	mov	r7, #312	@ tmp246,
	ldr	ip, [fp, #-52]	@, %sfp
	movw	sl, #:lower16:296244	@ ivtmp.10001,
	movt	sl, #:upper16:296244	@ ivtmp.10001,
	mla	r0, r7, r1, ip	@ tmp249, tmp246,,
	add	r7, r0, sl	@ ivtmp.10001, tmp249, ivtmp.10001
	mov	sl, r7	@ ivtmp.10003, ivtmp.10001
.L3671:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC186	@,
	movt	r1, #:upper16:.LC186	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC187	@,
	movt	r1, #:upper16:.LC187	@,
	str	r0, [r7, #40]	@, <variable>.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC188	@,
	movt	r1, #:upper16:.LC188	@,
	str	r0, [r7, #168]	@, <variable>.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r3, [r5, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r7, r7, #4	@ ivtmp.10001, ivtmp.10001,
	cmp	r3, r8	@ <variable>.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [sl], #1	@, <variable>.cbr_flag
	bcs	.L3671	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC189	@,
	movt	r2, #:upper16:.LC189	@,
	bl	mvc_u_v	@
	movw	ip, #:lower16:296540	@ tmp261,
	movt	ip, #:upper16:296540	@ tmp261,
	mov	r1, #5	@,
	add	r3, r9, ip	@ tmp261, D.58315, tmp261
	movw	r2, #:lower16:.LC190	@,
	movt	r2, #:upper16:.LC190	@,
	str	r0, [r3, #0]	@, <variable>.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r2, r9, #294912	@ tmp264, D.58315,
	add	ip, r2, #1632	@ tmp264, tmp264,
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC191	@,
	movt	r2, #:upper16:.LC191	@,
	str	r0, [ip, #0]	@, <variable>.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:296548	@ tmp267,
	movt	r3, #:upper16:296548	@ tmp267,
	mov	r1, #5	@,
	add	ip, r9, r3	@ tmp267, D.58315, tmp267
	movw	r2, #:lower16:.LC192	@,
	movt	r2, #:upper16:.LC192	@,
	str	r0, [ip, #0]	@, <variable>.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:296552	@ tmp270,
	movt	r1, #:upper16:296552	@ tmp270,
	add	r2, r9, r1	@ tmp270, D.58315, tmp270
	str	r0, [r2, #0]	@, <variable>.time_offset_length
.L3668:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC193	@,
	movt	r1, #:upper16:.LC193	@,
	bl	mvc_u_1	@
	ldr	r1, [fp, #-64]	@, %sfp
	uxtb	r0, r0	@ D.46666,
	strb	r0, [r1, #0]	@ D.46666, <variable>.mvcvui_subseq_parameters.vui_mvc_vcl_hrd_parameters_present_flag
	cmp	r0, #0	@ D.46666,
	bne	.L3693	@,
.L3672:
	ldr	r0, [fp, #-60]	@, %sfp
	ldrb	lr, [r0, #0]	@ zero_extendqisi2	@ tmp313, <variable>.mvcvui_subseq_parameters.vui_mvc_nal_hrd_parameters_present_flag
	cmp	lr, #0	@ tmp313,
	bne	.L3676	@,
	ldr	r1, [fp, #-64]	@, %sfp
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ tmp314, <variable>.mvcvui_subseq_parameters.vui_mvc_vcl_hrd_parameters_present_flag
	cmp	r3, #0	@ tmp314,
	beq	.L3677	@,
.L3676:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC194	@,
	movt	r1, #:upper16:.LC194	@,
	bl	mvc_u_1	@
	ldr	r3, [fp, #-56]	@, %sfp
	add	r2, r3, #278528	@ tmp316,,
	add	ip, r2, #176	@ tmp316, tmp316,
	strb	r0, [ip, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_low_delay_hrd_flag
.L3677:
	ldr	r2, [fp, #-48]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC195	@,
	movt	r1, #:upper16:.LC195	@,
	add	lr, r2, #1	@,,
	str	lr, [fp, #-48]	@, %sfp
	bl	mvc_u_1	@
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r1, [fp, #-84]	@, %sfp
	add	r6, r6, #312	@ ivtmp.10027, ivtmp.10027,
	ldr	r2, [fp, #-48]	@, %sfp
	add	r3, ip, #278528	@ tmp320,,
	ldr	ip, [fp, #-68]	@, %sfp
	add	r3, r3, #304	@ tmp320, tmp320,
	cmp	r1, r2	@,
	ldr	r2, [fp, #-64]	@, %sfp
	add	r1, ip, #4	@,,
	str	r1, [fp, #-68]	@, %sfp
	add	ip, r2, #1	@,,
	ldr	r1, [fp, #-60]	@, %sfp
	str	ip, [fp, #-64]	@, %sfp
	add	r5, r5, #312	@ ivtmp.10034, ivtmp.10034,
	ldr	ip, [fp, #-72]	@, %sfp
	add	r2, r1, #1	@,,
	str	r2, [fp, #-60]	@, %sfp
	add	r1, ip, #312	@,,
	str	r1, [fp, #-72]	@, %sfp
	strb	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_pic_struct_present_flag
	bhi	.L3678	@,
	mov	r0, #0	@ D.46614,
	b	.L3664	@
.L3692:
	mov	r1, #32	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC178	@,
	movt	r2, #:upper16:.LC178	@,
	bl	mvc_u_v	@
	ldr	r2, [fp, #-76]	@, %sfp
	add	r1, r2, #294912	@ tmp222,,
	movw	r2, #:lower16:.LC179	@,
	add	r3, r1, #820	@ tmp222, tmp222,
	movt	r2, #:upper16:.LC179	@,
	mov	r1, #32	@,
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_num_units_in_tick
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	ip, [fp, #-76]	@, %sfp
	movw	r3, #:lower16:295988	@ tmp225,
	movt	r3, #:upper16:295988	@ tmp225,
	add	r2, ip, r3	@ tmp225,, tmp225
	movw	r1, #:lower16:.LC180	@,
	movt	r1, #:upper16:.LC180	@,
	str	r0, [r2, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_time_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r3, [fp, #-56]	@, %sfp
	add	ip, r3, #278528	@ tmp228,,
	add	r1, ip, #240	@ tmp228, tmp228,
	strb	r0, [r1, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_fixed_frame_rate_flag
	b	.L3667	@
.L3693:
	ldr	lr, [fp, #-72]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC182	@,
	movt	r1, #:upper16:.LC182	@,
	add	r9, r2, lr	@ D.58303,,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC183	@,
	movt	r2, #:upper16:.LC183	@,
	str	r0, [r6, #0]	@, <variable>.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r1, r9, #315392	@ tmp276, D.58303,
	add	r3, r1, #852	@ tmp276, tmp276,
	movw	r2, #:lower16:.LC184	@,
	mov	r1, #4	@,
	movt	r2, #:upper16:.LC184	@,
	strb	r0, [r3, #0]	@, <variable>.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	ip, [r6, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	movw	r3, #:lower16:316245	@ tmp280,
	movt	r3, #:upper16:316245	@ tmp280,
	add	r2, r9, r3	@ tmp280, D.58303, tmp280
	cmp	ip, #31	@ <variable>.cpb_cnt_minus1,
	strb	r0, [r2, #0]	@, <variable>.cpb_size_scale
	bhi	.L3673	@,
	ldrb	r8, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3673	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mov	r0, #312	@ tmp287,
	ldr	ip, [fp, #-52]	@, %sfp
	mla	r7, r0, r3, ip	@ tmp290, tmp287,,
	add	sl, r7, #315392	@ ivtmp.9993, tmp290,
	add	r7, sl, #820	@ ivtmp.9993, ivtmp.9993,
	mov	sl, r7	@ ivtmp.9995, ivtmp.9993
.L3675:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC186	@,
	movt	r1, #:upper16:.LC186	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC187	@,
	movt	r1, #:upper16:.LC187	@,
	str	r0, [r7, #40]	@, <variable>.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC188	@,
	movt	r1, #:upper16:.LC188	@,
	str	r0, [r7, #168]	@, <variable>.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r1, [r6, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r7, r7, #4	@ ivtmp.9993, ivtmp.9993,
	cmp	r1, r8	@ <variable>.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [sl], #1	@, <variable>.cbr_flag
	bcs	.L3675	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC189	@,
	movt	r2, #:upper16:.LC189	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:316508	@ tmp302,
	movt	r2, #:upper16:316508	@ tmp302,
	mov	r1, #5	@,
	add	ip, r9, r2	@ tmp302, D.58303, tmp302
	movw	r2, #:lower16:.LC190	@,
	movt	r2, #:upper16:.LC190	@,
	str	r0, [ip, #0]	@, <variable>.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r1, r9, #315392	@ tmp305, D.58303,
	add	r3, r1, #1120	@ tmp305, tmp305,
	movw	r2, #:lower16:.LC191	@,
	mov	r1, #5	@,
	movt	r2, #:upper16:.LC191	@,
	str	r0, [r3, #0]	@, <variable>.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:316516	@ tmp308,
	movt	r2, #:upper16:316516	@ tmp308,
	mov	r1, #5	@,
	add	ip, r9, r2	@ tmp308, D.58303, tmp308
	movw	r2, #:lower16:.LC192	@,
	movt	r2, #:upper16:.LC192	@,
	str	r0, [ip, #0]	@, <variable>.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:316520	@ tmp311,
	movt	r3, #:upper16:316520	@ tmp311,
	add	r2, r9, r3	@ tmp311, D.58303, tmp311
	str	r0, [r2, #0]	@, <variable>.time_offset_length
	b	.L3672	@
.L3673:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC185	@,
	movt	r1, #:upper16:.LC185	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46614,
.L3664:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3691:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC173	@,
	movt	r1, #:upper16:.LC173	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46614,
	b	.L3664	@
	.fnend
	.size	MVC_ProcessSUBSPSMvcVuiExt, .-MVC_ProcessSUBSPSMvcVuiExt
	.align	2
	.global	MVC_ProcessSUBSPSMvcExt
	.type	MVC_ProcessSUBSPSMvcExt, %function
MVC_ProcessSUBSPSMvcExt:
	.fnstart
.LFB1659:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pSubsps, pSubsps
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L3752	@,
	movw	r1, #:lower16:.LC196	@,
	movt	r1, #:upper16:.LC196	@,
	bl	mvc_ue_v	@
	cmp	r0, #1	@ D.46514,
	str	r0, [r5, #4]	@ D.46514, <variable>.num_views_minus1
	bhi	.L3697	@,
	ldrb	r7, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r7, #0	@ <variable>.SeErrFlg,
	streq	r5, [fp, #-48]	@ pSubsps, %sfp
	moveq	r6, r5	@ ivtmp.10154, pSubsps
	bne	.L3697	@,
.L3699:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC198	@,
	movt	r1, #:upper16:.LC198	@,
	add	r7, r7, #1	@ i, i,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #4]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r3, r7	@ <variable>.num_views_minus1, i
	str	r0, [r6, #8]	@, <variable>.view_id
	add	r6, r6, #4	@ ivtmp.10154, ivtmp.10154,
	bcs	.L3699	@,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r2, #0	@ tmp188,
	str	r2, [r5, #24]	@ tmp188, <variable>.num_anchor_refs
	str	r2, [r5, #16]	@ tmp188, <variable>.num_anchor_refs
	beq	.L3700	@,
	mov	r6, r5	@ ivtmp.10153, pSubsps
	mov	r7, #1	@ i.10134,
	b	.L3709	@
.L3753:
	ldrb	r8, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3701	@,
	cmp	r0, #0	@ D.46524,
	addne	sl, r7, #8	@ tmp196, i.10134,
	addne	sl, r5, sl, asl #2	@, ivtmp.10114, pSubsps, tmp196,
	beq	.L3703	@,
.L3704:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC201	@,
	movt	r1, #:upper16:.LC201	@,
	add	r8, r8, #1	@ j, j,
	bl	mvc_ue_v	@
	ldr	ip, [r6, #20]	@ tmp199, <variable>.num_anchor_refs
	cmp	ip, r8	@ tmp199, j
	str	r0, [sl], #4	@, <variable>.anchor_ref
	bhi	.L3704	@,
.L3703:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC202	@,
	movt	r1, #:upper16:.LC202	@,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #4]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r3, #15	@ <variable>.num_views_minus1,
	movcc	r2, r3	@ tmp201, <variable>.num_views_minus1
	movcs	r2, #15	@ tmp201,
	cmp	r0, r2	@ D.46533, tmp201
	str	r0, [r6, #28]	@ D.46533, <variable>.num_anchor_refs
	bhi	.L3705	@,
	ldrb	sl, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	sl, #0	@ <variable>.SeErrFlg,
	bne	.L3705	@,
	cmp	r0, #0	@ D.46533,
	addne	r8, r7, #8	@ tmp204, i.10134,
	addne	r8, r5, r8, asl #2	@, ivtmp.10111, pSubsps, tmp204,
	beq	.L3707	@,
.L3708:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC204	@,
	movt	r1, #:upper16:.LC204	@,
	add	sl, sl, #1	@ j.10133, j.10133,
	bl	mvc_ue_v	@
	ldr	r3, [r6, #28]	@ tmp207, <variable>.num_anchor_refs
	cmp	r3, sl	@ tmp207, j.10133
	str	r0, [r8, #8]	@, <variable>.anchor_ref
	add	r8, r8, #4	@ ivtmp.10111, ivtmp.10111,
	bhi	.L3708	@,
	ldr	r3, [r5, #4]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
.L3707:
	add	r7, r7, #1	@ i.10134, i.10134,
	add	r6, r6, #4	@ ivtmp.10153, ivtmp.10153,
	cmp	r7, r3	@ i.10134, <variable>.num_views_minus1
	bhi	.L3700	@,
.L3709:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC199	@,
	movt	r1, #:upper16:.LC199	@,
	bl	mvc_ue_v	@
	ldr	r1, [r5, #4]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r1, #15	@ <variable>.num_views_minus1,
	movcs	r1, #15	@ tmp192,
	cmp	r0, r1	@ D.46524, tmp192
	str	r0, [r6, #20]	@ D.46524, <variable>.num_anchor_refs
	bls	.L3753	@,
.L3701:
	mov	r2, r0	@, D.46524
	movw	r1, #:lower16:.LC200	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC200	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
.L3696:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3705:
	mov	r2, r0	@, D.46533
	movw	r1, #:lower16:.LC203	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC203	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3700:
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r0, #0	@ tmp208,
	str	r0, [r5, #56]	@ tmp208, <variable>.num_non_anchor_refs
	str	r0, [r5, #48]	@ tmp208, <variable>.num_non_anchor_refs
	beq	.L3710	@,
	mov	r6, r5	@ ivtmp.10128, pSubsps
	mov	r7, #1	@ i.10143,
	b	.L3719	@
.L3754:
	ldrb	r8, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3711	@,
	cmp	r0, #0	@ D.46540,
	addne	sl, r7, #16	@ tmp216, i.10143,
	addne	sl, r5, sl, asl #2	@, ivtmp.10097, pSubsps, tmp216,
	beq	.L3713	@,
.L3714:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC207	@,
	movt	r1, #:upper16:.LC207	@,
	add	r8, r8, #1	@ j.10138, j.10138,
	bl	mvc_ue_v	@
	ldr	ip, [r6, #52]	@ tmp219, <variable>.num_non_anchor_refs
	cmp	ip, r8	@ tmp219, j.10138
	str	r0, [sl], #4	@, <variable>.non_anchor_ref
	bhi	.L3714	@,
.L3713:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #4]	@ prephitmp.10059, <variable>.num_views_minus1
	cmp	r3, #15	@ prephitmp.10059,
	movcc	r2, r3	@ tmp221, prephitmp.10059
	movcs	r2, #15	@ tmp221,
	cmp	r0, r2	@ D.46547, tmp221
	str	r0, [r6, #60]	@ D.46547, <variable>.num_non_anchor_refs
	bhi	.L3715	@,
	ldrb	sl, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	sl, #0	@ <variable>.SeErrFlg,
	bne	.L3715	@,
	cmp	r0, #0	@ D.46547,
	addne	r8, r7, #16	@ tmp224, i.10143,
	addne	r8, r5, r8, asl #2	@, ivtmp.10094, pSubsps, tmp224,
	beq	.L3717	@,
.L3718:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	add	sl, sl, #1	@ j.10142, j.10142,
	bl	mvc_ue_v	@
	ldr	r3, [r6, #60]	@ tmp227, <variable>.num_non_anchor_refs
	cmp	r3, sl	@ tmp227, j.10142
	str	r0, [r8, #8]	@, <variable>.non_anchor_ref
	add	r8, r8, #4	@ ivtmp.10094, ivtmp.10094,
	bhi	.L3718	@,
	ldr	r3, [r5, #4]	@ prephitmp.10059, <variable>.num_views_minus1
.L3717:
	add	r7, r7, #1	@ i.10143, i.10143,
	add	r6, r6, #4	@ ivtmp.10128, ivtmp.10128,
	cmp	r7, r3	@ i.10143, prephitmp.10059
	bhi	.L3710	@,
.L3719:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC205	@,
	movt	r1, #:upper16:.LC205	@,
	bl	mvc_ue_v	@
	ldr	r1, [r5, #4]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r1, #15	@ <variable>.num_views_minus1,
	movcs	r1, #15	@ tmp212,
	cmp	r0, r1	@ D.46540, tmp212
	str	r0, [r6, #52]	@ D.46540, <variable>.num_non_anchor_refs
	bls	.L3754	@,
.L3711:
	mov	r2, r0	@, D.46540
	movw	r1, #:lower16:.LC206	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC206	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3697:
	mov	r2, r0	@, D.46514
	movw	r3, #65534	@ tmp184,
	mov	r0, #1	@,
	str	r3, [r5, #80]	@ tmp184, <variable>.num_level_values_signalled_minus1
	movw	r1, #:lower16:.LC197	@,
	movt	r1, #:upper16:.LC197	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3715:
	mov	r2, r0	@, D.46547
	movw	r1, #:lower16:.LC209	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC209	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3710:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC211	@,
	movt	r1, #:upper16:.LC211	@,
	bl	mvc_ue_v	@
	add	r2, r0, #1	@, D.46554,
	str	r2, [fp, #-72]	@, %sfp
	cmp	r2, #16	@,
	str	r0, [r5, #80]	@ D.46554, <variable>.num_level_values_signalled_minus1
	bhi	.L3720	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3720	@,
	cmp	r2, #0	@,
	strne	r3, [fp, #-68]	@ <variable>.SeErrFlg, %sfp
	strne	r5, [fp, #-56]	@ pSubsps, %sfp
	beq	.L3722	@,
.L3733:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC213	@,
	movt	r2, #:upper16:.LC213	@,
	bl	mvc_u_v	@
	ldr	ip, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC214	@,
	movt	r1, #:upper16:.LC214	@,
	str	r0, [ip, #84]	@, <variable>.level_idc
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	r1, [fp, #-48]	@, %sfp
	add	r2, r0, #1	@, D.46562,
	str	r2, [fp, #-60]	@, %sfp
	cmp	r2, #64	@,
	str	r0, [r1, #148]	@ D.46562, <variable>.num_applicable_ops_minus1
	bhi	.L3723	@,
	ldrb	r6, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r6, #0	@ <variable>.SeErrFlg,
	bne	.L3723	@,
	cmp	r2, #0	@,
	beq	.L3725	@,
	ldr	r2, [fp, #-68]	@, %sfp
	ldr	r1, [fp, #-56]	@, %sfp
	add	r9, r1, r2, asl #8	@, tmp243,,,
	mov	lr, r2, asl #6	@,,
	add	r5, r9, #212	@ ivtmp.10077, tmp243,
	str	lr, [fp, #-64]	@, %sfp
.L3732:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC216	@,
	movt	r2, #:upper16:.LC216	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC217	@,
	movt	r1, #:upper16:.LC217	@,
	str	r0, [r5, #0]	@, <variable>.applicable_op_temporal_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	add	ip, r5, #4096	@ tmp247, ivtmp.10077,
	add	r9, r0, #1	@ applicable_op_num_target_views, D.46570,
	str	r0, [ip, #0]	@ D.46570, <variable>.applicable_op_num_target_views_minus1
	cmp	r9, #64	@ applicable_op_num_target_views,
	bhi	.L3726	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3726	@,
	cmp	r9, #0	@ applicable_op_num_target_views,
	beq	.L3728	@,
	ldr	r0, [fp, #-64]	@, %sfp
	sub	r3, r9, #1	@ tmp317, applicable_op_num_target_views,
	movw	r1, #:lower16:.LC219	@,
	movt	r1, #:upper16:.LC219	@,
	add	r2, r0, r6	@ tmp260,, j.10139
	mov	r0, r4	@, pMvcCtx
	and	ip, r3, #1	@, tmp317,
	ldr	r8, [fp, #-56]	@, %sfp
	mov	lr, r2, asl #8	@ tmp261, tmp260,
	str	ip, [fp, #-52]	@, %sfp
	add	r7, lr, #8384	@ tmp262, tmp261,
	bl	mvc_ue_v	@
	add	sl, r7, #16	@ tmp262, tmp262,
	mov	r7, #1	@ k,
	add	sl, r8, sl	@ tmp264,, tmp262
	cmp	r9, r7	@ applicable_op_num_target_views, k
	add	r3, sl, #4	@ ivtmp.10072, tmp264,
	add	r8, r3, #4	@ ivtmp.10072, ivtmp.10072,
	str	r0, [sl, #4]	@, <variable>.applicable_op_target_view_id
	bls	.L3728	@,
	ldr	lr, [fp, #-52]	@, %sfp
	cmp	lr, #0	@,
	beq	.L3729	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC219	@,
	movt	r1, #:upper16:.LC219	@,
	str	r3, [fp, #-76]	@,
	bl	mvc_ue_v	@
	ldr	r2, [fp, #-76]	@,
	mov	r7, #2	@ k,
	cmp	r9, r7	@ applicable_op_num_target_views, k
	add	r8, r8, #4	@ ivtmp.10072, ivtmp.10072,
	str	r0, [r2, #4]	@, <variable>.applicable_op_target_view_id
	bls	.L3728	@,
.L3729:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC219	@,
	movt	r1, #:upper16:.LC219	@,
	mov	sl, r8	@ tmp321, ivtmp.10072
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC219	@,
	movt	r1, #:upper16:.LC219	@,
	add	r7, r7, #1	@ tmp320, k,
	add	r7, r7, #1	@ k, tmp320,
	str	r0, [sl], #4	@, <variable>.applicable_op_target_view_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	cmp	r9, r7	@ applicable_op_num_target_views, k
	str	r0, [r8, #4]	@, <variable>.applicable_op_target_view_id
	add	r8, sl, #4	@ ivtmp.10072, tmp321,
	bhi	.L3729	@,
.L3728:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC220	@,
	movt	r1, #:upper16:.LC220	@,
	bl	mvc_ue_v	@
	movw	ip, #1023	@,
	add	r1, r5, #270336	@ tmp267, ivtmp.10077,
	cmp	r0, ip	@ D.46578,
	str	r0, [r1, #0]	@ D.46578, <variable>.applicable_op_num_views_minus1
	bhi	.L3730	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3730	@,
	ldr	lr, [fp, #-60]	@, %sfp
	add	r6, r6, #1	@ j.10139, j.10139,
	add	r5, r5, #4	@ ivtmp.10077, ivtmp.10077,
	cmp	lr, r6	@, j.10139
	bhi	.L3732	@,
.L3725:
	ldr	r3, [fp, #-68]	@, %sfp
	ldr	r2, [fp, #-72]	@, %sfp
	add	r0, r3, #1	@,,
	ldr	ip, [fp, #-48]	@, %sfp
	cmp	r2, r0	@,
	str	r0, [fp, #-68]	@, %sfp
	add	r1, ip, #4	@,,
	str	r1, [fp, #-48]	@, %sfp
	bhi	.L3733	@,
.L3722:
	mov	r0, #0	@ D.46513,
	b	.L3696	@
.L3730:
	mov	r2, r0	@, D.46578
	movw	r1, #:lower16:.LC221	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC221	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3726:
	ldr	r2, [fp, #-68]	@, %sfp
	movw	ip, #65534	@ tmp257,
	ldr	r5, [fp, #-56]	@ pSubsps, %sfp
	add	r1, r6, r2, asl #6	@, tmp250, j.10139,,
	mov	r2, r9	@, applicable_op_num_target_views
	add	r0, r1, #1072	@ tmp251, tmp250,
	movw	r1, #:lower16:.LC218	@,
	add	r3, r0, #4	@ tmp251, tmp251,
	movt	r1, #:upper16:.LC218	@,
	mov	r0, #1	@,
	add	lr, r5, r3, asl #2	@, tmp255, pSubsps, tmp251,
	str	ip, [lr, #4]	@ tmp257, <variable>.applicable_op_num_target_views_minus1
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3752:
	mov	r0, r5	@, pSubsps
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #10726	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3723:
	ldr	r0, [fp, #-68]	@, %sfp
	movw	r3, #65534	@ tmp240,
	ldr	r5, [fp, #-56]	@ pSubsps, %sfp
	movw	r1, #:lower16:.LC215	@,
	ldr	r2, [fp, #-60]	@, %sfp
	movt	r1, #:upper16:.LC215	@,
	add	r5, r5, r0, asl #2	@, tmp238, pSubsps,,
	mov	r0, #1	@,
	str	r3, [r5, #148]	@ tmp240, <variable>.num_applicable_ops_minus1
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
.L3720:
	ldr	r2, [fp, #-72]	@, %sfp
	movw	lr, #65534	@ tmp230,
	mov	r0, #1	@,
	str	lr, [r5, #80]	@ tmp230, <variable>.num_level_values_signalled_minus1
	movw	r1, #:lower16:.LC212	@,
	movt	r1, #:upper16:.LC212	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46513,
	b	.L3696	@
	.fnend
	.size	MVC_ProcessSUBSPSMvcExt, .-MVC_ProcessSUBSPSMvcExt
	.align	2
	.global	mvc_vui_parameters
	.type	mvc_vui_parameters, %function
mvc_vui_parameters:
	.fnstart
.LFB1652:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pVUI, pVUI
	movw	r1, #:lower16:.LC222	@,
	movt	r1, #:upper16:.LC222	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.45645,
	strb	r0, [r5, #0]	@ D.45645, <variable>.aspect_ratio_info_present_flag
	cmp	r0, #0	@ D.45645,
	streqb	r0, [r5, #15]	@ D.45645, <variable>.aspect_ratio_idc
	bne	.L3780	@,
.L3757:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC226	@,
	movt	r1, #:upper16:.LC226	@,
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.45660,
	strb	r2, [r5, #1]	@ D.45660, <variable>.overscan_info_present_flag
	cmp	r2, #0	@ D.45660,
	bne	.L3781	@,
.L3758:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC228	@,
	movt	r1, #:upper16:.LC228	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.45667,
	strb	r3, [r5, #3]	@ D.45667, <variable>.video_signal_type_present_flag
	cmp	r3, #0	@ D.45667,
	moveq	r3, #5	@ tmp229,
	streq	r3, [r5, #28]	@ tmp229, <variable>.video_format
	bne	.L3782	@,
.L3760:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC235	@,
	movt	r1, #:upper16:.LC235	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.45688,
	strb	r0, [r5, #6]	@ D.45688, <variable>.chroma_location_info_present_flag
	cmp	r0, #0	@ D.45688,
	bne	.L3783	@,
.L3761:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC238	@,
	movt	r1, #:upper16:.LC238	@,
	bl	mvc_u_1	@
	uxtb	r1, r0	@ D.45695,
	strb	r1, [r5, #8]	@ D.45695, <variable>.timing_info_present_flag
	cmp	r1, #0	@ D.45695,
	bne	.L3784	@,
.L3762:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC242	@,
	movt	r1, #:upper16:.LC242	@,
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.45715,
	strb	ip, [r5, #7]	@ D.45715, <variable>.nal_hrd_parameters_present_flag
	cmp	ip, #0	@ D.45715,
	beq	.L3763	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC244	@,
	movt	r2, #:upper16:.LC244	@,
	str	r0, [r5, #96]	@, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC245	@,
	movt	r2, #:upper16:.LC245	@,
	strb	r0, [r5, #92]	@, <variable>.nal_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r1, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	cmp	r1, #31	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #93]	@, <variable>.nal_hrd_parameters.cpb_size_scale
	bhi	.L3769	@,
	ldrb	r8, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.10202, pVUI
	moveq	r7, r5	@ ivtmp.10191, pVUI
	bne	.L3769	@,
.L3767:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC246	@,
	movt	r1, #:upper16:.LC246	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC247	@,
	movt	r1, #:upper16:.LC247	@,
	str	r0, [r6, #100]	@, <variable>.nal_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC248	@,
	movt	r1, #:upper16:.LC248	@,
	str	r0, [r6, #228]	@, <variable>.nal_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r2, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.10202, ivtmp.10202,
	cmp	r2, r8	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #60]	@, <variable>.nal_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.10191, ivtmp.10191,
	bcs	.L3767	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC249	@,
	movt	r2, #:upper16:.LC249	@,
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC250	@,
	movt	r2, #:upper16:.LC250	@,
	str	r0, [r5, #356]	@, <variable>.nal_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC251	@,
	movt	r2, #:upper16:.LC251	@,
	str	r0, [r5, #360]	@, <variable>.nal_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC252	@,
	movt	r2, #:upper16:.LC252	@,
	str	r0, [r5, #364]	@, <variable>.nal_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #368]	@, <variable>.nal_hrd_parameters.time_offset_length
.L3763:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC253	@,
	movt	r1, #:upper16:.LC253	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.45745,
	strb	r0, [r5, #10]	@ D.45745, <variable>.vcl_hrd_parameters_present_flag
	cmp	r0, #0	@ D.45745,
	bne	.L3785	@,
.L3768:
	ldrb	lr, [r5, #7]	@ zero_extendqisi2	@ <variable>.nal_hrd_parameters_present_flag, <variable>.nal_hrd_parameters_present_flag
	cmp	lr, #0	@ <variable>.nal_hrd_parameters_present_flag,
	bne	.L3772	@,
	ldrb	r1, [r5, #10]	@ zero_extendqisi2	@ <variable>.vcl_hrd_parameters_present_flag, <variable>.vcl_hrd_parameters_present_flag
	cmp	r1, #0	@ <variable>.vcl_hrd_parameters_present_flag,
	bne	.L3772	@,
.L3773:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC255	@,
	movt	r1, #:upper16:.LC255	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC256	@,
	movt	r1, #:upper16:.LC256	@,
	strb	r0, [r5, #11]	@, <variable>.pic_struct_present_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.45779,
	strb	r2, [r5, #12]	@ D.45779, <variable>.bitstream_restriction_flag
	cmp	r2, #0	@ D.45779,
	bne	.L3786	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3775	@,
.L3776:
	mov	r0, #0	@ D.45730,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3772:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC254	@,
	movt	r1, #:upper16:.LC254	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #14]	@, <variable>.low_delay_hrd_flag
	b	.L3773	@
.L3786:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC257	@,
	movt	r1, #:upper16:.LC257	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC258	@,
	movt	r1, #:upper16:.LC258	@,
	strb	r0, [r5, #13]	@, <variable>.motion_vectors_over_pic_boundaries_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC259	@,
	movt	r1, #:upper16:.LC259	@,
	str	r0, [r5, #684]	@, <variable>.max_bytes_per_pic_denom
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC260	@,
	movt	r1, #:upper16:.LC260	@,
	str	r0, [r5, #688]	@, <variable>.max_bits_per_mb_denom
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC261	@,
	movt	r1, #:upper16:.LC261	@,
	str	r0, [r5, #696]	@, <variable>.log2_max_mv_length_horizontal
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC262	@,
	movt	r1, #:upper16:.LC262	@,
	str	r0, [r5, #692]	@, <variable>.log2_max_mv_length_vertical
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC263	@,
	movt	r1, #:upper16:.LC263	@,
	str	r0, [r5, #700]	@, <variable>.num_reorder_frames
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	str	r0, [r5, #704]	@, <variable>.max_dec_frame_buffering
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3776	@,
.L3775:
	mvn	r0, #0	@ D.45730,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3780:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC223	@,
	movt	r2, #:upper16:.LC223	@,
	bl	mvc_u_v	@
	uxtb	r1, r0	@ D.45650,
	strb	r1, [r5, #15]	@ D.45650, <variable>.aspect_ratio_idc
	cmp	r1, #255	@ D.45650,
	bne	.L3757	@,
	mov	r1, #16	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC224	@,
	movt	r2, #:upper16:.LC224	@,
	bl	mvc_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC225	@,
	movt	r2, #:upper16:.LC225	@,
	str	r0, [r5, #16]	@, <variable>.sar_width
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #20]	@, <variable>.sar_height
	b	.L3757	@
.L3784:
	mov	r1, #32	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC239	@,
	movt	r2, #:upper16:.LC239	@,
	bl	mvc_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC240	@,
	movt	r2, #:upper16:.LC240	@,
	str	r0, [r5, #52]	@, <variable>.num_units_in_tick
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC241	@,
	movt	r1, #:upper16:.LC241	@,
	str	r0, [r5, #56]	@, <variable>.time_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.45704,
	strb	r2, [r5, #9]	@ D.45704, <variable>.fixed_frame_rate_flag
	cmp	r2, #1	@ D.45704,
	bne	.L3762	@,
	ldr	r1, [r5, #52]	@ D.45708, <variable>.num_units_in_tick
	cmp	r1, #0	@ D.45708,
	beq	.L3762	@,
	ldr	r0, [r5, #56]	@, <variable>.time_scale
	bl	__aeabi_uidiv	@
	mov	r3, r0, lsr #1	@ tmp244,,
	str	r3, [r4, #56]	@ tmp244, <variable>.frame_rate
	b	.L3762	@
.L3783:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC236	@,
	movt	r1, #:upper16:.LC236	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC237	@,
	movt	r1, #:upper16:.LC237	@,
	str	r0, [r5, #44]	@, <variable>.chroma_sample_loc_type_top_field
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	str	r0, [r5, #48]	@, <variable>.chroma_sample_loc_type_bottom_field
	b	.L3761	@
.L3782:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC229	@,
	movt	r2, #:upper16:.LC229	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC230	@,
	movt	r1, #:upper16:.LC230	@,
	str	r0, [r5, #28]	@, <variable>.video_format
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC231	@,
	movt	r1, #:upper16:.LC231	@,
	strb	r0, [r5, #4]	@, <variable>.video_full_range_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.45676,
	strb	ip, [r5, #5]	@ D.45676, <variable>.colour_description_present_flag
	cmp	ip, #0	@ D.45676,
	beq	.L3760	@,
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC232	@,
	movt	r2, #:upper16:.LC232	@,
	bl	mvc_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC233	@,
	movt	r2, #:upper16:.LC233	@,
	str	r0, [r5, #32]	@, <variable>.colour_primaries
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC234	@,
	movt	r2, #:upper16:.LC234	@,
	str	r0, [r5, #36]	@, <variable>.transfer_characteristics
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #40]	@, <variable>.matrix_coefficients
	b	.L3760	@
.L3781:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC227	@,
	movt	r1, #:upper16:.LC227	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.overscan_appropriate_flag
	b	.L3758	@
.L3785:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC244	@,
	movt	r2, #:upper16:.LC244	@,
	str	r0, [r5, #408]	@, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC245	@,
	movt	r2, #:upper16:.LC245	@,
	strb	r0, [r5, #404]	@, <variable>.vcl_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r3, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	cmp	r3, #31	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #405]	@, <variable>.vcl_hrd_parameters.cpb_size_scale
	bhi	.L3769	@,
	ldrb	r8, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.10183, pVUI
	moveq	r7, r5	@ ivtmp.10196, pVUI
	bne	.L3769	@,
.L3771:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC246	@,
	movt	r1, #:upper16:.LC246	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC247	@,
	movt	r1, #:upper16:.LC247	@,
	str	r0, [r6, #412]	@, <variable>.vcl_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC248	@,
	movt	r1, #:upper16:.LC248	@,
	str	r0, [r6, #540]	@, <variable>.vcl_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	ip, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.10183, ivtmp.10183,
	cmp	ip, r8	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #372]	@, <variable>.vcl_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.10196, ivtmp.10196,
	bcs	.L3771	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC249	@,
	movt	r2, #:upper16:.LC249	@,
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC250	@,
	movt	r2, #:upper16:.LC250	@,
	str	r0, [r5, #668]	@, <variable>.vcl_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC251	@,
	movt	r2, #:upper16:.LC251	@,
	str	r0, [r5, #672]	@, <variable>.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC252	@,
	movt	r2, #:upper16:.LC252	@,
	str	r0, [r5, #676]	@, <variable>.vcl_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #680]	@, <variable>.vcl_hrd_parameters.time_offset_length
	b	.L3768	@
.L3769:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC185	@,
	movt	r1, #:upper16:.LC185	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45730,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	mvc_vui_parameters, .-mvc_vui_parameters
	.align	2
	.global	MVC_ProcessSPS
	.type	MVC_ProcessSPS, %function
MVC_ProcessSPS:
	.fnstart
.LFB1655:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #48
	sub	sp, sp, #48	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pSPS, pSPS
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L3867	@,
	ldr	r3, [r5, #736]	@ D.46063, <variable>.profile_idc
	cmp	r3, #100	@ D.46063,
	cmpne	r3, #110	@, D.46063,
	movne	r2, #0	@, tmp219
	moveq	r2, #1	@, tmp219
	beq	.L3790	@,
	cmp	r3, #122	@ D.46063,
	beq	.L3790	@,
	cmp	r3, #144	@ D.46063,
	beq	.L3790	@,
	cmp	r3, #118	@ D.46063,
	beq	.L3790	@,
	cmp	r3, #128	@ D.46063,
	strneb	r2, [r5, #27]	@ tmp219, <variable>.seq_scaling_matrix_present_flag
	movne	r3, #1	@ tmp383,
	strne	r3, [r5, #748]	@ tmp383, <variable>.chroma_format_idc
	bne	.L3800	@,
.L3790:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_ue_v	@
	cmp	r0, #1	@ D.46072,
	str	r0, [r5, #748]	@ D.46072, <variable>.chroma_format_idc
	bhi	.L3792	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3792	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC266	@,
	movt	r1, #:upper16:.LC266	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3794	@,
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3795	@,
.L3794:
	movw	r1, #:lower16:.LC267	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC267	@,
	bl	dprint_vfmw	@
.L3795:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC268	@,
	movt	r1, #:upper16:.LC268	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3796	@,
	ldrb	r1, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	beq	.L3797	@,
.L3796:
	movw	r1, #:lower16:.LC269	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC269	@,
	bl	dprint_vfmw	@
.L3797:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC270	@,
	movt	r1, #:upper16:.LC270	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@,
	bne	.L3798	@,
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3798	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC272	@,
	movt	r1, #:upper16:.LC272	@,
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.46095,
	strb	ip, [r5, #27]	@ D.46095, <variable>.seq_scaling_matrix_present_flag
	cmp	ip, #1	@ D.46095,
	beq	.L3868	@,
.L3800:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC274	@,
	movt	r1, #:upper16:.LC274	@,
	bl	mvc_ue_v	@
	cmp	r0, #12	@ D.46164,
	str	r0, [r5, #2896]	@ D.46164, <variable>.log2_max_frame_num_minus4
	bhi	.L3816	@,
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3816	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC276	@,
	movt	r1, #:upper16:.LC276	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.46170,
	str	r0, [r5, #2900]	@ D.46170, <variable>.pic_order_cnt_type
	bhi	.L3818	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3818	@,
	cmp	r0, #0	@ D.46170,
	beq	.L3869	@,
	cmp	r0, #1	@ D.46170,
	beq	.L3870	@,
.L3822:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC286	@,
	movt	r1, #:upper16:.LC286	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #3944]	@, <variable>.num_ref_frames
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3871	@,
.L3823:
	mvn	r0, #0	@ D.46059,
.L3789:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L3869:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC278	@,
	movt	r1, #:upper16:.LC278	@,
	bl	mvc_ue_v	@
	cmp	r0, #12	@ D.46178,
	str	r0, [r5, #2904]	@ D.46178, <variable>.log2_max_pic_order_cnt_lsb_minus4
	bhi	.L3821	@,
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3822	@,
.L3821:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC279	@,
	movt	r1, #:upper16:.LC279	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3868:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	add	sl, r5, #752	@ D.46106, pSPS,
	bl	mvc_u_1	@
	add	r6, r5, #2672	@ D.46109, pSPS,
	cmp	r0, #1	@ temp.10295,
	str	r0, [fp, #-76]	@ temp.10295, q4x4defaultflag
	strb	r0, [r5, #6]	@ temp.10295, <variable>.seq_scaling_list_present_flag
	beq	.L3801	@,
.L3863:
	movw	lr, #:lower16:.LANCHOR2	@ tmp242,
	movt	lr, #:upper16:.LANCHOR2	@ tmp242,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp242,,,,
	stmia	r6, {r0, r1, r2, r3}	@ D.46109,,,,
.L3802:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.10299,
	str	r0, [fp, #-72]	@ temp.10299, q4x4defaultflag
	strb	r0, [r5, #7]	@ temp.10299, <variable>.seq_scaling_list_present_flag
	beq	.L3803	@,
	add	r7, r6, #16	@ tmp516, D.46109,
	mov	r1, r6	@, D.46109
	mov	r2, #16	@,
	mov	r0, r7	@, tmp516
	bl	memcpy	@
.L3804:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.10307,
	str	r0, [fp, #-68]	@ temp.10307, q4x4defaultflag
	strb	r0, [r5, #8]	@ temp.10307, <variable>.seq_scaling_list_present_flag
	beq	.L3805	@,
	mov	r1, r7	@, tmp516
	add	r0, r6, #32	@, D.46109,
	mov	r2, #16	@,
	bl	memcpy	@
.L3806:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.10316,
	str	r0, [fp, #-64]	@ temp.10316, q4x4defaultflag
	strb	r0, [r5, #9]	@ temp.10316, <variable>.seq_scaling_list_present_flag
	beq	.L3807	@,
	add	r7, r6, #48	@ tmp519, D.46109,
	ldr	r1, .L3880	@,
	mov	r2, #16	@,
	mov	r0, r7	@, tmp519
	bl	memcpy	@
.L3808:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.10324,
	str	r0, [fp, #-60]	@ temp.10324, q4x4defaultflag
	strb	r0, [r5, #10]	@ temp.10324, <variable>.seq_scaling_list_present_flag
	beq	.L3809	@,
	add	r8, r6, #64	@ tmp521, D.46109,
	mov	r1, r7	@, tmp519
	mov	r2, #16	@,
	mov	r0, r8	@, tmp521
	bl	memcpy	@
.L3810:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ D.46100,
	str	r0, [fp, #-56]	@ D.46100, q4x4defaultflag
	strb	r0, [r5, #11]	@ D.46100, <variable>.seq_scaling_list_present_flag
	beq	.L3872	@,
	add	r0, r6, #80	@, D.46109,
	mov	r1, r8	@, tmp521
	mov	r2, #16	@,
	bl	memcpy	@
.L3812:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	add	r8, r5, #1136	@ D.46143, pSPS,
	bl	mvc_u_1	@
	add	r6, r5, #2768	@ D.46146, pSPS,
	cmp	r0, #1	@ temp.10333,
	str	r0, [fp, #-44]	@ temp.10333, q8x8defaultflag
	strb	r0, [r5, #12]	@ temp.10333, <variable>.seq_scaling_list_present_flag
	beq	.L3813	@,
	ldr	ip, .L3880+4	@ tmp352,
	mov	lr, r6	@ D.46146, D.46146
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp354,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ D.46146,,,,
	mov	r7, lr	@ D.46146, D.46146
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp524,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.46146,,,,
	mov	lr, r7	@ D.46146, D.46146
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp526,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ D.46146,,,,
	ldmia	ip, {r0, r1, r2, r3}	@ tmp526,,,,
	stmia	lr, {r0, r1, r2, r3}	@ D.46146,,,,
.L3814:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ D.46136,
	str	r0, [fp, #-40]	@ D.46136, q8x8defaultflag
	strb	r0, [r5, #13]	@ D.46136, <variable>.seq_scaling_list_present_flag
	beq	.L3873	@,
	add	r0, r6, #64	@, D.46146,
	ldr	r1, .L3880+8	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3800	@
.L3792:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC265	@,
	movt	r1, #:upper16:.LC265	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3816:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC275	@,
	movt	r1, #:upper16:.LC275	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3798:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC271	@,
	movt	r1, #:upper16:.LC271	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3870:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC280	@,
	movt	r1, #:upper16:.LC280	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #18]	@, <variable>.delta_pic_order_always_zero_flag
	ldrb	ip, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC281	@,
	movt	r1, #:upper16:.LC281	@,
	bl	mvc_se_v	@
	str	r0, [r5, #2908]	@, <variable>.offset_for_non_ref_pic
	ldrb	r1, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC282	@,
	movt	r1, #:upper16:.LC282	@,
	bl	mvc_se_v	@
	str	r0, [r5, #2912]	@, <variable>.offset_for_top_to_bottom_field
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC283	@,
	movt	r1, #:upper16:.LC283	@,
	bl	mvc_ue_v	@
	cmp	r0, #255	@ prephitmp.10229,
	mov	r3, r0	@ prephitmp.10229,
	str	r0, [r5, #2916]	@ prephitmp.10229, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bhi	.L3824	@,
	ldrb	r7, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r7, #0	@ <variable>.SeErrFlg,
	addeq	r6, r5, #2912	@ ivtmp.10246, pSPS,
	addeq	r6, r6, #8	@ ivtmp.10246, ivtmp.10246,
	beq	.L3825	@,
	b	.L3824	@
.L3874:
	ldr	r3, [r5, #2916]	@ prephitmp.10229, <variable>.num_ref_frames_in_pic_order_cnt_cycle
.L3825:
	cmp	r7, r3	@ i, prephitmp.10229
	movw	r1, #:lower16:.LC285	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC285	@,
	add	r7, r7, #1	@ i, i,
	bcs	.L3822	@,
	bl	mvc_se_v	@
	str	r0, [r6], #4	@, <variable>.offset_for_ref_frame
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3874	@,
	b	.L3823	@
.L3871:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC287	@,
	movt	r1, #:upper16:.LC287	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #19]	@, <variable>.gaps_in_frame_num_value_allowed_flag
	ldrb	ip, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC288	@,
	movt	r1, #:upper16:.LC288	@,
	movw	r6, #509	@ tmp416,
	bl	mvc_ue_v	@
	sub	r1, r0, #1	@ tmp415, D.46215,
	mov	r2, r0	@ D.46215,
	cmp	r1, r6	@ tmp415, tmp416
	str	r0, [r5, #3948]	@ D.46215, <variable>.pic_width_in_mbs_minus1
	bhi	.L3827	@,
	ldrb	lr, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L3828	@,
.L3827:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC289	@,
	movt	r1, #:upper16:.LC289	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3818:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC277	@,
	movt	r1, #:upper16:.LC277	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3873:
	add	r6, r6, #64	@ tmp520, D.46146,
	add	r1, r8, #256	@, D.46143,
	mov	r0, r4	@, pMvcCtx
	mov	r3, #64	@,
	mov	r2, r6	@, tmp520
	sub	lr, fp, #40	@ tmp367,,
	str	lr, [sp, #0]	@ tmp367,
	bl	MVC_Scaling_List	@
	ldr	r1, [fp, #-40]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r1, #1	@ q8x8defaultflag,
	bne	.L3800	@,
	mov	r0, r6	@, tmp520
	ldr	r1, .L3880+8	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3800	@
.L3813:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r8	@, D.46143
	mov	r2, r6	@, D.46146
	mov	r3, #64	@,
	sub	ip, fp, #44	@ tmp355,,
	str	ip, [sp, #0]	@ tmp355,
	bl	MVC_Scaling_List	@
	ldr	r0, [fp, #-44]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r0, #1	@ q8x8defaultflag,
	bne	.L3814	@,
	ldr	lr, .L3880+4	@ tmp358,
	mov	ip, r6	@ D.46146, D.46146
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp360,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.46146,,,,
	mov	r7, ip	@ D.46146, D.46146
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp528,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.46146,,,,
	mov	ip, r7	@ D.46146, D.46146
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp530,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.46146,,,,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp530,,,,
	stmia	ip, {r0, r1, r2, r3}	@ D.46146,,,,
	b	.L3814	@
.L3872:
	add	r6, r6, #80	@ tmp522, D.46109,
	mov	r3, #16	@,
	add	r1, sl, #320	@, D.46106,
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, tmp522
	sub	r8, fp, #56	@ tmp333,,
	str	r8, [sp, #0]	@ tmp333,
	bl	MVC_Scaling_List	@
	ldr	r3, [fp, #-56]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r3, #1	@ q4x4defaultflag,
	bne	.L3812	@,
	mov	r0, r6	@, tmp522
	ldr	r1, .L3880	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3812	@
.L3809:
	add	r8, r6, #64	@ tmp521, D.46109,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #256	@, D.46106,
	mov	r3, #16	@,
	mov	r2, r8	@, tmp521
	sub	ip, fp, #60	@ tmp318,,
	str	ip, [sp, #0]	@ tmp318,
	bl	MVC_Scaling_List	@
	ldr	r2, [fp, #-60]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r2, #1	@ q4x4defaultflag,
	bne	.L3810	@,
	mov	r0, r8	@, tmp521
	ldr	r1, .L3880	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3810	@
.L3807:
	add	r7, r6, #48	@ tmp519, D.46109,
	add	r1, sl, #192	@, D.46106,
	mov	r0, r4	@, pMvcCtx
	mov	r3, #16	@,
	mov	r2, r7	@, tmp519
	sub	lr, fp, #64	@ tmp297,,
	str	lr, [sp, #0]	@ tmp297,
	bl	MVC_Scaling_List	@
	ldr	r1, [fp, #-64]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r1, #1	@ q4x4defaultflag,
	bne	.L3808	@,
	mov	r0, r7	@, tmp519
	ldr	r1, .L3880	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3808	@
.L3805:
	add	r7, r6, #32	@ tmp518, D.46109,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #128	@, D.46106,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp518
	sub	r8, fp, #68	@ tmp276,,
	str	r8, [sp, #0]	@ tmp276,
	bl	MVC_Scaling_List	@
	ldr	r0, [fp, #-68]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r0, #1	@ q4x4defaultflag,
	bne	.L3806	@,
	mov	r0, r7	@, tmp518
	movw	r1, #:lower16:.LANCHOR2	@,
	mov	r2, #16	@,
	movt	r1, #:upper16:.LANCHOR2	@,
	bl	memcpy	@
	b	.L3806	@
.L3803:
	add	r7, r6, #16	@ tmp516, D.46109,
	mov	r3, #16	@,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #64	@, D.46106,
	mov	r2, r7	@, tmp516
	sub	ip, fp, #72	@ tmp256,,
	str	ip, [sp, #0]	@ tmp256,
	bl	MVC_Scaling_List	@
	ldr	r3, [fp, #-72]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r3, #1	@ q4x4defaultflag,
	bne	.L3804	@,
	movw	r1, #:lower16:.LANCHOR2	@,
	mov	r0, r7	@, tmp516
	movt	r1, #:upper16:.LANCHOR2	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3804	@
.L3801:
	mov	r0, r4	@, pMvcCtx
	mov	r1, sl	@, D.46106
	mov	r2, r6	@, D.46109
	mov	r3, #16	@,
	sub	r8, fp, #76	@ tmp240,,
	str	r8, [sp, #0]	@ tmp240,
	bl	MVC_Scaling_List	@
	ldr	r7, [fp, #-76]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r7, #1	@ q4x4defaultflag,
	bne	.L3802	@,
	b	.L3863	@
.L3867:
	mov	r0, r5	@, pSPS
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #10095	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3828:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC290	@,
	movt	r1, #:upper16:.LC290	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #3952]	@, <variable>.pic_height_in_map_units_minus1
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC291	@,
	movt	r1, #:upper16:.LC291	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.46226,
	strb	r0, [r5, #20]	@ D.46226, <variable>.frame_mbs_only_flag
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	cmp	r0, #0	@ D.46226,
	bne	.L3829	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC292	@,
	movt	r1, #:upper16:.LC292	@,
	bl	mvc_u_1	@
	ldr	r3, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	r3, r3, #1	@ prephitmp.10223, <variable>.pic_height_in_map_units_minus1,
	cmp	r3, #255	@ prephitmp.10223,
	strb	r0, [r5, #21]	@, <variable>.mb_adaptive_frame_field_flag
	bhi	.L3860	@,
	ldr	r8, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	r8, r8, #1	@ prephitmp.10277, <variable>.pic_width_in_mbs_minus1,
	cmp	r8, #3	@ prephitmp.10277,
	bls	.L3860	@,
	cmp	r3, #1	@ prephitmp.10223,
	movhi	sl, #2	@ temp,
	bls	.L3860	@,
.L3861:
	mul	lr, sl, r3	@ tmp430, temp, prephitmp.10223
	mov	r8, r8, asl #4	@ PicWidthInSmp, prephitmp.10277,
	mov	r0, #3	@ tmp433,
	mov	r7, lr, asl #4	@ PicHeightInSmp, tmp430,
	mul	r1, r8, r7	@ tmp431, PicWidthInSmp, PicHeightInSmp
	mov	ip, r1, lsr #1	@ tmp432, tmp431,
	mul	r1, r0, ip	@ pic_size, tmp433, tmp432
	cmp	r1, #100663296	@ pic_size,
	bhi	.L3875	@,
	ldr	r2, [r5, #740]	@ D.46260, <variable>.level_idc
	sub	r3, r2, #10	@ tmp435, D.46260,
	cmp	r3, #31	@ tmp435,
	ldrls	pc, [pc, r3, asl #2]	@ tmp435
	b	.L3833	@
.L3842:
	.word	.L3834
	.word	.L3835
	.word	.L3836
	.word	.L3836
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3836
	.word	.L3837
	.word	.L3838
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3838
	.word	.L3839
	.word	.L3840
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3833
	.word	.L3841
	.word	.L3841
.L3824:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC284	@,
	movt	r1, #:upper16:.LC284	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3840:
	mov	r0, #7864320	@ size,
.L3843:
	bl	__aeabi_uidiv	@
	movw	r1, #:lower16:.LC296	@,
	movt	r1, #:upper16:.LC296	@,
	cmp	r0, #16	@,
	movcc	r6, r0	@ size.10252,
	movcs	r6, #16	@ size.10252,
	mov	r0, #21	@,
	mov	r2, r6	@, size.10252
	bl	dprint_vfmw	@
	ldr	r2, [r5, #3944]	@ D.46267, <variable>.num_ref_frames
	cmp	r2, r6	@ D.46267, size.10252
	bhi	.L3844	@,
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3845	@,
.L3844:
	mov	r3, r6	@, size.10252
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC297	@,
	movt	r1, #:upper16:.LC297	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #3944]	@ temp.10282, <variable>.num_ref_frames
	cmp	r3, #16	@ temp.10282,
	bhi	.L3864	@,
	cmp	r6, r3	@ size.10252, temp.10282
	movcc	r6, r3	@ size.10252, temp.10282
.L3864:
	str	r6, [r5, #3944]	@ size.10252, <variable>.num_ref_frames
.L3845:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC298	@,
	movt	r1, #:upper16:.LC298	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #22]	@, <variable>.direct_8x8_inference_flag
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC299	@,
	movt	r1, #:upper16:.LC299	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.46278,
	strb	r0, [r5, #23]	@ D.46278, <variable>.frame_cropping_flag
	ldrb	ip, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	cmp	r0, #0	@ D.46278,
	bne	.L3876	@,
.L3847:
	mov	r3, r8, lsr #1	@ tmp475, PicWidthInSmp,
	mov	r0, r7, lsr #1	@ tmp476, PicHeightInSmp,
	str	r8, [r5, #3976]	@ PicWidthInSmp, <variable>.disp_width
	str	r3, [r5, #3984]	@ tmp475, <variable>.disp_center_x
	str	r0, [r5, #3988]	@ tmp476, <variable>.disp_center_y
	str	r7, [r5, #3980]	@ PicHeightInSmp, <variable>.disp_height
.L3849:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC304	@,
	movt	r1, #:upper16:.LC304	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.46316,
	strb	r3, [r5, #24]	@ D.46316, <variable>.vui_parameters_present_flag
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3823	@,
	cmp	r3, #0	@ D.46316,
	add	r2, r2, #2	@ tmp480, tmp480,
	str	r2, [r5, #68]	@ tmp480, <variable>.vui_seq_parameters.matrix_coefficients
	bne	.L3877	@,
	mov	r0, r3	@ prephitmp.10227, D.46316
	mov	ip, #5	@ tmp487,
	strb	r3, [r5, #43]	@ D.46316, <variable>.vui_seq_parameters.aspect_ratio_idc
	str	ip, [r5, #56]	@ tmp487, <variable>.vui_seq_parameters.video_format
.L3852:
	str	r7, [sp, #0]	@ PicHeightInSmp,
	mov	r3, r8	@, PicWidthInSmp
	ldr	r1, [r5, #44]	@, <variable>.vui_seq_parameters.sar_width
	ldr	r2, [r5, #48]	@, <variable>.vui_seq_parameters.sar_height
	bl	MVC_GetDar	@
	ldr	r3, [r5, #3944]	@ temp.10290, <variable>.num_ref_frames
	cmp	r3, #0	@ temp.10290,
	str	r0, [r5, #52]	@, <variable>.vui_seq_parameters.aspect_ratio
	beq	.L3856	@,
	cmp	r6, r3	@ size.10252, temp.10290
	movcs	r6, r3	@ size.10252, temp.10290
.L3856:
	ldr	r2, [r4, #224]	@ D.46348, <variable>.pstExtraData
	cmp	r6, #16	@ size.10252,
	movcs	r6, #16	@ size.10253,
	ldr	lr, [r2, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	lr, #25	@ <variable>.eCapLevel,
	beq	.L3878	@,
.L3857:
	cmp	r7, #1920	@ PicHeightInSmp,
	bcc	.L3859	@,
	cmp	r6, #4	@ size.10253,
	movcs	r6, #4	@ size.10253,
.L3859:
	add	r6, r6, #1	@ tmp508, size.10253,
	mov	r0, #0	@ D.46059,
	str	r6, [r5, #3972]	@ tmp508, <variable>.dpb_size_plus1
	b	.L3789	@
.L3878:
	ldr	r0, [r2, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r0, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3857	@,
	ldr	r1, [r2, #768]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r3, [r2, #744]	@ MaxWidth, <variable>.stChanOption.s32MaxWidth
	cmp	r6, r1	@ size.10253, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r0, [r2, #748]	@ MaxHeight, <variable>.stChanOption.s32MaxHeight
	bhi	.L3879	@,
	cmp	r3, r8	@ MaxWidth, PicWidthInSmp
	cmpcs	r0, r7	@, MaxHeight, PicHeightInSmp
	bcs	.L3857	@,
	movw	r2, #:lower16:g_event_report	@ tmp505,
	movt	r2, #:upper16:g_event_report	@ tmp505,
	ldr	ip, [r2, #0]	@ g_event_report.10293, g_event_report
	cmp	ip, #0	@ g_event_report.10293,
	beq	.L3823	@,
	strh	r3, [fp, #-48]	@ movhi	@ MaxWidth, para
	mov	r1, #107	@,
	strh	r8, [fp, #-52]	@ movhi	@ PicWidthInSmp, para
	sub	r2, fp, #52	@,,
	strh	r7, [fp, #-50]	@ movhi	@ PicHeightInSmp, para
	mov	r3, #8	@,
	strh	r0, [fp, #-46]	@ movhi	@ MaxHeight, para
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	blx	ip	@ g_event_report.10293
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3877:
	mov	r0, r4	@, pMvcCtx
	add	r1, r5, #28	@, pSPS,
	bl	mvc_vui_parameters	@
	cmp	r0, #0	@,
	bne	.L3866	@,
	ldrb	r1, [r5, #40]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.bitstream_restriction_flag, <variable>.vui_seq_parameters.bitstream_restriction_flag
	cmp	r1, #0	@ <variable>.vui_seq_parameters.bitstream_restriction_flag,
	beq	.L3866	@,
	ldr	r2, [r5, #732]	@ D.46332, <variable>.vui_seq_parameters.max_dec_frame_buffering
	cmp	r6, r2	@ size.10252, D.46332
	bcc	.L3854	@,
	cmp	r2, #0	@ D.46332,
	bne	.L3855	@,
.L3854:
	movw	r1, #:lower16:.LC305	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC305	@,
	mov	r3, r6	@, size.10252
	bl	dprint_vfmw	@
.L3866:
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.10227, <variable>.vui_seq_parameters.aspect_ratio_idc
	b	.L3852	@
.L3855:
	ldr	r6, [r5, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.10227, <variable>.vui_seq_parameters.aspect_ratio_idc
	cmp	r2, r6	@ D.46332, <variable>.num_ref_frames
	movcs	r6, r2	@ size.10252, D.46332
	b	.L3852	@
.L3876:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC300	@,
	movt	r1, #:upper16:.LC300	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC301	@,
	movt	r1, #:upper16:.LC301	@,
	str	r0, [r5, #3956]	@, <variable>.frame_crop_left_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC302	@,
	movt	r1, #:upper16:.LC302	@,
	str	r0, [r5, #3960]	@, <variable>.frame_crop_right_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC303	@,
	movt	r1, #:upper16:.LC303	@,
	str	r0, [r5, #3964]	@, <variable>.frame_crop_top_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	ip, [r5, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r1, [r5, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	mov	r3, sl, asl #1	@ tmp460, temp,
	ldr	r2, [r5, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	mov	ip, ip, asl #1	@ tmp457, <variable>.frame_crop_top_offset,
	mov	r1, r1, asl #1	@ D.46288, <variable>.frame_crop_left_offset,
	mul	sl, sl, ip	@ D.46293, temp, tmp457
	rsb	ip, r1, r8	@ tmp454, D.46288, PicWidthInSmp
	sub	r2, ip, r2, asl #1	@ D.46291, tmp454, <variable>.frame_crop_right_offset,
	rsb	ip, sl, r7	@ tmp459, D.46293, PicHeightInSmp
	mls	r3, r0, r3, ip	@ D.46297, D.46287, tmp460, tmp459
	str	r0, [r5, #3968]	@ D.46287, <variable>.frame_crop_bottom_offset
	cmp	r2, #0	@ D.46291,
	cmpgt	r3, #0	@, D.46297,
	ble	.L3847	@,
	add	lr, r1, r2, lsr #1	@, tmp472, D.46288, D.46291,
	add	sl, sl, r3, lsr #1	@, tmp474, D.46293, D.46297,
	str	lr, [r5, #3984]	@ tmp472, <variable>.disp_center_x
	str	sl, [r5, #3988]	@ tmp474, <variable>.disp_center_y
	str	r2, [r5, #3976]	@ D.46291, <variable>.disp_width
	str	r3, [r5, #3980]	@ D.46297, <variable>.disp_height
	b	.L3849	@
.L3879:
	movw	r3, #:lower16:g_event_report	@ tmp491,
	movt	r3, #:upper16:g_event_report	@ tmp491,
	ldr	ip, [r3, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L3823	@,
	str	r6, [fp, #-52]	@ size.10253, para
	mov	r1, #106	@,
	ldr	lr, [r2, #768]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	mov	r3, #8	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	sub	r2, fp, #52	@,,
	str	lr, [fp, #-48]	@ <variable>.stChanOption.s32MaxRefFrameNum, para
	blx	ip	@ g_event_report
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3837:
	movw	r0, #:lower16:1824768	@ size,
	movt	r0, #:upper16:1824768	@ size,
	b	.L3843	@
.L3838:
	movw	r0, #:lower16:3110400	@ size,
	movt	r0, #:upper16:3110400	@ size,
	b	.L3843	@
.L3841:
	mov	r0, #12582912	@ size,
	b	.L3843	@
.L3839:
	movw	r0, #:lower16:6912000	@ size,
	movt	r0, #:upper16:6912000	@ size,
	b	.L3843	@
.L3836:
	movw	r0, #:lower16:912384	@ size,
	movt	r0, #:upper16:912384	@ size,
	b	.L3843	@
.L3835:
	movw	r0, #:lower16:345600	@ size,
	movt	r0, #:upper16:345600	@ size,
	b	.L3843	@
.L3834:
	movw	r0, #:lower16:152064	@ size,
	movt	r0, #:upper16:152064	@ size,
	b	.L3843	@
.L3833:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC295	@,
	movt	r1, #:upper16:.LC295	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3875:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC294	@,
	movt	r1, #:upper16:.LC294	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3860:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC293	@,
	movt	r1, #:upper16:.LC293	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46059,
	b	.L3789	@
.L3829:
	ldr	r3, [r5, #3952]	@ temp.10278, <variable>.pic_height_in_map_units_minus1
	strb	r2, [r5, #21]	@ <variable>.SeErrFlg, <variable>.mb_adaptive_frame_field_flag
	sub	ip, r3, #1	@ tmp512, temp.10278,
	cmp	ip, r6	@ tmp512, tmp416
	bhi	.L3860	@,
	ldr	r7, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	mov	sl, #1	@ temp,
	add	r3, r3, #1	@ prephitmp.10223, temp.10278,
	add	r8, r7, sl	@ prephitmp.10277, <variable>.pic_width_in_mbs_minus1,
	b	.L3861	@
.L3881:
	.align	2
.L3880:
	.word	.LANCHOR2+16
	.word	.LANCHOR2+32
	.word	.LANCHOR2+96
	.fnend
	.size	MVC_ProcessSPS, .-MVC_ProcessSPS
	.align	2
	.global	MVC_DecSubSPS
	.type	MVC_DecSubSPS, %function
MVC_DecSubSPS:
	.fnstart
.LFB1661:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC306	@,
	movt	r2, #:upper16:.LC306	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC307	@,
	movt	r1, #:upper16:.LC307	@,
	mov	r5, r0	@ D.46726,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC308	@,
	movt	r1, #:upper16:.LC308	@,
	mov	r9, r0	@ constrained_set0_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC309	@,
	movt	r1, #:upper16:.LC309	@,
	str	r0, [fp, #-60]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC310	@,
	movt	r1, #:upper16:.LC310	@,
	str	r0, [fp, #-56]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC311	@,
	movt	r1, #:upper16:.LC311	@,
	str	r0, [fp, #-52]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC312	@,
	movt	r1, #:upper16:.LC312	@,
	str	r0, [fp, #-48]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC313	@,
	movt	r2, #:upper16:.LC313	@,
	mov	sl, r0	@ constrained_set5_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC314	@,
	movt	r2, #:upper16:.LC314	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC315	@,
	movt	r1, #:upper16:.LC315	@,
	mov	r7, r0	@ D.46733,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	mov	r6, r0	@ seq_parameter_set_id,
	bne	.L3897	@,
	cmp	r0, #31	@ seq_parameter_set_id,
	bhi	.L3898	@,
	sub	r0, r5, #66	@ tmp165, D.46726,
	cmp	r0, #78	@ tmp165,
	ldrls	pc, [pc, r0, asl #2]	@ tmp165
	b	.L3886	@
.L3891:
	.word	.L3887
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3888
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3889
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3888
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3890
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3888
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3890
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3888
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3886
	.word	.L3890
.L3889:
	movw	r1, #:lower16:.LC318	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC318	@,
	bl	dprint_vfmw	@
.L3888:
	cmp	r7, #41	@ level_idc,
	mov	r2, r7	@ level_idc, D.46733
	bhi	.L3899	@,
.L3892:
	movw	r8, #:lower16:336180	@ tmp173,
	movt	r8, #:upper16:336180	@ tmp173,
	movw	ip, #:lower16:288392	@ tmp221,
	movt	ip, #:upper16:288392	@ tmp221,
	mul	r8, r8, r6	@ tmp172, tmp173, seq_parameter_set_id
	mov	r0, r4	@, pMvcCtx
	add	r7, r8, r4	@ tmp174, tmp172, pMvcCtx
	add	lr, r7, #286720	@ tmp175, tmp174,
	add	ip, r7, ip	@ tmp221, tmp174, tmp221
	add	r3, lr, #928	@ tmp180, tmp180,
	add	lr, lr, #1664	@ tmp175, tmp175,
	add	r1, r7, #286720	@, tmp226,
	strb	sl, [r3, #9]	@ constrained_set5_flag, <variable>.sps.constrained_set5_flag
	add	r1, r1, #932	@,,
	str	r2, [lr, #8]	@ level_idc, <variable>.sps.level_idc
	strb	r9, [r3, #4]	@ constrained_set0_flag, <variable>.sps.constrained_set0_flag
	ldr	sl, [fp, #-60]	@, %sfp
	strb	sl, [r3, #5]	@, <variable>.sps.constrained_set1_flag
	ldr	r2, [fp, #-56]	@, %sfp
	strb	r2, [r3, #6]	@, <variable>.sps.constrained_set2_flag
	ldr	sl, [fp, #-52]	@, %sfp
	strb	sl, [r3, #7]	@, <variable>.sps.constrained_set3_flag
	ldr	r2, [fp, #-48]	@, %sfp
	str	r6, [ip, #4]	@ seq_parameter_set_id, <variable>.sps.seq_parameter_set_id
	str	r5, [lr, #4]	@ D.46726, <variable>.sps.profile_idc
	strb	r2, [r3, #8]	@, <variable>.sps.constrained_set4_flag
	bl	MVC_ProcessSPS	@
	subs	sl, r0, #0	@ D.46767,
	bne	.L3900	@,
	add	r3, r7, #286720	@ tmp247, tmp174,
	cmp	r5, #118	@ D.46726,
	cmpne	r5, #128	@, D.46726,
	add	ip, r3, #952	@ tmp247, tmp247,
	mov	r5, #1	@ tmp248,
	strb	r5, [ip, #5]	@ tmp248, <variable>.sps.is_valid
	beq	.L3901	@,
.L3894:
	movw	r3, #:lower16:336180	@ tmp293,
	movt	r3, #:upper16:336180	@ tmp293,
	mov	r0, #0	@ D.46738,
	mov	r1, #1	@ tmp296,
	mla	ip, r3, r6, r4	@ tmp294, tmp293, seq_parameter_set_id, pMvcCtx
	add	r4, ip, #12992	@ tmp295, tmp294,
	add	r4, r4, #8	@ tmp295, tmp295,
	strb	r1, [r4, #4]	@ tmp296, <variable>.is_valid
.L3884:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3898:
	movw	r1, #:lower16:.LC316	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC316	@,
	bl	dprint_vfmw	@
.L3897:
	mvn	r0, #0	@ D.46738,
	b	.L3884	@
.L3887:
	movw	r1, #:lower16:.LC317	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC317	@,
	bl	dprint_vfmw	@
	cmp	r7, #41	@ level_idc,
	mov	r2, r7	@ level_idc, D.46733
	bls	.L3892	@,
.L3899:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC321	@,
	movt	r1, #:upper16:.LC321	@,
	bl	dprint_vfmw	@
	mov	r2, #41	@ level_idc,
	b	.L3892	@
.L3890:
	movw	r1, #:lower16:.LC319	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC319	@,
	bl	dprint_vfmw	@
	b	.L3888	@
.L3886:
	mov	r2, r5	@, D.46726
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC320	@,
	movt	r1, #:upper16:.LC320	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46738,
	b	.L3884	@
.L3901:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC323	@,
	movt	r1, #:upper16:.LC323	@,
	add	r9, r7, #12992	@ tmp262, tmp174,
	bl	mvc_u_1	@
	add	r2, r4, r8	@ tmp268, pMvcCtx, tmp172
	add	r8, r2, #12992	@ D.46780, tmp268,
	add	r9, r9, #8	@ tmp262, tmp262,
	add	r8, r8, #12	@ D.46780, D.46780,
	mov	r1, r8	@, D.46780
	strb	r0, [r9, #5]	@, <variable>.bit_equal_to_one
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSUBSPSMvcExt	@
	cmp	r0, #0	@
	str	r0, [fp, #-48]	@, %sfp
	bne	.L3902	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC325	@,
	movt	r1, #:upper16:.LC325	@,
	add	r7, r7, #286720	@ tmp282, tmp174,
	bl	mvc_u_1	@
	add	r7, r7, #920	@ tmp282, tmp282,
	cmp	r0, #0	@ D.46785,
	str	r0, [r7, #8]	@ D.46785, <variable>.mvc_vui_parameters_present_flag
	beq	.L3894	@,
	mov	r1, r8	@, D.46780
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSUBSPSMvcVuiExt	@
	cmp	r0, #0	@,
	beq	.L3894	@,
	mov	r0, r5	@, tmp248
	movw	r1, #:lower16:.LC326	@,
	movt	r1, #:upper16:.LC326	@,
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-48]	@, %sfp
	strb	r0, [r9, #4]	@, <variable>.is_valid
	mvn	r0, #0	@ D.46738,
	b	.L3884	@
.L3900:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC322	@,
	movt	r1, #:upper16:.LC322	@,
	bl	dprint_vfmw	@
	add	r1, r7, #286720	@ tmp240, tmp174,
	add	r7, r7, #12992	@ tmp233, tmp174,
	add	r0, r1, #952	@ tmp240, tmp240,
	add	r7, r7, #8	@ tmp233, tmp233,
	mov	r2, #0	@ tmp234,
	strb	r2, [r0, #5]	@ tmp234, <variable>.sps.is_valid
	mvn	r0, #0	@ D.46738,
	strb	r2, [r7, #4]	@ tmp234, <variable>.is_valid
	b	.L3884	@
.L3902:
	mov	r0, r5	@, tmp248
	movw	r1, #:lower16:.LC324	@,
	movt	r1, #:upper16:.LC324	@,
	bl	dprint_vfmw	@
	strb	sl, [r9, #4]	@ D.46767, <variable>.is_valid
	mvn	r0, #0	@ D.46738,
	b	.L3884	@
	.fnend
	.size	MVC_DecSubSPS, .-MVC_DecSubSPS
	.align	2
	.global	MVC_DecSPS
	.type	MVC_DecSPS, %function
MVC_DecSPS:
	.fnstart
.LFB1656:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC327	@,
	movt	r2, #:upper16:.LC327	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC328	@,
	movt	r1, #:upper16:.LC328	@,
	mov	r5, r0	@ D.46403,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC329	@,
	movt	r1, #:upper16:.LC329	@,
	mov	sl, r0	@ constrained_set0_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC330	@,
	movt	r1, #:upper16:.LC330	@,
	str	r0, [fp, #-72]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC331	@,
	movt	r1, #:upper16:.LC331	@,
	str	r0, [fp, #-68]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC332	@,
	movt	r1, #:upper16:.LC332	@,
	str	r0, [fp, #-64]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC333	@,
	movt	r1, #:upper16:.LC333	@,
	str	r0, [fp, #-60]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC334	@,
	movt	r2, #:upper16:.LC334	@,
	str	r0, [fp, #-56]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC335	@,
	movt	r2, #:upper16:.LC335	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC336	@,
	movt	r1, #:upper16:.LC336	@,
	mov	r8, r0	@ D.46410,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	mov	r6, r0	@ seq_parameter_set_id,
	bne	.L3904	@,
	ldr	r1, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r0, r1, #1	@ tmp164, <variable>.MaxSpsNum,
	cmp	r6, r0	@ seq_parameter_set_id, tmp164
	bhi	.L3921	@,
	cmp	r5, #100	@ profile_idc,
	mov	r7, r5	@ profile_idc, D.46403
	beq	.L3909	@,
	bhi	.L3912	@,
	cmp	r5, #77	@ profile_idc,
	beq	.L3909	@,
	cmp	r5, #88	@ profile_idc,
	beq	.L3910	@,
	cmp	r5, #66	@ profile_idc,
	bne	.L3907	@,
	movw	r1, #:lower16:.LC317	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC317	@,
	bl	dprint_vfmw	@
.L3909:
	cmp	r8, #9	@ level_idc,
	mov	r2, r8	@ level_idc, D.46410
	bls	.L3920	@,
.L3913:
	cmp	r8, #41	@ level_idc,
	bhi	.L3920	@,
	movw	r8, #3992	@ tmp178,
	ldr	r9, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mul	r5, r8, r6	@ D.46439, tmp178, seq_parameter_set_id
	add	r3, r5, r9	@ D.46440, D.46439, <variable>.SPS
	ldrb	r9, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r9, #0	@ <variable>.is_valid,
	beq	.L3915	@,
.L3924:
	movw	r9, #:lower16:.LANCHOR1	@ tmp181,
	movt	r9, #:upper16:.LANCHOR1	@ tmp181,
	ldr	lr, [fp, #-68]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	str	r7, [r9, #808]	@ profile_idc, sps_tmp.profile_idc
	add	r1, r9, #72	@, tmp181,
	ldr	r7, [fp, #-72]	@, %sfp
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	ip, [fp, #-60]	@, %sfp
	strb	r7, [r9, #73]	@, sps_tmp.constrained_set1_flag
	ldr	r7, [fp, #-56]	@, %sfp
	strb	sl, [r9, #72]	@ constrained_set0_flag, sps_tmp.constrained_set0_flag
	strb	lr, [r9, #74]	@, sps_tmp.constrained_set2_flag
	strb	r7, [r9, #77]	@, sps_tmp.constrained_set5_flag
	strb	r3, [r9, #75]	@, sps_tmp.constrained_set3_flag
	strb	ip, [r9, #76]	@, sps_tmp.constrained_set4_flag
	str	r2, [r9, #812]	@ level_idc, sps_tmp.level_idc
	str	r6, [r9, #816]	@ seq_parameter_set_id, sps_tmp.seq_parameter_set_id
	bl	MVC_ProcessSPS	@
	subs	r7, r0, #0	@ D.46450,
	bne	.L3922	@,
	ldr	r1, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	r0, r9, #72	@, tmp181,
	add	r1, r5, r1	@, D.46439, <variable>.SPS
	bl	MVC_SPSEqual	@
	cmp	r0, #0	@ D.46454
	bne	.L3923	@,
.L3906:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3920:
	movw	r8, #3992	@ tmp178,
	mov	r3, #41	@,
	mul	r5, r8, r6	@ D.46439, tmp178, seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC338	@,
	movt	r1, #:upper16:.LC338	@,
	bl	dprint_vfmw	@
	ldr	r9, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mov	r2, #41	@ level_idc,
	add	r3, r5, r9	@ D.46440, D.46439, <variable>.SPS
	ldrb	r9, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r9, #0	@ <variable>.is_valid,
	bne	.L3924	@,
.L3915:
	str	r7, [r3, #736]	@ profile_idc, <variable>.profile_idc
	mov	r0, r4	@, pMvcCtx
	ldr	ip, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mov	r7, #1	@ tmp216,
	strb	sl, [ip, r5]	@ constrained_set0_flag, <variable>.constrained_set0_flag
	ldr	r3, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [fp, #-72]	@, %sfp
	add	r1, r3, r5	@ tmp217, <variable>.SPS, D.46439
	strb	lr, [r1, #1]	@, <variable>.constrained_set1_flag
	ldr	ip, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	ldr	r1, [fp, #-68]	@, %sfp
	add	r3, ip, r5	@ tmp222, <variable>.SPS, D.46439
	strb	r1, [r3, #2]	@, <variable>.constrained_set2_flag
	ldr	lr, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	ldr	r1, [fp, #-64]	@, %sfp
	add	ip, lr, r5	@ tmp227, <variable>.SPS, D.46439
	strb	r1, [ip, #3]	@, <variable>.constrained_set3_flag
	ldr	r3, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	ldr	ip, [fp, #-60]	@, %sfp
	add	lr, r3, r5	@ tmp232, <variable>.SPS, D.46439
	strb	ip, [lr, #4]	@, <variable>.constrained_set4_flag
	ldr	r1, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [fp, #-56]	@, %sfp
	add	r3, r1, r5	@ tmp237, <variable>.SPS, D.46439
	strb	lr, [r3, #5]	@, <variable>.constrained_set5_flag
	ldr	ip, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	r1, ip, r5	@ tmp242, <variable>.SPS, D.46439
	str	r2, [r1, #740]	@ level_idc, <variable>.level_idc
	ldr	lr, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	r3, lr, r5	@ tmp246, <variable>.SPS, D.46439
	str	r6, [r3, #744]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	r1, r5, ip	@, D.46439, <variable>.SPS
	bl	MVC_ProcessSPS	@
	cmp	r0, #0	@ D.46459
	bne	.L3925	@,
	ldr	r2, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	ip, r2, r5	@ tmp265, <variable>.SPS, D.46439
	strb	r7, [ip, #26]	@ tmp216, <variable>.is_refreshed
	ldr	lr, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	r5, lr, r5	@ tmp271, <variable>.SPS, D.46439
	strb	r7, [r5, #25]	@ tmp216, <variable>.is_valid
	b	.L3906	@
.L3904:
	mvn	r0, #0	@ D.46415,
	b	.L3906	@
.L3912:
	cmp	r5, #122	@ D.46403,
	beq	.L3911	@,
	cmp	r5, #144	@ D.46403,
	beq	.L3911	@,
	cmp	r5, #110	@ D.46403,
	beq	.L3911	@,
.L3907:
	mov	r2, r5	@, D.46403
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC337	@,
	movt	r1, #:upper16:.LC337	@,
	bl	dprint_vfmw	@
	cmp	r8, #9	@ level_idc,
	mov	r7, #100	@ profile_idc,
	mov	r2, r8	@ level_idc, D.46410
	bhi	.L3913	@,
	b	.L3920	@
.L3911:
	movw	r1, #:lower16:.LC319	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC319	@,
	bl	dprint_vfmw	@
	cmp	r8, #9	@ level_idc,
	mov	r2, r8	@ level_idc, D.46410
	bhi	.L3913	@,
	b	.L3920	@
.L3910:
	movw	r1, #:lower16:.LC318	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC318	@,
	bl	dprint_vfmw	@
	cmp	r8, #9	@ level_idc,
	mov	r2, r8	@ level_idc, D.46410
	bhi	.L3913	@,
	b	.L3920	@
.L3923:
	mov	r2, #1	@ tmp204,
	strb	r2, [r9, #97]	@ tmp204, sps_tmp.is_valid
	strb	r2, [r9, #98]	@ tmp204, sps_tmp.is_refreshed
	add	r1, r9, #72	@, tmp181,
	ldr	r0, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mov	r2, r8	@, tmp178
	add	r0, r5, r0	@, D.46439, <variable>.SPS
	bl	memmove	@
	mov	r0, r7	@ D.46415, D.46450
	b	.L3906	@
.L3922:
	mov	r3, r6	@, seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC339	@,
	movw	r2, #10585	@,
	movt	r1, #:upper16:.LC339	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46415,
	b	.L3906	@
.L3921:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC316	@,
	movt	r1, #:upper16:.LC316	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r2, r3, #1	@ tmp167, <variable>.MaxSpsNum,
	cmp	r6, r2	@ seq_parameter_set_id, tmp167
	bls	.L3904	@,
	movw	lr, #:lower16:g_event_report	@ tmp169,
	movt	lr, #:upper16:g_event_report	@ tmp169,
	ldr	ip, [lr, #0]	@ g_event_report.818, g_event_report
	cmp	ip, #0	@ g_event_report.818,
	beq	.L3904	@,
	str	r3, [fp, #-48]	@ <variable>.MaxSpsNum, para
	mov	r1, #109	@,
	str	r6, [fp, #-52]	@ seq_parameter_set_id, para
	sub	r2, fp, #52	@,,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #8	@,
	blx	ip	@ g_event_report.818
	mvn	r0, #0	@ D.46415,
	b	.L3906	@
.L3925:
	mov	r3, r6	@, seq_parameter_set_id
	movw	r2, #10610	@,
	mov	r0, r7	@, tmp216
	movw	r1, #:lower16:.LC339	@,
	movt	r1, #:upper16:.LC339	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mvn	r0, #0	@ D.46415,
	add	r1, r3, r5	@ tmp253, <variable>.SPS, D.46439
	strb	r7, [r1, #26]	@ tmp216, <variable>.is_refreshed
	ldr	r2, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	add	r5, r2, r5	@ tmp259, <variable>.SPS, D.46439
	strb	r9, [r5, #25]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3906	@
	.fnend
	.size	MVC_DecSPS, .-MVC_DecSPS
	.align	2
	.global	MVC_ProcessPPS
	.type	MVC_ProcessPPS, %function
MVC_ProcessPPS:
	.fnstart
.LFB1650:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #60
	sub	sp, sp, #60	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pPPS, pPPS
	movw	r1, #:lower16:.LC340	@,
	movt	r1, #:upper16:.LC340	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_1	@
	strb	r0, [r5, #0]	@, <variable>.entropy_coding_mode_flag
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3962	@,
.L3927:
	mvn	r0, #0	@ D.45374,
.L3930:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3962:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC341	@,
	movt	r1, #:upper16:.LC341	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #1]	@, <variable>.pic_order_present_flag
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3927	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC342	@,
	movt	r1, #:upper16:.LC342	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@ D.45379,
	str	r0, [r5, #32]	@ D.45379, <variable>.num_slice_groups_minus1
	bne	.L3928	@,
	ldrb	r1, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3928	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC344	@,
	movt	r1, #:upper16:.LC344	@,
	bl	mvc_ue_v	@
	cmp	r0, #31	@ D.45389,
	str	r0, [r5, #36]	@ D.45389, <variable>.num_ref_idx_l0_active_minus1
	bhi	.L3931	@,
	ldrb	ip, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3931	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC346	@,
	movt	r1, #:upper16:.LC346	@,
	bl	mvc_ue_v	@
	cmp	r0, #31	@ D.45395,
	str	r0, [r5, #40]	@ D.45395, <variable>.num_ref_idx_l1_active_minus1
	bhi	.L3933	@,
	ldrb	lr, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L3934	@,
.L3933:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC347	@,
	movt	r1, #:upper16:.LC347	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45374,
	b	.L3930	@
.L3934:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC348	@,
	movt	r1, #:upper16:.LC348	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.weighted_pred_flag
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3927	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC349	@,
	movt	r2, #:upper16:.LC349	@,
	bl	mvc_u_v	@
	cmp	r0, #2	@ D.45405,
	str	r0, [r5, #44]	@ D.45405, <variable>.weighted_bipred_idc
	bhi	.L3963	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC351	@,
	movt	r1, #:upper16:.LC351	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC352	@,
	movt	r1, #:upper16:.LC352	@,
	str	r0, [r5, #48]	@, <variable>.pic_init_qp_minus26
	mov	r0, r4	@, pMvcCtx
	bl	mvc_se_v	@
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC353	@,
	movt	r1, #:upper16:.LC353	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC354	@,
	movt	r1, #:upper16:.LC354	@,
	str	r0, [r5, #52]	@, <variable>.chroma_qp_index_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC355	@,
	movt	r1, #:upper16:.LC355	@,
	strb	r0, [r5, #3]	@, <variable>.deblocking_filter_control_present_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC356	@,
	movt	r1, #:upper16:.LC356	@,
	strb	r0, [r5, #4]	@, <variable>.constrained_intra_pred_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r8, r0	@ D.45418,
	strb	r8, [r5, #17]	@ D.45418, <variable>.redundant_pic_cnt_present_flag
	cmp	r8, #0	@ D.45418,
	beq	.L3936	@,
	movw	r1, #:lower16:.LC357	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC357	@,
	bl	dprint_vfmw	@
.L3936:
	ldr	lr, [r5, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	mov	r8, #0	@ tmp217,
	add	r0, r4, #548	@, pMvcCtx,
	str	r8, [r5, #60]	@ tmp217, <variable>.transform_8x8_mode_flag
	strb	r8, [r5, #18]	@ tmp217, <variable>.pic_scaling_matrix_present_flag
	str	lr, [r5, #56]	@ <variable>.chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	bl	BsResidBits	@
	ldr	ip, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [ip, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r1, r2, #3	@ tmp222, <variable>.nal_trail_zero_bit_num,
	cmp	r0, r1	@, tmp222
	bcs	.L3964	@,
.L3937:
	mov	r0, #0	@ D.45374,
	b	.L3930	@
.L3964:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC358	@,
	movt	r1, #:upper16:.LC358	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC359	@,
	movt	r1, #:upper16:.LC359	@,
	str	r0, [r5, #60]	@, <variable>.transform_8x8_mode_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.45433,
	strb	r0, [r5, #18]	@ D.45433, <variable>.pic_scaling_matrix_present_flag
	cmp	r0, #1	@ D.45433,
	beq	.L3965	@,
.L3938:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC361	@,
	movt	r1, #:upper16:.LC361	@,
	bl	mvc_se_v	@
	add	ip, r0, #12	@ tmp301, D.45519,
	str	r0, [r5, #56]	@ D.45519, <variable>.second_chroma_qp_index_offset
	cmp	ip, #24	@ tmp301,
	bhi	.L3958	@,
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	beq	.L3937	@,
.L3958:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC362	@,
	movt	r1, #:upper16:.LC362	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45374,
	b	.L3930	@
.L3928:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC343	@,
	movt	r1, #:upper16:.LC343	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:g_event_report	@ tmp194,
	movt	r2, #:upper16:g_event_report	@ tmp194,
	ldr	ip, [r2, #0]	@ g_event_report.773, g_event_report
	cmp	ip, #0	@ g_event_report.773,
	beq	.L3927	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.773
	mvn	r0, #0	@ D.45374,
	b	.L3930	@
.L3931:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC345	@,
	movt	r1, #:upper16:.LC345	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45374,
	b	.L3930	@
.L3965:
	add	r7, r5, #2016	@, pPPS,
	movw	sl, #:lower16:.LANCHOR2	@ tmp325,
	sub	r6, fp, #76	@ ivtmp.10478,,
	movt	sl, #:upper16:.LANCHOR2	@ tmp325,
	add	r9, r5, #64	@, pPPS,
	str	r7, [fp, #-84]	@, %sfp
	str	r9, [fp, #-88]	@, %sfp
	mov	r9, r7	@ ivtmp.10509,
	str	r7, [fp, #-80]	@, %sfp
	mov	r7, r8	@ i.10497, ivtmp.10484
.L3947:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_u_1	@
	add	r1, r5, r7	@ tmp228, pPPS, i.10497
	ldr	r2, [fp, #-84]	@, %sfp
	mov	r3, r0	@ D.45438,
	str	r0, [r6, #0]	@ D.45438, q4x4defaultflag
	strb	r3, [r1, #5]	@ D.45438, <variable>.pic_scaling_list_present_flag
	add	r0, r8, r2	@, ivtmp.10484,
	ldr	r3, [r6, #0]	@ tmp230, q4x4defaultflag
	mov	r2, #16	@,
	cmp	r3, #1	@ tmp230,
	beq	.L3966	@,
	rsbs	ip, r7, #1	@ D.45461, i.10497
	movcc	ip, #0	@ D.45461
	cmp	r7, #0	@ i.10497,
	cmpne	r7, #3	@, i.10497,
	bne	.L3943	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	lr, #3992	@,
	ldr	r3, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, lr, r3	@ D.45469, <variable>.seq_parameter_set_id,, <variable>.SPS
	ldrb	lr, [r3, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L3967	@,
	cmp	ip, #0	@ D.45461,
	ldr	r1, .L3971	@,
	movne	r1, sl	@, tmp325
	bl	memcpy	@
.L3940:
	add	r7, r7, #1	@ i.10497, i.10497,
	ldr	lr, [fp, #-80]	@, %sfp
	ldr	r3, [fp, #-88]	@, %sfp
	cmp	r7, #6	@ i.10497,
	add	r1, lr, #16	@,,
	add	r6, r6, #4	@ ivtmp.10478, ivtmp.10478,
	add	r0, r3, #64	@,,
	str	r1, [fp, #-80]	@, %sfp
	add	r8, r8, #16	@ ivtmp.10484, ivtmp.10484,
	add	r9, r9, #16	@ ivtmp.10509, ivtmp.10509,
	str	r0, [fp, #-88]	@, %sfp
	bne	.L3947	@,
	add	r8, r5, #2112	@, pPPS,
	mov	r7, #0	@ ivtmp.10463,
	add	r9, r5, #448	@ ivtmp.10466, pPPS,
	sub	r6, fp, #52	@ ivtmp.10468,,
	str	r8, [fp, #-80]	@, %sfp
	mov	sl, r8	@ ivtmp.10462,
	mov	r8, r7	@ i, ivtmp.10463
	str	r5, [fp, #-84]	@ pPPS, %sfp
.L3957:
	ldr	r2, [r5, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	mov	r3, #0	@ prephitmp.10444,
	cmp	r2, #1	@ <variable>.transform_8x8_mode_flag,
	movne	lr, #0	@,
	strne	lr, [r6, #0]	@, q8x8defaultflag
	beq	.L3968	@,
.L3949:
	ldr	r1, [fp, #-84]	@, %sfp
	mov	r2, #64	@,
	ldr	lr, [fp, #-80]	@, %sfp
	strb	r3, [r1, #11]	@ prephitmp.10444, <variable>.pic_scaling_list_present_flag
	add	r0, lr, r7	@,, ivtmp.10463
	ldr	ip, [r6, #0]	@ tmp273, q8x8defaultflag
	cmp	ip, #1	@ tmp273,
	beq	.L3969	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #3992	@,
	ldr	lr, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, ip, lr	@ temp.10503, <variable>.seq_parameter_set_id,, <variable>.SPS
	ldrb	ip, [r3, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	ip, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L3970	@,
	ldr	r3, .L3971+4	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L3971+8	@,
	movne	r1, r3	@,
	bl	memcpy	@
.L3951:
	add	r8, r8, #1	@ i, i,
	ldr	r1, [fp, #-84]	@, %sfp
	cmp	r8, #2	@ i,
	add	sl, sl, #64	@ ivtmp.10462, ivtmp.10462,
	add	r0, r1, #1	@,,
	add	r7, r7, #64	@ ivtmp.10463, ivtmp.10463,
	add	r9, r9, #256	@ ivtmp.10466, ivtmp.10466,
	add	r6, r6, #4	@ ivtmp.10468, ivtmp.10468,
	str	r0, [fp, #-84]	@, %sfp
	beq	.L3938	@,
	b	.L3957	@
.L3943:
	mov	r0, r9	@, ivtmp.10509
	sub	r1, r9, #16	@, ivtmp.10509,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3940	@
.L3966:
	ldr	r1, [fp, #-88]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [fp, #-80]	@, %sfp
	add	r3, r3, #15	@,,
	str	r6, [sp, #0]	@ ivtmp.10478,
	bl	MVC_Scaling_List	@
	ldr	ip, [r6, #0]	@ tmp231, q4x4defaultflag
	cmp	ip, #1	@ tmp231,
	bne	.L3940	@,
	cmp	r7, #2	@ i.10497,
	ldr	r1, .L3971	@,
	ldr	r0, [fp, #-80]	@, %sfp
	mov	r2, #16	@,
	movls	r1, sl	@, tmp325
	bl	memcpy	@
	b	.L3940	@
.L3963:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC350	@,
	movt	r1, #:upper16:.LC350	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45374,
	b	.L3930	@
.L3967:
	ldr	ip, [fp, #-84]	@, %sfp
	add	r2, r3, #2672	@ tmp251, D.45469,
	add	r1, r2, r8	@, tmp251, ivtmp.10484
	mov	r2, #16	@,
	add	r0, r8, ip	@, ivtmp.10484,
	bl	memcpy	@
	b	.L3940	@
.L3970:
	ldr	lr, [fp, #-80]	@, %sfp
	add	r2, r3, #2768	@ tmp287, temp.10503,
	add	r1, r2, r7	@, tmp287, ivtmp.10463
	mov	r2, #64	@,
	add	r0, lr, r7	@,, ivtmp.10463
	bl	memcpy	@
	b	.L3951	@
.L3969:
	mov	r3, r2	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r9	@, ivtmp.10466
	mov	r2, sl	@, ivtmp.10462
	str	r6, [sp, #0]	@ ivtmp.10468,
	bl	MVC_Scaling_List	@
	ldr	r0, [r6, #0]	@ tmp274, q8x8defaultflag
	cmp	r0, #1	@ tmp274,
	bne	.L3951	@,
	ldr	r3, .L3971+4	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L3971+8	@,
	mov	r2, #64	@,
	mov	r0, sl	@, ivtmp.10462
	movne	r1, r3	@,
	bl	memcpy	@
	b	.L3951	@
.L3968:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC360	@,
	movt	r1, #:upper16:.LC360	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ prephitmp.10444, D.45487
	str	r0, [r6, #0]	@ D.45487, q8x8defaultflag
	b	.L3949	@
.L3972:
	.align	2
.L3971:
	.word	.LANCHOR2+16
	.word	.LANCHOR2+96
	.word	.LANCHOR2+32
	.fnend
	.size	MVC_ProcessPPS, .-MVC_ProcessPPS
	.align	2
	.global	MVC_DecPPS
	.type	MVC_DecPPS, %function
MVC_DecPPS:
	.fnstart
.LFB1649:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC363	@,
	movt	r1, #:upper16:.LC363	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	mov	r6, r0	@ pic_parameter_set_id,
	ldr	r0, [r4, #40]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp145, <variable>.MaxPpsNum,
	cmp	r6, r3	@ pic_parameter_set_id, tmp145
	bhi	.L3983	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC365	@,
	movt	r1, #:upper16:.LC365	@,
	bl	mvc_ue_v	@
	mov	r3, r0	@ seq_parameter_set_id,
	ldr	r0, [r4, #36]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, r0, #1	@ tmp154, <variable>.MaxSpsNum,
	cmp	r3, ip	@ seq_parameter_set_id, tmp154
	bhi	.L3984	@,
	mov	r8, #2240	@ tmp157,
	ldr	r7, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	mul	r5, r8, r6	@ D.45338, tmp157, pic_parameter_set_id
	add	r2, r5, r7	@ D.45339, D.45338, <variable>.PPS
	ldrb	r7, [r2, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r7, #0	@ <variable>.is_valid,
	bne	.L3985	@,
	str	r6, [r2, #24]	@ pic_parameter_set_id, <variable>.pic_parameter_set_id
	mov	r0, r4	@, pMvcCtx
	ldr	lr, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	add	ip, lr, r5	@ tmp181, <variable>.PPS, D.45338
	str	r3, [ip, #28]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r1, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	add	r1, r5, r1	@, D.45338, <variable>.PPS
	bl	MVC_ProcessPPS	@
	cmp	r0, #0	@ D.45352
	bne	.L3986	@,
	ldr	r1, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	mov	lr, #1	@ tmp202,
	add	r2, r1, r5	@ tmp200, <variable>.PPS, D.45338
	strb	lr, [r2, #20]	@ tmp202, <variable>.is_refreshed
	ldr	r3, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	add	r5, r3, r5	@ tmp206, <variable>.PPS, D.45338
	strb	lr, [r5, #19]	@ tmp202, <variable>.is_valid
.L3976:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L3985:
	movw	r7, #:lower16:.LANCHOR1	@ tmp160,
	movt	r7, #:upper16:.LANCHOR1	@ tmp160,
	mov	r0, r4	@, pMvcCtx
	add	r1, r7, #4064	@, tmp160,
	str	r6, [r7, #4088]	@ pic_parameter_set_id, pps_tmp.pic_parameter_set_id
	str	r3, [r7, #4092]	@ seq_parameter_set_id, pps_tmp.seq_parameter_set_id
	bl	MVC_ProcessPPS	@
	subs	r6, r0, #0	@ D.45343,
	bne	.L3987	@,
	ldr	lr, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	add	r0, r7, #4064	@, tmp160,
	add	r1, r5, lr	@, D.45338, <variable>.PPS
	bl	MVC_PPSEqual	@
	cmp	r0, #0	@ D.45347
	beq	.L3976	@,
	mov	r2, #1	@ tmp170,
	strb	r2, [r7, #4083]	@ tmp170, pps_tmp.is_valid
	strb	r2, [r7, #4084]	@ tmp170, pps_tmp.is_refreshed
	add	r1, r7, #4064	@, tmp160,
	ldr	r3, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	mov	r2, r8	@, tmp157
	add	r0, r5, r3	@, D.45338, <variable>.PPS
	bl	memmove	@
	mov	r0, r6	@ D.45329, D.45343
	b	.L3976	@
.L3983:
	mov	r2, r6	@, pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC364	@,
	movt	r1, #:upper16:.LC364	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #40]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r2, r3, #1	@ tmp148, <variable>.MaxPpsNum,
	cmp	r6, r2	@ pic_parameter_set_id, tmp148
	bhi	.L3988	@,
.L3975:
	mvn	r0, #0	@ D.45329,
	b	.L3976	@
.L3988:
	movw	r1, #:lower16:g_event_report	@ tmp150,
	movt	r1, #:upper16:g_event_report	@ tmp150,
	ldr	ip, [r1, #0]	@ g_event_report.771, g_event_report
	cmp	ip, #0	@ g_event_report.771,
	beq	.L3975	@,
	str	r3, [fp, #-40]	@ <variable>.MaxPpsNum, para
	mov	r1, #110	@,
	str	r6, [fp, #-44]	@ pic_parameter_set_id, para
	sub	r2, fp, #44	@,,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #8	@,
	blx	ip	@ g_event_report.771
	mvn	r0, #0	@ D.45329,
	b	.L3976	@
.L3987:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC366	@,
	movw	r2, #9484	@,
	movt	r1, #:upper16:.LC366	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45329,
	b	.L3976	@
.L3984:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC316	@,
	movt	r1, #:upper16:.LC316	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45329,
	b	.L3976	@
.L3986:
	movw	r2, #9502	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC366	@,
	movt	r1, #:upper16:.LC366	@,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	mov	r2, #1	@ tmp190,
	mvn	r0, #0	@ D.45329,
	add	r1, ip, r5	@ tmp188, <variable>.PPS, D.45338
	strb	r2, [r1, #20]	@ tmp190, <variable>.is_refreshed
	ldr	r3, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	add	r5, r3, r5	@ tmp194, <variable>.PPS, D.45338
	strb	r7, [r5, #19]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3976	@
	.fnend
	.size	MVC_DecPPS, .-MVC_DecPPS
	.align	2
	.global	MVC_ProcessSliceHeaderFirstPart
	.type	MVC_ProcessSliceHeaderFirstPart, %function
MVC_ProcessSliceHeaderFirstPart:
	.fnstart
.LFB1642:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC367	@,
	movt	r1, #:upper16:.LC367	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	mov	r5, r0	@ tmp_pic_parameter_set_id,
	ldr	r0, [r4, #40]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp161, <variable>.MaxPpsNum,
	cmp	r5, r3	@ tmp_pic_parameter_set_id, tmp161
	bhi	.L3990	@,
	ldrb	r1, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3990	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, tmp_pic_parameter_set_id
	bl	MVC_PPSSPSCheckTmpId	@
	cmp	r0, #0	@,
	bne	.L4016	@,
	movw	r2, #:lower16:11117176	@ tmp166,
	movt	r2, #:upper16:11117176	@ tmp166,
	mov	r0, r4	@, pMvcCtx
	str	r5, [r4, r2]	@ tmp_pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	bl	MVC_PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L4017	@,
	ldr	r5, [r4, #240]	@ pSPS, <variable>.pSPS
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC371	@,
	movt	r2, #:upper16:.LC371	@,
	ldr	r8, [r4, #244]	@ pPPS, <variable>.pPPS
	ldr	lr, [r5, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	r1, lr, #4	@, <variable>.log2_max_frame_num_minus4,
	bl	mvc_u_v	@
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	movw	ip, #:lower16:11117188	@ tmp171,
	movt	ip, #:upper16:11117188	@ tmp171,
	cmp	r3, #0	@ <variable>.SeErrFlg,
	str	r0, [r4, ip]	@ D.44768, <variable>.CurrSlice.frame_num
	bne	.L3995	@,
	movw	r7, #:lower16:11117163	@ tmp173,
	movt	r7, #:upper16:11117163	@ tmp173,
	ldrb	r6, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r6, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4018	@,
.L3996:
	movw	r6, #:lower16:11117161	@ tmp178,
	movw	r7, #:lower16:11117162	@ tmp181,
	movt	r6, #:upper16:11117161	@ tmp178,
	movt	r7, #:upper16:11117162	@ tmp181,
	mov	r3, #0	@ tmp179,
	strb	r3, [r4, r6]	@ tmp179, <variable>.CurrSlice.field_pic_flag
	strb	r3, [r4, r7]	@ tmp179, <variable>.CurrSlice.bottom_field_flag
	ldrb	r2, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r2, r3	@ <variable>.frame_mbs_only_flag,
	beq	.L4019	@,
	ldr	r2, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r1, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	ip, r2, #1	@ tmp261, <variable>.pic_height_in_map_units_minus1,
	mla	r2, r1, ip, ip	@ D.44798, <variable>.pic_width_in_mbs_minus1, tmp261, tmp261
.L4014:
	mov	ip, #1	@ iftmp.742,
.L4001:
	cmp	r3, #0	@ prephitmp.10598,
	mul	ip, ip, r2	@ pic_size, iftmp.742, D.44798
	movne	r1, #0	@ prephitmp.10570,
	bne	.L4003	@,
	ldrb	r1, [r5, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	subs	r1, r1, #0	@ prephitmp.10570, <variable>.mb_adaptive_frame_field_flag,
	movne	r1, #1	@ prephitmp.10570
.L4003:
	movw	r2, #:lower16:11117161	@ tmp202,
	movt	r2, #:upper16:11117161	@ tmp202,
	movw	r0, #:lower16:11117164	@ tmp200,
	movt	r0, #:upper16:11117164	@ tmp200,
	ldrb	lr, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	strb	r1, [r4, r0]	@ prephitmp.10570, <variable>.CurrSlice.MbaffFrameFlag
	cmp	lr, #1	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L4004	@,
	cmp	r1, #1	@ prephitmp.10570,
	beq	.L4004	@,
	movw	r0, #:lower16:11117216	@ tmp208,
	movt	r0, #:upper16:11117216	@ tmp208,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	ip, lr	@ pic_size, <variable>.CurrSlice.first_mb_in_slice
	bls	.L4020	@,
.L4006:
	movw	r7, #:lower16:11117163	@ tmp211,
	movt	r7, #:upper16:11117163	@ tmp211,
	ldrb	r6, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r6, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4021	@,
.L4007:
	movw	r6, #:lower16:11116028	@ tmp218,
	movw	r7, #:lower16:11116032	@ tmp220,
	movt	r6, #:upper16:11116028	@ tmp218,
	movt	r7, #:upper16:11116032	@ tmp220,
	mov	r1, #0	@ tmp219,
	str	r1, [r4, r6]	@ tmp219, <variable>.CurrPOC.pic_order_cnt_lsb
	str	r1, [r4, r7]	@ tmp219, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	ldr	r3, [r5, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r3, #0	@ <variable>.pic_order_cnt_type,
	beq	.L4022	@,
.L4009:
	movw	r6, #:lower16:11116064	@ tmp232,
	movw	r7, #:lower16:11116068	@ tmp234,
	movt	r6, #:upper16:11116064	@ tmp232,
	movt	r7, #:upper16:11116068	@ tmp234,
	mov	r3, #0	@ tmp233,
	str	r3, [r4, r6]	@ tmp233, <variable>.CurrPOC.delta_pic_order_cnt
	str	r3, [r4, r7]	@ tmp233, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r2, [r5, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r2, #1	@ <variable>.pic_order_cnt_type,
	beq	.L4023	@,
.L4010:
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3995	@,
	ldrb	r3, [r8, #17]	@ zero_extendqisi2	@ <variable>.redundant_pic_cnt_present_flag, <variable>.redundant_pic_cnt_present_flag
	cmp	r3, #0	@ <variable>.redundant_pic_cnt_present_flag,
	beq	.L4011	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L4012	@,
	ldrb	r1, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L4012	@,
.L4011:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IsNewPic	@
	movw	r2, #:lower16:11117165	@ tmp251,
	movt	r2, #:upper16:11117165	@ tmp251,
	uxtb	ip, r0	@ D.44870,
	strb	ip, [r4, r2]	@ D.44870, <variable>.CurrSlice.new_pic_flag
	cmp	ip, #0	@ D.44870,
	bne	.L4013	@,
	movw	r0, #:lower16:11117216	@ tmp253,
	movw	r1, #:lower16:11118856	@ tmp254,
	movt	r0, #:upper16:11117216	@ tmp253,
	movt	r1, #:upper16:11118856	@ tmp254,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	ldr	r3, [r4, r1]	@ <variable>.PrevSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	cmp	lr, r3	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	bls	.L4024	@,
.L4013:
	mov	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4017:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC370	@,
	movt	r1, #:upper16:.LC370	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3995:
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4019:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC373	@,
	movt	r1, #:upper16:.LC373	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.44788,
	strb	r3, [r4, r6]	@ D.44788, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ D.44788,
	bne	.L4025	@,
.L3999:
	ldr	r0, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldrb	lr, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r1, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	ip, r0, #1	@ tmp194, <variable>.pic_width_in_mbs_minus1,
	cmp	lr, #0	@ <variable>.frame_mbs_only_flag,
	mla	r2, r1, ip, ip	@ D.44798, <variable>.pic_height_in_map_units_minus1, tmp194, tmp194
	moveq	ip, #2	@ iftmp.742,
	beq	.L4001	@,
	movw	r3, #:lower16:11117161	@ tmp197,
	movt	r3, #:upper16:11117161	@ tmp197,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.10598, <variable>.CurrSlice.field_pic_flag
	b	.L4014	@
.L4018:
	cmp	r0, #0	@ D.44768,
	beq	.L3996	@,
	movw	r1, #:lower16:11118800	@ tmp175,
	movt	r1, #:upper16:11118800	@ tmp175,
	ldr	r0, [r4, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	r0, #0	@ <variable>.CurrSlice.view_id,
	bgt	.L3996	@,
	movw	r1, #:lower16:.LC372	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC372	@,
	bl	dprint_vfmw	@
	b	.L3996	@
.L4004:
	movw	r1, #:lower16:11117216	@ tmp205,
	movt	r1, #:upper16:11117216	@ tmp205,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r3, ip, lsr #1	@ <variable>.CurrSlice.first_mb_in_slice, pic_size,
	bcc	.L4006	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC375	@,
	movt	r1, #:upper16:.LC375	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3990:
	mov	r2, r5	@, tmp_pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC368	@,
	movt	r1, #:upper16:.LC368	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4022:
	ldr	lr, [r5, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC379	@,
	movt	r2, #:upper16:.LC379	@,
	add	r1, lr, #4	@, <variable>.log2_max_pic_order_cnt_lsb_minus4,
	bl	mvc_u_v	@
	str	r0, [r4, r6]	@, <variable>.CurrPOC.pic_order_cnt_lsb
	ldrb	r0, [r8, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #0	@ <variable>.pic_order_present_flag,
	beq	.L4009	@,
	movw	ip, #:lower16:11117161	@ tmp228,
	movt	ip, #:upper16:11117161	@ tmp228,
	ldrb	r6, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r6, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4009	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC380	@,
	movt	r1, #:upper16:.LC380	@,
	bl	mvc_se_v	@
	str	r0, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	b	.L4009	@
.L4023:
	ldrb	r1, [r5, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	cmp	r1, #0	@ <variable>.delta_pic_order_always_zero_flag,
	bne	.L4010	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC381	@,
	movt	r1, #:upper16:.LC381	@,
	bl	mvc_se_v	@
	str	r0, [r4, r6]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldrb	r0, [r8, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #1	@ <variable>.pic_order_present_flag,
	bne	.L4010	@,
	movw	ip, #:lower16:11117161	@ tmp241,
	movt	ip, #:upper16:11117161	@ tmp241,
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	lr, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4010	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	bl	mvc_se_v	@
	str	r0, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	b	.L4010	@
.L4020:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC376	@,
	movt	r1, #:upper16:.LC376	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4016:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC369	@,
	movt	r1, #:upper16:.LC369	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4021:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC377	@,
	movt	r1, #:upper16:.LC377	@,
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11117204	@ tmp214,
	movt	ip, #:upper16:11117204	@ tmp214,
	cmp	r0, #65536	@ D.44825,
	str	r0, [r4, ip]	@ D.44825, <variable>.CurrSlice.idr_pic_id
	bcs	.L4008	@,
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	beq	.L4007	@,
.L4008:
	movw	r1, #:lower16:.LC378	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC378	@,
	bl	dprint_vfmw	@
	b	.L4007	@
.L4025:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC374	@,
	movt	r1, #:upper16:.LC374	@,
	bl	mvc_u_1	@
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ prephitmp.10598, <variable>.CurrSlice.field_pic_flag
	strb	r0, [r4, r7]	@, <variable>.CurrSlice.bottom_field_flag
	b	.L3999	@
.L4012:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	bl	dprint_vfmw	@
	movw	r0, #:lower16:g_event_report	@ tmp250,
	movt	r0, #:upper16:g_event_report	@ tmp250,
	ldr	ip, [r0, #0]	@ g_event_report.745, g_event_report
	cmp	ip, #0	@ g_event_report.745,
	beq	.L3995	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.745
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4024:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC385	@,
	movt	r1, #:upper16:.LC385	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44757,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_ProcessSliceHeaderFirstPart, .-MVC_ProcessSliceHeaderFirstPart
	.align	2
	.global	MVC_DecMMCO
	.type	MVC_DecMMCO, %function
MVC_DecMMCO:
	.fnstart
.LFB1640:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ save
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	moveq	r6, r1	@ MMCONum.10640, save
	beq	.L4028	@,
	mov	r6, #0	@ MMCONum,
	movw	sl, #2004	@ tmp284,
	b	.L4029	@
.L4031:
	cmp	r3, #2	@ prephitmp.10616,
	beq	.L4062	@,
.L4032:
	cmp	r3, #3	@ prephitmp.10616,
	cmpne	r3, #6	@, prephitmp.10616,
	beq	.L4063	@,
.L4033:
	cmp	r3, #4	@ prephitmp.10616,
	beq	.L4064	@,
.L4034:
	cmp	r3, #6	@ prephitmp.10616,
	bhi	.L4035	@,
.L4066:
	ldrb	lr, [r5, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4035	@,
	cmp	r3, #0	@ prephitmp.10616,
	beq	.L4038	@,
	add	r6, r6, #1	@ MMCONum, MMCONum,
	cmp	r6, #100	@ MMCONum,
	beq	.L4065	@,
.L4029:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC387	@,
	movt	r1, #:upper16:.LC387	@,
	ldrb	r8, [r5, #3]	@ zero_extendqisi2	@ D.44606, <variable>.CurrMarkIdx
	bl	mvc_ue_v	@
	mov	r7, r6, asl #2	@ tmp281, MMCONum,
	add	r1, r7, r6	@ tmp152, tmp281, MMCONum
	movw	r4, #:lower16:11118864	@ tmp158,
	mul	ip, sl, r8	@ tmp154, tmp284, D.44606
	movt	r4, #:upper16:11118864	@ tmp158,
	mov	r3, r0	@ prephitmp.10616,
	cmp	r0, #1	@ prephitmp.10616,
	cmpne	r0, #3	@, prephitmp.10616,
	add	r0, ip, r1, asl #2	@, tmp156, tmp154, tmp152,
	add	r2, r0, r5	@ tmp157, tmp156, pMvcCtx
	add	r4, r2, r4	@ tmp158, tmp157, tmp158
	str	r3, [r4, #4]	@ prephitmp.10616, <variable>.memory_management_control_operation
	bne	.L4031	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC388	@,
	movt	r1, #:upper16:.LC388	@,
	bl	mvc_ue_v	@
	ldr	r3, [r4, #4]	@ prephitmp.10616, <variable>.memory_management_control_operation
	cmp	r3, #2	@ prephitmp.10616,
	str	r0, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	bne	.L4032	@,
.L4062:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC389	@,
	movt	r1, #:upper16:.LC389	@,
	bl	mvc_ue_v	@
	mul	r1, sl, r8	@ tmp193, tmp284, D.44606
	add	ip, r7, r6	@ tmp191, tmp281, MMCONum
	movw	r3, #:lower16:11118864	@ tmp207,
	movt	r3, #:upper16:11118864	@ tmp207,
	movw	r2, #:lower16:11118872	@ tmp197,
	movt	r2, #:upper16:11118872	@ tmp197,
	add	r1, r1, ip, asl #2	@, tmp195, tmp193, tmp191,
	add	ip, r1, r5	@ tmp196, tmp195, pMvcCtx
	add	r3, ip, r3	@ tmp207, tmp196, tmp207
	add	r2, ip, r2	@ tmp197, tmp196, tmp197
	ldr	r3, [r3, #4]	@ prephitmp.10616, <variable>.memory_management_control_operation
	cmp	r3, #3	@ prephitmp.10616,
	cmpne	r3, #6	@, prephitmp.10616,
	str	r0, [r2, #4]	@, <variable>.long_term_pic_num
	bne	.L4033	@,
.L4063:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC390	@,
	movt	r1, #:upper16:.LC390	@,
	bl	mvc_ue_v	@
	mul	r1, sl, r8	@ tmp221, tmp284, D.44606
	add	ip, r7, r6	@ tmp219, tmp281, MMCONum
	movw	r3, #:lower16:11118864	@ tmp235,
	movt	r3, #:upper16:11118864	@ tmp235,
	movw	r2, #:lower16:11118872	@ tmp225,
	movt	r2, #:upper16:11118872	@ tmp225,
	add	r1, r1, ip, asl #2	@, tmp223, tmp221, tmp219,
	add	r1, r1, r5	@ tmp224, tmp223, pMvcCtx
	add	r3, r1, r3	@ tmp235, tmp224, tmp235
	add	r2, r1, r2	@ tmp225, tmp224, tmp225
	ldr	r3, [r3, #4]	@ prephitmp.10616, <variable>.memory_management_control_operation
	cmp	r3, #4	@ prephitmp.10616,
	str	r0, [r2, #8]	@, <variable>.long_term_frame_idx
	bne	.L4034	@,
.L4064:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC391	@,
	movt	r1, #:upper16:.LC391	@,
	bl	mvc_ue_v	@
	mul	r8, sl, r8	@ tmp242, tmp284, D.44606
	add	r2, r7, r6	@ tmp240, tmp281, MMCONum
	movw	ip, #:lower16:11118864	@ tmp256,
	movt	ip, #:upper16:11118864	@ tmp256,
	movw	r1, #:lower16:11118880	@ tmp246,
	movt	r1, #:upper16:11118880	@ tmp246,
	add	r7, r8, r2, asl #2	@, tmp244, tmp242, tmp240,
	add	r7, r7, r5	@ tmp245, tmp244, pMvcCtx
	add	r3, r7, ip	@ tmp256, tmp245, tmp256
	add	r2, r7, r1	@ tmp246, tmp245, tmp246
	ldr	r3, [r3, #4]	@ prephitmp.10616, <variable>.memory_management_control_operation
	cmp	r3, #6	@ prephitmp.10616,
	str	r0, [r2, #4]	@, <variable>.max_long_term_frame_idx_plus1
	bls	.L4066	@,
.L4035:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC392	@,
	movt	r1, #:upper16:.LC392	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44604,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4038:
	mov	r0, #0	@ D.44604,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4028:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC387	@,
	movt	r1, #:upper16:.LC387	@,
	bl	mvc_ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r7, #0	@, D.44649
	moveq	r7, #1	@, D.44649
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r4, r0	@ memory_management_control_operation,
	beq	.L4067	@,
.L4039:
	cmp	r4, #2	@ memory_management_control_operation,
	beq	.L4068	@,
.L4040:
	cmp	r4, #6	@ memory_management_control_operation,
	orreq	r7, r7, #1	@,, tmp273, D.44649
	cmp	r7, #0	@ tmp273,
	bne	.L4069	@,
.L4041:
	cmp	r4, #4	@ memory_management_control_operation,
	beq	.L4070	@,
	cmp	r4, #6	@ memory_management_control_operation,
	bhi	.L4044	@,
.L4043:
	ldrb	r0, [r5, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4044	@,
	cmp	r4, #0	@ memory_management_control_operation,
	beq	.L4038	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC387	@,
	movt	r1, #:upper16:.LC387	@,
	add	r6, r6, #1	@ tmp294, MMCONum.10640,
	bl	mvc_ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r7, #0	@, D.44649
	moveq	r7, #1	@, D.44649
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r4, r0	@ memory_management_control_operation,
	beq	.L4071	@,
.L4050:
	cmp	r4, #2	@ memory_management_control_operation,
	beq	.L4072	@,
.L4051:
	cmp	r4, #6	@ memory_management_control_operation,
	orreq	r7, r7, #1	@,, tmp307, D.44649
	cmp	r7, #0	@ tmp307,
	bne	.L4073	@,
.L4052:
	cmp	r4, #4	@ memory_management_control_operation,
	beq	.L4058	@,
	cmp	r4, #6	@ memory_management_control_operation,
	bhi	.L4044	@,
.L4059:
	ldrb	r3, [r5, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L4044	@,
	cmp	r4, #0	@ memory_management_control_operation,
	beq	.L4038	@,
	add	r6, r6, #1	@ MMCONum.10640, tmp294,
	cmp	r6, #100	@ MMCONum.10640,
	bne	.L4028	@,
.L4061:
	mvn	r0, #0	@ D.44604,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4065:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC386	@,
	movt	r1, #:upper16:.LC386	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44604,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4069:
	movw	r1, #:lower16:.LC390	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC390	@,
	bl	mvc_ue_v	@
	b	.L4041	@
.L4067:
	movw	r1, #:lower16:.LC388	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC388	@,
	bl	mvc_ue_v	@
	b	.L4039	@
.L4073:
	movw	r1, #:lower16:.LC390	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC390	@,
	bl	mvc_ue_v	@
	b	.L4052	@
.L4071:
	movw	r1, #:lower16:.LC388	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC388	@,
	bl	mvc_ue_v	@
	b	.L4050	@
.L4070:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC391	@,
	movt	r1, #:upper16:.LC391	@,
	bl	mvc_ue_v	@
	b	.L4043	@
.L4068:
	movw	r1, #:lower16:.LC389	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC389	@,
	bl	mvc_ue_v	@
	b	.L4040	@
.L4072:
	movw	r1, #:lower16:.LC389	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC389	@,
	bl	mvc_ue_v	@
	b	.L4051	@
.L4058:
	movw	r1, #:lower16:.LC391	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC391	@,
	bl	mvc_ue_v	@
	b	.L4059	@
.L4044:
	movw	r1, #:lower16:.LC392	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC392	@,
	bl	dprint_vfmw	@
	b	.L4061	@
	.fnend
	.size	MVC_DecMMCO, .-MVC_DecMMCO
	.align	2
	.global	mvc_dec_ref_pic_marking
	.type	mvc_dec_ref_pic_marking, %function
mvc_dec_ref_pic_marking:
	.fnstart
.LFB1641:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11117165	@ tmp150,
	movt	r3, #:upper16:11117165	@ tmp150,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r6, [r0, #3]	@ zero_extendqisi2	@ D.44677, <variable>.CurrMarkIdx
	ldrb	r7, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	cmp	r7, #0	@ <variable>.CurrSlice.new_pic_flag,
	beq	.L4075	@,
	rsbs	r8, r6, #1	@ tmp152, D.44677
	movcc	r8, #0	@ tmp152
	strb	r8, [r0, #3]	@ tmp152, <variable>.CurrMarkIdx
.L4076:
	movw	r1, #:lower16:11117163	@ tmp162,
	movt	r1, #:upper16:11117163	@ tmp162,
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4087	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC396	@,
	movt	r1, #:upper16:.LC396	@,
	movw	r5, #:lower16:11118864	@ tmp190,
	bl	mvc_u_1	@
	movw	r3, #2004	@ tmp188,
	mla	r8, r3, r8, r4	@ tmp189, tmp188, D.44683, pMvcCtx
	movt	r5, #:upper16:11118864	@ tmp190,
	movw	r1, #:lower16:.LC397	@,
	movt	r1, #:upper16:.LC397	@,
	add	r5, r8, r5	@ tmp190, tmp189, tmp190
	uxtb	r2, r0	@ D.44702,
	mov	r0, #16	@,
	strb	r2, [r5, #3]	@ D.44702, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	dprint_vfmw	@
	ldrb	ip, [r5, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	ip, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L4088	@,
.L4080:
	mov	r0, #0	@ D.44713,
.L4079:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L4075:
	movw	r8, #2004	@ tmp158,
	movw	lr, #:lower16:11118864	@ tmp156,
	mla	r2, r8, r6, r0	@ tmp159, tmp158, D.44677, pMvcCtx
	movt	lr, #:upper16:11118864	@ tmp156,
	mov	r8, r6	@ D.44683, D.44677
	add	r5, r2, lr	@ tmp160, tmp159, tmp160
	ldrb	r3, [r2, lr]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L4076	@,
	movw	r1, #:lower16:11117163	@ tmp215,
	movt	r1, #:upper16:11117163	@ tmp215,
	ldrb	r6, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r6, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4089	@,
	movw	r1, #:lower16:.LC396	@,
	movt	r1, #:upper16:.LC396	@,
	ldrb	r6, [r5, #3]	@ zero_extendqisi2	@ D.44728, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	mvc_u_1	@
	cmp	r6, r0	@ D.44728,
	bne	.L4090	@,
	ldrb	r0, [r5, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r0, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L4080	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, <variable>.CurrSlice.new_pic_flag
	bl	MVC_DecMMCO	@
	b	.L4079	@
.L4088:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_DecMMCO	@
	cmn	r0, #1	@ D.44708,
	mov	r7, r0	@ D.44708,
	movne	r3, #1	@ tmp213,
	movne	r0, #0	@ D.44713,
	strneb	r3, [r5, #0]	@ tmp213, <variable>.is_valid
	bne	.L4079	@,
	mov	lr, #0	@ tmp204,
	mov	r0, #1	@,
	strb	lr, [r5, #0]	@ tmp204, <variable>.is_valid
	movw	r1, #:lower16:.LC398	@,
	strb	r6, [r4, #3]	@ D.44677, <variable>.CurrMarkIdx
	movt	r1, #:upper16:.LC398	@,
	bl	dprint_vfmw	@
	mov	r0, r7	@ D.44713, D.44708
	b	.L4079	@
.L4089:
	movw	r1, #:lower16:.LC393	@,
	movt	r1, #:upper16:.LC393	@,
	ldrb	r6, [r5, #1]	@ zero_extendqisi2	@ D.44716, <variable>.no_output_of_prior_pics_flag
	bl	mvc_u_1	@
	cmp	r6, r0	@ D.44716,
	bne	.L4091	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC394	@,
	movt	r1, #:upper16:.LC394	@,
	ldrb	r4, [r5, #2]	@ zero_extendqisi2	@ D.44722, <variable>.long_term_reference_flag
	bl	mvc_u_1	@
	cmp	r4, r0	@ D.44722,
	beq	.L4080	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC400	@,
	movt	r1, #:upper16:.LC400	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44713,
	b	.L4079	@
.L4087:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC393	@,
	movt	r1, #:upper16:.LC393	@,
	movw	r5, #:lower16:11118864	@ tmp169,
	bl	mvc_u_1	@
	movw	r2, #2004	@ tmp167,
	mla	r8, r2, r8, r4	@ tmp168, tmp167, D.44683, pMvcCtx
	movt	r5, #:upper16:11118864	@ tmp169,
	movw	r1, #:lower16:.LC394	@,
	movt	r1, #:upper16:.LC394	@,
	add	r5, r8, r5	@ tmp169, tmp168, tmp169
	strb	r0, [r5, #1]	@, <variable>.no_output_of_prior_pics_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldrb	r2, [r5, #1]	@ zero_extendqisi2	@, <variable>.no_output_of_prior_pics_flag
	movw	r1, #:lower16:.LC395	@,
	movt	r1, #:upper16:.LC395	@,
	strb	r0, [r5, #2]	@, <variable>.long_term_reference_flag
	mov	r0, #16	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.44713,
	b	.L4079	@
.L4090:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC401	@,
	movt	r1, #:upper16:.LC401	@,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #68]	@ <variable>.TotalNal, <variable>.TotalNal
	ldr	r2, [r4, #88]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	mov	r0, #1	@,
	ldr	r3, [r4, #100]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	movw	r1, #:lower16:.LC402	@,
	movt	r1, #:upper16:.LC402	@,
	str	ip, [sp, #0]	@ <variable>.TotalNal,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44713,
	b	.L4079	@
.L4091:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC399	@,
	movt	r1, #:upper16:.LC399	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44713,
	b	.L4079	@
	.fnend
	.size	mvc_dec_ref_pic_marking, .-mvc_dec_ref_pic_marking
	.align	2
	.global	mvc_pred_weight_table
	.type	mvc_pred_weight_table, %function
mvc_pred_weight_table:
	.fnstart
.LFB1639:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #244]	@, <variable>.pPPS
	movw	r1, #:lower16:.LC403	@,
	movt	r1, #:upper16:.LC403	@,
	ldr	r7, [r0, #240]	@ pSPS, <variable>.pSPS
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	str	r2, [fp, #-48]	@, %sfp
	bl	mvc_ue_v	@
	movw	r4, #:lower16:11117228	@ tmp164,
	movt	r4, #:upper16:11117228	@ tmp164,
	mov	r6, #1	@ tmp165,
	str	r0, [r5, r4]	@ prephitmp.10684, <variable>.CurrSlice.luma_log2_weight_denom
	mov	sl, r6, asl r0	@ y_default_weight, tmp165,
	ldr	r9, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r9, #0	@ <variable>.chroma_format_idc,
	bne	.L4118	@,
.L4094:
	cmp	r0, #7	@ prephitmp.10684,
	bhi	.L4117	@,
	movw	ip, #:lower16:11117232	@ tmp171,
	movt	ip, #:upper16:11117232	@ tmp171,
	ldr	r0, [r5, ip]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	cmp	r0, #7	@ <variable>.CurrSlice.chroma_log2_weight_denom,
	bhi	.L4117	@,
	ldrb	r2, [r5, #10]	@ zero_extendqisi2	@ prephitmp.10686, <variable>.SeErrFlg
	cmp	r2, #0	@ prephitmp.10686,
	bne	.L4096	@,
	movw	r4, #:lower16:11117236	@ ivtmp.10716,
	movt	r4, #:upper16:11117236	@ ivtmp.10716,
	movw	r8, #:lower16:11117220	@ tmp234,
	add	r4, r5, r4	@ ivtmp.10716, pMvcCtx, ivtmp.10716
	movt	r8, #:upper16:11117220	@ tmp234,
	mov	r6, r2	@ i, prephitmp.10686
	b	.L4105	@
.L4101:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L4119	@,
.L4102:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_v
.L4104:
	ldr	lr, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.10716, ivtmp.10716,
	cmp	lr, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	bcc	.L4120	@,
.L4105:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC406	@,
	movt	r1, #:upper16:.LC406	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.44541
	streq	r0, [r4, #768]	@ D.44541, <variable>.CurrSlice.wp_offset_l0_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l0_y
	beq	.L4101	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC407	@,
	movt	r1, #:upper16:.LC407	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC408	@,
	movt	r1, #:upper16:.LC408	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l0_y
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l0_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L4102	@,
.L4119:
	movw	r1, #:lower16:.LC409	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC409	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.44550
	bne	.L4121	@,
	ldr	lr, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	str	r0, [r4, #1024]	@ D.44550, <variable>.CurrSlice.wp_offset_l0_v
	cmp	lr, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_u
	str	r0, [r4, #896]	@ D.44550, <variable>.CurrSlice.wp_offset_l0_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_v
	add	r4, r4, #4	@ ivtmp.10716, ivtmp.10716,
	bcs	.L4105	@,
.L4120:
	ldr	r2, [fp, #-48]	@, %sfp
	ldr	r1, [r2, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	r1, #1	@ <variable>.weighted_bipred_idc,
	beq	.L4122	@,
.L4106:
	ldrb	r0, [r5, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@, D.44540,
	b	.L4099	@
.L4117:
	ldrb	r2, [r5, #10]	@ zero_extendqisi2	@ prephitmp.10686, <variable>.SeErrFlg
.L4096:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC405	@,
	movt	r1, #:upper16:.LC405	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44540,
.L4099:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L4121:
	movw	r1, #:lower16:.LC410	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC410	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC411	@,
	movt	r1, #:upper16:.LC411	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l0_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC410	@,
	movt	r1, #:upper16:.LC410	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l0_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC411	@,
	movt	r1, #:upper16:.LC411	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l0_v
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l0_v
	b	.L4104	@
.L4118:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC404	@,
	movt	r1, #:upper16:.LC404	@,
	bl	mvc_ue_v	@
	movw	r3, #:lower16:11117232	@ tmp168,
	movt	r3, #:upper16:11117232	@ tmp168,
	mov	r1, r0	@ D.44530,
	ldr	r0, [r5, r4]	@ prephitmp.10684, <variable>.CurrSlice.luma_log2_weight_denom
	mov	r9, r6, asl r1	@ uv_default_weight, tmp165,
	str	r1, [r5, r3]	@ D.44530, <variable>.CurrSlice.chroma_log2_weight_denom
	b	.L4094	@
.L4122:
	movw	r0, #:lower16:11117160	@ tmp194,
	movt	r0, #:upper16:11117160	@ tmp194,
	ldrb	r3, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4106	@,
	movw	r6, #:lower16:11117620	@ ivtmp.10706,
	movt	r6, #:upper16:11117620	@ ivtmp.10706,
	add	r4, r5, r6	@ ivtmp.10706, pMvcCtx, ivtmp.10706
	movw	r8, #:lower16:11117224	@ tmp227,
	mov	r6, #0	@ i.10720,
	movt	r8, #:upper16:11117224	@ tmp227,
	b	.L4112	@
.L4108:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L4123	@,
.L4109:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_v
.L4111:
	ldr	ip, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r6, r6, #1	@ i.10720, i.10720,
	add	r4, r4, #4	@ ivtmp.10706, ivtmp.10706,
	cmp	ip, r6	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.10720
	bcc	.L4106	@,
.L4112:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC412	@,
	movt	r1, #:upper16:.LC412	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.44566
	streq	r0, [r4, #768]	@ D.44566, <variable>.CurrSlice.wp_offset_l1_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l1_y
	beq	.L4108	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC413	@,
	movt	r1, #:upper16:.LC413	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC414	@,
	movt	r1, #:upper16:.LC414	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l1_y
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l1_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L4109	@,
.L4123:
	movw	r1, #:lower16:.LC415	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC415	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.44574
	bne	.L4124	@,
	str	r0, [r4, #1024]	@ D.44574, <variable>.CurrSlice.wp_offset_l1_v
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_u
	str	r0, [r4, #896]	@ D.44574, <variable>.CurrSlice.wp_offset_l1_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_v
	b	.L4111	@
.L4124:
	movw	r1, #:lower16:.LC416	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC416	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC417	@,
	movt	r1, #:upper16:.LC417	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l1_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC416	@,
	movt	r1, #:upper16:.LC416	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l1_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC417	@,
	movt	r1, #:upper16:.LC417	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l1_v
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l1_v
	b	.L4111	@
	.fnend
	.size	mvc_pred_weight_table, .-mvc_pred_weight_table
	.align	2
	.global	mvc_ref_pic_list_reordering
	.type	mvc_ref_pic_list_reordering, %function
mvc_ref_pic_list_reordering:
	.fnstart
.LFB1638:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11117171	@ tmp162,
	movt	r2, #:upper16:11117171	@ tmp162,
	movw	r5, #:lower16:11116108	@ tmp164,
	movt	r5, #:upper16:11116108	@ tmp164,
	movw	r1, #:lower16:11117161	@ tmp170,
	ldrb	r7, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	movt	r1, #:upper16:11117161	@ tmp170,
	ldr	r2, [r0, #240]	@ pSPS, <variable>.pSPS
	mov	ip, #0	@ tmp165,
	movw	r3, #:lower16:11116109	@ tmp167,
	strb	ip, [r0, r5]	@ tmp165, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	movt	r3, #:upper16:11116109	@ tmp167,
	movw	r5, #:lower16:11117160	@ tmp178,
	movt	r5, #:upper16:11117160	@ tmp178,
	ldrb	sl, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r7, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	strb	ip, [r0, r3]	@ tmp165, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	ldrb	r3, [r0, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r1, [r2, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	movne	r7, #5	@ max_reorder_num,
	moveq	r7, #3	@ max_reorder_num,
	cmp	sl, #0	@ <variable>.CurrSlice.field_pic_flag,
	addne	r1, r1, #5	@ tmp172, <variable>.log2_max_frame_num_minus4,
	addeq	r1, r1, #4	@ tmp175, <variable>.log2_max_frame_num_minus4,
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	mov	sl, #1	@ tmp177,
	mov	sl, sl, asl r1	@ MaxPicNum, tmp177,
	bls	.L4163	@,
.L4130:
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@ D.44444,
	ldmnefd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4151:
	mov	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4163:
	movw	r1, #:lower16:.LC418	@,
	movt	r1, #:upper16:.LC418	@,
	bl	mvc_u_1	@
	movw	r3, #:lower16:11116108	@ tmp181,
	movt	r3, #:upper16:11116108	@ tmp181,
	uxtb	r0, r0	@ D.44431,
	strb	r0, [r4, r3]	@ D.44431, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r0, #0	@ D.44431,
	ldreqb	r3, [r4, r5]	@ zero_extendqisi2	@ prephitmp.10768, <variable>.CurrSlice.slice_type
	beq	.L4132	@,
	movw	r8, #:lower16:11117220	@ tmp184,
	movt	r8, #:upper16:11117220	@ tmp184,
	ldr	r6, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmn	r6, #2	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	beq	.L4133	@,
	movw	r0, #:lower16:11116112	@ ivtmp.10761,
	movt	r0, #:upper16:11116112	@ ivtmp.10761,
	add	r5, r4, r0	@ ivtmp.10761, pMvcCtx, ivtmp.10761
	mov	r6, #0	@ i,
	b	.L4145	@
.L4140:
	cmp	r0, #2	@ D.44436,
	beq	.L4164	@,
	sub	r0, r0, #4	@ tmp194, D.44436,
	cmp	r0, #1	@ tmp194,
	bls	.L4165	@,
.L4143:
	ldr	r3, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.10761, ivtmp.10761,
	add	r3, r3, #2	@ prephitmp.10738, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	cmp	r3, r6	@ prephitmp.10738, i
	bls	.L4139	@,
.L4145:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC419	@,
	movt	r1, #:upper16:.LC419	@,
	bl	mvc_ue_v	@
	cmp	r7, r0	@ max_reorder_num, D.44436
	str	r0, [r5, #0]	@ D.44436, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	bcc	.L4166	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10774, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.10774,
	bne	.L4135	@,
	cmp	r0, #3	@ D.44436,
	beq	.L4167	@,
	cmp	r0, #1	@ D.44436,
	bhi	.L4140	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC421	@,
	movt	r1, #:upper16:.LC421	@,
	bl	mvc_ue_v	@
	cmp	sl, r0	@ MaxPicNum, D.44448
	str	r0, [r5, #264]	@ D.44448, <variable>.CurrReorder.abs_diff_pic_num_minus1_l0
	bls	.L4168	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10740, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.10740,
	beq	.L4143	@,
.L4142:
	mov	r2, r0	@, D.44448
	movw	r1, #:lower16:.LC422	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC422	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4167:
	movw	ip, #:lower16:11117220	@ tmp189,
	movt	ip, #:upper16:11117220	@ tmp189,
	ldr	lr, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r3, lr, #2	@ prephitmp.10738, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
.L4139:
	cmp	r6, r3	@ i, prephitmp.10738
	beq	.L4146	@,
.L4162:
	movw	r3, #:lower16:11117160	@ tmp206,
	movt	r3, #:upper16:11117160	@ tmp206,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.10768, <variable>.CurrSlice.slice_type
.L4132:
	cmp	r3, #1	@ prephitmp.10768,
	bne	.L4130	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC426	@,
	movt	r1, #:upper16:.LC426	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:11116109	@ tmp209,
	movt	r1, #:upper16:11116109	@ tmp209,
	uxtb	r0, r0	@ D.44473,
	strb	r0, [r4, r1]	@ D.44473, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r0, #0	@ D.44473,
	beq	.L4130	@,
	movw	r8, #:lower16:11117224	@ tmp211,
	movt	r8, #:upper16:11117224	@ tmp211,
	ldr	r2, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmn	r2, #2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	beq	.L4130	@,
	movw	r5, #:lower16:11116244	@ ivtmp.10753,
	movt	r5, #:upper16:11116244	@ ivtmp.10753,
	add	r6, r4, r5	@ ivtmp.10753, pMvcCtx, ivtmp.10753
	mov	r5, #0	@ i.10772,
	b	.L4158	@
.L4157:
	add	r5, r5, #1	@ i.10772, i.10772,
	add	r6, r6, #4	@ ivtmp.10753, ivtmp.10753,
	cmp	r3, r5	@ D.44502, i.10772
	bls	.L4130	@,
.L4158:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC427	@,
	movt	r1, #:upper16:.LC427	@,
	bl	mvc_ue_v	@
	cmp	r7, r0	@ max_reorder_num, D.44477
	str	r0, [r6, #0]	@ D.44477, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	bcc	.L4169	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10736, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.10736,
	bne	.L4149	@,
	cmp	r0, #3	@ D.44477,
	beq	.L4151	@,
	cmp	r0, #1	@ D.44477,
	bls	.L4170	@,
	cmp	r0, #2	@ D.44477,
	beq	.L4171	@,
	sub	r0, r0, #4	@ tmp219, D.44477,
	cmp	r0, #1	@ tmp219,
	bls	.L4172	@,
.L4155:
	ldr	r2, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r3, r2, #2	@ D.44502, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r3, r5	@ D.44502, i.10772
	bne	.L4157	@,
	movw	lr, #:lower16:2779062	@ tmp223,
	movt	lr, #:upper16:2779062	@ tmp223,
	add	r1, r2, lr	@ tmp223, <variable>.CurrSlice.num_ref_idx_l1_active_minus1, tmp223
	add	ip, r4, r1, asl #2	@, tmp227, pMvcCtx, tmp223,
	ldr	lr, [ip, #4]	@ tmp229, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	cmp	lr, #3	@ tmp229,
	beq	.L4157	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC433	@,
	movt	r1, #:upper16:.LC433	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4170:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC429	@,
	movt	r1, #:upper16:.LC429	@,
	bl	mvc_ue_v	@
	cmp	sl, r0	@ MaxPicNum, D.44486
	str	r0, [r6, #264]	@ D.44486, <variable>.CurrReorder.abs_diff_pic_num_minus1_l1
	bls	.L4173	@,
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10775, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.10775,
	beq	.L4155	@,
.L4154:
	mov	r2, r0	@, D.44486
	movw	r1, #:lower16:.LC430	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC430	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4171:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC431	@,
	movt	r1, #:upper16:.LC431	@,
	bl	mvc_ue_v	@
	str	r0, [r6, #524]	@, <variable>.CurrReorder.long_term_pic_idx_l1
	b	.L4155	@
.L4172:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC432	@,
	movt	r1, #:upper16:.LC432	@,
	bl	mvc_ue_v	@
	str	r0, [r6, #784]	@, <variable>.CurrReorder.abs_diff_view_idx_minus1_l1
	b	.L4155	@
.L4169:
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10736, <variable>.SeErrFlg
.L4149:
	mov	r2, r0	@, D.44477
	movw	r1, #:lower16:.LC428	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC428	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4164:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC423	@,
	movt	r1, #:upper16:.LC423	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #528]	@, <variable>.CurrReorder.long_term_pic_idx_l0
	b	.L4143	@
.L4165:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC424	@,
	movt	r1, #:upper16:.LC424	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #784]	@, <variable>.CurrReorder.abs_diff_view_idx_minus1_l0
	b	.L4143	@
.L4166:
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10774, <variable>.SeErrFlg
.L4135:
	mov	r2, r0	@, D.44436
	movw	r1, #:lower16:.LC420	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC420	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4173:
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10775, <variable>.SeErrFlg
	b	.L4154	@
.L4133:
	mov	r6, #0	@ i,
.L4146:
	movw	ip, #:lower16:2779026	@ tmp199,
	movt	ip, #:upper16:2779026	@ tmp199,
	add	lr, r6, ip	@ tmp199, i, tmp199
	add	r2, r4, lr, asl #2	@, tmp203, pMvcCtx, tmp199,
	ldr	r1, [r2, #8]	@ tmp205, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	cmp	r1, #3	@ tmp205,
	beq	.L4162	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC425	@,
	movt	r1, #:upper16:.LC425	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44444,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4168:
	ldrb	r3, [r4, #10]	@ zero_extendqisi2	@ prephitmp.10740, <variable>.SeErrFlg
	b	.L4142	@
	.fnend
	.size	mvc_ref_pic_list_reordering, .-mvc_ref_pic_list_reordering
	.align	2
	.global	MVC_ProcessSliceHeaderSecondPart
	.type	MVC_ProcessSliceHeaderSecondPart, %function
MVC_ProcessSliceHeaderSecondPart:
	.fnstart
.LFB1643:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11117176	@ tmp154,
	movt	ip, #:upper16:11117176	@ tmp154,
	ldr	r1, [r0, #40]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r5, [r0, #244]	@ pPPS, <variable>.pPPS
	ldr	r2, [r0, ip]	@ D.44888, <variable>.CurrSlice.pic_parameter_set_id
	sub	r3, r1, #1	@ tmp155, <variable>.MaxPpsNum,
	cmp	r3, r2	@ tmp155, D.44888
	bcc	.L4175	@,
	ldrb	lr, [r0, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4175	@,
	bl	MVC_PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L4207	@,
	movw	r2, #:lower16:11117160	@ tmp160,
	movt	r2, #:upper16:11117160	@ tmp160,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L4208	@,
.L4179:
	ldr	r1, [r5, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movw	r7, #:lower16:11117160	@ tmp169,
	movt	r7, #:upper16:11117160	@ tmp169,
	movw	r6, #:lower16:11117220	@ tmp165,
	movt	r6, #:upper16:11117220	@ tmp165,
	movw	r8, #:lower16:11117224	@ tmp167,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ prephitmp.10816, <variable>.CurrSlice.slice_type
	movt	r8, #:upper16:11117224	@ tmp167,
	str	r1, [r4, r6]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	ldr	r2, [r5, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r3, #1	@ prephitmp.10816,
	str	r2, [r4, r8]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bls	.L4209	@,
.L4180:
	cmp	r3, #2	@ prephitmp.10816,
	beq	.L4210	@,
.L4188:
	cmp	r3, #1	@ prephitmp.10816,
	mov	r0, r4	@, pMvcCtx
	movwne	r3, #:lower16:11117224	@ tmp198,
	movtne	r3, #:upper16:11117224	@ tmp198,
	movne	r2, #32	@ tmp199,
	strne	r2, [r4, r3]	@ tmp199, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	mvc_ref_pic_list_reordering	@
	cmp	r0, #0	@,
	bne	.L4211	@,
	ldrb	r2, [r5, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r2, #0	@ <variable>.weighted_pred_flag,
	beq	.L4191	@,
	movw	ip, #:lower16:11117160	@ tmp202,
	movt	ip, #:upper16:11117160	@ tmp202,
	ldrb	r6, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r6, #0	@ <variable>.CurrSlice.slice_type,
	moveq	r3, #1	@ prephitmp.10792,
	beq	.L4194	@
.L4191:
	ldr	lr, [r5, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	lr, #1	@ <variable>.weighted_bipred_idc,
	beq	.L4212	@,
.L4193:
	mov	r3, #0	@ prephitmp.10792,
.L4194:
	movw	r6, #:lower16:11117167	@ tmp207,
	movt	r6, #:upper16:11117167	@ tmp207,
	mov	r2, r3	@, prephitmp.10792
	mov	r0, #19	@,
	strb	r3, [r4, r6]	@ prephitmp.10792, <variable>.CurrSlice.apply_weights_flag
	movw	r1, #:lower16:.LC441	@,
	movt	r1, #:upper16:.LC441	@,
	bl	dprint_vfmw	@
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.apply_weights_flag, <variable>.CurrSlice.apply_weights_flag
	movw	r2, #:lower16:11117228	@ tmp210,
	movw	ip, #:lower16:11117232	@ tmp212,
	movt	r2, #:upper16:11117228	@ tmp210,
	movt	ip, #:upper16:11117232	@ tmp212,
	cmp	r3, #0	@ <variable>.CurrSlice.apply_weights_flag,
	mov	r1, #0	@ tmp211,
	str	r1, [r4, r2]	@ tmp211, <variable>.CurrSlice.luma_log2_weight_denom
	str	r1, [r4, ip]	@ tmp211, <variable>.CurrSlice.chroma_log2_weight_denom
	bne	.L4213	@,
.L4195:
	movw	r0, #:lower16:11117168	@ tmp217,
	movt	r0, #:upper16:11117168	@ tmp217,
	ldrb	lr, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L4214	@,
.L4196:
	movw	r6, #:lower16:11118772	@ tmp220,
	movt	r6, #:upper16:11118772	@ tmp220,
	mov	ip, #0	@ tmp221,
	str	ip, [r4, r6]	@ tmp221, <variable>.CurrSlice.cabac_init_idc
	ldrb	r1, [r5, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r1, #0	@ <variable>.entropy_coding_mode_flag,
	beq	.L4197	@,
	movw	r3, #:lower16:11117160	@ tmp223,
	movt	r3, #:upper16:11117160	@ tmp223,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	bls	.L4215	@,
.L4197:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC446	@,
	movt	r1, #:upper16:.LC446	@,
	movw	r6, #:lower16:11118780	@ tmp231,
	bl	mvc_se_v	@
	movt	r6, #:upper16:11118780	@ tmp231,
	movw	ip, #:lower16:11118776	@ tmp230,
	movw	r7, #:lower16:11118784	@ tmp233,
	movt	ip, #:upper16:11118776	@ tmp230,
	movt	r7, #:upper16:11118784	@ tmp233,
	movw	r8, #:lower16:11118788	@ tmp235,
	movt	r8, #:upper16:11118788	@ tmp235,
	mov	r1, #0	@ tmp232,
	str	r1, [r4, r6]	@ tmp232, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r1, [r4, r8]	@ tmp232, <variable>.CurrSlice.slice_beta_offset_div2
	str	r1, [r4, r7]	@ tmp232, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r4, ip]	@, <variable>.CurrSlice.slice_qp_delta
	ldrb	r0, [r5, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r0, r1	@ <variable>.deblocking_filter_control_present_flag,
	bne	.L4216	@,
.L4199:
	mov	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4216:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC447	@,
	movt	r1, #:upper16:.LC447	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.44980,
	str	r0, [r4, r6]	@ D.44980, <variable>.CurrSlice.disable_deblocking_filter_idc
	bhi	.L4200	@,
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L4200	@,
	cmp	r0, #1	@ D.44980,
	beq	.L4199	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC449	@,
	movt	r1, #:upper16:.LC449	@,
	bl	mvc_se_v	@
	add	r3, r0, #6	@ tmp244, D.44988,
	str	r0, [r4, r7]	@ D.44988, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	cmp	r3, #12	@ tmp244,
	bhi	.L4202	@,
	ldrb	lr, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4202	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC451	@,
	movt	r1, #:upper16:.LC451	@,
	bl	mvc_se_v	@
	add	r1, r0, #6	@ tmp249, D.44996,
	str	r0, [r4, r8]	@ D.44996, <variable>.CurrSlice.slice_beta_offset_div2
	cmp	r1, #12	@ tmp249,
	bhi	.L4204	@,
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L4199	@,
.L4204:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC452	@,
	movt	r1, #:upper16:.LC452	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4213:
	mov	r0, r4	@, pMvcCtx
	bl	mvc_pred_weight_table	@
	cmp	r0, #0	@,
	beq	.L4195	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC442	@,
	movt	r1, #:upper16:.LC442	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4214:
	mov	r0, r4	@, pMvcCtx
	bl	mvc_dec_ref_pic_marking	@
	cmp	r0, #0	@,
	beq	.L4196	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC443	@,
	movt	r1, #:upper16:.LC443	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4210:
	movw	r1, #:lower16:11117160	@ tmp197,
	movw	r2, #:lower16:11117220	@ tmp195,
	movt	r1, #:upper16:11117160	@ tmp197,
	movt	r2, #:upper16:11117220	@ tmp195,
	mov	r0, #32	@ tmp196,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.10816, <variable>.CurrSlice.slice_type
	str	r0, [r4, r2]	@ tmp196, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	b	.L4188	@
.L4212:
	movw	r0, #:lower16:11117160	@ tmp205,
	movt	r0, #:upper16:11117160	@ tmp205,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4193	@,
	mov	r3, #1	@ prephitmp.10792,
	b	.L4194	@
.L4208:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC434	@,
	movt	r1, #:upper16:.LC434	@,
	movw	r6, #:lower16:11117166	@ tmp163,
	bl	mvc_u_1	@
	movt	r6, #:upper16:11117166	@ tmp163,
	strb	r0, [r4, r6]	@, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	b	.L4179	@
.L4209:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC435	@,
	movt	r1, #:upper16:.LC435	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@,
	ldreq	r3, [r4, r6]	@ prephitmp.10794, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L4217	@,
.L4182:
	movw	lr, #:lower16:11117161	@ tmp179,
	movt	lr, #:upper16:11117161	@ tmp179,
	ldrb	r2, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r2, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4183	@,
	cmp	r3, #15	@ prephitmp.10794,
	bhi	.L4184	@,
	movw	r0, #:lower16:11117224	@ tmp181,
	movt	r0, #:upper16:11117224	@ tmp181,
	ldr	r3, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r3, #15	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L4185	@,
	movw	ip, #:lower16:11117160	@ tmp183,
	movt	ip, #:upper16:11117160	@ tmp183,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4185	@,
.L4184:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC438	@,
	movt	r1, #:upper16:.LC438	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4185:
	ldrb	lr, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4184	@,
.L4206:
	movw	r3, #:lower16:11117160	@ tmp193,
	movt	r3, #:upper16:11117160	@ tmp193,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.10816, <variable>.CurrSlice.slice_type
	b	.L4180	@
.L4175:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC368	@,
	movt	r1, #:upper16:.LC368	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4215:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC444	@,
	movt	r1, #:upper16:.LC444	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.44970,
	str	r0, [r4, r6]	@ D.44970, <variable>.CurrSlice.cabac_init_idc
	bhi	.L4198	@,
	ldrb	lr, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L4197	@,
.L4198:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC445	@,
	movt	r1, #:upper16:.LC445	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4183:
	cmp	r3, #31	@ prephitmp.10794,
	bhi	.L4186	@,
	movw	r0, #:lower16:11117224	@ tmp188,
	movt	r0, #:upper16:11117224	@ tmp188,
	ldr	r3, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r3, #31	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L4187	@,
	movw	ip, #:lower16:11117160	@ tmp190,
	movt	ip, #:upper16:11117160	@ tmp190,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4187	@,
.L4186:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC439	@,
	movt	r1, #:upper16:.LC439	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4187:
	ldrb	lr, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L4206	@,
	b	.L4186	@
.L4217:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC436	@,
	movt	r1, #:upper16:.LC436	@,
	bl	mvc_ue_v	@
	ldrb	ip, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	mov	r3, r0	@ prephitmp.10794,
	str	r0, [r4, r6]	@ prephitmp.10794, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L4182	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC437	@,
	movt	r1, #:upper16:.LC437	@,
	bl	mvc_ue_v	@
	ldr	r3, [r4, r6]	@ prephitmp.10794, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	str	r0, [r4, r8]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	b	.L4182	@
.L4202:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC450	@,
	movt	r1, #:upper16:.LC450	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4200:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC448	@,
	movt	r1, #:upper16:.LC448	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4207:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC369	@,
	movt	r1, #:upper16:.LC369	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4211:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC440	@,
	movt	r1, #:upper16:.LC440	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44892,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_ProcessSliceHeaderSecondPart, .-MVC_ProcessSliceHeaderSecondPart
	.align	2
	.global	MVC_DecSlice
	.type	MVC_DecSlice, %function
MVC_DecSlice:
	.fnstart
.LFB1647:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	lr, [r0, #68]	@ <variable>.TotalNal, <variable>.TotalNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r1, #:lower16:.LC453	@,
	sub	r2, lr, #1	@, <variable>.TotalNal,
	movt	r1, #:upper16:.LC453	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r2, #:lower16:11117163	@ tmp164,
	movt	r2, #:upper16:11117163	@ tmp164,
	movw	r3, #:lower16:11117168	@ tmp168,
	movt	r3, #:upper16:11117168	@ tmp168,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	mov	r0, r4	@, pMvcCtx
	strb	ip, [r4, r2]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldrb	r2, [r1, #4]	@ zero_extendqisi2	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	strb	r2, [r4, r3]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	bl	MVC_ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L4222	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSliceHeaderSecondPart	@
	cmp	r0, #0	@,
	bne	.L4222	@,
	ldr	r2, [r4, #64]	@ D.45197, <variable>.SliceParaNum
	cmp	r2, #0	@ D.45197,
	moveq	r3, r2	@ Size, D.45197
	beq	.L4224	@,
	movw	r6, #:lower16:11153252	@ tmp181,
	movt	r6, #:upper16:11153252	@ tmp181,
	add	r3, r4, r6	@ tmp181, pMvcCtx, tmp181
	mov	r6, r2, asl #2	@ D.59235, D.45197,
	sub	r7, r6, #4	@ tmp228, D.59235,
	ldr	r3, [r3, #0]	@ D.45168, <variable>.pSliceNal
	ubfx	ip, r7, #2, #1	@ tmp229, tmp228,,
	ldr	r7, [r3, #8]	@ Addr0, <variable>.streamBuffer
	cmp	r7, #0	@ Addr0,
	ldrne	r8, [r3, #12]	@ Size0, <variable>.bitstream_length
	beq	.L4299	@,
.L4273:
	ldr	lr, [r3, #36]	@ Addr1, <variable>.streamBuffer
	cmp	lr, #0	@ Addr1,
	ldrne	r0, [r3, #40]	@ Size1, <variable>.bitstream_length
	moveq	r0, lr	@ Size1, Addr1
	cmp	lr, #0	@ Addr1,
	add	r3, r8, r0	@ Size, Size0, Size1
	movne	r7, lr	@ PrevNalAddr, Addr1
	movne	r8, r0	@ PrevNalSize, Size1
	mov	r0, #4	@ ivtmp.10850,
	cmp	r0, r6	@ ivtmp.10850, D.59235
	beq	.L4224	@,
	cmp	ip, #0	@ tmp229,
	beq	.L4236	@,
	movw	ip, #:lower16:11153256	@ tmp260,
	movt	ip, #:upper16:11153256	@ tmp260,
	add	r1, r4, ip	@ tmp260, pMvcCtx, tmp260
	ldr	ip, [r1, #0]	@ D.45168, <variable>.pSliceNal
	ldr	lr, [ip, #8]	@ Addr0, <variable>.streamBuffer
	ldr	r1, [ip, #36]	@ Addr1, <variable>.streamBuffer
	cmp	lr, #0	@ Addr0,
	ldrne	r5, [ip, #12]	@ Size0, <variable>.bitstream_length
	moveq	r5, lr	@ Size0, Addr0
	cmp	r1, #0	@ Addr1,
	ldrne	ip, [ip, #40]	@ Size1, <variable>.bitstream_length
	moveq	ip, r1	@ Size1, Addr1
	cmp	r7, #0	@ PrevNalAddr,
	addeq	r3, r5, r3	@ D.45188, Size0, Size
	addeq	r3, r3, ip	@ Size, D.45188, Size1
	beq	.L4283	@,
	cmp	lr, r7	@ Addr0, PrevNalAddr
	bls	.L4300	@,
	rsb	r8, r8, lr	@ tmp270, PrevNalSize, Addr0
	rsb	r7, r7, r8	@ tmp271, PrevNalAddr, tmp270
	add	r7, r7, r5	@ Size0.10852, tmp271, Size0
.L4285:
	add	r3, ip, r3	@ Size.10859, Size1, Size
	add	r3, r3, r7	@ Size, Size.10859, Size0.10852
.L4283:
	cmp	r1, #0	@ Addr1,
	moveq	r7, lr	@ PrevNalAddr, Addr0
	moveq	r8, r5	@ PrevNalSize, Size0
	bne	.L4295	@,
.L4296:
	add	r0, r0, #4	@ ivtmp.10850, tmp230,
	cmp	r0, r6	@ ivtmp.10850, D.59235
	beq	.L4224	@,
.L4236:
	add	ip, r4, r0	@ tmp233, pMvcCtx, ivtmp.10850
	movw	r1, #:lower16:11153252	@ tmp235,
	movt	r1, #:upper16:11153252	@ tmp235,
	add	r1, ip, r1	@ tmp235, tmp233, tmp235
	ldr	lr, [r1, #0]	@ D.45168, <variable>.pSliceNal
	ldr	r5, [lr, #8]	@ Addr0, <variable>.streamBuffer
	ldr	ip, [lr, #36]	@ Addr1, <variable>.streamBuffer
	cmp	r5, #0	@ Addr0,
	ldrne	r1, [lr, #12]	@ Size0, <variable>.bitstream_length
	moveq	r1, r5	@ Size0, Addr0
	cmp	ip, #0	@ Addr1,
	moveq	lr, ip	@ Size1, Addr1
	ldrne	lr, [lr, #40]	@ Size1, <variable>.bitstream_length
	cmp	r7, #0	@ PrevNalAddr,
	addeq	r3, r1, r3	@ D.45188, Size0, Size
	addeq	r3, r3, lr	@ Size, D.45188, Size1
	beq	.L4233	@,
	cmp	r5, r7	@ Addr0, PrevNalAddr
	add	r3, lr, r3	@ Size.10859, Size1, Size
	rsbhi	r7, r7, r5	@ tmp184, PrevNalAddr, Addr0
	rsbhi	r8, r8, r7	@ tmp185, PrevNalSize, tmp184
	movls	r8, r1	@ Size0.10852, Size0
	addhi	r8, r8, r1	@ Size0.10852, tmp185, Size0
	add	r3, r3, r8	@ Size, Size.10859, Size0.10852
.L4233:
	cmp	ip, #0	@ Addr1,
	add	r0, r0, #4	@ tmp230, ivtmp.10850,
	movne	r5, ip	@ PrevNalAddr, Addr1
	moveq	r7, r1	@ PrevNalSize, Size0
	add	ip, r4, r0	@ tmp244, pMvcCtx, tmp230
	movw	r1, #:lower16:11153252	@ tmp246,
	movt	r1, #:upper16:11153252	@ tmp246,
	movne	r7, lr	@ PrevNalSize, Size1
	add	lr, ip, r1	@ tmp246, tmp244, tmp246
	ldr	ip, [lr, #0]	@ D.45168, <variable>.pSliceNal
	ldr	lr, [ip, #8]	@ Addr0, <variable>.streamBuffer
	cmp	lr, #0	@ Addr0,
	ldrne	r8, [ip, #12]	@ Size0, <variable>.bitstream_length
	moveq	r8, lr	@ Size0, Addr0
.L4288:
	ldr	r1, [ip, #36]	@ Addr1, <variable>.streamBuffer
	cmp	r1, #0	@ Addr1,
	ldrne	ip, [ip, #40]	@ Size1, <variable>.bitstream_length
	moveq	ip, r1	@ Size1, Addr1
	cmp	r5, #0	@ PrevNalAddr,
	addeq	r3, r8, r3	@ D.45188, Size0, Size
	addeq	r3, r3, ip	@ Size, D.45188, Size1
	beq	.L4292	@,
	cmp	lr, r5	@ Addr0, PrevNalAddr
	bls	.L4301	@,
	rsb	r7, r7, lr	@ tmp279, PrevNalSize, Addr0
	rsb	r5, r5, r7	@ tmp280, PrevNalAddr, tmp279
	add	r5, r5, r8	@ Size0.10852, tmp280, Size0
.L4294:
	add	r3, ip, r3	@ Size.10859, Size1, Size
	add	r3, r3, r5	@ Size, Size.10859, Size0.10852
.L4292:
	cmp	r1, #0	@ Addr1,
	moveq	r7, lr	@ PrevNalAddr, Addr0
	beq	.L4296	@,
.L4295:
	add	r0, r0, #4	@ ivtmp.10850, tmp230,
	mov	r7, r1	@ PrevNalAddr, Addr1
	cmp	r0, r6	@ ivtmp.10850, D.59235
	mov	r8, ip	@ PrevNalSize, Size1
	bne	.L4236	@,
.L4224:
	movw	ip, #:lower16:11152564	@ tmp186,
	movw	r1, #:lower16:11152560	@ tmp187,
	movt	ip, #:upper16:11152564	@ tmp186,
	movt	r1, #:upper16:11152560	@ tmp187,
	movw	r0, #1620	@ tmp190,
	str	r3, [r4, #104]	@ Size, <variable>.MaxBytesReceived
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	ldr	r5, [r4, r1]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	mul	ip, r5, lr	@ TotalMbs, <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_height_in_mb
	cmp	ip, r0	@ TotalMbs, tmp190
	movgt	ip, ip, asl #7	@ MaxStreamThr, TotalMbs,
	ble	.L4302	@,
.L4238:
	ldr	lr, [r4, #32]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r2, lr	@ D.45197, <variable>.MaxSliceNum
	bcs	.L4240	@,
	cmp	r3, ip	@ Size, MaxStreamThr
	bhi	.L4240	@,
	movw	r1, #:lower16:11117165	@ tmp203,
	movt	r1, #:upper16:11117165	@ tmp203,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	cmp	r3, #0	@ <variable>.CurrSlice.new_pic_flag,
	bne	.L4303	@,
.L4243:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PicTypeStatistic	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecList	@
	subs	r2, r0, #0	@ ret.10860,
	bne	.L4304	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IsRefListWrong	@
	subs	r5, r0, #0	@ ret,
	bne	.L4305	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_CalcStreamBits	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_WriteSliceMsg	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ExitSlice	@
	ldr	ip, [r4, #100]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	mov	r0, #1	@ tmp218,
	strb	r0, [r4, #4]	@ tmp218, <variable>.AllowStartDec
	add	r1, ip, r0	@ tmp221, <variable>.SliceNumInPic,
	str	r1, [r4, #100]	@ tmp221, <variable>.SliceNumInPic
.L4221:
	mov	r0, r5	@, ret
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L4301:
	mov	r5, r8	@ Size0.10852, Size0
	b	.L4294	@
.L4302:
	add	r5, ip, ip, asl #1	@, tmp193, TotalMbs, TotalMbs,
	movw	r0, #32769	@ tmp195,
	mov	ip, r5, asl #8	@ tmp194, tmp193,
	cmp	ip, r0	@ tmp194, tmp195
	movgt	ip, ip, asr #1	@ MaxStreamThr, tmp194,
	movle	ip, #16384	@ MaxStreamThr,
	b	.L4238	@
.L4299:
	mov	r8, r7	@ Size0, Addr0
	b	.L4273	@
.L4303:
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC457	@,
	movt	r1, #:upper16:.LC457	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:11151963	@ tmp209,
	movt	r3, #:upper16:11151963	@ tmp209,
	mov	r0, #0	@ tmp206,
	ldr	r2, [r4, #88]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r5, r2, #1	@ tmp208, <variable>.TotalPicNum,
	str	r0, [r4, #100]	@ tmp206, <variable>.SliceNumInPic
	cmp	ip, r0	@ <variable>.CurrPic.structure,
	str	r5, [r4, #88]	@ tmp208, <variable>.TotalPicNum
	mov	r0, r4	@, pMvcCtx
	ldreq	ip, [r4, #92]	@ <variable>.TotalFrameNum, <variable>.TotalFrameNum
	ldrne	ip, [r4, #96]	@ <variable>.TotalFieldNum, <variable>.TotalFieldNum
	addeq	ip, ip, #1	@ tmp212, <variable>.TotalFrameNum,
	addne	ip, ip, #1	@ tmp214, <variable>.TotalFieldNum,
	streq	ip, [r4, #92]	@ tmp212, <variable>.TotalFrameNum
	strne	ip, [r4, #96]	@ tmp214, <variable>.TotalFieldNum
	bl	MVC_InitPic	@
	cmn	r0, #2	@ ret,
	mov	r5, r0	@ ret,
	beq	.L4221	@,
	cmp	r0, #0	@ ret,
	bne	.L4306	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_WritePicMsg	@
	b	.L4243	@
.L4300:
	mov	r7, r5	@ Size0.10852, Size0
	b	.L4285	@
.L4222:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC454	@,
	movt	r1, #:upper16:.LC454	@,
	bl	dprint_vfmw	@
	movw	r0, #:lower16:g_event_report	@ tmp177,
	movt	r0, #:upper16:g_event_report	@ tmp177,
	ldr	ip, [r0, #0]	@ g_event_report.10857, g_event_report
	cmp	ip, #0	@ g_event_report.10857,
	beq	.L4225	@,
	sub	r2, fp, #36	@ tmp179,,
	mvn	r5, #0	@ tmp178,
	mov	r1, #100	@,
	add	r3, r5, #5	@,,
	str	r5, [r2, #-8]!	@ tmp178,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	blx	ip	@ g_event_report.10857
.L4225:
	mov	r0, r4	@, pMvcCtx
	mvn	r5, #0	@ ret,
	bl	MVC_ClearCurrSlice	@
	b	.L4221	@
.L4240:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC455	@,
	movt	r1, #:upper16:.LC455	@,
	str	ip, [sp, #0]	@ MaxStreamThr,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #64]	@ temp.10861, <variable>.SliceParaNum
	ldr	r3, [r4, #32]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r1, r3	@ temp.10861, <variable>.MaxSliceNum
	bcc	.L4242	@,
	movw	r2, #:lower16:g_event_report	@ tmp199,
	movt	r2, #:upper16:g_event_report	@ tmp199,
	ldr	ip, [r2, #0]	@ g_event_report.10864, g_event_report
	cmp	ip, #0	@ g_event_report.10864,
	beq	.L4242	@,
	str	r1, [fp, #-44]	@ temp.10861, para
	sub	r2, fp, #44	@,,
	str	r3, [fp, #-40]	@ <variable>.MaxSliceNum, para
	mov	r1, #108	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r3, #8	@,
	blx	ip	@ g_event_report.10864
.L4242:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC456	@,
	movt	r1, #:upper16:.LC456	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	b	.L4221	@
.L4304:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC459	@,
	movt	r1, #:upper16:.LC459	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	b	.L4221	@
.L4305:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC460	@,
	movt	r1, #:upper16:.LC460	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	b	.L4221	@
.L4306:
	movw	r1, #:lower16:.LC458	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC458	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	b	.L4221	@
	.fnend
	.size	MVC_DecSlice, .-MVC_DecSlice
	.align	2
	.global	MVC_SliceCheck
	.type	MVC_SliceCheck, %function
MVC_SliceCheck:
	.fnstart
.LFB1634:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC461	@,
	movt	r1, #:upper16:.LC461	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	ldrb	r2, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	movw	r3, #:lower16:11117216	@ tmp139,
	movt	r3, #:upper16:11117216	@ tmp139,
	cmp	r2, #0	@ <variable>.SeErrFlg,
	str	r0, [r4, r3]	@ D.44234, <variable>.CurrSlice.first_mb_in_slice
	bne	.L4308	@,
	cmp	r0, #262144	@ D.44234,
	bcs	.L4316	@,
	ldr	lr, [r4, #16]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	ldr	r3, [r4, #12]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	mul	ip, r3, lr	@ tmp143, <variable>.CurWidthInMb, <variable>.CurHeightInMb
	sub	r1, ip, #1	@ tmp146, tmp143,
	cmp	r0, r1	@ D.44234, tmp146
	bls	.L4317	@,
.L4308:
	mvn	r0, #0	@ D.44238,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L4316:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC462	@,
	movt	r1, #:upper16:.LC462	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44238,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L4317:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC463	@,
	movt	r1, #:upper16:.LC463	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC464	@,
	movt	r1, #:upper16:.LC464	@,
	mov	r5, r0	@ SliceType,
	mov	r0, #19	@,
	mov	r2, r5	@, SliceType
	bl	dprint_vfmw	@
	ldrb	r0, [r4, #10]	@ zero_extendqisi2	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4308	@,
	cmp	r5, #9	@ SliceType,
	bls	.L4318	@,
.L4311:
	mov	r2, r5	@, SliceType
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC465	@,
	movt	r1, #:upper16:.LC465	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44238,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L4318:
	mov	r2, #1	@ tmp151,
	mov	r3, r2, asl r5	@ tmp150, tmp151,
	ands	r1, r3, #660	@ tmp152, tmp150,
	bne	.L4314	@,
	movw	r0, #:lower16:297	@ tmp153,
	movt	r0, #:upper16:297	@ tmp153,
	and	r0, r3, r0	@ tmp153, tmp150, tmp153
	cmp	r0, #0	@ tmp153,
	bne	.L4312	@,
	tst	r3, #66	@ tmp150,
	movwne	r3, #:lower16:11117160	@ tmp162,
	movtne	r3, #:upper16:11117160	@ tmp162,
	strneb	r2, [r4, r3]	@ tmp151, <variable>.CurrSlice.slice_type
	ldmnefd	sp, {r4, r5, fp, sp, pc}	@
	b	.L4311	@
.L4314:
	movw	r1, #:lower16:11117160	@ tmp156,
	movt	r1, #:upper16:11117160	@ tmp156,
	mov	r2, #2	@ tmp157,
	strb	r2, [r4, r1]	@ tmp157, <variable>.CurrSlice.slice_type
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L4312:
	movw	ip, #:lower16:11117160	@ tmp159,
	movt	ip, #:upper16:11117160	@ tmp159,
	mov	r0, r1	@ D.44238, tmp152
	strb	r1, [r4, ip]	@ tmp152, <variable>.CurrSlice.slice_type
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_SliceCheck, .-MVC_SliceCheck
	.align	2
	.global	MVC_InquireSliceProperty
	.type	MVC_InquireSliceProperty, %function
MVC_InquireSliceProperty:
	.fnstart
.LFB1676:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r8, [r0, #68]	@ <variable>.TotalNal, <variable>.TotalNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ MVC_IsNewPic, MVC_IsNewPic
	mov	r5, r2	@ IsSizeChanged, IsSizeChanged
	mov	r0, #22	@,
	sub	r2, r8, #1	@, <variable>.TotalNal,
	movw	r1, #:lower16:.LC453	@,
	movt	r1, #:upper16:.LC453	@,
	movw	r7, #:lower16:11117163	@ tmp154,
	bl	dprint_vfmw	@
	mov	r0, #0	@ tmp152,
	str	r0, [r5, #0]	@ tmp152,* IsSizeChanged
	movt	r7, #:upper16:11117163	@ tmp154,
	str	r0, [r6, #0]	@ tmp152,* MVC_IsNewPic
	mov	r3, #12992	@ tmp167,
	ldr	ip, [r4, #232]	@ D.47872, <variable>.pCurrNal
	movw	lr, #:lower16:11117168	@ tmp157,
	movt	lr, #:upper16:11117168	@ tmp157,
	ldrb	r8, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrNalMvcInfo.is_valid
	movw	r1, #:lower16:11117172	@ tmp160,
	movw	r2, #:lower16:11117171	@ tmp162,
	ldrb	sl, [ip, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	movt	r1, #:upper16:11117172	@ tmp160,
	movt	r2, #:upper16:11117171	@ tmp162,
	movw	r3, #:lower16:11118800	@ tmp165,
	cmp	r8, #1	@ <variable>.CurrNalMvcInfo.is_valid,
	movt	r3, #:upper16:11118800	@ tmp165,
	strb	sl, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldrb	r7, [ip, #4]	@ zero_extendqisi2	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	strb	r7, [r4, lr]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldrb	ip, [ip, #5]	@ zero_extendqisi2	@ D.47875, <variable>.svc_extension_flag
	strb	r0, [r4, r2]	@ tmp152, <variable>.CurrSlice.mvcinfo_flag
	mvn	r0, #0	@ tmp166,
	str	r0, [r4, r3]	@ tmp166, <variable>.CurrSlice.view_id
	strb	ip, [r4, r1]	@ D.47875, <variable>.CurrSlice.svc_extension_flag
	beq	.L4346	@,
	cmp	ip, #255	@ D.47875,
	beq	.L4347	@,
.L4321:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SliceCheck	@
	cmp	r0, #0	@,
	beq	.L4327	@,
.L4345:
	mvn	r0, #0	@ D.47905,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4327:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L4348	@,
	movw	r0, #:lower16:11117165	@ tmp213,
	movt	r0, #:upper16:11117165	@ tmp213,
	movw	r2, #:lower16:11117172	@ tmp221,
	movt	r2, #:upper16:11117172	@ tmp221,
	ldrb	lr, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	movw	r3, #:lower16:11117176	@ tmp216,
	movt	r3, #:upper16:11117176	@ tmp216,
	mov	ip, #2240	@ tmp219,
	cmp	lr, #1	@ <variable>.CurrSlice.new_pic_flag,
	movne	r1, #0	@, tmp215
	moveq	r1, #1	@, tmp215
	str	r1, [r6, #0]	@ tmp215,* MVC_IsNewPic
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ D.47883, <variable>.CurrSlice.svc_extension_flag
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	lr, [r4, #252]	@ <variable>.PPS, <variable>.PPS
	sxtb	r2, r1	@ D.47883, D.47883
	cmn	r2, #1	@ D.47883,
	mla	r3, ip, r0, lr	@ pPPS, tmp219, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L4349	@,
	cmp	r1, #0	@ D.47883,
	bne	.L4332	@,
	ldrb	lr, [r4, #2]	@ zero_extendqisi2	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	lr, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L4350	@,
	ldr	r3, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r2, [r4, #28]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r2, r3	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	movweq	r3, #:lower16:11045412	@ pSPS,
	movteq	r3, #:upper16:11045412	@ pSPS,
	addeq	r3, r4, r3	@ pSPS, pMvcCtx, pSPS
	bne	.L4351	@,
.L4331:
	ldrb	r2, [r3, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r0, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	lr, r2, #2	@ tmp241, <variable>.frame_mbs_only_flag,
	ldr	r1, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	ip, [r4, #16]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	mla	r2, r0, lr, lr	@ tmp244, <variable>.pic_height_in_map_units_minus1, tmp241, tmp241
	ldr	lr, [r4, #12]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	add	r1, r1, #1	@ tmp248, <variable>.pic_width_in_mbs_minus1,
	cmp	lr, r1	@ <variable>.CurWidthInMb, tmp248
	cmpeq	ip, r2	@, <variable>.CurHeightInMb, tmp244
	movw	r2, #:lower16:11123112	@ tmp256,
	movt	r2, #:upper16:11123112	@ tmp256,
	ldreq	r1, [r5, #0]	@ cstore.10905,* IsSizeChanged
	movne	r1, #1	@ cstore.10905,
	str	r1, [r5, #0]	@ cstore.10905,* IsSizeChanged
	ldr	ip, [r4, r2]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r0, [r3, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	add	lr, ip, #1	@ tmp257, <variable>.DPB.size,
	cmp	r0, lr	@ <variable>.dpb_size_plus1, tmp257
	mov	r0, #0	@ D.47905,
	movhi	lr, #1	@ tmp260,
	strhi	lr, [r5, #0]	@ tmp260,* IsSizeChanged
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4346:
	movw	r0, #13000	@ tmp173,
	movw	ip, #12996	@ tmp176,
	movw	r1, #12997	@ tmp180,
	ldr	r7, [r4, r0]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrNalMvcInfo.view_id
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r0, #:lower16:11117169	@ tmp175,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrNalMvcInfo.inter_view_flag
	movt	r0, #:upper16:11117169	@ tmp175,
	movw	r1, #:lower16:11117170	@ tmp179,
	movt	r1, #:upper16:11117170	@ tmp179,
	strb	r8, [r4, r2]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrSlice.mvcinfo_flag
	str	r7, [r4, r3]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrSlice.view_id
	strb	lr, [r4, r0]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	strb	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	b	.L4321	@
.L4347:
	ldr	r2, [r4, #20]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	cmp	r2, #0	@ <variable>.TotalSUBSPS,
	beq	.L4321	@,
	movw	lr, #:lower16:10770768	@ tmp185,
	movt	lr, #:upper16:10770768	@ tmp185,
	ldr	r3, [r4, lr]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	cmp	r3, #0	@ <variable>.CurrSUBSPS.num_views_minus1,
	bne	.L4322	@,
	movw	ip, #:lower16:10770764	@ tmp187,
	movt	ip, #:upper16:10770764	@ tmp187,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSUBSPS.is_valid, <variable>.CurrSUBSPS.is_valid
	cmp	r1, #0	@ <variable>.CurrSUBSPS.is_valid,
	bne	.L4322	@,
	add	r0, r4, #12992	@ ivtmp.10942, pMvcCtx,
	add	r3, r0, #16	@ ivtmp.10942, ivtmp.10942,
.L4325:
	ldr	lr, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r2, r3, #335872	@ ivtmp.10942, ivtmp.10942,
	add	r2, r2, #308	@ ivtmp.10942, ivtmp.10942,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	beq	.L4323	@,
	ldrb	r3, [r3, #-4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L4343	@,
.L4323:
	ldr	r3, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r1, r1, #1	@ i, i,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r3, r1	@ tmp268, i
	beq	.L4340	@,
	ldrb	ip, [r2, #-4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	ip, #0	@ <variable>.is_valid,
	bne	.L4343	@,
.L4340:
	add	r1, r3, #1	@ i, tmp268,
	add	r3, r2, #335872	@ ivtmp.10942, ivtmp.10942,
	cmp	r1, #32	@ i,
	add	r3, r3, #308	@ ivtmp.10942, ivtmp.10942,
	bne	.L4325	@,
	mvn	r2, #0	@ baseviewid,
.L4324:
	movw	r1, #:lower16:11118800	@ tmp198,
	movt	r1, #:upper16:11118800	@ tmp198,
	str	r2, [r4, r1]	@ baseviewid, <variable>.CurrSlice.view_id
	b	.L4326	@
.L4350:
	ldr	r1, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #:lower16:336180	@ tmp229,
	movt	ip, #:upper16:336180	@ tmp229,
	mla	r0, r1, ip, r4	@ tmp233, <variable>.seq_parameter_set_id, tmp229, pMvcCtx
	add	r3, r0, #286720	@ pSPS, tmp233,
	add	r3, r3, #932	@ pSPS, pSPS,
	b	.L4331	@
.L4322:
	movw	r2, #:lower16:10770772	@ tmp199,
	movt	r2, #:upper16:10770772	@ tmp199,
	movw	ip, #:lower16:11118800	@ tmp200,
	movt	ip, #:upper16:11118800	@ tmp200,
	ldr	r2, [r4, r2]	@ baseviewid, <variable>.CurrSUBSPS.view_id
	str	r2, [r4, ip]	@ baseviewid, <variable>.CurrSlice.view_id
.L4326:
	cmn	r2, #1	@ baseviewid,
	beq	.L4321	@,
	movw	r2, #:lower16:11117163	@ tmp208,
	movt	r2, #:upper16:11117163	@ tmp208,
	movw	lr, #:lower16:11117171	@ tmp201,
	movw	r1, #:lower16:11117170	@ tmp204,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	lr, #:upper16:11117171	@ tmp201,
	movt	r1, #:upper16:11117170	@ tmp204,
	movw	r3, #:lower16:11117169	@ tmp207,
	movt	r3, #:upper16:11117169	@ tmp207,
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	ip, #0	@, tmp210
	moveq	ip, #1	@, tmp210
	mov	r0, #1	@ tmp202,
	strb	r0, [r4, r1]	@ tmp202, <variable>.CurrSlice.inter_view_flag
	strb	ip, [r4, r3]	@ tmp210, <variable>.CurrSlice.anchor_pic_flag
	strb	r0, [r4, lr]	@ tmp202, <variable>.CurrSlice.mvcinfo_flag
	b	.L4321	@
.L4349:
	ldr	ip, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r1, #3992	@ tmp225,
	ldr	r2, [r4, #248]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, ip, r2	@ pSPS, tmp225, <variable>.seq_parameter_set_id, <variable>.SPS
	b	.L4331	@
.L4343:
	movw	lr, #:lower16:336180	@ tmp194,
	movt	lr, #:upper16:336180	@ tmp194,
	mla	r0, lr, r1, r4	@ tmp195, tmp194, i, pMvcCtx
	add	ip, r0, #12992	@ tmp196, tmp195,
	add	r1, ip, #16	@ tmp196, tmp196,
	ldr	r2, [r1, #4]	@ baseviewid, <variable>.view_id
	b	.L4324	@
.L4351:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47905,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4348:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC454	@,
	movt	r1, #:upper16:.LC454	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.47905,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4332:
	movw	r1, #:lower16:.LC466	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC466	@,
	bl	dprint_vfmw	@
	b	.L4345	@
	.fnend
	.size	MVC_InquireSliceProperty, .-MVC_InquireSliceProperty
	.align	2
	.global	MVC_DecOneNal
	.type	MVC_DecOneNal, %function
MVC_DecOneNal:
	.fnstart
.LFB1670:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #232]	@ temp.11037, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r7, r1	@ NalMode, NalMode
	ldr	r3, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r3, #0	@ <variable>.nal_segment,
	beq	.L4353	@,
	ldr	r1, [r0, #104]	@ prephitmp.10978, <variable>.MaxBytesReceived
	mov	r3, #0	@ i,
.L4354:
	rsb	r8, r3, r3, asl #3	@, tmp184, i, i,
	add	r3, r3, #1	@ i, i,
	add	r6, r2, r8, asl #2	@, tmp186, temp.11037, tmp184,
	ldr	r5, [r6, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r1, r1, r5	@ prephitmp.10978, prephitmp.10978, <variable>.bitstream_length
	str	r1, [r4, #104]	@ prephitmp.10978, <variable>.MaxBytesReceived
	ldr	r0, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r0, r3	@ <variable>.nal_segment, i
	bhi	.L4354	@,
.L4353:
	add	r6, r4, #548	@ D.47451, pMvcCtx,
	mov	r8, #0	@ tmp190,
	mov	r1, #32	@,
	strb	r8, [r2, #0]	@ tmp190, <variable>.nal_used_segment
	mov	r0, r6	@, D.47451
	bl	BsGet	@
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	and	ip, r0, #31	@ tmp194, nal_header,
	ubfx	r1, r0, #5, #2	@ tmp199, nal_header,,
	strb	ip, [r3, #2]	@ tmp194, <variable>.nal_unit_type
	ubfx	r2, r0, #7, #1	@ tmp203, nal_header,,
	mov	r5, r0	@ nal_header,
	ldr	r0, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r1, [r0, #4]	@ tmp199, <variable>.nal_ref_idc
	ldr	ip, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [ip, #76]	@ tmp203, <variable>.forbidden_bit
	mvn	r2, #0	@ tmp209,
	ldr	r3, [r4, #232]	@ temp.11003, <variable>.pCurrNal
	ldr	r1, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r0, r1, #32	@ tmp205, <variable>.nal_bitoffset,
	str	r0, [r3, #64]	@ tmp205, <variable>.nal_bitoffset
	ldr	ip, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r8, [r4, #10]	@ tmp190, <variable>.SeErrFlg
	strb	r2, [ip, #5]	@ tmp209, <variable>.svc_extension_flag
	ldr	r1, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ prephitmp.10971, <variable>.nal_unit_type
	cmp	r3, #14	@ prephitmp.10971,
	cmpne	r3, #20	@, prephitmp.10971,
	beq	.L4416	@,
.L4355:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC467	@,
	ldr	r2, [r4, #68]	@, <variable>.TotalNal
	movt	r1, #:upper16:.LC467	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #68]	@ prephitmp.10973, <variable>.TotalNal
	movw	ip, #371	@ tmp267,
	cmp	r3, ip	@ prephitmp.10973, tmp267
	beq	.L4417	@,
.L4359:
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r3, r3, #1	@ tmp269, prephitmp.10973,
	str	r3, [r4, #68]	@ tmp269, <variable>.TotalNal
	ldrb	r2, [r2, #2]	@ zero_extendqisi2	@ temp.11010, <variable>.nal_unit_type
	sub	r1, r2, #1	@ tmp271, temp.11010,
	cmp	r1, #29	@ tmp271,
	ldrls	pc, [pc, r1, asl #2]	@ tmp271
	b	.L4360	@
.L4374:
	.word	.L4361
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4361
	.word	.L4362
	.word	.L4363
	.word	.L4364
	.word	.L4365
	.word	.L4366
	.word	.L4367
	.word	.L4368
	.word	.L4369
	.word	.L4370
	.word	.L4371
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4372
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4360
	.word	.L4373
.L4416:
	mov	r1, #24	@,
	mov	r0, r6	@, D.47451
	bl	BsGet	@
	mov	r5, r0	@ nal_header,
	ldr	r0, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	r1, r5, #23, #1	@ tmp222, nal_header,,
	strb	r1, [r0, #5]	@ tmp222, <variable>.svc_extension_flag
	ldr	r3, [r4, #232]	@ prephitmp.10976, <variable>.pCurrNal
	ldrsb	r2, [r3, #5]	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r2, r8	@ <variable>.svc_extension_flag,
	bne	.L4356	@,
	mov	r2, #12992	@ tmp225,
	mov	r1, #1	@ tmp226,
	movw	ip, #12993	@ tmp230,
	strb	r1, [r4, r2]	@ tmp226, <variable>.CurrNalMvcInfo.is_valid
	movw	lr, #12994	@ tmp232,
	movw	r1, #13000	@ tmp237,
	ubfx	r0, r5, #16, #6	@ tmp235, nal_header,,
	ubfx	r2, r5, #22, #1	@ D.47477, nal_header,,
	strb	r0, [r4, lr]	@ tmp235, <variable>.CurrNalMvcInfo.priority_id
	movw	lr, #12995	@ tmp241,
	strb	r2, [r4, ip]	@ D.47477, <variable>.CurrNalMvcInfo.non_idr_flag
	ubfx	ip, r5, #6, #10	@ tmp239, nal_header,,
	str	ip, [r4, r1]	@ tmp239, <variable>.CurrNalMvcInfo.view_id
	movw	r1, #12996	@ tmp246,
	ubfx	r0, r5, #3, #3	@ tmp244, nal_header,,
	ubfx	ip, r5, #2, #1	@ tmp249, nal_header,,
	strb	r0, [r4, lr]	@ tmp244, <variable>.CurrNalMvcInfo.temporal_id
	movw	lr, #12997	@ tmp251,
	strb	ip, [r4, r1]	@ tmp249, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r1, #12998	@ tmp256,
	ubfx	r0, r5, #1, #1	@ tmp254, nal_header,,
	and	ip, r5, #1	@ tmp258, nal_header,
	strb	r0, [r4, lr]	@ tmp254, <variable>.CurrNalMvcInfo.inter_view_flag
	strb	ip, [r4, r1]	@ tmp258, <variable>.CurrNalMvcInfo.reserved_one_bit
	ldrb	lr, [r3, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	lr, #20	@ <variable>.nal_unit_type,
	beq	.L4418	@,
.L4356:
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r0, lr, #24	@ tmp263, <variable>.nal_bitoffset,
	str	r0, [r3, #64]	@ tmp263, <variable>.nal_bitoffset
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r3, #2]	@ zero_extendqisi2	@ prephitmp.10971, <variable>.nal_unit_type
	b	.L4355	@
.L4360:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC486	@,
	mov	r3, r5	@, nal_header
	movt	r1, #:upper16:.LC486	@,
	bl	dprint_vfmw	@
	cmp	r5, #256	@ nal_header,
	beq	.L4395	@,
	movw	r1, #:lower16:.LC487	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC487	@,
	bl	dprint_vfmw	@
.L4395:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
.L4414:
	movw	lr, #:lower16:g_event_report	@ tmp429,
	movt	lr, #:upper16:g_event_report	@ tmp429,
	ldr	ip, [lr, #0]	@ g_event_report.11051, g_event_report
	cmp	ip, #0	@ g_event_report.11051,
	beq	.L4389	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.11051
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4361:
	ldr	r3, [r4, #80]	@, <variable>.TotalSlice
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC469	@,
	movt	r1, #:upper16:.LC469	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r7, #:lower16:11117163	@ tmp274,
	movt	r7, #:upper16:11117163	@ tmp274,
	movw	ip, #:lower16:11117168	@ tmp278,
	mov	lr, #12992	@ tmp290,
	ldrb	r5, [r0, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	movt	ip, #:upper16:11117168	@ tmp278,
	ldrb	r6, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrNalMvcInfo.is_valid
	movw	r1, #:lower16:11117172	@ tmp283,
	movw	r2, #:lower16:11117171	@ tmp285,
	movt	r1, #:upper16:11117172	@ tmp283,
	strb	r5, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r2, #:upper16:11117171	@ tmp285,
	ldrb	r7, [r0, #4]	@ zero_extendqisi2	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	movw	r3, #:lower16:11118800	@ tmp288,
	cmp	r6, #1	@ <variable>.CurrNalMvcInfo.is_valid,
	movt	r3, #:upper16:11118800	@ tmp288,
	mov	r5, #0	@ tmp286,
	strb	r7, [r4, ip]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	mvn	ip, #0	@ tmp289,
	ldrb	r0, [r0, #5]	@ zero_extendqisi2	@ temp.11016, <variable>.svc_extension_flag
	str	ip, [r4, r3]	@ tmp289, <variable>.CurrSlice.view_id
	strb	r5, [r4, r2]	@ tmp286, <variable>.CurrSlice.mvcinfo_flag
	strb	r0, [r4, r1]	@ temp.11016, <variable>.CurrSlice.svc_extension_flag
	beq	.L4419	@,
	cmp	r0, #255	@ temp.11016,
	beq	.L4420	@,
.L4376:
	ldr	r2, [r4, #88]	@, <variable>.TotalPicNum
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC470	@,
	movt	r1, #:upper16:.LC470	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SliceCheck	@
	subs	r5, r0, #0	@ ret.11017,
	bne	.L4421	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSlice	@
	cmn	r0, #2	@ ret,
	mov	r6, r0	@ ret,
	beq	.L4386	@,
	cmp	r0, #0	@ ret,
	beq	.L4386	@,
	movw	lr, #:lower16:g_event_report	@ tmp341,
	movt	lr, #:upper16:g_event_report	@ tmp341,
	ldr	ip, [lr, #0]	@ g_event_report.11018, g_event_report
	cmp	ip, #0	@ g_event_report.11018,
	movne	r2, r5	@, ret.11017
	bne	.L4409	@,
.L4410:
	mvn	r6, #0	@ ret,
	b	.L4386	@
.L4362:
	mov	r2, #6	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC475	@,
	movt	r1, #:upper16:.LC475	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSEI	@
	mov	r6, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r6, #0	@ ret,
	beq	.L4386	@,
	movw	r1, #:lower16:.LC476	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC476	@,
	bl	dprint_vfmw	@
	b	.L4414	@
.L4363:
	mov	r2, #7	@,
	ldr	r3, [r4, #72]	@, <variable>.TotalSPS
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC473	@,
	movt	r1, #:upper16:.LC473	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSPS	@
	mov	r6, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r6, #0	@ ret,
	bne	.L4422	@,
	ldr	r0, [r4, #72]	@ <variable>.TotalSPS, <variable>.TotalSPS
	add	r1, r0, #1	@ tmp359, <variable>.TotalSPS,
	str	r1, [r4, #72]	@ tmp359, <variable>.TotalSPS
.L4386:
	mov	r0, r6	@, ret
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L4365:
	mov	r2, #9	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC477	@,
	movt	r1, #:upper16:.LC477	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4364:
	mov	r2, #8	@,
	ldr	r3, [r4, #76]	@, <variable>.TotalPPS
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC471	@,
	movt	r1, #:upper16:.LC471	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecPPS	@
	mov	r6, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r6, #0	@ ret,
	bne	.L4423	@,
	ldr	r2, [r4, #76]	@ <variable>.TotalPPS, <variable>.TotalPPS
	add	r3, r2, #1	@ tmp350, <variable>.TotalPPS,
	str	r3, [r4, #76]	@ tmp350, <variable>.TotalPPS
	b	.L4386	@
.L4366:
	mov	r2, #10	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC478	@,
	movt	r1, #:upper16:.LC478	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4367:
	mov	r2, #11	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC480	@,
	movt	r1, #:upper16:.LC480	@,
	bl	dprint_vfmw	@
	mov	r0, r6	@, D.47451
	mov	r1, #32	@,
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r5, r0	@ D.47589,
	mov	r0, r6	@, D.47451
	bl	BsGet	@
	movw	r6, #:lower16:1213419593	@ tmp372,
	movw	ip, #:lower16:1128615492	@ tmp369,
	movt	r6, #:upper16:1213419593	@ tmp372,
	movt	ip, #:upper16:1128615492	@ tmp369,
	cmp	r0, ip	@, tmp369
	cmpeq	r5, r6	@, D.47589, tmp372
	bne	.L4390	@,
	movw	r5, #:lower16:g_event_report	@ tmp436,
	movt	r5, #:upper16:g_event_report	@ tmp436,
	mov	lr, #1	@ tmp377,
	strb	lr, [r4, #1]	@ tmp377, <variable>.IsStreamEndFlag
	ldr	ip, [r5, #0]	@ g_event_report.11032, g_event_report
	cmp	ip, #0	@ g_event_report.11032,
	beq	.L4391	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #112	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.11032
.L4391:
	mov	r6, #0	@ tmp381,
	mov	r0, r4	@, pMvcCtx
	strb	r6, [r4, #0]	@ tmp381, <variable>.StartMode
	bl	MVC_DecVDM	@
	cmp	r0, r6	@,
	bne	.L4424	@,
.L4390:
	mov	r0, r4	@, pMvcCtx
	mov	r6, #0	@ ret,
	bl	MVC_ClearCurrNal	@
	b	.L4386	@
.L4368:
	mov	r2, #12	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC479	@,
	movt	r1, #:upper16:.LC479	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4369:
	mov	r2, #13	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC481	@,
	movt	r1, #:upper16:.LC481	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4370:
	mov	r2, #14	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC482	@,
	movt	r1, #:upper16:.LC482	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4371:
	mov	r2, #15	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC483	@,
	movt	r1, #:upper16:.LC483	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSubSPS	@
	mov	r6, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r6, #0	@ ret,
	bne	.L4425	@,
	ldr	r1, [r4, #20]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	add	r2, r1, #1	@ tmp392, <variable>.TotalSUBSPS,
	str	r2, [r4, #20]	@ tmp392, <variable>.TotalSUBSPS
	b	.L4386	@
.L4372:
	mov	r2, #19	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC484	@,
	movt	r1, #:upper16:.LC484	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4373:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC485	@,
	mov	r2, #30	@,
	movt	r1, #:upper16:.LC485	@,
	bl	dprint_vfmw	@
	cmp	r7, #0	@ NalMode,
	beq	.L4426	@,
.L4393:
	mov	r1, #32	@,
	mov	r0, r6	@, D.47451
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r5, r0	@ D.47617,
	mov	r0, r6	@, D.47451
	bl	BsGet	@
	ldr	r3, .L4428	@ tmp409,
	and	r6, r5, #65280	@ tmp399, D.47617,
	mov	r1, r5, asl #24	@ tmp397, D.47617,
	orr	r1, r1, r5, lsr #24	@, tmp398, tmp397, D.47617,
	and	r5, r5, #16711680	@ tmp395, D.47617,
	orr	r1, r1, r6, asl #8	@, D.47625, tmp398, tmp399,
	ldr	r6, [r3, #4]	@ tmp417,
	ldr	r3, [r3, #8]	@ tmp411,
	orr	r5, r1, r5, lsr #8	@, tmp413, D.47625, tmp395,
	and	ip, r0, #65280	@ tmp405, D.47618,
	mov	r2, r0, asl #24	@ tmp403, D.47618,
	orr	r2, r2, r0, lsr #24	@, tmp404, tmp403, D.47618,
	and	r0, r0, #16711680	@ tmp401, D.47618,
	orr	ip, r2, ip, asl #8	@, D.47633, tmp404, tmp405,
	orr	r0, ip, r0, lsr #8	@, tmp407, D.47633, tmp401,
	cmp	r0, r3	@ tmp407, tmp411
	cmpeq	r5, r6	@, tmp413, tmp417
	bne	.L4389	@,
	movw	r5, #:lower16:g_event_report	@ tmp441,
	movt	r5, #:upper16:g_event_report	@ tmp441,
	ldr	ip, [r5, #0]	@ g_event_report.11046, g_event_report
	cmp	ip, #0	@ g_event_report.11046,
	beq	.L4394	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #112	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.11046
.L4394:
	mov	r7, #0	@ tmp424,
	mov	r0, r4	@, pMvcCtx
	strb	r7, [r4, #0]	@ tmp424, <variable>.StartMode
	bl	MVC_DecVDM	@
	subs	r6, r0, #0	@ ret,
	beq	.L4386	@,
	ldr	ip, [r5, #0]	@ g_event_report.11048, g_event_report
	cmp	ip, r7	@ g_event_report.11048,
	movne	r2, r7	@, tmp424
	beq	.L4410	@,
.L4409:
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	mvn	r6, #0	@ ret,
	blx	ip	@ g_event_report.11035
	b	.L4386	@
.L4389:
	mov	r6, #0	@ ret,
	b	.L4386	@
.L4417:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC468	@,
	movt	r1, #:upper16:.LC468	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #68]	@ prephitmp.10973, <variable>.TotalNal
	b	.L4359	@
.L4418:
	cmp	r2, r8	@ D.47477,
	movne	r2, #1	@ iftmp.880,
	moveq	r2, #5	@ iftmp.880,
	strb	r2, [r3, #2]	@ iftmp.880, <variable>.nal_unit_type
	ldr	r3, [r4, #232]	@ prephitmp.10976, <variable>.pCurrNal
	b	.L4356	@
.L4420:
	ldr	r6, [r4, #20]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	cmp	r6, #0	@ <variable>.TotalSUBSPS,
	beq	.L4376	@,
	movw	r2, #:lower16:10770768	@ tmp311,
	movt	r2, #:upper16:10770768	@ tmp311,
	ldr	lr, [r4, r2]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	cmp	lr, #0	@ <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L4379	@,
	movw	r0, #:lower16:10770764	@ tmp314,
	movt	r0, #:upper16:10770764	@ tmp314,
	ldrb	r5, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSUBSPS.is_valid, <variable>.CurrSUBSPS.is_valid
	cmp	r5, #1	@ <variable>.CurrSUBSPS.is_valid,
	beq	.L4427	@,
.L4379:
	add	r3, r4, #12992	@ ivtmp.10995, pMvcCtx,
	mov	r1, #0	@ i,
	add	r3, r3, #16	@ ivtmp.10995, ivtmp.10995,
.L4378:
	ldr	ip, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r6, r3, #335872	@ ivtmp.10995, ivtmp.10995,
	add	r2, r6, #308	@ ivtmp.10995, ivtmp.10995,
	cmp	ip, #0	@ <variable>.num_views_minus1,
	beq	.L4381	@,
	ldrb	lr, [r3, #-4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	bne	.L4403	@,
.L4381:
	ldr	r0, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r1, r1, #1	@ i, i,
	cmp	r0, #0	@ <variable>.num_views_minus1,
	mov	r3, r1	@ tmp438, i
	beq	.L4399	@,
	ldrb	r0, [r2, #-4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #0	@ <variable>.is_valid,
	bne	.L4403	@,
.L4399:
	add	r1, r3, #1	@ i, tmp438,
	add	r3, r2, #335872	@ ivtmp.10995, ivtmp.10995,
	cmp	r1, #32	@ i,
	add	r3, r3, #308	@ ivtmp.10995, ivtmp.10995,
	bne	.L4378	@,
	mvn	r2, #0	@ baseviewid,
.L4382:
	movw	ip, #:lower16:11118800	@ tmp324,
	movt	ip, #:upper16:11118800	@ tmp324,
	str	r2, [r4, ip]	@ baseviewid, <variable>.CurrSlice.view_id
.L4383:
	cmn	r2, #1	@ baseviewid,
	beq	.L4376	@,
	movw	ip, #:lower16:11117163	@ tmp334,
	movt	ip, #:upper16:11117163	@ tmp334,
	movw	r3, #:lower16:11117171	@ tmp327,
	movw	r1, #:lower16:11117170	@ tmp330,
	movt	r3, #:upper16:11117171	@ tmp327,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r1, #:upper16:11117170	@ tmp330,
	movw	r2, #:lower16:11117169	@ tmp333,
	movt	r2, #:upper16:11117169	@ tmp333,
	mov	lr, #1	@ tmp328,
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	r5, #0	@, tmp336
	moveq	r5, #1	@, tmp336
	strb	lr, [r4, r1]	@ tmp328, <variable>.CurrSlice.inter_view_flag
	strb	r5, [r4, r2]	@ tmp336, <variable>.CurrSlice.anchor_pic_flag
	strb	lr, [r4, r3]	@ tmp328, <variable>.CurrSlice.mvcinfo_flag
	b	.L4376	@
.L4426:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	b	.L4393	@
.L4419:
	movw	r7, #13000	@ tmp296,
	movw	ip, #12996	@ tmp299,
	movw	r1, #12997	@ tmp303,
	ldr	r8, [r4, r7]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrNalMvcInfo.view_id
	ldrb	r7, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r0, #:lower16:11117169	@ tmp298,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrNalMvcInfo.inter_view_flag
	movt	r0, #:upper16:11117169	@ tmp298,
	movw	r1, #:lower16:11117170	@ tmp302,
	movt	r1, #:upper16:11117170	@ tmp302,
	strb	r6, [r4, r2]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrSlice.mvcinfo_flag
	str	r8, [r4, r3]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrSlice.view_id
	strb	r7, [r4, r0]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	strb	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	strb	r5, [r4, lr]	@ tmp286, <variable>.CurrNalMvcInfo.is_valid
	b	.L4376	@
.L4421:
	movw	r6, #:lower16:g_event_report	@ tmp340,
	movt	r6, #:upper16:g_event_report	@ tmp340,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	ldr	ip, [r6, #0]	@ g_event_report.882, g_event_report
	cmp	ip, #0	@ g_event_report.882,
	movne	r2, #0	@,
	bne	.L4409	@,
	mvn	r6, #0	@ ret,
	b	.L4386	@
.L4424:
	ldr	ip, [r5, #0]	@ g_event_report.11035, g_event_report
	cmp	ip, r6	@ g_event_report.11035,
	beq	.L4410	@,
	mov	r2, r6	@, tmp381
	b	.L4409	@
.L4403:
	movw	r5, #:lower16:336180	@ tmp320,
	movt	r5, #:upper16:336180	@ tmp320,
	mla	r3, r5, r1, r4	@ tmp321, tmp320, i, pMvcCtx
	add	r2, r3, #12992	@ tmp322, tmp321,
	add	r1, r2, #16	@ tmp322, tmp322,
	ldr	r2, [r1, #4]	@ baseviewid, <variable>.view_id
	b	.L4382	@
.L4425:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC322	@,
	movt	r1, #:upper16:.LC322	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp388,
	movt	r3, #:upper16:g_event_report	@ tmp388,
	ldr	ip, [r3, #0]	@ g_event_report.11039, g_event_report
	cmp	ip, #0	@ g_event_report.11039,
	beq	.L4410	@,
	sub	r2, fp, #36	@ tmp390,,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mvn	r6, #0	@ tmp389,
	mov	r1, #100	@,
	str	r6, [r2, #-4]!	@ tmp389, para
	mov	r3, #4	@,
	blx	ip	@ g_event_report.11039
	b	.L4386	@
.L4423:
	movw	r5, #:lower16:g_event_report	@ tmp345,
	movt	r5, #:upper16:g_event_report	@ tmp345,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC472	@,
	movt	r1, #:upper16:.LC472	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.11020, g_event_report
	cmp	ip, #0	@ g_event_report.11020,
	beq	.L4410	@,
.L4412:
	sub	r2, fp, #36	@ tmp356,,
	mvn	r6, #0	@ tmp355,
	mov	r1, #100	@,
	mov	r3, #4	@,
	str	r6, [r2, #-4]!	@ tmp355,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	blx	ip	@ g_event_report.11025
	ldr	ip, [r5, #0]	@ g_event_report.11027, g_event_report
	cmp	ip, #0	@ g_event_report.11027,
	beq	.L4410	@,
	mov	r2, #0	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.11027
	b	.L4386	@
.L4422:
	movw	r5, #:lower16:g_event_report	@ tmp354,
	movt	r5, #:upper16:g_event_report	@ tmp354,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC474	@,
	movt	r1, #:upper16:.LC474	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.11025, g_event_report
	cmp	ip, #0	@ g_event_report.11025,
	bne	.L4412	@,
	mvn	r6, #0	@ ret,
	b	.L4386	@
.L4427:
	movw	r6, #:lower16:10770772	@ tmp325,
	movt	r6, #:upper16:10770772	@ tmp325,
	ldr	r2, [r4, r6]	@ baseviewid, <variable>.CurrSUBSPS.view_id
	str	r2, [r4, r3]	@ baseviewid, <variable>.CurrSlice.view_id
	b	.L4383	@
.L4429:
	.align	2
.L4428:
	.word	.LANCHOR2+432
	.fnend
	.size	MVC_DecOneNal, .-MVC_DecOneNal
	.align	2
	.global	MVC_DEC_DecodePacket
	.type	MVC_DEC_DecodePacket, %function
MVC_DEC_DecodePacket:
	.fnstart
.LFB1681:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pPacket
	mov	r2, #0	@ tmp158,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	r2, [fp, #-40]	@ tmp158, NewNum
	str	r2, [fp, #-36]	@ tmp158, ReadNum
	str	r2, [fp, #-32]	@ tmp158, RefNum
	beq	.L4458	@,
	ldr	r3, [r0, #224]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldrb	ip, [r0, #5]	@ zero_extendqisi2	@ <variable>.HaveNalNotDecoded, <variable>.HaveNalNotDecoded
	ldr	r0, [r3, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	cmp	ip, #1	@ <variable>.HaveNalNotDecoded,
	mov	ip, r0, asl #16	@ tmp164, <variable>.s32DecMode,
	and	r0, ip, #196608	@ tmp166, tmp164,
	str	r0, [r4, #108]	@ tmp166, <variable>.advanced_cfg
	ldr	ip, [r3, #0]	@ <variable>.s32RefErrThr, <variable>.s32RefErrThr
	str	ip, [r4, #112]	@ <variable>.s32RefErrThr, <variable>.ref_error_thr
	ldr	r0, [r3, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	strb	r2, [r4, #10]	@ tmp158, <variable>.SeErrFlg
	str	r0, [r4, #116]	@ <variable>.s32OutErrThr, <variable>.out_error_thr
	beq	.L4433	@,
	ldr	lr, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	lr, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L4459	@,
.L4434:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ReceivePacket	@
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #0	@ tmp184,
	movw	r3, #:lower16:11155196	@ tmp182,
	movt	r3, #:upper16:11155196	@ tmp182,
	strb	ip, [r4, #5]	@ tmp184, <variable>.HaveNalNotDecoded
	str	r2, [r4, r3]	@ <variable>.pCurrNal, <variable>.pLastNal
	cmp	r0, ip	@,
	movne	r0, ip	@ ret, tmp184
	beq	.L4436	@,
.L4432:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L4459:
	ldr	r3, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r3, #1	@ <variable>.s32WaitFsFlag,
	bne	.L4434	@,
	movw	r3, #:lower16:11155192	@ tmp176,
	movt	r3, #:upper16:11155192	@ tmp176,
	ldr	r0, [r4, r3]	@ <variable>.u32SCDWrapAround, <variable>.u32SCDWrapAround
	cmp	r0, #1	@ <variable>.u32SCDWrapAround,
	bne	.L4434	@,
	movw	r1, #:lower16:11155196	@ tmp178,
	movt	r1, #:upper16:11155196	@ tmp178,
	str	r2, [r4, r3]	@ tmp158, <variable>.u32SCDWrapAround
	ldr	r2, [r4, r1]	@ <variable>.pLastNal, <variable>.pLastNal
	str	r2, [r4, #232]	@ <variable>.pLastNal, <variable>.pCurrNal
	b	.L4435	@
.L4433:
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r2, #0	@ <variable>.pCurrNal,
	beq	.L4460	@,
.L4435:
	mov	r5, #0	@ tmp288,
	strb	r5, [r4, #5]	@ tmp288, <variable>.HaveNalNotDecoded
.L4436:
	mov	r5, #0	@ tmp188,
	str	r5, [r2, #64]	@ tmp188, <variable>.nal_bitoffset
	ldr	r6, [r4, #232]	@ temp.11086, <variable>.pCurrNal
	add	r5, r4, #548	@ D.48199, pMvcCtx,
	mov	r0, r5	@, D.48199
	ldr	r2, [r6, #12]	@, <variable>.bitstream_length
	ldr	r1, [r6, #8]	@, <variable>.streamBuffer
	bl	BsInit	@
	mov	r1, #32	@,
	mov	r0, r5	@, D.48199
	bl	BsGet	@
	ldr	r1, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	and	r6, r0, #31	@ nal_unit_type, D.48203,
	strb	r6, [r1, #2]	@ nal_unit_type, <variable>.nal_unit_type
	ldr	r3, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	r2, r0, #5, #2	@ tmp196, D.48203,,
	mvn	r1, #0	@ tmp199,
	strb	r2, [r3, #4]	@ tmp196, <variable>.nal_ref_idc
	ldr	ip, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r1, [ip, #5]	@ tmp199, <variable>.svc_extension_flag
	ldr	r0, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	r2, #20	@ <variable>.nal_unit_type,
	beq	.L4438	@,
.L4456:
	cmp	r6, #5	@ nal_unit_type,
	movne	r3, #0	@, prephitmp.11111
	moveq	r3, #1	@, prephitmp.11111
	cmp	r6, #1	@ nal_unit_type,
	movne	r6, #0	@, prephitmp.11069
	moveq	r6, #1	@, prephitmp.11069
.L4439:
	orr	r0, r3, r6	@ tmp242, prephitmp.11111, prephitmp.11069
	mov	r6, #0	@ tmp239,
	tst	r0, #255	@ tmp242
	strb	r6, [r4, #10]	@ tmp239, <variable>.SeErrFlg
	beq	.L4443	@,
	mov	r0, r4	@, pMvcCtx
	sub	r1, fp, #44	@,,
	sub	r2, fp, #48	@,,
	bl	MVC_InquireSliceProperty	@
	cmp	r0, r6	@,
	bne	.L4444	@,
	ldr	r2, [fp, #-44]	@ MVC_IsNewPic, MVC_IsNewPic
	ldr	r3, [r4, #128]	@ <variable>.PicCounter, <variable>.PicCounter
	cmp	r2, #1	@ MVC_IsNewPic,
	addeq	r3, r3, #1	@, tmp250, <variable>.PicCounter
	str	r3, [r4, #128]	@ tmp250, <variable>.PicCounter
	beq	.L4461	@,
.L4445:
	ldr	r6, [fp, #-48]	@ IsSizeChanged, IsSizeChanged
	cmp	r6, #1	@ IsSizeChanged,
	beq	.L4462	@,
.L4443:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_FindTrailZeros	@
	cmp	r0, #0	@,
	bne	.L4463	@,
.L4452:
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r6, #0	@ tmp282,
	mov	r0, r5	@, D.48199
	str	r6, [r2, #64]	@ tmp282, <variable>.nal_bitoffset
	ldr	ip, [r4, #232]	@ temp.11105, <variable>.pCurrNal
	ldr	r1, [ip, #8]	@, <variable>.streamBuffer
	ldr	r2, [ip, #12]	@, <variable>.bitstream_length
	bl	BsInit	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, tmp282
	bl	MVC_DecOneNal	@
	cmn	r0, #2	@ ret,
	beq	.L4432	@,
	cmp	r0, r6	@ ret,
	beq	.L4432	@,
	movw	r1, #:lower16:g_event_report	@ tmp285,
	movt	r1, #:upper16:g_event_report	@ tmp285,
	ldr	ip, [r1, #0]	@ g_event_report.11109, g_event_report
	cmp	ip, r6	@ g_event_report.11109,
	bne	.L4457	@,
.L4451:
	mvn	r0, #0	@ ret,
	b	.L4432	@
.L4463:
	movw	r1, #:lower16:.LC488	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC488	@,
	bl	dprint_vfmw	@
	b	.L4452	@
.L4461:
	movw	r0, #:lower16:11117161	@ tmp252,
	movt	r0, #:upper16:11117161	@ tmp252,
	ldr	lr, [r4, #132]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	ldr	r1, [r4, #64]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	ip, #1	@ <variable>.CurrSlice.field_pic_flag,
	addeq	lr, lr, #1	@ tmp255, <variable>.NewPicCounter,
	addne	lr, lr, #2	@ tmp257, <variable>.NewPicCounter,
	cmp	r1, #0	@ <variable>.SliceParaNum,
	str	lr, [r4, #132]	@ tmp257, <variable>.NewPicCounter
	beq	.L4445	@,
	ldr	lr, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp261,
	mov	r2, #12	@,
	mov	r0, r5	@, D.48199
	ldr	r1, .L4465	@,
	str	r3, [lr, #64]	@ tmp261, <variable>.nal_bitoffset
	bl	BsInit	@
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecOneNal	@
	movw	ip, #:lower16:11117161	@ tmp264,
	movt	ip, #:upper16:11117161	@ tmp264,
	ldr	r2, [r4, #132]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	mov	r3, #1	@ tmp270,
	mvn	r0, #1	@ ret,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	strb	r3, [r4, #5]	@ tmp270, <variable>.HaveNalNotDecoded
	cmp	r1, #1	@ <variable>.CurrSlice.field_pic_flag,
	subeq	r2, r2, #1	@ tmp267, <variable>.NewPicCounter,
	subne	r2, r2, #2	@ tmp269, <variable>.NewPicCounter,
	str	r2, [r4, #132]	@ tmp269, <variable>.NewPicCounter
	b	.L4432	@
.L4438:
	mov	r0, r5	@, D.48199
	mov	r1, #24	@,
	bl	BsGet	@
	ldr	r2, [r4, #232]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	ip, r0, #23, #1	@ tmp210, D.48211,,
	strb	ip, [r2, #5]	@ tmp210, <variable>.svc_extension_flag
	ldr	r2, [r4, #232]	@ temp.11093, <variable>.pCurrNal
	ldrsb	r3, [r2, #5]	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r3, #0	@ <variable>.svc_extension_flag,
	bne	.L4456	@,
	movw	ip, #12993	@ tmp222,
	ubfx	r1, r0, #22, #1	@ D.48220, D.48211,,
	movw	r6, #12997	@ tmp233,
	strb	r1, [r4, ip]	@ D.48220, <variable>.CurrNalMvcInfo.non_idr_flag
	mov	ip, #12992	@ tmp217,
	cmp	r1, #0	@ D.48220,
	ubfx	lr, r0, #1, #1	@ tmp236, D.48211,,
	strb	lr, [r4, r6]	@ tmp236, <variable>.CurrNalMvcInfo.inter_view_flag
	mov	r6, #1	@ tmp218,
	strb	r6, [r4, ip]	@ tmp218, <variable>.CurrNalMvcInfo.is_valid
	movw	ip, #13000	@ tmp224,
	ubfx	lr, r0, #6, #10	@ tmp226, D.48211,,
	str	lr, [r4, ip]	@ tmp226, <variable>.CurrNalMvcInfo.view_id
	movw	ip, #12996	@ tmp228,
	ubfx	lr, r0, #2, #1	@ tmp231, D.48211,,
	moveq	r3, r6	@ prephitmp.11111, tmp218
	strb	lr, [r4, ip]	@ tmp231, <variable>.CurrNalMvcInfo.anchor_pic_flag
	moveq	r6, r1	@ prephitmp.11069, D.48220
	movne	r1, r6	@ prephitmp.11068, prephitmp.11069
	moveq	r1, #5	@ prephitmp.11068,
	strb	r1, [r2, #2]	@ prephitmp.11068, <variable>.nal_unit_type
	b	.L4439	@
.L4462:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L4464	@,
.L4450:
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	bne	.L4443	@,
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	sub	r1, fp, #32	@,,
	sub	r2, fp, #36	@,,
	sub	r3, fp, #40	@,,
	bl	VCTRL_GetChanImgNum	@
	b	.L4443	@
.L4444:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	movw	r0, #:lower16:g_event_report	@ tmp279,
	movt	r0, #:upper16:g_event_report	@ tmp279,
	ldr	ip, [r0, #0]	@ g_event_report.919, g_event_report
	cmp	ip, #0	@ g_event_report.919,
	beq	.L4451	@,
.L4457:
	mov	r2, r6	@, tmp282
	ldr	r0, [r4, #120]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r6	@, tmp2
	blx	ip	@ g_event_report.11109
	mvn	r0, #0	@ ret,
	b	.L4432	@
.L4460:
	strb	r2, [r4, #5]	@ <variable>.pCurrNal, <variable>.HaveNalNotDecoded
	mov	r0, r2	@ ret, <variable>.pCurrNal
	b	.L4432	@
.L4464:
	movw	r1, #:lower16:.LC109	@,
	movw	r2, #13217	@,
	movt	r1, #:upper16:.LC109	@,
	mov	r3, #0	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L4450	@
.L4458:
	mov	r0, r1	@, pPacket
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #13112	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L4432	@
.L4466:
	.align	2
.L4465:
	.word	.LANCHOR2+432
	.fnend
	.size	MVC_DEC_DecodePacket, .-MVC_DEC_DecodePacket
	.global	MVC_g_NalTypeEOPIC
	.global	MVC_g_AspecRatioIdc
	.global	MVC_CalcZeroNum
	.global	MVC_g_ZZ_SCAN
	.global	MVC_g_ZZ_SCAN8
	.global	MVC_quant_intra_default
	.global	MVC_quant_inter_default
	.global	MVC_quant8_intra_default
	.global	MVC_quant8_inter_default
	.global	MVC_quant_org
	.global	MVC_quant8_org
	.global	MvcTmpBuf
	.section	.rodata
	.align	2
.LANCHOR0 = . + 0
	.type	MVC_g_ZZ_SCAN, %object
	.size	MVC_g_ZZ_SCAN, 16
MVC_g_ZZ_SCAN:
	.byte	0
	.byte	1
	.byte	4
	.byte	8
	.byte	5
	.byte	2
	.byte	3
	.byte	6
	.byte	9
	.byte	12
	.byte	13
	.byte	10
	.byte	7
	.byte	11
	.byte	14
	.byte	15
	.type	MVC_g_ZZ_SCAN8, %object
	.size	MVC_g_ZZ_SCAN8, 64
MVC_g_ZZ_SCAN8:
	.byte	0
	.byte	1
	.byte	8
	.byte	16
	.byte	9
	.byte	2
	.byte	3
	.byte	10
	.byte	17
	.byte	24
	.byte	32
	.byte	25
	.byte	18
	.byte	11
	.byte	4
	.byte	5
	.byte	12
	.byte	19
	.byte	26
	.byte	33
	.byte	40
	.byte	48
	.byte	41
	.byte	34
	.byte	27
	.byte	20
	.byte	13
	.byte	6
	.byte	7
	.byte	14
	.byte	21
	.byte	28
	.byte	35
	.byte	42
	.byte	49
	.byte	56
	.byte	57
	.byte	50
	.byte	43
	.byte	36
	.byte	29
	.byte	22
	.byte	15
	.byte	23
	.byte	30
	.byte	37
	.byte	44
	.byte	51
	.byte	58
	.byte	59
	.byte	52
	.byte	45
	.byte	38
	.byte	31
	.byte	39
	.byte	46
	.byte	53
	.byte	60
	.byte	61
	.byte	54
	.byte	47
	.byte	55
	.byte	62
	.byte	63
	.type	MVC_SarTable.45943, %object
	.size	MVC_SarTable.45943, 136
MVC_SarTable.45943:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.word	4
	.word	3
	.word	3
	.word	2
	.word	2
	.word	1
	.type	__func__.43848, %object
	.size	__func__.43848, 18
__func__.43848:
	.ascii	"MVC_WriteSliceMsg\000"
	.space	2
	.type	__func__.38725, %object
	.size	__func__.38725, 13
__func__.38725:
	.ascii	"MVC_ClearAll\000"
	.space	3
	.type	__func__.48022, %object
	.size	__func__.48022, 13
__func__.48022:
	.ascii	"MVC_DEC_Init\000"
	.space	3
	.type	__func__.42315, %object
	.size	__func__.42315, 12
__func__.42315:
	.ascii	"MVC_InitDPB\000"
	.type	__func__.40129, %object
	.size	__func__.40129, 17
__func__.40129:
	.ascii	"MVC_DirectOutput\000"
	.space	3
	.type	__func__.38708, %object
	.size	__func__.38708, 13
__func__.38708:
	.ascii	"MVC_ClearDPB\000"
	.space	3
	.type	__func__.47357, %object
	.size	__func__.47357, 17
__func__.47357:
	.ascii	"MVC_FlushDecoder\000"
	.space	3
	.type	__func__.40755, %object
	.size	__func__.40755, 18
__func__.40755:
	.ascii	"MVC_StorePicInDpb\000"
	.space	2
	.type	__func__.47001, %object
	.size	__func__.47001, 11
__func__.47001:
	.ascii	"MVC_DecSEI\000"
	.data
	.align	2
.LANCHOR2 = . + 0
	.type	MVC_quant_intra_default, %object
	.size	MVC_quant_intra_default, 16
MVC_quant_intra_default:
	.word	471076102
	.word	538711053
	.word	622861332
	.word	707076124
	.type	MVC_quant_inter_default, %object
	.size	MVC_quant_inter_default, 16
MVC_quant_inter_default:
	.word	403967498
	.word	454562830
	.word	505092116
	.word	572398360
	.type	MVC_quant8_intra_default, %object
	.size	MVC_quant8_intra_default, 64
MVC_quant8_intra_default:
	.word	269289990
	.word	454629138
	.word	303041290
	.word	488315159
	.word	387059725
	.word	522001177
	.word	420942352
	.word	555687195
	.word	454629138
	.word	606150429
	.word	488315159
	.word	639901983
	.word	522001177
	.word	673588257
	.word	555687195
	.word	707274276
	.type	MVC_quant8_inter_default, %object
	.size	MVC_quant8_inter_default, 256
MVC_quant8_inter_default:
	.word	286199049
	.word	404100371
	.word	319884557
	.word	421008917
	.word	353571087
	.word	454629398
	.word	370479889
	.word	471537944
	.word	404100371
	.word	505158425
	.word	421008917
	.word	538844187
	.word	454629398
	.word	555752988
	.word	471537944
	.word	589373470
	.space	192
	.type	MVC_quant_org, %object
	.size	MVC_quant_org, 16
MVC_quant_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	MVC_quant8_org, %object
	.size	MVC_quant8_org, 64
MVC_quant8_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	MVC_g_NalTypeEOPIC, %object
	.size	MVC_g_NalTypeEOPIC, 12
MVC_g_NalTypeEOPIC:
	.byte	0
	.byte	0
	.byte	1
	.byte	30
	.byte	72
	.byte	83
	.byte	80
	.byte	73
	.byte	67
	.byte	69
	.byte	78
	.byte	68
	.type	MVC_g_AspecRatioIdc, %object
	.size	MVC_g_AspecRatioIdc, 112
MVC_g_AspecRatioIdc:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.type	MVC_CalcZeroNum, %object
	.size	MVC_CalcZeroNum, 256
MVC_CalcZeroNum:
	.byte	8
	.byte	7
	.byte	6
	.byte	6
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"dar=%d\012\000"
.LC1:
	.ascii	"NULL pointer: %s, L%d\012\000"
	.space	1
.LC2:
	.ascii	"/home/t00194509/HiSTBAndroidV5/images_and_tools/rel"
	.ascii	"ease/hi3798mv100/verify/maintain_spc062/HiSTBAndroi"
	.ascii	"dV5_release/HiSTBAndroidV600R001C00SPC065/device/hi"
	.ascii	"silicon/bigfish/sdk/source/kernel/linux-3.10.y/driv"
	.ascii	"ers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.c"
	.ascii	"\000"
.LC3:
	.ascii	"pMvcCtx->pCurrNal->nal_bitoffset = %d; code_len_byt"
	.ascii	"e = %d; bitstream_length = %d; pMvcCtx->pCurrNal->n"
	.ascii	"al_trail_zero_bit_num = %d\012\000"
	.space	2
.LC4:
	.ascii	"stream[%d]: bitsoffset = %d; valid_bitlen = %d; byt"
	.ascii	"espos = %x\012\000"
	.space	1
.LC5:
	.ascii	"nal_segment = %d is not expected value\012\000"
.LC6:
	.ascii	"stream[%d]: bitsoffset = %d; valid_bitlen = %d\012\000"
.LC7:
	.ascii	"new pic flag = %d\012\000"
	.space	1
.LC8:
	.ascii	"tmp slice  pps id = %d\012\000"
.LC9:
	.ascii	"MVC_PPSSPSCheckTmpId: pps with this pic_parameter_s"
	.ascii	"et_id = %d havn't decode\012\000"
	.space	3
.LC10:
	.ascii	"MVC_PPSSPSCheckTmpId: seq_parameter_set_id out of r"
	.ascii	"ange.\012\000"
	.space	2
.LC11:
	.ascii	"MVC_PPSSPSCheckTmpId: sps with this pic_parameter_s"
	.ascii	"et_id = %d havn't decode\012\000"
	.space	3
.LC12:
	.ascii	"slice  pps id = %d\012\000"
.LC13:
	.ascii	"pps with this pic_parameter_set_id = %d havn't deco"
	.ascii	"de\012\000"
	.space	1
.LC14:
	.ascii	"sps with this pic_parameter_set_id havn't decode\012"
	.ascii	"\000"
	.space	2
.LC15:
	.ascii	"subsps with this seq_parameter_set_id = %d havn't d"
	.ascii	"ecoded\012\000"
	.space	1
.LC16:
	.ascii	"sps but mvc flag %d is wrong\012\000"
	.space	2
.LC17:
	.ascii	"save pic yuv :  structure = %d;  idc = %d\012\000"
	.space	1
.LC18:
	.ascii	"structure = %d pMvcCtx->CurrPic.pic_width_in_mb = %"
	.ascii	"d pMvcCtx->CurrPic.pic_height_in_mb = %d\012\000"
	.space	3
.LC19:
	.ascii	"In one access unit,all non-base view should have th"
	.ascii	"e same subsps!\012\000"
	.space	1
.LC20:
	.ascii	"list[%d][%d]: frame_num=%d, poc=%d\012\000"
.LC21:
	.ascii	"pMvcCtx->DPB.fs[%d]: frame_num=%d poc=%d is_referen"
	.ascii	"ce=%d\012\000"
	.space	2
.LC22:
	.ascii	"\012\000"
	.space	2
.LC23:
	.ascii	"pMvcCtx->DPB.fs_ref[%d]: frame_num=%d poc=%d is_ref"
	.ascii	"erence=%d\012\000"
	.space	2
.LC24:
	.ascii	"pMvcCtx->DPB.fs_ref[%d]: MVC_FRAME.poc=%d \012\000"
.LC25:
	.ascii	"fuction return value is null,%s %d unknow error!!\012"
	.ascii	"\000"
	.space	1
.LC26:
	.ascii	"framestore %d allocate apc %d\012\000"
	.space	1
.LC27:
	.ascii	"find APC, but logic_fs_id %d abnormal(ref=%d,plfs=%"
	.ascii	"p, pdfs=%p)\012\000"
.LC28:
	.ascii	"exg_pts: %lld <-> %lld\012\000"
.LC29:
	.ascii	"MVC_FRAME %d, state=%d, is already output\012\000"
	.space	1
.LC30:
	.ascii	"plfs(fs=%p, eFoState=%d) is null, logic_fs_id = %d\012"
	.ascii	"\000"
.LC31:
	.ascii	"not used MVC_FRAME: (%d,%d)\012\000"
	.space	3
.LC32:
	.ascii	"MVC_FRAME skip: is_used=%d,skip=%d\012\000"
.LC33:
	.ascii	"topfield skip\012\000"
	.space	1
.LC34:
	.ascii	"bottom field skip\012\000"
	.space	1
.LC35:
	.ascii	"err(%d) > out_thr(%d)\012\000"
	.space	1
.LC36:
	.ascii	"MVC recycle image\012\000"
	.space	1
.LC37:
	.ascii	"%-50s%50d\012\000"
	.space	1
.LC38:
	.ascii	"DecPicTimingSEI but SPS is invalid.\012\000"
	.space	3
.LC39:
	.ascii	"SEI: cpb_removal_delay\000"
	.space	1
.LC40:
	.ascii	"SEI: dpb_output_delay\000"
	.space	2
.LC41:
	.ascii	"pic_struct\000"
	.space	1
.LC42:
	.ascii	"\012 VFMW ** release streambuff=%08x   bitstream_le"
	.ascii	"ngth=%d\012\000"
	.space	3
.LC43:
	.ascii	"MvcDec destroy\012\000"
.LC44:
	.ascii	"clear curr slice.\012\000"
	.space	1
.LC45:
	.ascii	"\012\012END of the bit buffer, copy the first packe"
	.ascii	"t!\012\012\000"
	.space	2
.LC46:
	.ascii	"0:phy:0x%x, 1:phy:0x%x; len0:%d len1:%d\012\000"
	.space	3
.LC47:
	.ascii	"0:phy:0x%x, len0:%d\012\000"
	.space	3
.LC48:
	.ascii	"\012 mvc the stream is error,len:%d\012\000"
	.space	2
.LC49:
	.ascii	"nal_ref_idc=%d, structure=%d, image_id=%d, pmv_idc="
	.ascii	"%d\012\000"
	.space	1
.LC50:
	.ascii	"logic MVC_FRAME id(=%d): get LogicFs error!\012\000"
	.space	3
.LC51:
	.ascii	"phy fs is null: pstDecodeFs = %p, pstDispOutFs = %p"
	.ascii	"\012\000"
	.space	3
.LC52:
	.ascii	"for P slice size of list equal 0(1st).\012\000"
.LC53:
	.ascii	"for P slice size of list equal 0(2nd).\012\000"
.LC54:
	.ascii	"for B slice size of two list all equal 0.\012\000"
	.space	1
.LC55:
	.ascii	"init list error.\012\000"
	.space	2
.LC56:
	.ascii	"partition fs memory fail!\012\000"
	.space	1
.LC57:
	.ascii	"ERROR: FSP_ConfigInstance fail!\012\000"
	.space	3
.LC58:
	.ascii	"stream MVC_FRAME packing type is %d! what can we do"
	.ascii	"?\012\000"
	.space	2
.LC59:
	.ascii	"clear all dec para\012\000"
.LC60:
	.ascii	"%s %d MVC_OK != MVC_InitDPB!!\012\000"
	.space	1
.LC61:
	.ascii	"cann't find FrameStore\012\000"
.LC62:
	.ascii	"========== MVC FrameStore state(is_used, is_in_dpb,"
	.ascii	" MVC_IsOutDPB) ========\012\000"
.LC63:
	.ascii	"%02d: %d %d %d\012\000"
.LC64:
	.ascii	"ReadImgNum = %d, NewImgNum = %d\012\000"
	.space	3
.LC65:
	.ascii	"FrameStore leak, MVC_ClearAll\012\000"
	.space	1
.LC66:
	.ascii	"%s %d NULL== pMvcCtx->SPS || NULL == pMvcCtx->PPS |"
	.ascii	"| NULL == pMvcCtx->DecSlicePara!!\012\000"
	.space	2
.LC67:
	.ascii	"-1 == VCTRL_GetChanIDByCtx() Err! \012\000"
.LC68:
	.ascii	"line: %d, pImage is NULL!\012\000"
	.space	1
.LC69:
	.ascii	"FS_ALLOC_ERR, MVC_ClearAll\012\000"
.LC70:
	.ascii	"Can not new logic fs! MVC_ClearAll\012\000"
.LC71:
	.ascii	"pH264Ctx is %#x, pFrameStore is %#x\012\000"
	.space	3
.LC72:
	.ascii	"line: %d, pstLogicFsImage is NULL\012\000"
	.space	1
.LC73:
	.ascii	"InsertVO err:%d, MVC_ClearAll\012\000"
	.space	1
.LC74:
	.ascii	"mvc.c line %d: MVC_FRAME para err(ret=%d), recycle "
	.ascii	"image self\012\000"
	.space	1
.LC75:
	.ascii	"[%s][%d] MVC_OutputFrmToVO return %d\012\000"
	.space	2
.LC76:
	.ascii	"[%s][%d] MVC_OutputFrmToVO return %d !\012\000"
.LC77:
	.ascii	"%s %d MVC_OK != MVC_FlushDPB!!\012\000"
.LC78:
	.ascii	"\012 receive streambuff=0x%08x; phy_addr=0x%x; bits"
	.ascii	"tream_length=%d\012\000"
	.space	3
.LC79:
	.ascii	"nal_releaMVC_SE_ERR\012\000"
	.space	3
.LC80:
	.ascii	"cann't find slot for current nal\012\000"
	.space	2
.LC81:
	.ascii	"receive a zero packet\012\000"
	.space	1
.LC82:
	.ascii	"----------------- MVC_IMODE -> %d -----------------"
	.ascii	"-\012\000"
	.space	2
.LC83:
	.ascii	"Discard this B(poc=%d) befor P, is_ref_idc=%d.\012\000"
.LC84:
	.ascii	"***** VDM start, TotalPicNum=%d, pMvcCtx->CurrPic.s"
	.ascii	"tructure=%d.\012\000"
	.space	3
.LC85:
	.ascii	"MVC_DecVDM fail [%s][%d]\012\000"
	.space	2
.LC86:
	.ascii	"line %d, get APC error, ret %d\012\000"
.LC87:
	.ascii	"InserFrmInDPB: cur pic struct = %d!\012\000"
	.space	3
.LC88:
	.ascii	"CurrPic.state is 'MVC_EMPTY'\012\000"
	.space	2
.LC89:
	.ascii	"MVC_StorePicInDpb return(%d) from L%d\012\000"
	.space	1
.LC90:
	.ascii	"line %d, return %d\012\000"
.LC91:
	.ascii	"Is IDR, but init DPB failed!\012\000"
	.space	2
.LC92:
	.ascii	"Is IDR, but FlushDPB failed!\012\000"
	.space	2
.LC93:
	.ascii	"MVC_DirectOutput mode\012\000"
	.space	1
.LC94:
	.ascii	"line %d, REPORT_IFRAME_ERR\012\000"
.LC95:
	.ascii	"err(%d) > ref_thr(%d)\012\000"
	.space	1
.LC96:
	.ascii	"MVC_Marking return %d\012\000"
	.space	1
.LC97:
	.ascii	"line %d: pMvcCtx->DPB.size = %d, ref %d, ltref %d\012"
	.ascii	"\000"
	.space	1
.LC98:
	.ascii	"line %d, MVC_GetMinPOC failed\012\000"
	.space	1
.LC99:
	.ascii	"%s: pos(%d) = pre_pos, force return.\012\000"
	.space	2
.LC100:
	.ascii	"store pic err, ret = %d\012\000"
	.space	3
.LC101:
	.ascii	"MVC_IMODE nal store pic err, ret = %d\012\000"
	.space	1
.LC102:
	.ascii	"MVC_IMODE nal flush dpb err, ret = %d\012\000"
	.space	1
.LC103:
	.ascii	"GAP found while DPB is MVC_EMPTY!\012\000"
	.space	1
.LC104:
	.ascii	"MVC_FRAME num gap try to fill it \012\000"
	.space	1
.LC105:
	.ascii	"CurrFrameNum = %d  UnusedShortTermFrameNum = %d\012"
	.ascii	"\000"
	.space	3
.LC106:
	.ascii	"cann't allocate MVC_FRAME store when gap find\012\000"
	.space	1
.LC107:
	.ascii	"allocate MVC_FRAME store when gap find\012\000"
.LC108:
	.ascii	"line %d: store gap pic err, ret=%d\012\000"
.LC109:
	.ascii	"line %d: flush dpb return %d\012\000"
	.space	2
.LC110:
	.ascii	"line %d: init dpb return %d\012\000"
	.space	3
.LC111:
	.ascii	"resolution error, the CAP_LEVEL_USER_DEFINE_WITH_OP"
	.ascii	"TION channel with s32ReRangeEn == 0 can't support s"
	.ascii	"uch bitstream.\012\000"
	.space	2
.LC112:
	.ascii	"s32MaxRefFrameNum < pMvcCtx->DPB.size, the CAP_LEVE"
	.ascii	"L_USER_DEFINE_WITH_OPTION channel can't support suc"
	.ascii	"h bitstream.\012\000"
.LC113:
	.ascii	"mem arrange err, MVC_ClearAll\012\000"
	.space	1
.LC114:
	.ascii	"get back frm\012\000"
	.space	2
.LC115:
	.ascii	"line %d: MVC_FRAME gap(=%d) > dpb size(=%d)\012\000"
	.space	3
.LC116:
	.ascii	"MVC_FRAME num gap don't allowed but gap find\012\000"
	.space	2
.LC117:
	.ascii	"line %d: frame num(%d/%d) find gap in NON-I slice b"
	.ascii	"ut here gap is not allowed\012\000"
	.space	1
.LC118:
	.ascii	"line %d: dec gap failed\012\000"
	.space	3
.LC119:
	.ascii	"line %d: alloc framestore failed\012\000"
	.space	2
.LC120:
	.ascii	"dec_pts: %lld\012\000"
	.space	1
.LC121:
	.ascii	"dec_usertag: %lld\012\000"
	.space	1
.LC122:
	.ascii	"line %d: CurrPic.frame_store is NULL\012\000"
	.space	2
.LC123:
	.ascii	"   : delta_sl   \000"
	.space	3
.LC124:
	.ascii	"SEI: frame_packing_arrangement_id\000"
	.space	2
.LC125:
	.ascii	"SEI: frame_packing_arrangement_cancel_flag\000"
	.space	1
.LC126:
	.ascii	"SEI: frame_packing_arrangement_type\000"
.LC127:
	.ascii	"SEI: quincunx_sampling_flag\000"
.LC128:
	.ascii	"SEI: content_interpretation_type\000"
	.space	3
.LC129:
	.ascii	"SEI: spatial_flipping_flag\000"
	.space	1
.LC130:
	.ascii	"SEI: frame0_flipped_flag\000"
	.space	3
.LC131:
	.ascii	"SEI: field_views_flag\000"
	.space	2
.LC132:
	.ascii	"SEI: current_frame_is_frame0_flag\000"
	.space	2
.LC133:
	.ascii	"SEI: frame0_self_contained_flag\000"
.LC134:
	.ascii	"SEI: frame1_self_contained_flag\000"
.LC135:
	.ascii	"SEI: frame0_grid_position_x\000"
.LC136:
	.ascii	"SEI: frame0_grid_position_y\000"
.LC137:
	.ascii	"SEI: frame1_grid_position_x\000"
.LC138:
	.ascii	"SEI: frame1_grid_position_y\000"
.LC139:
	.ascii	"SEI: frame_packing_arrangement_reserved_byte\000"
	.space	3
.LC140:
	.ascii	"SEI: frame_packing_arrangement_repetition_period\000"
	.space	3
.LC141:
	.ascii	"SEI: frame_packing_arrangement_extension_flag\000"
	.space	2
.LC142:
	.ascii	"SEI nal dec payload type err\012\000"
	.space	2
.LC143:
	.ascii	"SEI nal dec payloadSize err\012\000"
	.space	3
.LC144:
	.ascii	"MVC_SEI_BUFFERING_PERIOD,offset = %d,payload_size ="
	.ascii	" %d \012\000"
	.space	3
.LC145:
	.ascii	"MVC_PassBytes err [%s][%d]\012\000"
.LC146:
	.ascii	"MVC_SEI_PIC_TIMING,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	1
.LC147:
	.ascii	"MVC_SEI_PAN_SCAN_RECT,offset = %d,payload_size = %d"
	.ascii	" \012\000"
	.space	2
.LC148:
	.ascii	"MVC_SEI_FILLER_PAYLOAD,offset = %d,payload_size = %"
	.ascii	"d \012\000"
	.space	1
.LC149:
	.ascii	"MVC_SEI_USER_DATA_REGISTERED_ITU_T_T35, offset = %d"
	.ascii	", payload_size = %d \012\000"
	.space	3
.LC150:
	.ascii	"MVC_SEI_USER_DATA_UNREGISTERED, offset = %d, payloa"
	.ascii	"d_size = %d \012\000"
	.space	3
.LC151:
	.ascii	"SEI: itu_t_t35_country_code\000"
.LC152:
	.ascii	"SEI: itu_t_t35_country_code_extension_byte\000"
	.space	1
.LC153:
	.ascii	"SEI: itu_t_t35_provider_code\000"
	.space	3
.LC154:
	.ascii	"cann't dec usrdata\012\000"
.LC155:
	.ascii	"MVC_SEI_RECOVERY_POINT,offset = %d,payload_size = %"
	.ascii	"d \012\000"
	.space	1
.LC156:
	.ascii	"MVC_SEI_DEC_REF_PIC_MARKING_REPETITION,offset = %d,"
	.ascii	"payload_size = %d \012\000"
	.space	1
.LC157:
	.ascii	"MVC_SEI_SPARE_PIC,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	2
.LC158:
	.ascii	"MVC_SEI_SCENE_INFO,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	1
.LC159:
	.ascii	"MVC_SEI_SUB_SEQ_INFO,offset = %d,payload_size = %d "
	.ascii	"\012\000"
	.space	3
.LC160:
	.ascii	"MVC_SEI_SUB_SEQ_LAYER_CHARACTERISTICS,offset = %d,p"
	.ascii	"ayload_size = %d \012\000"
	.space	2
.LC161:
	.ascii	"MVC_SEI_SUB_SEQ_CHARACTERISTICS,offset = %d,payload"
	.ascii	"_size = %d \012\000"
.LC162:
	.ascii	"MVC_SEI_FULL_FRAME_FREEZE,offset = %d,payload_size "
	.ascii	"= %d \012\000"
	.space	2
.LC163:
	.ascii	"MVC_SEI_FULL_FRAME_FREEZE_RELEASE,offset = %d,paylo"
	.ascii	"ad_size = %d \012\000"
	.space	2
.LC164:
	.ascii	"MVC_SEI_FULL_FRAME_SNAPSHOT,offset = %d,payload_siz"
	.ascii	"e = %d \012\000"
.LC165:
	.ascii	"MVC_SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START,offset"
	.ascii	" = %d,payload_size = %d \012\000"
	.space	3
.LC166:
	.ascii	"MVC_SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END,offset ="
	.ascii	" %d,payload_size = %d \012\000"
	.space	1
.LC167:
	.ascii	"MVC_SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET,offset ="
	.ascii	" %d,payload_size = %d \012\000"
	.space	1
.LC168:
	.ascii	"MVC_SEI_FILM_GRAIN_CHARACTERISTICS,offset = %d,payl"
	.ascii	"oad_size = %d \012\000"
	.space	1
.LC169:
	.ascii	"MVC_SEI_DEBLOCKING_FILTER_DISPLAY_PREFERENCE,offset"
	.ascii	" = %d,payload_size = %d \012\000"
	.space	3
.LC170:
	.ascii	"MVC_SEI_STEREO_VIDEO_INFO,offset = %d,payload_size "
	.ascii	"= %d \012\000"
	.space	2
.LC171:
	.ascii	"too much usrdat, cann't dec SEI\012\000"
	.space	3
.LC172:
	.ascii	"MVC VUI: vui_mvc_num_ops_minus1\000"
.LC173:
	.ascii	"vui_mvc_num_ops_minus1 %d out of range\012\000"
.LC174:
	.ascii	"MVC VUI: vui_mvc_temporal_id[]\000"
	.space	1
.LC175:
	.ascii	"SUBSPS VUI: vui_mvc_num_target_output_views_minus1["
	.ascii	"]\000"
	.space	3
.LC176:
	.ascii	"MVC VUI: vui_mvc_view_id[][]\000"
	.space	3
.LC177:
	.ascii	"MVC VUI: vui_mvc_timing_info_present_flag\000"
	.space	2
.LC178:
	.ascii	"MVC VUI: vui_mvc_num_units_in_tick\000"
	.space	1
.LC179:
	.ascii	"MVC VUI: vui_mvc_time_scale[]\000"
	.space	2
.LC180:
	.ascii	"MVC VUI: vui_mvc_fixed_frame_rate_flag\000"
	.space	1
.LC181:
	.ascii	"MVC VUI: vui_mvc_nal_hrd_parameters_present_flag[]\000"
	.space	1
.LC182:
	.ascii	"MVC VUI: cpb_cnt_minus1\000"
.LC183:
	.ascii	"MVC VUI: bit_rate_scale\000"
.LC184:
	.ascii	"MVC VUI: cpb_size_scale\000"
.LC185:
	.ascii	"hrd->cpb_cnt_minus1 out of range\012\000"
	.space	2
.LC186:
	.ascii	"MVC VUI: bit_rate_value_minus1\000"
	.space	1
.LC187:
	.ascii	"MVC VUI: cpb_size_value_minus1\000"
	.space	1
.LC188:
	.ascii	"MVC VUI: cbr_flag\000"
	.space	2
.LC189:
	.ascii	"MVC VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC190:
	.ascii	"MVC VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC191:
	.ascii	"MVC VUI: dpb_output_delay_length_minus1\000"
.LC192:
	.ascii	"MVC VUI: time_offset_length\000"
.LC193:
	.ascii	"MVC VUI: vui_mvc_vcl_hrd_parameters_present_flag[]\000"
	.space	1
.LC194:
	.ascii	"MVC VUI: vui_mvc_low_delay_hrd_flag[]\000"
	.space	2
.LC195:
	.ascii	"MVC VUI: vui_mvc_pic_struct_present_flag[]\000"
	.space	1
.LC196:
	.ascii	"SUBSPS: num_views_minus1\000"
	.space	3
.LC197:
	.ascii	"pSubsps->num_views_minus1(%d) out of range.\012\000"
	.space	3
.LC198:
	.ascii	"SUBSPS: view_id[]\000"
	.space	2
.LC199:
	.ascii	"SUBSPS: num_anchor_refs_l0[]\000"
	.space	3
.LC200:
	.ascii	"pSubsps->num_anchor_refs_l0(%d) out of range.\012\000"
	.space	1
.LC201:
	.ascii	"SUBSPS: anchor_ref_l0[][]\000"
	.space	2
.LC202:
	.ascii	"SUBSPS: num_anchor_refs_l1[]\000"
	.space	3
.LC203:
	.ascii	"pSubsps->num_anchor_refs_l1(%d) out of range.\012\000"
	.space	1
.LC204:
	.ascii	"SUBSPS: anchor_ref_l1[][]\000"
	.space	2
.LC205:
	.ascii	"SUBSPS: num_non_anchor_refs_l0[]\000"
	.space	3
.LC206:
	.ascii	"pSubsps->num_non_anchor_refs_l0(%d) out of range.\012"
	.ascii	"\000"
	.space	1
.LC207:
	.ascii	"SUBSPS: non_anchor_ref_l0[][]\000"
	.space	2
.LC208:
	.ascii	"SUBSPS: num_non_anchor_refs_l1[]\000"
	.space	3
.LC209:
	.ascii	"pSubsps->num_non_anchor_refs_l1(%d) out of range.\012"
	.ascii	"\000"
	.space	1
.LC210:
	.ascii	"SUBSPS: non_anchor_ref_l1[][]\000"
	.space	2
.LC211:
	.ascii	"SUBSPS: num_level_values_signalled_minus1\000"
	.space	2
.LC212:
	.ascii	"num_level(%d) out of range.\012\000"
	.space	3
.LC213:
	.ascii	"SUBSPS: level_idc[]\000"
.LC214:
	.ascii	"SUBSPS: num_applicable_ops_minus1\000"
	.space	2
.LC215:
	.ascii	"num_ops(%d) out of range.\012\000"
	.space	1
.LC216:
	.ascii	"SUBSPS: applicable_op_temporal_id[][]\000"
	.space	2
.LC217:
	.ascii	"SUBSPS: applicable_op_num_target_views_minus1[][]\000"
	.space	2
.LC218:
	.ascii	"applicable_op_num_target_views(%d) out of range.\012"
	.ascii	"\000"
	.space	2
.LC219:
	.ascii	"SUBSPS: applicable_op_target_view_id[][][]\000"
	.space	1
.LC220:
	.ascii	"SUBSPS: applicable_op_num_views_minus1\000"
	.space	1
.LC221:
	.ascii	"pSubsps->applicable_op_num_views_minus1(%d) out of "
	.ascii	"range.\012\000"
	.space	1
.LC222:
	.ascii	"VUI: aspect_ratio_info_present_flag\000"
.LC223:
	.ascii	"VUI: aspect_ratio_idc\000"
	.space	2
.LC224:
	.ascii	"VUI: sar_width\000"
	.space	1
.LC225:
	.ascii	"VUI: sar_height\000"
.LC226:
	.ascii	"VUI: overscan_info_present_flag\000"
.LC227:
	.ascii	"VUI: overscan_appropriate_flag\000"
	.space	1
.LC228:
	.ascii	"VUI: video_signal_type_present_flag\000"
.LC229:
	.ascii	"VUI: video_format\000"
	.space	2
.LC230:
	.ascii	"VUI: video_full_range_flag\000"
	.space	1
.LC231:
	.ascii	"VUI: color_description_present_flag\000"
.LC232:
	.ascii	"VUI: colour_primaries\000"
	.space	2
.LC233:
	.ascii	"VUI: transfer_characteristics\000"
	.space	2
.LC234:
	.ascii	"VUI: matrix_coefficients\000"
	.space	3
.LC235:
	.ascii	"VUI: chroma_loc_info_present_flag\000"
	.space	2
.LC236:
	.ascii	"VUI: chroma_sample_loc_type_top_field\000"
	.space	2
.LC237:
	.ascii	"VUI: chroma_sample_loc_type_bottom_field\000"
	.space	3
.LC238:
	.ascii	"VUI: timing_info_present_flag\000"
	.space	2
.LC239:
	.ascii	"VUI: num_units_in_tick\000"
	.space	1
.LC240:
	.ascii	"VUI: time_scale\000"
.LC241:
	.ascii	"VUI: fixed_frame_rate_flag\000"
	.space	1
.LC242:
	.ascii	"VUI: nal_hrd_parameters_present_flag\000"
	.space	3
.LC243:
	.ascii	"VUI: cpb_cnt_minus1\000"
.LC244:
	.ascii	"VUI: bit_rate_scale\000"
.LC245:
	.ascii	"VUI: cpb_size_scale\000"
.LC246:
	.ascii	"VUI: bit_rate_value_minus1\000"
	.space	1
.LC247:
	.ascii	"VUI: cpb_size_value_minus1\000"
	.space	1
.LC248:
	.ascii	"VUI: cbr_flag\000"
	.space	2
.LC249:
	.ascii	"VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC250:
	.ascii	"VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC251:
	.ascii	"VUI: dpb_output_delay_length_minus1\000"
.LC252:
	.ascii	"VUI: time_offset_length\000"
.LC253:
	.ascii	"VUI: vcl_hrd_parameters_present_flag\000"
	.space	3
.LC254:
	.ascii	"VUI: low_delay_hrd_flag\000"
.LC255:
	.ascii	"VUI: pic_struct_present_flag\000"
	.space	3
.LC256:
	.ascii	"VUI: bitstream_restriction_flag\000"
.LC257:
	.ascii	"VUI: motion_vectors_over_pic_boundaries_flag\000"
	.space	3
.LC258:
	.ascii	"VUI: max_bytes_per_pic_denom\000"
	.space	3
.LC259:
	.ascii	"VUI: max_bits_per_mb_denom\000"
	.space	1
.LC260:
	.ascii	"VUI: log2_max_mv_length_horizontal\000"
	.space	1
.LC261:
	.ascii	"VUI: log2_max_mv_length_vertical\000"
	.space	3
.LC262:
	.ascii	"VUI: num_reorder_frames\000"
.LC263:
	.ascii	"VUI: max_dec_frame_buffering\000"
	.space	3
.LC264:
	.ascii	"SPS: chroma_format_idc\000"
	.space	1
.LC265:
	.ascii	"pSPS->chroma_format_idc out of range.\012\000"
	.space	1
.LC266:
	.ascii	"SPS: bit_depth_luma_minus8\000"
	.space	1
.LC267:
	.ascii	"bit_depth_luma_minus8 not equal 0.\012\000"
.LC268:
	.ascii	"SPS: bit_depth_chroma_minus8\000"
	.space	3
.LC269:
	.ascii	"bit_depth_chroma_minus8 not equal 0.\012\000"
	.space	2
.LC270:
	.ascii	"SPS: qpprime_y_zero_trans_bypass_flag\000"
	.space	2
.LC271:
	.ascii	"qpprime_y_zero_trans_bypass_flag not equal 0.\012\000"
	.space	1
.LC272:
	.ascii	"SPS: seq_scaling_matrix_present_flag\000"
	.space	3
.LC273:
	.ascii	"SPS: seq_scaling_list_present_flag\000"
	.space	1
.LC274:
	.ascii	"SPS: log2_max_frame_num_minus4\000"
	.space	1
.LC275:
	.ascii	"pSPS->log2_max_frame_num_minus4 out of range.\012\000"
	.space	1
.LC276:
	.ascii	"SPS: pic_order_cnt_type\000"
.LC277:
	.ascii	"pSPS->pic_order_cnt_type out of range.\012\000"
.LC278:
	.ascii	"SPS: log2_max_pic_order_cnt_lsb_minus4\000"
	.space	1
.LC279:
	.ascii	"pSPS->log2_max_pic_order_cnt_lsb_minus4 out of rang"
	.ascii	"e.\012\000"
	.space	1
.LC280:
	.ascii	"SPS: delta_pic_order_always_zero_flag\000"
	.space	2
.LC281:
	.ascii	"SPS: offset_for_non_ref_pic\000"
.LC282:
	.ascii	"SPS: offset_for_top_to_bottom_field\000"
.LC283:
	.ascii	"SPS: num_ref_frames_in_pic_order_cnt_cycle\000"
	.space	1
.LC284:
	.ascii	"pSPS->num_ref_frames_in_pic_order_cnt_cycle out of "
	.ascii	"range.\012\000"
	.space	1
.LC285:
	.ascii	"SPS: offset_for_ref_frame[i]\000"
	.space	3
.LC286:
	.ascii	"SPS: num_ref_frames\000"
.LC287:
	.ascii	"SPS: gaps_in_frame_num_value_allowed_flag\000"
	.space	2
.LC288:
	.ascii	"SPS: pic_width_in_mbs_minus1\000"
	.space	3
.LC289:
	.ascii	"pSPS->pic_width_in_mbs_minus1 out of range(=%d).\012"
	.ascii	"\000"
	.space	2
.LC290:
	.ascii	"SPS: pic_height_in_map_units_minus1\000"
.LC291:
	.ascii	"SPS: frame_mbs_only_flag\000"
	.space	3
.LC292:
	.ascii	"SPS: mb_adaptive_frame_field_flag\000"
	.space	2
.LC293:
	.ascii	"pSPS->pic_height_in_map_units_minus1 out of range.\012"
	.ascii	"\000"
.LC294:
	.ascii	"pic size too large.\012\000"
	.space	3
.LC295:
	.ascii	"level_idc %d not support.\012\000"
	.space	1
.LC296:
	.ascii	"dpb size according level : %d\012\000"
	.space	1
.LC297:
	.ascii	"pSPS->num_ref_frames(%d) > DPB size(%d), try to sel"
	.ascii	"ect the reasonable one.\012\000"
.LC298:
	.ascii	"SPS: direct_8x8_inference_flag\000"
	.space	1
.LC299:
	.ascii	"SPS: frame_cropping_flag\000"
	.space	3
.LC300:
	.ascii	"SPS: frame_cropping_rect_left_offset\000"
	.space	3
.LC301:
	.ascii	"SPS: frame_cropping_rect_right_offset\000"
	.space	2
.LC302:
	.ascii	"SPS: frame_cropping_rect_top_offset\000"
.LC303:
	.ascii	"SPS: frame_cropping_rect_bottom_offset\000"
	.space	1
.LC304:
	.ascii	"SPS: vui_parameters_present_flag\000"
	.space	3
.LC305:
	.ascii	"max_dec_frame_buffering(%d) > MaxDpbSize(%d)\012\000"
	.space	2
.LC306:
	.ascii	"SUBSPS: profile_idc\000"
.LC307:
	.ascii	"SUBSPS: constrained_set0_flag\000"
	.space	2
.LC308:
	.ascii	"SUBSPS: constrained_set1_flag\000"
	.space	2
.LC309:
	.ascii	"SUBSPS: constrained_set2_flag\000"
	.space	2
.LC310:
	.ascii	"SUBSPS: constrained_set3_flag\000"
	.space	2
.LC311:
	.ascii	"SUBSPS: constrained_set4_flag\000"
	.space	2
.LC312:
	.ascii	"SUBSPS: constrained_set5_flag\000"
	.space	2
.LC313:
	.ascii	"SUBSPS: reserved_zero_2bits\000"
.LC314:
	.ascii	"SUBSPS: level_idc\000"
	.space	2
.LC315:
	.ascii	"SUBSPS: seq_parameter_set_id\000"
	.space	3
.LC316:
	.ascii	"seq_parameter_set_id out of range.\012\000"
.LC317:
	.ascii	"MVC_BASELINE stream, try to decode, exit when FMO o"
	.ascii	"ccurred.\012\000"
	.space	3
.LC318:
	.ascii	"MVC_EXTENDED stream, try to decode, exit when datap"
	.ascii	"artition occurred.\012\000"
	.space	1
.LC319:
	.ascii	"others High profile stream, try to decode, exit whe"
	.ascii	"n high profile not support occurred.\012\000"
	.space	3
.LC320:
	.ascii	"profile_idc = %5d error\012\000"
	.space	3
.LC321:
	.ascii	"level_idc = %5d error, try to decode as level_idc 4"
	.ascii	"1.\012\000"
	.space	1
.LC322:
	.ascii	"SUBSPS decode error.\012\000"
	.space	2
.LC323:
	.ascii	"SUBSPS: bit_equal_to_one\000"
	.space	3
.LC324:
	.ascii	"SUBSPS Mvc Ext decode error.\012\000"
	.space	2
.LC325:
	.ascii	"SUBSPS: mvc_vui_parameters_present_flag\000"
.LC326:
	.ascii	"SUBSPS Mvc Vui Ext decode error.\012\000"
	.space	2
.LC327:
	.ascii	"SPS: profile_idc\000"
	.space	3
.LC328:
	.ascii	"SPS: constrained_set0_flag\000"
	.space	1
.LC329:
	.ascii	"SPS: constrained_set1_flag\000"
	.space	1
.LC330:
	.ascii	"SPS: constrained_set2_flag\000"
	.space	1
.LC331:
	.ascii	"SPS: constrained_set3_flag\000"
	.space	1
.LC332:
	.ascii	"SPS: constrained_set4_flag\000"
	.space	1
.LC333:
	.ascii	"SPS: constrained_set5_flag\000"
	.space	1
.LC334:
	.ascii	"SPS: reserved_zero_2bits\000"
	.space	3
.LC335:
	.ascii	"SPS: level_idc\000"
	.space	1
.LC336:
	.ascii	"SPS: seq_parameter_set_id\000"
	.space	2
.LC337:
	.ascii	"profile_idc = %5d error, try to decode as main prof"
	.ascii	"ile.\012\000"
	.space	3
.LC338:
	.ascii	"level_idc = %5d error, try to decode as level_idc %"
	.ascii	"d.\012\000"
	.space	1
.LC339:
	.ascii	"Line %d: SPS[%d] decode error.\012\000"
.LC340:
	.ascii	"PPS: entropy_coding_mode_flag\000"
	.space	2
.LC341:
	.ascii	"PPS: pic_order_present_flag\000"
.LC342:
	.ascii	"PPS: num_slice_groups_minus1\000"
	.space	3
.LC343:
	.ascii	"MVC_BASELINE stream with FMO, not support.\012\000"
.LC344:
	.ascii	"PPS: num_ref_idx_l0_active_minus1\000"
	.space	2
.LC345:
	.ascii	"num_ref_idx_l0_active_minus1 out of range.\012\000"
.LC346:
	.ascii	"PPS: num_ref_idx_l1_active_minus1\000"
	.space	2
.LC347:
	.ascii	"num_ref_idx_l1_active_minus1 out of range.\012\000"
.LC348:
	.ascii	"PPS: weighted prediction flag\000"
	.space	2
.LC349:
	.ascii	"PPS: weighted_bipred_idc\000"
	.space	3
.LC350:
	.ascii	"weighted_bipred_idc out of range\012\000"
	.space	2
.LC351:
	.ascii	"PPS: pic_init_qp_minus26\000"
	.space	3
.LC352:
	.ascii	"PPS: pic_init_qs_minus26\000"
	.space	3
.LC353:
	.ascii	"PPS: chroma_qp_index_offset\000"
.LC354:
	.ascii	"PPS: deblocking_filter_control_present_flag\000"
.LC355:
	.ascii	"PPS: constrained_intra_pred_flag\000"
	.space	3
.LC356:
	.ascii	"PPS: redundant_pic_cnt_present_flag\000"
.LC357:
	.ascii	"redundant pic not support when find redundant slice"
	.ascii	" later, exit\012\000"
	.space	3
.LC358:
	.ascii	"PPS: transform_8x8_mode_flag\000"
	.space	3
.LC359:
	.ascii	"PPS: pic_scaling_matrix_present_flag\000"
	.space	3
.LC360:
	.ascii	"PPS: pic_scaling_list_present_flag\000"
	.space	1
.LC361:
	.ascii	"PPS: second_chroma_qp_index_offset\000"
	.space	1
.LC362:
	.ascii	"second_chroma_qp_index_offset out of range.\012\000"
	.space	3
.LC363:
	.ascii	"PPS: pic_parameter_set_id\000"
	.space	2
.LC364:
	.ascii	"pic_parameter_set_id(%d) out of range.\012\000"
.LC365:
	.ascii	"PPS: seq_parameter_set_id\000"
	.space	2
.LC366:
	.ascii	"PPS decode error line: %d.\012\000"
.LC367:
	.ascii	"SH: pic_parameter_set_id\000"
	.space	3
.LC368:
	.ascii	"pps id:%d in sliceheader err\012\000"
	.space	2
.LC369:
	.ascii	"PPS or SPS of this slice not valid\012\000"
.LC370:
	.ascii	"MVC_PPSSPSCheck failed, PPS or SPS of this slice no"
	.ascii	"t valid\012\000"
.LC371:
	.ascii	"SH: frame_num\000"
	.space	2
.LC372:
	.ascii	"IDR NAL but frame_num!=0.\012\000"
	.space	1
.LC373:
	.ascii	"SH: field_pic_flag\000"
	.space	1
.LC374:
	.ascii	"SH: bottom_field_flag\000"
	.space	2
.LC375:
	.ascii	"field first_mb_in_slice bigger than pic size\012\000"
	.space	2
.LC376:
	.ascii	"MVC_FRAME first_mb_in_slice bigger than pic size\012"
	.ascii	"\000"
	.space	2
.LC377:
	.ascii	"SH: idr_pic_id\000"
	.space	1
.LC378:
	.ascii	"idr_pic_id bigger than 65535\012\000"
	.space	2
.LC379:
	.ascii	"SH: pic_order_cnt_lsb\000"
	.space	2
.LC380:
	.ascii	"SH: delta_pic_order_cnt_bottom\000"
	.space	1
.LC381:
	.ascii	"SH: delta_pic_order_cnt[0]\000"
	.space	1
.LC382:
	.ascii	"SH: delta_pic_order_cnt[1]\000"
	.space	1
.LC383:
	.ascii	"SH: redundant_pic_cnt\000"
	.space	2
.LC384:
	.ascii	"redundant pic not support.\012\000"
.LC385:
	.ascii	"first_mb_in_slice in currslice small than prevslice"
	.ascii	" in same pic\012\000"
	.space	3
.LC386:
	.ascii	"overflow MVC_MAX_MMCO_LEN\012\000"
	.space	1
.LC387:
	.ascii	"SH: memory_management_control_operation\000"
.LC388:
	.ascii	"SH: difference_of_pic_nums_minus1\000"
	.space	2
.LC389:
	.ascii	"SH: long_term_pic_num\000"
	.space	2
.LC390:
	.ascii	"SH: long_term_frame_idx\000"
.LC391:
	.ascii	"SH: max_long_term_frame_idx_plus1\000"
	.space	2
.LC392:
	.ascii	"mmco exceed 6\012\000"
	.space	1
.LC393:
	.ascii	"SH: no_output_of_prior_pics_flag\000"
	.space	3
.LC394:
	.ascii	"SH: long_term_reference_flag\000"
	.space	3
.LC395:
	.ascii	"IDR and no_output_of_prior_pics_flag = %d\012\000"
	.space	1
.LC396:
	.ascii	"SH: adaptive_ref_pic_marking_mode_flag\000"
	.space	1
.LC397:
	.ascii	"adaptive_ref_pic_marking_mode_flag = %d\012\000"
	.space	3
.LC398:
	.ascii	"MMCO para would save dec err\012\000"
	.space	2
.LC399:
	.ascii	"mulitislice diff no_out_of_prior_pics_flag, used fi"
	.ascii	"rst.\012\000"
	.space	3
.LC400:
	.ascii	"mulitislice diff long_term_reference_flag, used fir"
	.ascii	"st.\012\000"
.LC401:
	.ascii	"mulitislice diff adaptive_ref_pic_marking_mode_flag"
	.ascii	", used first.\012\000"
	.space	2
.LC402:
	.ascii	"TotalPicNum=%d, SliceNumInPic=%d, TotalNal=%d\012\000"
	.space	1
.LC403:
	.ascii	"SH: luma_log2_weight_denom\000"
	.space	1
.LC404:
	.ascii	"SH: chroma_log2_weight_denom\000"
	.space	3
.LC405:
	.ascii	"WP log2 exceed  and err flag = %d\012\000"
	.space	1
.LC406:
	.ascii	"SH: luma_weight_flag_l0\000"
.LC407:
	.ascii	"SH: luma_weight_l0\000"
	.space	1
.LC408:
	.ascii	"SH: luma_offset_l0\000"
	.space	1
.LC409:
	.ascii	"SH: chroma_weight_flag_l0\000"
	.space	2
.LC410:
	.ascii	"SH: chroma_weight_l0\000"
	.space	3
.LC411:
	.ascii	"SH: chroma_offset_l0\000"
	.space	3
.LC412:
	.ascii	"SH: luma_weight_flag_l1\000"
.LC413:
	.ascii	"SH: luma_weight_l1\000"
	.space	1
.LC414:
	.ascii	"SH: luma_offset_l1\000"
	.space	1
.LC415:
	.ascii	"SH: chroma_weight_flag_l1\000"
	.space	2
.LC416:
	.ascii	"SH: chroma_weight_l1\000"
	.space	3
.LC417:
	.ascii	"SH: chroma_offset_l1\000"
	.space	3
.LC418:
	.ascii	"SH: ref_pic_list_reordering_flag_l0\000"
.LC419:
	.ascii	"SH: reordering_of_pic_nums_idc_l0\000"
	.space	2
.LC420:
	.ascii	"reorder idc l0 = %d, g_SeErrFlag=%d\012\000"
	.space	3
.LC421:
	.ascii	"SH: abs_diff_pic_num_minus1_l0\000"
	.space	1
.LC422:
	.ascii	"abs_diff_pic_num_minus1_l0 = %d, g_SeErrFlag=%d\012"
	.ascii	"\000"
	.space	3
.LC423:
	.ascii	"SH: long_term_pic_idx_l0\000"
	.space	3
.LC424:
	.ascii	"SH: abs_diff_view_idx_minus1_l0\000"
.LC425:
	.ascii	"num of idc l0 exceed\012\000"
	.space	2
.LC426:
	.ascii	"SH: ref_pic_list_reordering_flag_l1\000"
.LC427:
	.ascii	"SH: reordering_of_pic_nums_idc_l1\000"
	.space	2
.LC428:
	.ascii	"reorder idc l1 = %d, g_SeErrFlag=%d\012\000"
	.space	3
.LC429:
	.ascii	"SH: abs_diff_pic_num_minus1_l1\000"
	.space	1
.LC430:
	.ascii	"abs_diff_pic_num_minus1_l1 = %d, g_SeErrFlag=%d\012"
	.ascii	"\000"
	.space	3
.LC431:
	.ascii	"SH: long_term_pic_idx_l1\000"
	.space	3
.LC432:
	.ascii	"SH: abs_diff_view_idx_minus1_l1\000"
.LC433:
	.ascii	"num of idc l1 exceed\012\000"
	.space	2
.LC434:
	.ascii	"SH: direct_spatial_mv_pred_flag\000"
.LC435:
	.ascii	"SH: num_ref_idx_override_flag\000"
	.space	2
.LC436:
	.ascii	"SH: num_ref_idx_l0_active_minus1\000"
	.space	3
.LC437:
	.ascii	"SH: num_ref_idx_l1_active_minus1\000"
	.space	3
.LC438:
	.ascii	"MVC_FRAME num_ref_idx_lx_active_minus1 exceed\012\000"
	.space	1
.LC439:
	.ascii	"field num_ref_idx_lx_active_minus1 exceed\012\000"
	.space	1
.LC440:
	.ascii	"reordering para dec err\012\000"
	.space	3
.LC441:
	.ascii	"apply_weights_flag=%d\012\000"
	.space	1
.LC442:
	.ascii	"wpt dec err\012\000"
	.space	3
.LC443:
	.ascii	"mark para dec err\012\000"
	.space	1
.LC444:
	.ascii	"SH: cabac_init_idc\000"
	.space	1
.LC445:
	.ascii	"cabac_init_idc bigger than 3\012\000"
	.space	2
.LC446:
	.ascii	"SH: slice_qp_delta\000"
	.space	1
.LC447:
	.ascii	"SH: disable_deblocking_filter_idc\000"
	.space	2
.LC448:
	.ascii	"disable_deblocking_filter_idc dec err\012\000"
	.space	1
.LC449:
	.ascii	"SH: slice_alpha_c0_offset_div2\000"
	.space	1
.LC450:
	.ascii	"slice_alpha_c0_offset_div2 dec err\012\000"
.LC451:
	.ascii	"SH: slice_beta_offset_div2\000"
	.space	1
.LC452:
	.ascii	"slice_beta_offset_div2 dec err\012\000"
.LC453:
	.ascii	"\012Slice nal or IDR nal = %d\012\000"
.LC454:
	.ascii	"sliceheader dec err\012\000"
	.space	3
.LC455:
	.ascii	"Start Reason: SliceParaNum, MaxBytesReceived = %d, "
	.ascii	"%d(thr=%d)\012\000"
	.space	1
.LC456:
	.ascii	"Too many slice or bitstream, err!\012\000"
	.space	1
.LC457:
	.ascii	"Start Reason: new_pic_flag\012\000"
.LC458:
	.ascii	"init pic err, find next recover point or next valid"
	.ascii	" sps, pps, or exit\012\000"
	.space	1
.LC459:
	.ascii	"MVC_DecList error, ret=%d\012\000"
	.space	1
.LC460:
	.ascii	"dec list err.\012\000"
	.space	1
.LC461:
	.ascii	"SH: first_mb_in_slice\000"
	.space	2
.LC462:
	.ascii	"MVC_SliceCheck first_mb_in_slice >= MAX_MB_NUM_IN_P"
	.ascii	"IC error.\012\000"
	.space	2
.LC463:
	.ascii	"SH: slice_type\000"
	.space	1
.LC464:
	.ascii	"slice type = %d\012\000"
	.space	3
.LC465:
	.ascii	"slice type = %d, err\012\000"
	.space	2
.LC466:
	.ascii	"MVC_InquireSliceProperty mvc flag %d is wrong\012\000"
	.space	1
.LC467:
	.ascii	"pMvcCtx->TotalNal = %d, type:%d\012\000"
	.space	3
.LC468:
	.ascii	"stop i want\012\000"
	.space	3
.LC469:
	.ascii	"***** NAL: IDR/Slice, nal_unit_type=%d, TotalSlice="
	.ascii	"%d\012\000"
	.space	1
.LC470:
	.ascii	"*******TotalPicNum=%d********\012\000"
	.space	1
.LC471:
	.ascii	"***** NAL: PPS, nal_unit_type=%d, TotalPPS=%d\012\000"
	.space	1
.LC472:
	.ascii	"PPS decode error.\012\000"
	.space	1
.LC473:
	.ascii	"***** NAL: SPS, nal_unit_type=%d, TotalSPS=%d\012\000"
	.space	1
.LC474:
	.ascii	"SPS decode error.\012\000"
	.space	1
.LC475:
	.ascii	"***** NAL: SEI, nal_unit_type=%d\012\000"
	.space	2
.LC476:
	.ascii	"SEI decode error.\012\000"
	.space	1
.LC477:
	.ascii	"***** NAL: AUD, nal_unit_type=%d\012\000"
	.space	2
.LC478:
	.ascii	"***** NAL: EOSEQ, nal_unit_type=%d\012\000"
.LC479:
	.ascii	"***** NAL: FILL, nal_unit_type=%d\012\000"
	.space	1
.LC480:
	.ascii	"***** NAL: EOSTREAM, nal_unit_type=%d\012\000"
	.space	1
.LC481:
	.ascii	"***** NAL: SPSEXT, nal_unit_type=%d\012\000"
	.space	3
.LC482:
	.ascii	"***** NAL: PREFIX, nal_unit_type=%d\012\000"
	.space	3
.LC483:
	.ascii	"***** NAL: SUBSPS, nal_unit_type=%d\012\000"
	.space	3
.LC484:
	.ascii	"***** NAL: AUX, nal_unit_type=%d\012\000"
	.space	2
.LC485:
	.ascii	"***** NAL: EOPIC, nal_unit_type=%d\012\000"
.LC486:
	.ascii	"***** NAL: UNSUPPORT, nal_unit_type=%d,nalu header:"
	.ascii	"%x\012\000"
	.space	1
.LC487:
	.ascii	"nal_header != 0x00000100 not support.\012\000"
	.space	1
.LC488:
	.ascii	"MVC_FindTrailZeros ERR\012\000"
	.bss
	.align	2
.LANCHOR1 = . + 0
	.type	MvcTmpBuf, %object
	.size	MvcTmpBuf, 68
MvcTmpBuf:
	.space	68
	.type	cnt.39960, %object
	.size	cnt.39960, 4
cnt.39960:
	.space	4
	.type	sps_tmp.46383, %object
	.size	sps_tmp.46383, 3992
sps_tmp.46383:
	.space	3992
	.type	pps_tmp.45311, %object
	.size	pps_tmp.45311, 2240
pps_tmp.45311:
	.space	2240
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
