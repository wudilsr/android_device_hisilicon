	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"h264.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/arch/arm/mach-hi3798mx/include
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/scene/stb
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/osal/linux_kernel
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV300R001
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3798MV100
@ -I/home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3796mv100
@ -DSDK_VERSION=HiSTBAndroidV600R001C00SPC065_v2016112920 -DHI_MCE_SUPPORT
@ -DHI_GPIOI2C_SUPPORT -DHI_LOG_SUPPORT=1 -DHI_LOG_LEVEL=4
@ -DHI_PROC_SUPPORT=1 -DHI_HDMI_SUPPORT_1_4 -DHI_KEYLED_SUPPORT
@ -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_PVR_SUPPORT -DHI_VI_SUPPORT
@ -DHI_VENC_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_V3_0 -DENV_ARMLINUX_KERNEL
@ -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE -DSUPPORT_JPEG_444
@ -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB -D__VFMW_REGISTER_ISR__
@ -DQ_MATRIX_FIXED -DVFMW_VDH_V300R001_SUPPORT -DCFG_SCD_TIME_OUT=2000
@ -DCFG_VDH_TIME_OUT=500 -DVFMW_H264_SUPPORT -DVFMW_HEVC_SUPPORT
@ -DVFMW_MVC_SUPPORT -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT
@ -DVFMW_AVS_SUPPORT -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT
@ -DVFMW_REAL8_SUPPORT -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT
@ -DVFMW_VP8_SUPPORT -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT
@ -DVFMW_JPEG_SUPPORT -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT
@ -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT -DVFMW_SCD_LOWDLY_SUPPORT
@ -DVFMW_AVSPLUS_SUPPORT -DVFMW_MODULE_LOWDLY_SUPPORT
@ -DVFMW_SYSTEM_REG_DISABLE -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(h264) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.h264.o.d
@ /home/t00194509/HiSTBAndroidV5/images_and_tools/release/hi3798mv100/verify/maintain_spc062/HiSTBAndroidV5_release/HiSTBAndroidV600R001C00SPC065/device/hisilicon/bigfish/sdk/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/h264.c
@ -mlittle-endian -mapcs -mno-sched-prolog -mabi=aapcs-linux
@ -mno-thumb-interwork -marm -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/h264.o -O2 -Wall
@ -Wundef -Wstrict-prototypes -Wno-trigraphs
@ -Werror-implicit-function-declaration -Wno-format-security
@ -Wframe-larger-than=1024 -Wdeclaration-after-statement -Wno-pointer-sign
@ -p -fno-strict-aliasing -fno-common -fno-delete-null-pointer-checks
@ -fno-dwarf2-cfi-asm -funwind-tables -fno-stack-protector
@ -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-strict-overflow
@ -fconserve-stack -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -foptimize-register-move
@ -fpeephole -fpeephole2 -fprofile -fpromote-loop-indices
@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
@ -freorder-functions -frerun-cse-after-loop -fsched-interblock
@ -fsched-spec -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
@ -fsection-anchors -fsigned-zeros -fsplit-ivs-in-unroller
@ -fsplit-wide-types -fthread-jumps -ftoplevel-reorder -ftrapping-math
@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-copy-prop
@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
@ -ftree-dse -ftree-fre -ftree-loop-im -ftree-loop-ivcanon
@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-pre -ftree-reassoc
@ -ftree-scev-cprop -ftree-sink -ftree-sra -ftree-switch-conversion
@ -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
@ -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mapcs-frame -mglibc -mlittle-endian

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.text
	.align	2
	.global	GetMinPOC
	.type	GetMinPOC, %function
GetMinPOC:
	.fnstart
.LFB1539:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #26636	@ tmp173,
	mov	r4, #0	@ tmp171,
	str	r4, [r2, #0]	@ tmp171,* pos
	movw	r4, #26632	@ tmp174,
	mvn	r3, #-2147483648	@ tmp172,
	str	r3, [r1, #0]	@ tmp172,* poc
	ldr	r3, [r0, r4]	@ prephitmp.916, <variable>.DPB.size
	ldr	r4, [r0, ip]	@ prephitmp.898, <variable>.DPB.used_size
	cmp	r4, r3	@ prephitmp.898, prephitmp.916
	strhi	r3, [r0, ip]	@ prephitmp.916, <variable>.DPB.used_size
	movls	r3, r4	@ prephitmp.916, prephitmp.898
	cmp	r3, #0	@ prephitmp.916,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	add	r5, r0, #26368	@ ivtmp.912, pH264Ctx,
	mov	r3, #0	@ i,
	add	ip, r5, #72	@ ivtmp.912, ivtmp.912,
	movw	r7, #26636	@ tmp181,
.L6:
	ldr	r4, [ip, #0]	@ D.38783, <variable>.DPB.fs
	add	ip, ip, #4	@ ivtmp.912, ivtmp.912,
	ldr	r6, [r1, #0]	@ tmp177,* poc
	ldr	r5, [r4, #672]	@ D.38784, <variable>.poc
	cmp	r6, r5	@ tmp177, D.38784
	ble	.L5	@,
	ldrb	r4, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r4, #0	@ <variable>.is_in_dpb,
	strne	r5, [r1, #0]	@ D.38784,* poc
	strne	r3, [r2, #0]	@ i,* pos
.L5:
	ldr	r4, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r3, r3, #1	@ i, i,
	cmp	r4, r3	@ <variable>.DPB.used_size, i
	bhi	.L6	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	GetMinPOC, .-GetMinPOC
	.align	2
	.global	FrameStoreRefFlg
	.type	FrameStoreRefFlg, %function
FrameStoreRefFlg:
	.fnstart
.LFB1540:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r0, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r0, r0, #0	@, <variable>.is_reference,
	movne	r0, #1	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	FrameStoreRefFlg, .-FrameStoreRefFlg
	.align	2
	.global	ShortTermRefFlg
	.type	ShortTermRefFlg, %function
ShortTermRefFlg:
	.fnstart
.LFB1541:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.38798, <variable>.is_reference
	cmp	r3, #3	@ D.38798,
	beq	.L20	@,
	tst	r3, #1	@ D.38798,
	bne	.L15	@,
.L16:
	ands	r3, r3, #2	@ tmp145, D.38798,
	moveq	r0, r3	@ D.38805, tmp145
	ldmeqfd	sp, {fp, sp, pc}	@
	ldr	r1, [r0, #616]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #65536	@ tmp146,
	movne	r0, #0	@, D.38805
	moveq	r0, #1	@, D.38805
	ldmfd	sp, {fp, sp, pc}	@
.L20:
	ldr	ip, [r0, #536]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #65536	@ tmp138,
	beq	.L14	@,
.L15:
	ldr	ip, [r0, #576]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #65536	@ tmp142,
	bne	.L16	@,
.L14:
	mov	r0, #1	@ D.38805,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	ShortTermRefFlg, .-ShortTermRefFlg
	.align	2
	.global	LongTermRefFlg
	.type	LongTermRefFlg, %function
LongTermRefFlg:
	.fnstart
.LFB1542:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.38825, <variable>.is_reference
	cmp	r3, #3	@ D.38825,
	beq	.L29	@,
	tst	r3, #1	@ D.38825,
	bne	.L24	@,
.L25:
	ands	r3, r3, #2	@ tmp145, D.38825,
	moveq	r0, r3	@ D.38832, tmp145
	ldmeqfd	sp, {fp, sp, pc}	@
	ldr	r1, [r0, #616]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #256	@ tmp146,
	movne	r0, #0	@, D.38832
	moveq	r0, #1	@, D.38832
	ldmfd	sp, {fp, sp, pc}	@
.L29:
	ldr	ip, [r0, #536]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #256	@ tmp138,
	beq	.L23	@,
.L24:
	ldr	ip, [r0, #576]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #256	@ tmp142,
	bne	.L25	@,
.L23:
	mov	r0, #1	@ D.38832,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	LongTermRefFlg, .-LongTermRefFlg
	.align	2
	.global	UpdateLTReflist
	.type	UpdateLTReflist, %function
UpdateLTReflist:
	.fnstart
.LFB1543:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #26636	@ tmp141,
	ldr	r7, [r0, sl]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r8, r0	@ pH264Ctx, pH264Ctx
	cmp	r7, #0	@ <variable>.DPB.used_size,
	beq	.L32	@,
	add	r4, r0, #26368	@ ivtmp.1020, pH264Ctx,
	mov	r7, #0	@ j,
	add	r4, r4, #72	@ ivtmp.1020, ivtmp.1020,
	mov	r5, r7	@ i, j
.L34:
	ldr	r6, [r4, #0]	@ D.38861, <variable>.DPB.fs
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.1020, ivtmp.1020,
	mov	r0, r6	@, D.38861
	bl	LongTermRefFlg	@
	add	r2, r7, #6592	@ tmp144, j,
	add	r1, r2, #50	@ tmp144, tmp144,
	ldr	r3, [r8, sl]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@,
	strne	r6, [r8, r1, asl #2]	@ D.38861, <variable>.DPB.fs_ltref
	addne	r7, r7, #1	@ j, j,
	cmp	r3, r5	@ <variable>.DPB.used_size, i
	bhi	.L34	@,
.L32:
	movw	r3, #26632	@ tmp149,
	movw	ip, #26644	@ tmp148,
	ldr	r0, [r8, r3]	@ D.38867, <variable>.DPB.size
	str	r7, [r8, ip]	@ j, <variable>.DPB.ltref_frames_in_buffer
	cmp	r7, r0	@ j, D.38867
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r3, r7, #6592	@ tmp150, j,
	add	r2, r7, #1	@ j, j,
	add	r1, r3, #50	@ tmp150, tmp150,
	cmp	r2, r0	@ j, D.38867
	mvn	ip, r7	@ tmp157, j
	add	r7, ip, r0	@ tmp156, tmp157, D.38867
	add	r8, r8, r1, asl #2	@, ivtmp.1016, pH264Ctx, tmp150,
	and	r7, r7, #1	@ tmp158, tmp156,
	mov	r1, #0	@ tmp154,
	str	r1, [r8], #4	@ tmp154, <variable>.DPB.fs_ltref
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r7, #0	@ tmp158,
	beq	.L36	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r8], #4	@ tmp154, <variable>.DPB.fs_ltref
	cmp	r2, r0	@ j, D.38867
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L36:
	add	r2, r2, #2	@ j, j,
	mov	ip, r8	@ tmp160, ivtmp.1016
	cmp	r2, r0	@ j, D.38867
	str	r1, [ip], #4	@ tmp154, <variable>.DPB.fs_ltref
	str	r1, [r8, #4]	@ tmp154, <variable>.DPB.fs_ltref
	add	r8, ip, #4	@ ivtmp.1016, tmp160,
	bcc	.L36	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	UpdateLTReflist, .-UpdateLTReflist
	.align	2
	.global	UpdateReflist
	.type	UpdateReflist, %function
UpdateReflist:
	.fnstart
.LFB1544:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #26636	@ tmp141,
	ldr	r7, [r0, sl]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r8, r0	@ pH264Ctx, pH264Ctx
	cmp	r7, #0	@ <variable>.DPB.used_size,
	beq	.L47	@,
	add	r4, r0, #26368	@ ivtmp.1058, pH264Ctx,
	mov	r7, #0	@ j,
	add	r4, r4, #72	@ ivtmp.1058, ivtmp.1058,
	mov	r5, r7	@ i, j
.L49:
	ldr	r6, [r4, #0]	@ D.38880, <variable>.DPB.fs
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.1058, ivtmp.1058,
	mov	r0, r6	@, D.38880
	bl	ShortTermRefFlg	@
	add	r2, r7, #6592	@ tmp144, j,
	add	r1, r2, #34	@ tmp144, tmp144,
	ldr	r3, [r8, sl]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@,
	strne	r6, [r8, r1, asl #2]	@ D.38880, <variable>.DPB.fs_ref
	addne	r7, r7, #1	@ j, j,
	cmp	r3, r5	@ <variable>.DPB.used_size, i
	bhi	.L49	@,
.L47:
	movw	r3, #26632	@ tmp149,
	movw	ip, #26640	@ tmp148,
	ldr	r0, [r8, r3]	@ D.38886, <variable>.DPB.size
	str	r7, [r8, ip]	@ j, <variable>.DPB.ref_frames_in_buffer
	cmp	r7, r0	@ j, D.38886
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r3, r7, #6592	@ tmp150, j,
	add	r2, r7, #1	@ j, j,
	add	r1, r3, #34	@ tmp150, tmp150,
	cmp	r2, r0	@ j, D.38886
	mvn	ip, r7	@ tmp157, j
	add	r7, ip, r0	@ tmp156, tmp157, D.38886
	add	r8, r8, r1, asl #2	@, ivtmp.1054, pH264Ctx, tmp150,
	and	r7, r7, #1	@ tmp158, tmp156,
	mov	r1, #0	@ tmp154,
	str	r1, [r8], #4	@ tmp154, <variable>.DPB.fs_ref
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r7, #0	@ tmp158,
	beq	.L51	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r8], #4	@ tmp154, <variable>.DPB.fs_ref
	cmp	r2, r0	@ j, D.38886
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L51:
	add	r2, r2, #2	@ j, j,
	mov	ip, r8	@ tmp160, ivtmp.1054
	cmp	r2, r0	@ j, D.38886
	str	r1, [ip], #4	@ tmp154, <variable>.DPB.fs_ref
	str	r1, [r8, #4]	@ tmp154, <variable>.DPB.fs_ref
	add	r8, ip, #4	@ ivtmp.1054, tmp160,
	bcc	.L51	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	UpdateReflist, .-UpdateReflist
	.align	2
	.global	GetPicNumX
	.type	GetPicNumX, %function
GetPicNumX:
	.fnstart
.LFB1545:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r0, [r0, #552]	@ CurrPicNum, <variable>.frame_num
	mvn	r1, r1	@ tmp141, difference_of_pic_nums_minus1
	cmp	r3, #0	@ <variable>.structure,
	movne	r0, r0, asl #1	@ tmp138, <variable>.frame_num,
	addne	r0, r0, #1	@ CurrPicNum, tmp138,
	add	r0, r0, r1	@, CurrPicNum, tmp141
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	GetPicNumX, .-GetPicNumX
	.align	2
	.global	MarkPicLTRef
	.type	MarkPicLTRef, %function
MarkPicLTRef:
	.fnstart
.LFB1551:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r3, #3]	@ zero_extendqisi2	@ D.39125, <variable>.structure
	cmp	r3, #0	@ D.39125,
	beq	.L65	@,
	movw	ip, #26640	@ tmp155,
	ldr	r8, [r0, ip]	@ D.39141, <variable>.DPB.ref_frames_in_buffer
	cmp	r8, #0	@ D.39141,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r5, r0, #26368	@ ivtmp.1122, pH264Ctx,
	sub	r6, r8, #1	@ tmp280, D.39141,
	and	r7, r6, #1	@ tmp282, tmp280,
	mov	r4, #0	@ i.1140,
	ldr	ip, [r5, #136]!	@ temp.1132, <variable>.DPB.fs_ref
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ D.39143, <variable>.is_reference
	tst	r6, #1	@ D.39143,
	beq	.L85	@,
	ldr	sl, [ip, #576]	@ tmp311,
	bic	sl, sl, #-16777216	@ tmp312, tmp311,
	bic	sl, sl, #255	@ tmp312, tmp312,
	cmp	sl, #65536	@ tmp312,
	beq	.L104	@,
.L85:
	tst	r6, #2	@ D.39143,
	beq	.L86	@,
	ldr	r6, [ip, #616]	@ tmp306,
	bic	r6, r6, #-16777216	@ tmp307, tmp306,
	bic	r6, r6, #255	@ tmp307, tmp307,
	cmp	r6, #65536	@ tmp307,
	beq	.L105	@,
.L86:
	mov	r4, #1	@ i.1140,
	cmp	r8, r4	@ D.39141, i.1140
	add	r5, r5, #4	@ ivtmp.1122, ivtmp.1122,
	ldmlsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r7, #0	@ tmp282,
	beq	.L74	@,
	ldr	ip, [r5, #0]	@ temp.1132, <variable>.DPB.fs_ref
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ D.39143, <variable>.is_reference
	tst	r6, #1	@ D.39143,
	beq	.L88	@,
	ldr	r7, [ip, #576]	@ tmp324,
	bic	r7, r7, #-16777216	@ tmp325, tmp324,
	bic	r7, r7, #255	@ tmp325, tmp325,
	cmp	r7, #65536	@ tmp325,
	beq	.L106	@,
.L88:
	tst	r6, #2	@ D.39143,
	beq	.L89	@,
	ldr	r6, [ip, #616]	@ tmp319,
	bic	r6, r6, #-16777216	@ tmp320, tmp319,
	bic	r6, r6, #255	@ tmp320, tmp320,
	cmp	r6, #65536	@ tmp320,
	beq	.L107	@,
.L89:
	add	r4, r4, #1	@ i.1140, i.1140,
	add	r5, r5, #4	@ ivtmp.1122, ivtmp.1122,
	cmp	r8, r4	@ D.39141, i.1140
	ldmlsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldr	ip, [r5, #0]	@ temp.1132, <variable>.DPB.fs_ref
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ D.39143, <variable>.is_reference
	tst	r6, #1	@ D.39143,
	bne	.L108	@,
.L70:
	tst	r6, #2	@ D.39143,
	beq	.L72	@,
	ldr	r6, [ip, #616]	@ tmp239,
	bic	r6, r6, #-16777216	@ tmp237, tmp239,
	bic	r6, r6, #255	@ tmp237, tmp237,
	cmp	r6, #65536	@ tmp237,
	beq	.L109	@,
.L72:
	ldr	ip, [r5, #4]	@ temp.1132, <variable>.DPB.fs_ref
	add	r4, r4, #1	@ i.1140, i.1140,
	add	r5, r5, #4	@ tmp284, ivtmp.1122,
	mov	sl, r4	@ tmp283, i.1140
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ D.39143, <variable>.is_reference
	tst	r6, #1	@ D.39143,
	beq	.L92	@,
	ldr	r7, [ip, #576]	@ tmp335,
	bic	r7, r7, #-16777216	@ tmp336, tmp335,
	bic	r7, r7, #255	@ tmp336, tmp336,
	cmp	r7, #65536	@ tmp336,
	beq	.L110	@,
.L92:
	tst	r6, #2	@ D.39143,
	beq	.L93	@,
	ldr	r6, [ip, #616]	@ tmp330,
	bic	r6, r6, #-16777216	@ tmp331, tmp330,
	bic	r6, r6, #255	@ tmp331, tmp331,
	cmp	r6, #65536	@ tmp331,
	beq	.L111	@,
.L93:
	add	r4, sl, #1	@ i.1140, tmp283,
	add	r5, r5, #4	@ ivtmp.1122, tmp284,
	cmp	r8, r4	@ D.39141, i.1140
	bls	.L112	@,
.L74:
	ldr	ip, [r5, #0]	@ temp.1132, <variable>.DPB.fs_ref
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ D.39143, <variable>.is_reference
	tst	r6, #1	@ D.39143,
	beq	.L70	@,
.L108:
	ldr	r7, [ip, #576]	@ tmp200,
	bic	r7, r7, #-16777216	@ tmp198, tmp200,
	bic	r7, r7, #255	@ tmp198, tmp198,
	cmp	r7, #65536	@ tmp198,
	bne	.L70	@,
	ldr	r7, [ip, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r7, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L70	@,
	ldrb	r6, [ip, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L71	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L72	@,
.L71:
	add	r4, r4, #6592	@ tmp204, i.1140,
	str	r1, [ip, #668]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	add	r4, r4, #34	@ tmp204, tmp204,
	cmp	r3, #1	@ D.39125,
	movne	r2, #0	@, tmp209
	moveq	r2, #1	@, tmp209
	add	ip, r2, r1, asl #1	@, tmp210, tmp209, long_term_frame_idx,
	mov	r1, #1	@ tmp214,
	ldr	r3, [r0, r4, asl #2]	@ tmp206, <variable>.DPB.fs_ref
	str	ip, [r3, #584]	@ tmp210, <variable>.top_field.long_term_pic_num
	mov	ip, #0	@ tmp219,
	ldr	r2, [r0, r4, asl #2]	@ tmp213, <variable>.DPB.fs_ref
	strb	r1, [r2, #577]	@ tmp214, <variable>.top_field.is_long_term
	ldr	r3, [r0, r4, asl #2]	@ tmp218, <variable>.DPB.fs_ref
	strb	ip, [r3, #578]	@ tmp219, <variable>.top_field.is_short_term
	ldr	r3, [r0, r4, asl #2]	@ temp.1137, <variable>.DPB.fs_ref
	ldrb	r2, [r3, #536]	@ zero_extendqisi2	@ D.39164, <variable>.frame.structure
	cmp	r2, #3	@ D.39164,
	cmpne	r2, #0	@, D.39164,
	ldmnefd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldrb	ip, [r3, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	ldrb	r1, [r3, #577]	@ zero_extendqisi2	@ D.39170, <variable>.top_field.is_long_term
	cmp	ip, r1	@ <variable>.bottom_field.is_long_term, D.39170
	streqb	ip, [r3, #537]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r3, [r0, r4, asl #2]	@ temp.1139, <variable>.DPB.fs_ref
	ldreqb	ip, [r3, #578]	@ zero_extendqisi2	@ <variable>.top_field.is_short_term, <variable>.top_field.is_short_term
	streqb	ip, [r3, #538]	@ <variable>.top_field.is_short_term, <variable>.frame.is_short_term
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L65:
	movw	ip, #26640	@ tmp156,
	ldr	r7, [r0, ip]	@ temp.1141, <variable>.DPB.ref_frames_in_buffer
	cmp	r7, #0	@ temp.1141,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r4, r0, #26368	@ ivtmp.1117, pH264Ctx,
	sub	r5, r7, #1	@ tmp275, temp.1141,
	and	r6, r5, #1	@ tmp277, tmp275,
	ldr	ip, [r4, #136]!	@ D.39129, <variable>.DPB.fs_ref
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	beq	.L113	@,
.L78:
	mov	r3, #1	@ i,
	cmp	r3, r7	@ i, temp.1141
	add	r4, r4, #4	@ ivtmp.1117, ivtmp.1117,
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r6, #0	@ tmp277,
	beq	.L69	@,
	ldr	ip, [r4, #0]	@ D.39129, <variable>.DPB.fs_ref
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	beq	.L114	@,
.L80:
	add	r3, r3, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.1117, ivtmp.1117,
	cmp	r3, r7	@ i, temp.1141
	bcc	.L69	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L68:
	ldr	ip, [r4, #4]	@ D.39129, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	r5, r3	@ tmp279, i
	ldrb	r4, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	beq	.L115	@,
.L83:
	add	r3, r5, #1	@ i, tmp279,
	add	r4, r6, #4	@ ivtmp.1117, tmp278,
	cmp	r3, r7	@ i, temp.1141
	bcs	.L116	@,
.L69:
	ldr	ip, [r4, #0]	@ D.39129, <variable>.DPB.fs_ref
	add	r6, r4, #4	@ tmp278, ivtmp.1117,
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L68	@,
	ldr	r5, [ip, #536]	@ tmp161,
	bic	r5, r5, #-16777216	@ tmp159, tmp161,
	bic	r5, r5, #255	@ tmp159, tmp159,
	cmp	r5, #65536	@ tmp159,
	bne	.L68	@,
	ldr	r5, [ip, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	beq	.L101	@,
	ldr	ip, [r4, #4]	@ D.39129, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	r5, r3	@ tmp279, i
	ldrb	r4, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L83	@,
.L115:
	ldr	r4, [ip, #536]	@ tmp302,
	bic	r4, r4, #-16777216	@ tmp303, tmp302,
	bic	r4, r4, #255	@ tmp303, tmp303,
	cmp	r4, #65536	@ tmp303,
	bne	.L83	@,
	ldr	r4, [ip, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r2	@ <variable>.frame.pic_num, picNumX
	beq	.L101	@,
	add	r3, r5, #1	@ i, tmp279,
	add	r4, r6, #4	@ ivtmp.1117, tmp278,
	cmp	r3, r7	@ i, temp.1141
	bcc	.L69	@,
.L116:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L110:
	ldr	r7, [ip, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r7, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L92	@,
	ldrb	r6, [ip, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L71	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L71	@,
	add	r4, sl, #1	@ i.1140, tmp283,
	add	r5, r5, #4	@ ivtmp.1122, tmp284,
	cmp	r8, r4	@ D.39141, i.1140
	bhi	.L74	@,
.L112:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L109:
	ldr	r6, [ip, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r6, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L72	@,
	ldrb	r6, [ip, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #1	@ <variable>.top_field.is_long_term,
	bne	.L73	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L72	@,
	b	.L73	@
.L111:
	ldr	r6, [ip, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r6, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L93	@,
	ldrb	r6, [ip, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #1	@ <variable>.top_field.is_long_term,
	bne	.L73	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L93	@,
.L73:
	add	r4, r4, #6592	@ tmp243, i.1140,
	str	r1, [ip, #668]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	add	r4, r4, #34	@ tmp243, tmp243,
	cmp	r3, #2	@ D.39125,
	movne	r2, #0	@, tmp248
	moveq	r2, #1	@, tmp248
	add	ip, r2, r1, asl #1	@, tmp249, tmp248, long_term_frame_idx,
	mov	r1, #1	@ tmp253,
	ldr	r3, [r0, r4, asl #2]	@ tmp245, <variable>.DPB.fs_ref
	str	ip, [r3, #624]	@ tmp249, <variable>.bottom_field.long_term_pic_num
	mov	ip, #0	@ tmp258,
	ldr	r2, [r0, r4, asl #2]	@ tmp252, <variable>.DPB.fs_ref
	strb	r1, [r2, #617]	@ tmp253, <variable>.bottom_field.is_long_term
	ldr	r3, [r0, r4, asl #2]	@ tmp257, <variable>.DPB.fs_ref
	strb	ip, [r3, #618]	@ tmp258, <variable>.bottom_field.is_short_term
	ldr	r3, [r0, r4, asl #2]	@ temp.1148, <variable>.DPB.fs_ref
	ldrb	r2, [r3, #536]	@ zero_extendqisi2	@ D.39190, <variable>.frame.structure
	cmp	r2, #3	@ D.39190,
	cmpne	r2, #0	@, D.39190,
	ldmnefd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldrb	ip, [r3, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	ldrb	r1, [r3, #577]	@ zero_extendqisi2	@ temp.1149, <variable>.top_field.is_long_term
	cmp	ip, r1	@ <variable>.bottom_field.is_long_term, temp.1149
	streqb	ip, [r3, #537]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r3, [r0, r4, asl #2]	@ temp.1151, <variable>.DPB.fs_ref
	ldreqb	ip, [r3, #618]	@ zero_extendqisi2	@ <variable>.bottom_field.is_short_term, <variable>.bottom_field.is_short_term
	streqb	ip, [r3, #538]	@ <variable>.bottom_field.is_short_term, <variable>.frame.is_short_term
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L104:
	ldr	sl, [ip, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	sl, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L85	@,
	ldrb	r6, [ip, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L71	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L86	@,
	b	.L71	@
.L106:
	ldr	r7, [ip, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r7, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L88	@,
	ldrb	r6, [ip, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L71	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L89	@,
	b	.L71	@
.L105:
	ldr	r6, [ip, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r6, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L86	@,
	ldrb	r6, [ip, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #1	@ <variable>.top_field.is_long_term,
	bne	.L73	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L86	@,
	b	.L73	@
.L107:
	ldr	r6, [ip, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r6, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L89	@,
	ldrb	r6, [ip, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #1	@ <variable>.top_field.is_long_term,
	bne	.L73	@,
	ldr	r6, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L89	@,
	b	.L73	@
.L113:
	ldr	r5, [ip, #536]	@ tmp295,
	bic	r5, r5, #-16777216	@ tmp296, tmp295,
	bic	r5, r5, #255	@ tmp296, tmp296,
	cmp	r5, #65536	@ tmp296,
	bne	.L78	@,
	ldr	r5, [ip, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L78	@,
.L101:
	add	r4, r3, #6592	@ tmp163, i,
	str	r1, [ip, #668]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	add	r3, r4, #34	@ tmp163, tmp163,
	mov	ip, #1	@ tmp169,
	mov	r2, #0	@ tmp184,
	ldr	r4, [r0, r3, asl #2]	@ tmp165, <variable>.DPB.fs_ref
	str	r1, [r4, #544]	@ long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	r1, [r0, r3, asl #2]	@ tmp168, <variable>.DPB.fs_ref
	strb	ip, [r1, #537]	@ tmp169, <variable>.frame.is_long_term
	ldr	r1, [r0, r3, asl #2]	@ tmp173, <variable>.DPB.fs_ref
	strb	ip, [r1, #577]	@ tmp169, <variable>.top_field.is_long_term
	ldr	r1, [r0, r3, asl #2]	@ tmp178, <variable>.DPB.fs_ref
	strb	ip, [r1, #617]	@ tmp169, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, r3, asl #2]	@ tmp183, <variable>.DPB.fs_ref
	strb	r2, [ip, #538]	@ tmp184, <variable>.frame.is_short_term
	ldr	r1, [r0, r3, asl #2]	@ tmp188, <variable>.DPB.fs_ref
	strb	r2, [r1, #578]	@ tmp184, <variable>.top_field.is_short_term
	ldr	r3, [r0, r3, asl #2]	@ tmp193, <variable>.DPB.fs_ref
	strb	r2, [r3, #618]	@ tmp184, <variable>.bottom_field.is_short_term
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L114:
	ldr	r5, [ip, #536]	@ tmp299,
	bic	r5, r5, #-16777216	@ tmp300, tmp299,
	bic	r5, r5, #255	@ tmp300, tmp300,
	cmp	r5, #65536	@ tmp300,
	bne	.L80	@,
	ldr	r5, [ip, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L80	@,
	b	.L101	@
	.fnend
	.size	MarkPicLTRef, .-MarkPicLTRef
	.align	2
	.global	SetFrmRepeatCount
	.type	SetFrmRepeatCount, %function
SetFrmRepeatCount:
	.fnstart
.LFB1561:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r2, ip, #2032	@ tmp138, <variable>.s32FastForwardBackwardSpeed,
	add	r3, r2, #15	@ tmp138, tmp138,
	cmp	r3, #4096	@ tmp138,
	bcc	.L118	@,
	movw	r3, #59244	@ tmp144,
	movw	r2, #59240	@ tmp142,
	ldr	r4, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	movw	ip, #26632	@ tmp147,
	ldr	r2, [r0, r2]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldr	ip, [r0, ip]	@ <variable>.DPB.size, <variable>.DPB.size
	add	ip, ip, r4, lsr #1	@, D.39635, <variable>.DPB.size, <variable>.PicOutCounter,
	mov	r2, r2, lsr #1	@ D.39631, <variable>.NewPicCounter,
	add	r4, ip, #1	@ tmp149, D.39635,
	cmp	r2, r4	@ D.39631, tmp149
	bcc	.L118	@,
	mvn	ip, ip	@ tmp150, D.39635
	add	r2, ip, r2	@ tmp151, tmp150, D.39631
	cmp	r2, #1	@ tmp151,
	movhi	r2, #2	@ tmp152,
	movls	r2, #1	@ tmp157,
	strhi	r2, [r1, #84]	@ tmp152, <variable>.u32RepeatCnt
	strls	r2, [r1, #84]	@ tmp157, <variable>.u32RepeatCnt
	ldrhi	r2, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldrls	r2, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	addhi	r2, r2, #4	@ tmp156, <variable>.PicOutCounter,
	addls	r2, r2, #2	@ tmp161, <variable>.PicOutCounter,
	str	r2, [r0, r3]	@ tmp161, <variable>.PicOutCounter
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L118:
	mov	r0, #0	@ tmp163,
	str	r0, [r1, #84]	@ tmp163, <variable>.u32RepeatCnt
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	SetFrmRepeatCount, .-SetFrmRepeatCount
	.align	2
	.global	SplitFrmToFlds
	.type	SplitFrmToFlds, %function
SplitFrmToFlds:
	.fnstart
.LFB1564:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r4, [r0, #537]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	ldrb	ip, [r0, #538]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	mov	r5, #1	@ tmp138,
	ldr	r1, [r0, #556]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldr	r2, [r0, #560]	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldr	r3, [r0, #540]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r5, [r0, #576]	@ tmp138, <variable>.top_field.structure
	mov	r5, #2	@ tmp147,
	strb	r4, [r0, #617]	@ <variable>.frame.is_long_term, <variable>.bottom_field.is_long_term
	str	r3, [r0, #620]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r0, #618]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r5, [r0, #616]	@ tmp147, <variable>.bottom_field.structure
	str	r1, [r0, #636]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	str	r2, [r0, #640]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	r4, [r0, #577]	@ <variable>.frame.is_long_term, <variable>.top_field.is_long_term
	strb	ip, [r0, #578]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	r1, [r0, #596]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	str	r2, [r0, #600]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r3, [r0, #580]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	SplitFrmToFlds, .-SplitFrmToFlds
	.align	2
	.global	CombineFldsToFrm
	.type	CombineFldsToFrm, %function
CombineFldsToFrm:
	.fnstart
.LFB1565:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r1, [r0, #632]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	ldr	r3, [r0, #592]	@ <variable>.top_field.poc, <variable>.top_field.poc
	ldr	r4, [r0, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, r3	@ <variable>.bottom_field.poc, <variable>.top_field.poc
	movlt	r3, r1	@ D.39749, <variable>.bottom_field.poc
	movge	r3, r3	@ D.39749, <variable>.top_field.poc
	ldr	r2, [r0, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldrb	r1, [r0, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, #580]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	add	r2, r4, r2	@ tmp146, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	cmp	r1, #0	@ <variable>.bottom_field.is_long_term,
	mov	r4, #3	@ tmp144,
	mov	r2, r2, lsr #1	@ D.39754, tmp146,
	str	r3, [r0, #672]	@ D.39749, <variable>.poc
	strb	r4, [r0, #536]	@ tmp144, <variable>.frame.structure
	str	ip, [r0, #540]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	str	r3, [r0, #552]	@ D.39749, <variable>.frame.poc
	str	r2, [r0, #556]	@ D.39754, <variable>.frame.err_level
	beq	.L127	@,
	ldrb	ip, [r0, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	subs	r1, ip, #0	@ prephitmp.1229, <variable>.top_field.is_long_term,
	movne	r1, #1	@ prephitmp.1229
.L127:
	ldr	r3, [r0, #616]	@ tmp156,
	strb	r1, [r0, #537]	@ prephitmp.1229, <variable>.frame.is_long_term
	bic	ip, r3, #-16777216	@ tmp154, tmp156,
	bic	r3, ip, #255	@ tmp154, tmp154,
	cmp	r3, #0	@ tmp154,
	beq	.L128	@,
	ldr	ip, [r0, #576]	@ tmp159,
	bic	r3, ip, #-16777216	@ tmp157, tmp159,
	bic	ip, r3, #255	@ tmp157, tmp157,
	cmp	ip, #0	@ tmp157,
	bne	.L133	@,
.L128:
	mov	r1, #0	@ prephitmp.1218,
.L129:
	ldr	r3, [r0, #600]	@ D.39779, <variable>.top_field.pic_type
	strb	r1, [r0, #538]	@ prephitmp.1218, <variable>.frame.is_short_term
	cmp	r3, #0	@ D.39779,
	beq	.L130	@,
	ldr	r1, [r0, #640]	@ D.39781, <variable>.bottom_field.pic_type
	cmp	r1, #0	@ D.39781,
	beq	.L130	@,
	cmp	r1, r3	@ D.39781, D.39779
	movcs	r3, r1	@ iftmp.501, D.39781
	str	r2, [r0, #696]	@ D.39754, <variable>.err_level
	str	r3, [r0, #692]	@ iftmp.501, <variable>.pic_type
	str	r3, [r0, #560]	@ iftmp.501, <variable>.frame.pic_type
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L130:
	mov	r3, #0	@ iftmp.501,
	str	r2, [r0, #696]	@ D.39754, <variable>.err_level
	str	r3, [r0, #692]	@ iftmp.501, <variable>.pic_type
	str	r3, [r0, #560]	@ iftmp.501, <variable>.frame.pic_type
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L133:
	rsbs	r1, r1, #1	@ prephitmp.1218, prephitmp.1229
	movcc	r1, #0	@ prephitmp.1218
	b	.L129	@
	.fnend
	.size	CombineFldsToFrm, .-CombineFldsToFrm
	.align	2
	.global	UpdateCurrFrameInfo
	.type	UpdateCurrFrameInfo, %function
UpdateCurrFrameInfo:
	.fnstart
.LFB1576:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #56336	@ tmp152,
	movw	r5, #55794	@ tmp153,
	ldr	r4, [r0, r6]	@ pCurrFrame, <variable>.CurrPic.frame_store
	ldrb	r1, [r0, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r3, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #55796	@ tmp156,
	strb	r1, [r4, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldrb	r2, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	bne	.L135	@,
	movw	ip, #55797	@ tmp158,
	ldrb	r2, [r3, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	cmp	r2, #0	@ <variable>.CurrPic.is_short_term,
	bne	.L135	@,
.L136:
	movw	r5, #56344	@ tmp161,
	strb	r2, [r4, #2]	@ iftmp.548, <variable>.is_reference
	ldr	r6, [r3, r5]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	movw	ip, #56380	@ tmp163,
	movw	r5, #56372	@ tmp165,
	movw	r1, #56356	@ tmp167,
	str	r6, [r4, #660]	@ <variable>.CurrPic.frame_num, <variable>.frame_num
	movw	r6, #55799	@ tmp175,
	ldr	r0, [r3, ip]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	str	r0, [r4, #696]	@ <variable>.CurrPic.err_level, <variable>.err_level
	ldr	r2, [r3, r5]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	str	r2, [r4, #692]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	movw	r2, #56404	@ tmp169,
	ldr	r0, [r3, r1]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	r0, [r4, #672]	@ <variable>.CurrPic.thispoc, <variable>.poc
	movw	r0, #56348	@ tmp171,
	ldr	r1, [r3, r2]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	str	r1, [r4, #700]	@ <variable>.CurrPic.pmv_address_idc, <variable>.pmv_address_idc
	movw	r1, #55801	@ tmp173,
	ldr	r2, [r3, r0]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.CurrPic.long_term_frame_idx
	str	r2, [r4, #668]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.long_term_frame_idx
	movw	r2, #55795	@ tmp178,
	ldrb	r0, [r3, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	str	r0, [r4, #688]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	r0, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r0, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r0, #3	@ iftmp.550,
	movne	r0, #0	@ iftmp.550,
	strb	r0, [r4, #3]	@ iftmp.550, <variable>.mode_skip_flag
	ldrb	r1, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r1, #1	@ <variable>.CurrPic.structure,
	beq	.L141	@,
	bcs	.L155	@,
	movw	r8, #55796	@ tmp184,
	str	r4, [r4, #540]	@ pCurrFrame, <variable>.frame.frame_store
	mov	r0, #3	@ tmp180,
	mov	r1, #0	@ tmp182,
	strb	r0, [r4, #1]	@ tmp180, <variable>.is_used
	movw	r2, #55797	@ tmp186,
	strb	r1, [r4, #536]	@ tmp182, <variable>.frame.structure
	movw	lr, #56360	@ tmp188,
	ldrb	r6, [r3, r8]	@ zero_extendqisi2	@ temp.1260, <variable>.CurrPic.is_long_term
	add	r1, r3, #55808	@, pH264Ctx,
	add	r0, r4, #8	@, pCurrFrame,
	strb	r6, [r4, #537]	@ temp.1260, <variable>.frame.is_long_term
	ldrb	r8, [r3, r2]	@ zero_extendqisi2	@ temp.1261, <variable>.CurrPic.is_short_term
	mov	r2, #528	@,
	strb	r8, [r4, #538]	@ temp.1261, <variable>.frame.is_short_term
	ldr	r7, [r3, lr]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	str	r7, [r4, #552]	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	ldr	r5, [r3, r5]	@ temp.1262, <variable>.CurrPic.pic_type
	str	r5, [r4, #560]	@ temp.1262, <variable>.frame.pic_type
	ldr	r7, [r3, ip]	@ temp.1263, <variable>.CurrPic.err_level
	movw	ip, #56364	@ tmp192,
	str	r7, [r4, #556]	@ temp.1263, <variable>.frame.err_level
	ldr	lr, [r3, ip]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	movw	ip, #56368	@ tmp194,
	str	lr, [r4, #592]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	lr, [r3, ip]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	str	lr, [r4, #632]	@ <variable>.CurrPic.bottompoc, <variable>.bottom_field.poc
	bl	memcpy	@
	mov	ip, #1	@ tmp203,
	mov	r3, #2	@ tmp207,
	strb	r6, [r4, #617]	@ temp.1260, <variable>.bottom_field.is_long_term
	strb	r8, [r4, #618]	@ temp.1261, <variable>.bottom_field.is_short_term
	str	r7, [r4, #636]	@ temp.1263, <variable>.bottom_field.err_level
	strb	ip, [r4, #576]	@ tmp203, <variable>.top_field.structure
	strb	r3, [r4, #616]	@ tmp207, <variable>.bottom_field.structure
	str	r5, [r4, #640]	@ temp.1262, <variable>.bottom_field.pic_type
	str	r4, [r4, #620]	@ pCurrFrame, <variable>.bottom_field.frame_store
	strb	r6, [r4, #577]	@ temp.1260, <variable>.top_field.is_long_term
	strb	r8, [r4, #578]	@ temp.1261, <variable>.top_field.is_short_term
	str	r7, [r4, #596]	@ temp.1263, <variable>.top_field.err_level
	str	r5, [r4, #600]	@ temp.1262, <variable>.top_field.pic_type
	str	r4, [r4, #580]	@ pCurrFrame, <variable>.top_field.frame_store
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L135:
	mov	r2, #3	@ iftmp.548,
	b	.L136	@
.L155:
	cmp	r1, #2	@ <variable>.CurrPic.structure,
	ldmnefd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
	movw	r7, #55796	@ tmp252,
	str	r4, [r4, #620]	@ pCurrFrame, <variable>.bottom_field.frame_store
	mov	r2, #1	@ tmp250,
	strb	r2, [r4, #616]	@ tmp250, <variable>.bottom_field.structure
	ldrb	lr, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movw	r2, #55797	@ tmp255,
	mov	r7, #0	@ tmp262,
	strb	lr, [r4, #617]	@ <variable>.CurrPic.is_long_term, <variable>.bottom_field.is_long_term
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	movw	r2, #56364	@ tmp258,
	strb	lr, [r4, #618]	@ <variable>.CurrPic.is_short_term, <variable>.bottom_field.is_short_term
	ldr	lr, [r3, r2]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	lr, [r4, #632]	@ <variable>.CurrPic.toppoc, <variable>.bottom_field.poc
	ldr	lr, [r3, r5]	@ temp.1275, <variable>.CurrPic.pic_type
	str	lr, [r4, #640]	@ temp.1275, <variable>.bottom_field.pic_type
	ldr	r2, [r3, ip]	@ temp.1276, <variable>.CurrPic.err_level
	movw	ip, #55793	@ tmp263,
	str	r7, [r4, #688]	@ tmp262, <variable>.MbaffFrameFlag
	str	r2, [r4, #636]	@ temp.1276, <variable>.bottom_field.err_level
	ldrb	ip, [r3, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	ip, r7	@ <variable>.CurrPic.field_pair_flag,
	beq	.L156	@,
	ldr	r1, [r4, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	mov	ip, #3	@ tmp275,
	strb	ip, [r4, #1]	@ tmp275, <variable>.is_used
	add	ip, r2, r1	@ temp.1279, temp.1276, <variable>.top_field.err_level
	str	ip, [r4, #556]	@ temp.1279, <variable>.frame.err_level
	str	ip, [r4, #696]	@ temp.1279, <variable>.err_level
	ldrb	r1, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r1, #1	@ <variable>.CurrPic.mode_skip_flag,
	mvn	r1, #0	@,
	orreq	r7, r0, #2	@ iftmp.553, iftmp.550,
	movw	r0, #55816	@ tmp282,
	strb	r7, [r4, #3]	@ iftmp.553, <variable>.mode_skip_flag
	ldrd	r6, [r3, r0]	@ temp.1281, pH264Ctx, tmp282
	mvn	r0, #0	@ tmp283,
	cmp	r7, r1	@ temp.1281, tmp283
	cmpeq	r6, r0	@ temp.1281, tmp283
	beq	.L152	@,
	ldrd	r8, [r4, #16]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	r9, r1	@ <variable>.fs_image.PTS, tmp283
	cmpeq	r8, r0	@ <variable>.fs_image.PTS, tmp283
	beq	.L157	@,
.L152:
	ldr	r2, [r4, #600]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L154	@
.L141:
	movw	r7, #55796	@ tmp211,
	strb	r1, [r4, #576]	@ <variable>.CurrPic.structure, <variable>.top_field.structure
	str	r4, [r4, #580]	@ pCurrFrame, <variable>.top_field.frame_store
	movw	r2, #55797	@ tmp214,
	ldrb	lr, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	mov	r7, #0	@ tmp221,
	strb	lr, [r4, #577]	@ <variable>.CurrPic.is_long_term, <variable>.top_field.is_long_term
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	movw	r2, #56364	@ tmp217,
	strb	lr, [r4, #578]	@ <variable>.CurrPic.is_short_term, <variable>.top_field.is_short_term
	ldr	lr, [r3, r2]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	lr, [r4, #592]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	lr, [r3, r5]	@ temp.1267, <variable>.CurrPic.pic_type
	str	lr, [r4, #600]	@ temp.1267, <variable>.top_field.pic_type
	ldr	r2, [r3, ip]	@ temp.1268, <variable>.CurrPic.err_level
	movw	ip, #55793	@ tmp222,
	str	r7, [r4, #688]	@ tmp221, <variable>.MbaffFrameFlag
	str	r2, [r4, #596]	@ temp.1268, <variable>.top_field.err_level
	ldrb	ip, [r3, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	ip, r7	@ <variable>.CurrPic.field_pair_flag,
	beq	.L158	@,
	ldr	r1, [r4, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	mov	ip, #3	@ tmp235,
	strb	ip, [r4, #1]	@ tmp235, <variable>.is_used
	add	ip, r2, r1	@ D.40450, temp.1268, <variable>.bottom_field.err_level
	str	ip, [r4, #556]	@ D.40450, <variable>.frame.err_level
	str	ip, [r4, #696]	@ D.40450, <variable>.err_level
	movw	r1, #55816	@ tmp242,
	ldrb	r2, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r2, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	r7, r0, #1	@ iftmp.551, iftmp.550,
	strb	r7, [r4, #3]	@ iftmp.551, <variable>.mode_skip_flag
	ldrd	r6, [r3, r1]	@ D.40457, pH264Ctx, tmp242
	mvn	r0, #0	@ tmp243,
	mvn	r1, #0	@,
	cmp	r7, r1	@ D.40457, tmp243
	cmpeq	r6, r0	@ D.40457, tmp243
	beq	.L146	@,
	ldrd	r8, [r4, #16]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	r9, r1	@ <variable>.fs_image.PTS, tmp243
	cmpeq	r8, r0	@ <variable>.fs_image.PTS, tmp243
	beq	.L159	@,
.L146:
	ldr	r2, [r4, #640]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
.L154:
	cmp	r2, lr	@ <variable>.top_field.pic_type, temp.1275
	strcs	r2, [r4, #692]	@, <variable>.top_field.pic_type, <variable>.pic_type
	strcc	lr, [r4, #692]	@, temp.1275, <variable>.pic_type
	movw	r2, #56356	@ tmp288,
	ldr	lr, [r3, r2]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	mov	r0, r4	@, pCurrFrame
	str	lr, [r4, #672]	@ <variable>.CurrPic.thispoc, <variable>.poc
	bl	CombineFldsToFrm	@
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L156:
	strb	r1, [r4, #1]	@ <variable>.CurrPic.structure, <variable>.is_used
	add	r1, r3, #55808	@, pH264Ctx,
	str	r2, [r4, #556]	@ temp.1276, <variable>.frame.err_level
	add	r0, r4, #8	@, pCurrFrame,
	str	r2, [r4, #696]	@ temp.1276, <variable>.err_level
	mov	r2, #528	@,
	ldrb	r3, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r3, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r3, #2	@ iftmp.552,
	movne	r3, r7	@ iftmp.552,
	strb	r3, [r4, #3]	@ iftmp.552, <variable>.mode_skip_flag
	bl	memcpy	@
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L158:
	strb	r1, [r4, #1]	@ <variable>.CurrPic.structure, <variable>.is_used
	add	r0, r4, #8	@, pCurrFrame,
	str	r2, [r4, #556]	@ temp.1268, <variable>.frame.err_level
	add	r1, r3, #55808	@, pH264Ctx,
	str	r2, [r4, #696]	@ temp.1268, <variable>.err_level
	mov	r2, #528	@,
	ldrb	ip, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	r3, #0	@, tmp228
	moveq	r3, #1	@, tmp228
	strb	r3, [r4, #3]	@ tmp228, <variable>.mode_skip_flag
	bl	memcpy	@
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}	@
.L159:
	strd	r6, [r4, #16]	@ D.40457, pCurrFrame,
	b	.L146	@
.L157:
	strd	r6, [r4, #16]	@ temp.1281, pCurrFrame,
	ldr	r2, [r4, #600]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L154	@
	.fnend
	.size	UpdateCurrFrameInfo, .-UpdateCurrFrameInfo
	.align	2
	.global	GetShortTermPicPoint
	.type	GetShortTermPicPoint, %function
GetShortTermPicPoint:
	.fnstart
.LFB1582:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20689	@ tmp144,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L162	@,
	movw	r2, #20690	@ tmp146,
	ldrb	r3, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r3, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r3, #2	@ structure,
	moveq	r3, #1	@ structure,
.L162:
	movw	ip, #26640	@ tmp148,
	ldr	r5, [r0, ip]	@ D.40930, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, #0	@ D.40930,
	beq	.L164	@,
	cmp	r3, #0	@ structure,
	add	r0, r0, #26368	@ ivtmp.1311, pH264Ctx,
	sub	r2, r5, #1	@ tmp166, D.40930,
	add	r0, r0, #136	@ ivtmp.1311, ivtmp.1311,
	and	r4, r2, #1	@ tmp168, tmp166,
	bne	.L172	@,
	ldr	r2, [r0, #0]	@ D.40895, <variable>.DPB.fs_ref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L174	@,
	ldr	ip, [r2, #536]	@ tmp185,
	bic	ip, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, ip, #255	@ tmp186, tmp186,
	cmp	ip, #65536	@ tmp186,
	bne	.L174	@,
	ldr	ip, [r2, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	ip, r1	@ <variable>.frame.pic_num, picNum
	beq	.L191	@,
.L174:
	mov	ip, #1	@ i,
	cmp	r5, ip	@ D.40930, i
	add	r0, r0, #4	@ ivtmp.1311, ivtmp.1311,
	bls	.L164	@,
	cmp	r4, #0	@ tmp168,
	beq	.L169	@,
	cmp	r3, #0	@ structure,
	beq	.L192	@,
	ldr	r2, [r0, #0]	@ temp.1314, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ D.40908, <variable>.is_reference
	tst	r4, #1	@ D.40908,
	beq	.L177	@,
	ldr	r6, [r2, #576]	@ tmp194,
	bic	r6, r6, #-16777216	@ tmp195, tmp194,
	bic	r6, r6, #255	@ tmp195, tmp195,
	cmp	r6, #65536	@ tmp195,
	beq	.L196	@,
.L177:
	tst	r4, #2	@ D.40908,
	beq	.L178	@,
	ldr	r4, [r2, #616]	@ tmp191,
	bic	r4, r4, #-16777216	@ tmp192, tmp191,
	bic	r4, r4, #255	@ tmp192, tmp192,
	cmp	r4, #65536	@ tmp192,
	bne	.L178	@,
	ldr	r4, [r2, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r4, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L189	@,
.L178:
	add	ip, ip, #1	@ i, i,
	add	r0, r0, #4	@ ivtmp.1311, ivtmp.1311,
	cmp	r5, ip	@ D.40930, i
	bhi	.L169	@,
.L164:
	mov	r0, #0	@ D.40906,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L172:
	ldr	r2, [r0, #0]	@ temp.1314, <variable>.DPB.fs_ref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ D.40908, <variable>.is_reference
	tst	ip, #1	@ D.40908,
	beq	.L173	@,
	ldr	r6, [r2, #576]	@ tmp181,
	bic	r6, r6, #-16777216	@ tmp182, tmp181,
	bic	r6, r6, #255	@ tmp182, tmp182,
	cmp	r6, #65536	@ tmp182,
	beq	.L197	@,
.L173:
	tst	ip, #2	@ D.40908,
	beq	.L174	@,
	ldr	ip, [r2, #616]	@ tmp178,
	bic	ip, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, ip, #255	@ tmp179, tmp179,
	cmp	ip, #65536	@ tmp179,
	bne	.L174	@,
	ldr	ip, [r2, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L174	@,
.L189:
	add	r0, r2, #616	@ D.40906, temp.1314,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L198:
	ldr	r2, [r0, #0]	@ D.40895, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L166	@,
	ldr	r4, [r2, #536]	@ tmp153,
	bic	r4, r4, #-16777216	@ tmp151, tmp153,
	bic	r4, r4, #255	@ tmp151, tmp151,
	cmp	r4, #65536	@ tmp151,
	bne	.L166	@,
	ldr	r4, [r2, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r1	@ <variable>.frame.pic_num, picNum
	beq	.L191	@,
.L166:
	cmp	r3, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r4, r0, #4	@ tmp170, ivtmp.1311,
	bne	.L181	@,
.L200:
	ldr	r2, [r0, #4]	@ D.40895, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L183	@,
	ldr	r0, [r2, #536]	@ tmp211,
	bic	r0, r0, #-16777216	@ tmp212, tmp211,
	bic	r0, r0, #255	@ tmp212, tmp212,
	cmp	r0, #65536	@ tmp212,
	bne	.L183	@,
	ldr	r0, [r2, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L191	@,
.L183:
	add	ip, ip, #1	@ i, tmp169,
	add	r0, r4, #4	@ ivtmp.1311, tmp170,
	cmp	r5, ip	@ D.40930, i
	bls	.L164	@,
.L169:
	cmp	r3, #0	@ structure,
	beq	.L198	@,
	ldr	r2, [r0, #0]	@ temp.1314, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ D.40908, <variable>.is_reference
	tst	r4, #1	@ D.40908,
	beq	.L168	@,
	ldr	r6, [r2, #576]	@ tmp158,
	bic	r6, r6, #-16777216	@ tmp156, tmp158,
	bic	r6, r6, #255	@ tmp156, tmp156,
	cmp	r6, #65536	@ tmp156,
	beq	.L199	@,
.L168:
	tst	r4, #2	@ D.40908,
	beq	.L166	@,
	ldr	r4, [r2, #616]	@ tmp163,
	bic	r4, r4, #-16777216	@ tmp161, tmp163,
	bic	r4, r4, #255	@ tmp161, tmp161,
	cmp	r4, #65536	@ tmp161,
	bne	.L166	@,
	ldr	r4, [r2, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r4, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L189	@,
	cmp	r3, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r4, r0, #4	@ tmp170, ivtmp.1311,
	beq	.L200	@,
.L181:
	ldr	r2, [r0, #4]	@ temp.1314, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ D.40908, <variable>.is_reference
	tst	r0, #1	@ D.40908,
	beq	.L182	@,
	ldr	r6, [r2, #576]	@ tmp207,
	bic	r6, r6, #-16777216	@ tmp208, tmp207,
	bic	r6, r6, #255	@ tmp208, tmp208,
	cmp	r6, #65536	@ tmp208,
	beq	.L201	@,
.L182:
	tst	r0, #2	@ D.40908,
	beq	.L183	@,
	ldr	r0, [r2, #616]	@ tmp204,
	bic	r0, r0, #-16777216	@ tmp205, tmp204,
	bic	r0, r0, #255	@ tmp205, tmp205,
	cmp	r0, #65536	@ tmp205,
	bne	.L183	@,
	ldr	r0, [r2, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r0, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L183	@,
	b	.L189	@
.L199:
	ldr	r6, [r2, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r6, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L168	@,
.L190:
	add	r0, r2, #576	@ D.40906, temp.1314,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L201:
	ldr	r6, [r2, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r6, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L182	@,
	b	.L190	@
.L192:
	ldr	r2, [r0, #0]	@ D.40895, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L178	@,
	ldr	r4, [r2, #536]	@ tmp198,
	bic	r4, r4, #-16777216	@ tmp199, tmp198,
	bic	r4, r4, #255	@ tmp199, tmp199,
	cmp	r4, #65536	@ tmp199,
	bne	.L178	@,
	ldr	r4, [r2, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r1	@ <variable>.frame.pic_num, picNum
	bne	.L178	@,
.L191:
	add	r0, r2, #536	@ D.40906, D.40895,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L197:
	ldr	r6, [r2, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r6, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L173	@,
	b	.L190	@
.L196:
	ldr	r6, [r2, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r6, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L177	@,
	b	.L190	@
	.fnend
	.size	GetShortTermPicPoint, .-GetShortTermPicPoint
	.align	2
	.global	GetLongTermPicPoint
	.type	GetLongTermPicPoint, %function
GetLongTermPicPoint:
	.fnstart
.LFB1583:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20689	@ tmp144,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L204	@,
	movw	r2, #20690	@ tmp146,
	ldrb	r3, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r3, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r3, #2	@ structure,
	moveq	r3, #1	@ structure,
.L204:
	movw	ip, #26644	@ tmp148,
	ldr	r5, [r0, ip]	@ D.40988, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, #0	@ D.40988,
	beq	.L206	@,
	cmp	r3, #0	@ structure,
	add	r0, r0, #26368	@ ivtmp.1342, pH264Ctx,
	sub	r2, r5, #1	@ tmp166, D.40988,
	add	r0, r0, #200	@ ivtmp.1342, ivtmp.1342,
	and	r4, r2, #1	@ tmp168, tmp166,
	bne	.L214	@,
	ldr	r2, [r0, #0]	@ D.40953, <variable>.DPB.fs_ltref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L216	@,
	ldr	ip, [r2, #536]	@ tmp185,
	bic	ip, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, ip, #255	@ tmp186, tmp186,
	cmp	ip, #256	@ tmp186,
	bne	.L216	@,
	ldr	ip, [r2, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	ip, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L233	@,
.L216:
	mov	ip, #1	@ i,
	cmp	r5, ip	@ D.40988, i
	add	r0, r0, #4	@ ivtmp.1342, ivtmp.1342,
	bls	.L206	@,
	cmp	r4, #0	@ tmp168,
	beq	.L211	@,
	cmp	r3, #0	@ structure,
	beq	.L234	@,
	ldr	r2, [r0, #0]	@ temp.1345, <variable>.DPB.fs_ltref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ D.40966, <variable>.is_reference
	tst	r4, #1	@ D.40966,
	beq	.L219	@,
	ldr	r6, [r2, #576]	@ tmp194,
	bic	r6, r6, #-16777216	@ tmp195, tmp194,
	bic	r6, r6, #255	@ tmp195, tmp195,
	cmp	r6, #256	@ tmp195,
	beq	.L238	@,
.L219:
	tst	r4, #2	@ D.40966,
	beq	.L220	@,
	ldr	r4, [r2, #616]	@ tmp191,
	bic	r4, r4, #-16777216	@ tmp192, tmp191,
	bic	r4, r4, #255	@ tmp192, tmp192,
	cmp	r4, #256	@ tmp192,
	bne	.L220	@,
	ldr	r4, [r2, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r4, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L231	@,
.L220:
	add	ip, ip, #1	@ i, i,
	add	r0, r0, #4	@ ivtmp.1342, ivtmp.1342,
	cmp	r5, ip	@ D.40988, i
	bhi	.L211	@,
.L206:
	mov	r0, #0	@ D.40964,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L214:
	ldr	r2, [r0, #0]	@ temp.1345, <variable>.DPB.fs_ltref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ D.40966, <variable>.is_reference
	tst	ip, #1	@ D.40966,
	beq	.L215	@,
	ldr	r6, [r2, #576]	@ tmp181,
	bic	r6, r6, #-16777216	@ tmp182, tmp181,
	bic	r6, r6, #255	@ tmp182, tmp182,
	cmp	r6, #256	@ tmp182,
	beq	.L239	@,
.L215:
	tst	ip, #2	@ D.40966,
	beq	.L216	@,
	ldr	ip, [r2, #616]	@ tmp178,
	bic	ip, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, ip, #255	@ tmp179, tmp179,
	cmp	ip, #256	@ tmp179,
	bne	.L216	@,
	ldr	ip, [r2, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	ip, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L216	@,
.L231:
	add	r0, r2, #616	@ D.40964, temp.1345,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L240:
	ldr	r2, [r0, #0]	@ D.40953, <variable>.DPB.fs_ltref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L208	@,
	ldr	r4, [r2, #536]	@ tmp153,
	bic	r4, r4, #-16777216	@ tmp151, tmp153,
	bic	r4, r4, #255	@ tmp151, tmp151,
	cmp	r4, #256	@ tmp151,
	bne	.L208	@,
	ldr	r4, [r2, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L233	@,
.L208:
	cmp	r3, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r4, r0, #4	@ tmp170, ivtmp.1342,
	bne	.L223	@,
.L242:
	ldr	r2, [r0, #4]	@ D.40953, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L225	@,
	ldr	r0, [r2, #536]	@ tmp211,
	bic	r0, r0, #-16777216	@ tmp212, tmp211,
	bic	r0, r0, #255	@ tmp212, tmp212,
	cmp	r0, #256	@ tmp212,
	bne	.L225	@,
	ldr	r0, [r2, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L233	@,
.L225:
	add	ip, ip, #1	@ i, tmp169,
	add	r0, r4, #4	@ ivtmp.1342, tmp170,
	cmp	r5, ip	@ D.40988, i
	bls	.L206	@,
.L211:
	cmp	r3, #0	@ structure,
	beq	.L240	@,
	ldr	r2, [r0, #0]	@ temp.1345, <variable>.DPB.fs_ltref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ D.40966, <variable>.is_reference
	tst	r4, #1	@ D.40966,
	beq	.L210	@,
	ldr	r6, [r2, #576]	@ tmp158,
	bic	r6, r6, #-16777216	@ tmp156, tmp158,
	bic	r6, r6, #255	@ tmp156, tmp156,
	cmp	r6, #256	@ tmp156,
	beq	.L241	@,
.L210:
	tst	r4, #2	@ D.40966,
	beq	.L208	@,
	ldr	r4, [r2, #616]	@ tmp163,
	bic	r4, r4, #-16777216	@ tmp161, tmp163,
	bic	r4, r4, #255	@ tmp161, tmp161,
	cmp	r4, #256	@ tmp161,
	bne	.L208	@,
	ldr	r4, [r2, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r4, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L231	@,
	cmp	r3, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r4, r0, #4	@ tmp170, ivtmp.1342,
	beq	.L242	@,
.L223:
	ldr	r2, [r0, #4]	@ temp.1345, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ D.40966, <variable>.is_reference
	tst	r0, #1	@ D.40966,
	beq	.L224	@,
	ldr	r6, [r2, #576]	@ tmp207,
	bic	r6, r6, #-16777216	@ tmp208, tmp207,
	bic	r6, r6, #255	@ tmp208, tmp208,
	cmp	r6, #256	@ tmp208,
	beq	.L243	@,
.L224:
	tst	r0, #2	@ D.40966,
	beq	.L225	@,
	ldr	r0, [r2, #616]	@ tmp204,
	bic	r0, r0, #-16777216	@ tmp205, tmp204,
	bic	r0, r0, #255	@ tmp205, tmp205,
	cmp	r0, #256	@ tmp205,
	bne	.L225	@,
	ldr	r0, [r2, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r0, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L225	@,
	b	.L231	@
.L241:
	ldr	r6, [r2, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L210	@,
.L232:
	add	r0, r2, #576	@ D.40964, temp.1345,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L243:
	ldr	r6, [r2, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L224	@,
	b	.L232	@
.L234:
	ldr	r2, [r0, #0]	@ D.40953, <variable>.DPB.fs_ltref
	ldrb	r4, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L220	@,
	ldr	r4, [r2, #536]	@ tmp198,
	bic	r4, r4, #-16777216	@ tmp199, tmp198,
	bic	r4, r4, #255	@ tmp199, tmp199,
	cmp	r4, #256	@ tmp199,
	bne	.L220	@,
	ldr	r4, [r2, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	bne	.L220	@,
.L233:
	add	r0, r2, #536	@ D.40964, D.40953,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L239:
	ldr	r6, [r2, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L215	@,
	b	.L232	@
.L238:
	ldr	r6, [r2, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L219	@,
	b	.L232	@
	.fnend
	.size	GetLongTermPicPoint, .-GetLongTermPicPoint
	.align	2
	.global	ReorderSTList
	.type	ReorderSTList, %function
ReorderSTList:
	.fnstart
.LFB1584:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ refIdxLX, refIdxLX
	mov	r5, r1	@ RefPicListX, RefPicListX
	mov	r1, r3	@, picNumLX
	mov	r6, r3	@ picNumLX, picNumLX
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	bl	GetShortTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.41014,* refIdxLX
	add	r8, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	r8, r3	@ cIdx, D.41014
	ble	.L245	@,
	add	r1, r5, r8, asl #2	@, ivtmp.1392, RefPicListX, cIdx,
	add	r2, r5, r7, asl #2	@, ivtmp.1390, RefPicListX, ivtmp.1387,
.L246:
	ldr	r3, [r2], #-4	@ tmp155,
	mov	ip, r7	@ cIdx.1394, ivtmp.1387
	sub	r7, r7, #1	@ ivtmp.1387, ivtmp.1387,
	str	r3, [r1], #-4	@ tmp155,
	ldr	r3, [r4, #0]	@ D.41014,* refIdxLX
	cmp	r3, ip	@ D.41014, cIdx.1394
	blt	.L246	@,
.L245:
	add	r1, r3, #1	@ cIdx.1393, D.41014,
	str	r0, [r5, r3, asl #2]	@ picLX,* RefPicListX
	cmp	r8, r1	@ cIdx, cIdx.1393
	str	r1, [r4, #0]	@ cIdx.1393,* refIdxLX
	ldmltfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r2, r5, r1, asl #2	@, ivtmp.1383, RefPicListX, cIdx.1393,
	rsb	r0, r1, r8	@ tmp159, cIdx.1393, cIdx
	and	ip, r0, #1	@ tmp160, tmp159,
	mov	r3, r1	@ nIdx, cIdx.1393
	ldr	r0, [r2, #0]	@ D.41019,* ivtmp.1383
	cmp	r0, #0	@ D.41019,
	beq	.L254	@,
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L267	@,
.L255:
	add	r3, r1, #1	@ nIdx, cIdx.1393,
	str	r0, [r5, r1, asl #2]	@ D.41019,* RefPicListX
.L254:
	add	r1, r1, #1	@ cIdx.1393, cIdx.1393,
	add	r2, r2, #4	@ ivtmp.1383, ivtmp.1383,
	cmp	r8, r1	@ cIdx, cIdx.1393
	ldmltfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L270:
	cmp	ip, #0	@ tmp160,
	beq	.L250	@,
	ldr	r0, [r2, #0]	@ D.41019,* ivtmp.1383
	cmp	r0, #0	@ D.41019,
	beq	.L257	@,
	ldrb	lr, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	lr, #0	@ <variable>.is_long_term,
	beq	.L268	@,
.L258:
	str	r0, [r5, r3, asl #2]	@ D.41019,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L257:
	add	r1, r1, #1	@ cIdx.1393, cIdx.1393,
	add	r2, r2, #4	@ ivtmp.1383, ivtmp.1383,
	cmp	r8, r1	@ cIdx, cIdx.1393
	ldmltfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L250:
	ldr	r0, [r2, #0]	@ D.41019,* ivtmp.1383
	add	r1, r1, #1	@ tmp161, cIdx.1393,
	add	ip, r2, #4	@ tmp162, ivtmp.1383,
	cmp	r0, #0	@ D.41019,
	beq	.L248	@,
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L249	@,
	ldr	r4, [r0, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r6	@ <variable>.pic_num, picNumLX
	beq	.L248	@,
.L249:
	str	r0, [r5, r3, asl #2]	@ D.41019,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L248:
	ldr	r2, [r2, #4]	@ D.41019,
	cmp	r2, #0	@ D.41019,
	beq	.L261	@,
	ldrb	r0, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, #0	@ <variable>.is_long_term,
	bne	.L262	@,
	ldr	lr, [r2, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	lr, r6	@ <variable>.pic_num, picNumLX
	beq	.L261	@,
.L262:
	str	r2, [r5, r3, asl #2]	@ D.41019,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L261:
	add	r1, r1, #1	@ cIdx.1393, tmp161,
	add	r2, ip, #4	@ ivtmp.1383, tmp162,
	cmp	r8, r1	@ cIdx, cIdx.1393
	bge	.L250	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L267:
	ldr	r4, [r0, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r6	@ <variable>.pic_num, picNumLX
	bne	.L255	@,
	add	r1, r1, #1	@ cIdx.1393, cIdx.1393,
	add	r2, r2, #4	@ ivtmp.1383, ivtmp.1383,
	cmp	r8, r1	@ cIdx, cIdx.1393
	bge	.L270	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L268:
	ldr	ip, [r0, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	ip, r6	@ <variable>.pic_num, picNumLX
	bne	.L258	@,
	b	.L257	@
	.fnend
	.size	ReorderSTList, .-ReorderSTList
	.align	2
	.global	ReorderLTList
	.type	ReorderLTList, %function
ReorderLTList:
	.fnstart
.LFB1585:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ refIdxLX, refIdxLX
	mov	r5, r1	@ RefPicListX, RefPicListX
	mov	r1, r3	@, LongTermPicNum
	mov	r6, r3	@ LongTermPicNum, LongTermPicNum
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	bl	GetLongTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.41056,* refIdxLX
	add	r8, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	r8, r3	@ cIdx, D.41056
	ble	.L272	@,
	add	r1, r5, r8, asl #2	@, ivtmp.1440, RefPicListX, cIdx,
	add	r2, r5, r7, asl #2	@, ivtmp.1438, RefPicListX, ivtmp.1435,
.L273:
	ldr	r3, [r2], #-4	@ tmp151,
	mov	ip, r7	@ cIdx.1442, ivtmp.1435
	sub	r7, r7, #1	@ ivtmp.1435, ivtmp.1435,
	str	r3, [r1], #-4	@ tmp151,
	ldr	r3, [r4, #0]	@ D.41056,* refIdxLX
	cmp	r3, ip	@ D.41056, cIdx.1442
	blt	.L273	@,
.L272:
	add	r1, r3, #1	@ cIdx.1441, D.41056,
	str	r0, [r5, r3, asl #2]	@ picLX,* RefPicListX
	cmp	r8, r1	@ cIdx, cIdx.1441
	str	r1, [r4, #0]	@ cIdx.1441,* refIdxLX
	ldmltfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r2, r5, r1, asl #2	@, ivtmp.1431, RefPicListX, cIdx.1441,
	rsb	r0, r1, r8	@ tmp155, cIdx.1441, cIdx
	and	ip, r0, #1	@ tmp156, tmp155,
	mov	r3, r1	@ nIdx, cIdx.1441
	ldr	r0, [r2, #0]	@ D.41061,* ivtmp.1431
	cmp	r0, #0	@ D.41061,
	beq	.L281	@,
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L294	@,
.L282:
	add	r3, r1, #1	@ nIdx, cIdx.1441,
	str	r0, [r5, r1, asl #2]	@ D.41061,* RefPicListX
.L281:
	add	r1, r1, #1	@ cIdx.1441, cIdx.1441,
	add	r2, r2, #4	@ ivtmp.1431, ivtmp.1431,
	cmp	r8, r1	@ cIdx, cIdx.1441
	ldmltfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L297:
	cmp	ip, #0	@ tmp156,
	beq	.L277	@,
	ldr	r0, [r2, #0]	@ D.41061,* ivtmp.1431
	cmp	r0, #0	@ D.41061,
	beq	.L284	@,
	ldrb	lr, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	lr, #0	@ <variable>.is_long_term,
	bne	.L295	@,
.L285:
	str	r0, [r5, r3, asl #2]	@ D.41061,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L284:
	add	r1, r1, #1	@ cIdx.1441, cIdx.1441,
	add	r2, r2, #4	@ ivtmp.1431, ivtmp.1431,
	cmp	r8, r1	@ cIdx, cIdx.1441
	ldmltfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L277:
	ldr	r0, [r2, #0]	@ D.41061,* ivtmp.1431
	add	r1, r1, #1	@ tmp157, cIdx.1441,
	add	ip, r2, #4	@ tmp158, ivtmp.1431,
	cmp	r0, #0	@ D.41061,
	beq	.L275	@,
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L276	@,
	ldr	r4, [r0, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	beq	.L275	@,
.L276:
	str	r0, [r5, r3, asl #2]	@ D.41061,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L275:
	ldr	r2, [r2, #4]	@ D.41061,
	cmp	r2, #0	@ D.41061,
	beq	.L288	@,
	ldrb	r0, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, #0	@ <variable>.is_long_term,
	beq	.L289	@,
	ldr	lr, [r2, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	lr, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	beq	.L288	@,
.L289:
	str	r2, [r5, r3, asl #2]	@ D.41061,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L288:
	add	r1, r1, #1	@ cIdx.1441, tmp157,
	add	r2, ip, #4	@ ivtmp.1431, tmp158,
	cmp	r8, r1	@ cIdx, cIdx.1441
	bge	.L277	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L294:
	ldr	r4, [r0, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L282	@,
	add	r1, r1, #1	@ cIdx.1441, cIdx.1441,
	add	r2, r2, #4	@ ivtmp.1431, ivtmp.1431,
	cmp	r8, r1	@ cIdx, cIdx.1441
	bge	.L297	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L295:
	ldr	ip, [r0, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	ip, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L285	@,
	b	.L284	@
	.fnend
	.size	ReorderLTList, .-ReorderLTList
	.align	2
	.global	ReorderRefPiclist
	.type	ReorderRefPiclist, %function
ReorderRefPiclist:
	.fnstart
.LFB1586:
	@ args = 12, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #20689	@ tmp152,
	mov	r7, r3	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	ldrb	r2, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	mov	r3, #0	@ tmp151,
	mov	r8, r1	@ list, list
	str	r3, [fp, #-48]	@ tmp151, refIdxLX
	cmp	r2, #0	@ <variable>.CurrSlice.field_pic_flag,
	ldr	r9, [fp, #4]	@ reordering_of_pic_nums_idc, reordering_of_pic_nums_idc
	beq	.L299	@,
	movw	r0, #13592	@ tmp157,
	movw	r3, #20700	@ tmp155,
	ldr	r1, [r5, r0]	@ <variable>.PPS, <variable>.PPS
	mov	ip, #2208	@ tmp159,
	ldr	r3, [r5, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r0, #20708	@ tmp171,
	movw	r2, #13588	@ tmp163,
	ldr	r2, [r5, r2]	@ <variable>.SPS, <variable>.SPS
	mla	r3, ip, r3, r1	@ tmp160, tmp159, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	ldr	r1, [r5, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	mov	ip, r1, asl #1	@ tmp172, <variable>.CurrSlice.frame_num,
	mov	r1, #4000	@ tmp165,
	add	r0, ip, #1	@, tmp172,
	str	r0, [fp, #-60]	@, %sfp
	ldr	ip, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r0, r1, ip, r2	@ tmp166, tmp165, <variable>.seq_parameter_set_id, <variable>.SPS
	mov	ip, #2	@ tmp169,
	ldr	r2, [r0, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	r3, r2, #4	@ tmp167, <variable>.log2_max_frame_num_minus4,
	mov	r1, ip, asl r3	@, tmp169,
	str	r1, [fp, #-56]	@, %sfp
.L309:
	adds	ip, r7, #2	@, num_ref_idx_lX_active_minus1,
	str	ip, [fp, #-64]	@, %sfp
	beq	.L310	@,
	ldr	r3, [r9, #0]	@ D.41123,* reordering_of_pic_nums_idc
	cmp	r3, #3	@ D.41123,
	beq	.L310	@,
	tst	r7, #1	@ num_ref_idx_lX_active_minus1,
	mov	r2, #0	@ D.41121,
	ldr	r6, [fp, #-60]	@ picNumLXPred, %sfp
	mov	r4, r2	@ i, D.41121
	sub	sl, fp, #48	@ tmp198,,
	bne	.L301	@,
	cmp	r3, #1	@ D.41123,
	bls	.L324	@,
	ldr	r4, [fp, #12]	@, long_term_pic_idx
	mov	r0, r5	@, pH264Ctx
	mov	r1, r8	@, list
	mov	r2, r7	@, num_ref_idx_lX_active_minus1
	ldr	r3, [r4, #0]	@ tmp206,
	str	sl, [sp, #0]	@ tmp198,
	bl	ReorderLTList	@
.L325:
	mov	r2, #4	@ D.41121,
	mov	r4, #1	@ i,
	ldr	r3, [r9, r2]	@ D.41123,* D.41121
	cmp	r3, #3	@ D.41123,
	bne	.L301	@,
.L310:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L302:
	ldr	r1, [fp, #12]	@, long_term_pic_idx
	mov	r0, r5	@, pH264Ctx
	ldr	r3, [r1, r2]	@ tmp179,* D.41121
	mov	r1, r8	@, list
	mov	r2, r7	@, num_ref_idx_lX_active_minus1
	str	sl, [sp, #0]	@ tmp198,
	bl	ReorderLTList	@
.L307:
	ldr	lr, [fp, #-64]	@, %sfp
	add	r4, r4, #1	@ tmp202, i,
	cmp	lr, r4	@, tmp202
	bls	.L310	@,
	ldr	r3, [r9, r4, asl #2]	@ D.41123,* reordering_of_pic_nums_idc
	cmp	r3, #3	@ D.41123,
	beq	.L310	@,
	cmp	r3, #1	@ D.41123,
	bls	.L329	@,
	ldr	r2, [fp, #12]	@, long_term_pic_idx
	mov	r0, r5	@, pH264Ctx
	mov	r1, r8	@, list
	ldr	r3, [r2, r4, asl #2]	@ tmp213,
	mov	r2, r7	@, num_ref_idx_lX_active_minus1
	str	sl, [sp, #0]	@ tmp198,
	bl	ReorderLTList	@
.L330:
	add	r4, r4, #1	@ i, tmp202,
	ldr	r3, [r9, r4, asl #2]	@ D.41123,* reordering_of_pic_nums_idc
	mov	r2, r4, asl #2	@ D.41121, i,
	cmp	r3, #3	@ D.41123,
	beq	.L310	@,
.L301:
	cmp	r3, #1	@ D.41123,
	bhi	.L302	@,
	cmp	r3, #0	@ D.41123,
	bne	.L303	@,
	ldr	r1, [fp, #8]	@, abs_diff_pic_num_minus1
	ldr	r0, [r1, r2]	@ tmp175,* D.41121
	mvn	lr, r0	@ tmp174, tmp175
	adds	r6, lr, r6	@ picNumLXNoWrap, tmp174, picNumLXPred
	bmi	.L336	@,
.L304:
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r0, r5	@, pH264Ctx
	mov	r2, r7	@, num_ref_idx_lX_active_minus1
	str	sl, [sp, #0]	@ tmp198,
	cmp	r3, r6	@, picNumLXNoWrap
	ldrlt	r1, [fp, #-56]	@, %sfp
	movge	r3, r6	@ picNumLX, picNumLXNoWrap
	rsblt	r3, r1, r6	@ picNumLX,, picNumLXNoWrap
	mov	r1, r8	@, list
	bl	ReorderSTList	@
	b	.L307	@
.L329:
	cmp	r3, #0	@ D.41123,
	bne	.L318	@,
	ldr	lr, [fp, #8]	@, abs_diff_pic_num_minus1
	ldr	r3, [lr, r4, asl #2]	@ tmp218,
	mvn	r2, r3	@ tmp219, tmp218
	adds	r6, r2, r6	@ picNumLXNoWrap, tmp219, picNumLXPred
	bmi	.L337	@,
.L320:
	ldr	r3, [fp, #-60]	@, %sfp
	cmp	r3, r6	@, picNumLXNoWrap
	bge	.L338	@,
	ldr	lr, [fp, #-56]	@, %sfp
	rsb	r3, lr, r6	@ picNumLX,, picNumLXNoWrap
.L333:
	mov	r0, r5	@, pH264Ctx
	mov	r1, r8	@, list
	mov	r2, r7	@, num_ref_idx_lX_active_minus1
	str	sl, [sp, #0]	@ tmp198,
	bl	ReorderSTList	@
	b	.L330	@
.L303:
	ldr	r1, [fp, #8]	@, abs_diff_pic_num_minus1
	add	r6, r6, #1	@ tmp176, picNumLXPred,
	ldr	r3, [fp, #-56]	@, %sfp
	ldr	ip, [r1, r2]	@ tmp177,* D.41121
	add	r6, r6, ip	@ picNumLXNoWrap, tmp176, tmp177
	cmp	r3, r6	@, picNumLXNoWrap
	rsble	r6, r3, r6	@ picNumLXNoWrap,, picNumLXNoWrap
	b	.L304	@
.L338:
	mov	r3, r6	@ picNumLX, picNumLXNoWrap
	b	.L333	@
.L318:
	ldr	ip, [fp, #8]	@, abs_diff_pic_num_minus1
	add	r6, r6, #1	@ tmp216, picNumLXPred,
	ldr	r0, [fp, #-56]	@, %sfp
	ldr	r1, [ip, r4, asl #2]	@ tmp217,
	add	r6, r6, r1	@ picNumLXNoWrap, tmp216, tmp217
	cmp	r0, r6	@, picNumLXNoWrap
	rsble	r6, r0, r6	@ picNumLXNoWrap,, picNumLXNoWrap
	b	.L320	@
.L299:
	movw	ip, #13592	@ tmp184,
	movw	r3, #20700	@ tmp182,
	ldr	r3, [r5, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r0, #2208	@ tmp186,
	ldr	r1, [r5, ip]	@ <variable>.PPS, <variable>.PPS
	movw	r2, #13588	@ tmp190,
	ldr	r2, [r5, r2]	@ <variable>.SPS, <variable>.SPS
	mla	ip, r0, r3, r1	@ tmp187, tmp186, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	movw	r1, #20708	@ tmp197,
	ldr	r0, [r5, r1]	@, <variable>.CurrSlice.frame_num
	mov	r1, #4000	@ tmp192,
	str	r0, [fp, #-60]	@, %sfp
	ldr	r3, [ip, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r0, r1, r3, r2	@ tmp193, tmp192, <variable>.seq_parameter_set_id, <variable>.SPS
	mov	r2, #1	@ tmp196,
	ldr	ip, [r0, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	r3, ip, #4	@ tmp194, <variable>.log2_max_frame_num_minus4,
	mov	r0, r2, asl r3	@, tmp196,
	str	r0, [fp, #-56]	@, %sfp
	b	.L309	@
.L324:
	cmp	r3, #0	@ D.41123,
	bne	.L312	@,
	ldr	r1, [fp, #8]	@, abs_diff_pic_num_minus1
	ldr	lr, [fp, #-60]	@, %sfp
	ldr	r0, [r1, #0]	@ tmp211,
	mvn	r4, r0	@ tmp212, tmp211
	adds	r6, r4, lr	@ picNumLXNoWrap, tmp212,
	bmi	.L339	@,
.L314:
	ldr	lr, [fp, #-60]	@, %sfp
	cmp	lr, r6	@, picNumLXNoWrap
	bge	.L340	@,
.L313:
	ldr	r0, [fp, #-56]	@, %sfp
	rsb	r3, r0, r6	@ picNumLX,, picNumLXNoWrap
.L328:
	mov	r0, r5	@, pH264Ctx
	mov	r1, r8	@, list
	mov	r2, r7	@, num_ref_idx_lX_active_minus1
	str	sl, [sp, #0]	@ tmp198,
	bl	ReorderSTList	@
	b	.L325	@
.L336:
	ldr	r2, [fp, #-56]	@, %sfp
	add	r6, r6, r2	@ picNumLXNoWrap, picNumLXNoWrap,
	b	.L304	@
.L337:
	ldr	r0, [fp, #-56]	@, %sfp
	add	r6, r6, r0	@ picNumLXNoWrap, picNumLXNoWrap,
	b	.L320	@
.L312:
	ldr	r3, [fp, #8]	@, abs_diff_pic_num_minus1
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	ip, [r3, #0]	@ tmp210,
	add	r6, r2, #1	@ tmp209,,
	ldr	lr, [fp, #-60]	@, %sfp
	add	r6, r6, ip	@ picNumLXNoWrap, tmp209, tmp210
	cmp	r1, r6	@, picNumLXNoWrap
	rsble	r6, r1, r6	@ picNumLXNoWrap,, picNumLXNoWrap
	cmp	lr, r6	@, picNumLXNoWrap
	blt	.L313	@,
.L340:
	mov	r3, r6	@ picNumLX, picNumLXNoWrap
	b	.L328	@
.L339:
	ldr	ip, [fp, #-56]	@, %sfp
	add	r6, r6, ip	@ picNumLXNoWrap, picNumLXNoWrap,
	b	.L314	@
	.fnend
	.size	ReorderRefPiclist, .-ReorderRefPiclist
	.align	2
	.global	ReorderListX
	.type	ReorderListX, %function
ReorderListX:
	.fnstart
.LFB1587:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #20688	@ tmp134,
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L345	@,
	movw	ip, #19896	@ tmp136,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r2, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0,
	bne	.L346	@,
.L343:
	movw	r3, #20688	@ tmp154,
	movw	r0, #20744	@ tmp151,
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	ip, #20732	@ tmp150,
	ldr	r2, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	add	r0, r2, #1	@ tmp153, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	str	r0, [r4, ip]	@ tmp153, <variable>.CurrSlice.listXsize
	bne	.L345	@,
	movw	r2, #19897	@ tmp156,
	ldrb	ip, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	ip, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1,
	bne	.L347	@,
.L344:
	movw	r1, #20748	@ tmp171,
	mov	r3, #20736	@ tmp170,
	ldr	ip, [r4, r1]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r2, ip, #1	@ tmp173, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	str	r2, [r4, r3]	@ tmp173, <variable>.CurrSlice.listXsize
.L345:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L346:
	add	r1, r0, #26880	@, pH264Ctx,
	add	r2, r0, #20480	@, pH264Ctx,
	movw	r3, #20744	@ tmp142,
	add	r5, r0, #19712	@ tmp144, pH264Ctx,
	ldr	r3, [r0, r3]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	lr, r0, #19968	@ tmp146, pH264Ctx,
	add	ip, r0, #20224	@ tmp148, pH264Ctx,
	add	r1, r1, #164	@,,
	add	r2, r2, #252	@,,
	add	r5, r5, #188	@ tmp144, tmp144,
	add	lr, lr, #196	@ tmp146, tmp146,
	stmia	sp, {r5, lr}	@ phole stm
	add	lr, ip, #204	@ tmp148, tmp148,
	str	lr, [sp, #8]	@ tmp148,
	bl	ReorderRefPiclist	@
	b	.L343	@
.L347:
	add	r1, r4, #27136	@, pH264Ctx,
	movw	r0, #20748	@ tmp162,
	ldr	r3, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r5, r4, #19968	@ tmp164, pH264Ctx,
	add	lr, r4, #20224	@ tmp166, pH264Ctx,
	add	ip, r4, #20480	@ tmp168, pH264Ctx,
	add	r1, r1, #40	@,,
	mov	r0, r4	@, pH264Ctx
	add	r2, r4, #20736	@, pH264Ctx,
	add	r5, r5, #64	@ tmp164, tmp164,
	add	lr, lr, #72	@ tmp166, tmp166,
	stmia	sp, {r5, lr}	@ phole stm
	add	lr, ip, #76	@ tmp168, tmp168,
	str	lr, [sp, #8]	@ tmp168,
	bl	ReorderRefPiclist	@
	b	.L344	@
	.fnend
	.size	ReorderListX, .-ReorderListX
	.align	2
	.global	IsSTRefFlg
	.type	IsSTRefFlg, %function
IsSTRefFlg:
	.fnstart
.LFB1588:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #65536	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	IsSTRefFlg, .-IsSTRefFlg
	.align	2
	.global	IsLTRefFlg
	.type	IsLTRefFlg, %function
IsLTRefFlg:
	.fnstart
.LFB1589:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #256	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	IsLTRefFlg, .-IsLTRefFlg
	.align	2
	.global	compare_pic_by_pic_num_desc
	.type	compare_pic_by_pic_num_desc, %function
compare_pic_by_pic_num_desc:
	.fnstart
.LFB1590:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #12]	@ D.41199, <variable>.pic_num
	ldr	r3, [r1, #12]	@ D.41202, <variable>.pic_num
	cmp	r2, r3	@ D.41199, D.41202
	movlt	r0, #1	@ D.41205,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41205,
	mvngt	r0, #0	@ D.41205,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_pic_by_pic_num_desc, .-compare_pic_by_pic_num_desc
	.align	2
	.global	compare_pic_by_lt_pic_num_asc
	.type	compare_pic_by_lt_pic_num_asc, %function
compare_pic_by_lt_pic_num_asc:
	.fnstart
.LFB1591:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #8]	@ D.41214, <variable>.long_term_pic_num
	ldr	r3, [r1, #8]	@ D.41217, <variable>.long_term_pic_num
	cmp	r2, r3	@ D.41214, D.41217
	mvnlt	r0, #0	@ D.41220,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.41220
	movgt	r0, #1	@, D.41220
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_pic_by_lt_pic_num_asc, .-compare_pic_by_lt_pic_num_asc
	.align	2
	.global	compare_fs_by_frame_num_desc
	.type	compare_fs_by_frame_num_desc, %function
compare_fs_by_frame_num_desc:
	.fnstart
.LFB1592:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #664]	@ D.41229, <variable>.frame_num_wrap
	ldr	r3, [r1, #664]	@ D.41232, <variable>.frame_num_wrap
	cmp	r2, r3	@ D.41229, D.41232
	movlt	r0, #1	@ D.41235,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41235,
	mvngt	r0, #0	@ D.41235,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_fs_by_frame_num_desc, .-compare_fs_by_frame_num_desc
	.align	2
	.global	compare_fs_by_lt_pic_idx_asc
	.type	compare_fs_by_lt_pic_idx_asc, %function
compare_fs_by_lt_pic_idx_asc:
	.fnstart
.LFB1593:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #668]	@ D.41244, <variable>.long_term_frame_idx
	ldr	r3, [r1, #668]	@ D.41247, <variable>.long_term_frame_idx
	cmp	r2, r3	@ D.41244, D.41247
	mvncc	r0, #0	@ D.41250,
	ldmccfd	sp, {fp, sp, pc}	@
	movls	r0, #0	@, D.41250
	movhi	r0, #1	@, D.41250
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_fs_by_lt_pic_idx_asc, .-compare_fs_by_lt_pic_idx_asc
	.align	2
	.global	compare_pic_by_poc_asc
	.type	compare_pic_by_poc_asc, %function
compare_pic_by_poc_asc:
	.fnstart
.LFB1594:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.41259, <variable>.poc
	ldr	r3, [r1, #16]	@ D.41262, <variable>.poc
	cmp	r2, r3	@ D.41259, D.41262
	mvnlt	r0, #0	@ D.41265,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.41265
	movgt	r0, #1	@, D.41265
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_pic_by_poc_asc, .-compare_pic_by_poc_asc
	.align	2
	.global	compare_pic_by_poc_desc
	.type	compare_pic_by_poc_desc, %function
compare_pic_by_poc_desc:
	.fnstart
.LFB1595:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.41274, <variable>.poc
	ldr	r3, [r1, #16]	@ D.41277, <variable>.poc
	cmp	r2, r3	@ D.41274, D.41277
	movlt	r0, #1	@ D.41280,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41280,
	mvngt	r0, #0	@ D.41280,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_pic_by_poc_desc, .-compare_pic_by_poc_desc
	.align	2
	.global	compare_fs_by_poc_asc
	.type	compare_fs_by_poc_asc, %function
compare_fs_by_poc_asc:
	.fnstart
.LFB1596:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #672]	@ D.41289, <variable>.poc
	ldr	r3, [r1, #672]	@ D.41292, <variable>.poc
	cmp	r2, r3	@ D.41289, D.41292
	mvnlt	r0, #0	@ D.41295,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.41295
	movgt	r0, #1	@, D.41295
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_fs_by_poc_asc, .-compare_fs_by_poc_asc
	.align	2
	.global	compare_fs_by_poc_desc
	.type	compare_fs_by_poc_desc, %function
compare_fs_by_poc_desc:
	.fnstart
.LFB1597:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #672]	@ D.41304, <variable>.poc
	ldr	r3, [r1, #672]	@ D.41307, <variable>.poc
	cmp	r2, r3	@ D.41304, D.41307
	movlt	r0, #1	@ D.41310,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.41310,
	mvngt	r0, #0	@ D.41310,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	compare_fs_by_poc_desc, .-compare_fs_by_poc_desc
	.align	2
	.global	GenPiclistfromFrmlist
	.type	GenPiclistfromFrmlist, %function
GenPiclistfromFrmlist:
	.fnstart
.LFB1598:
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #31	@ list_idx,
	movcc	r4, r2	@ list_idx.1876, list_idx
	movcs	r4, #31	@ list_idx.1876,
	ldr	r2, [fp, #8]	@ long_term, long_term
	movw	ip, #:lower16:IsSTRefFlg	@ tmp218,
	movt	ip, #:upper16:IsSTRefFlg	@ tmp218,
	movw	r5, #:lower16:IsLTRefFlg	@ tmp217,
	cmp	r2, #0	@ long_term,
	movt	r5, #:upper16:IsLTRefFlg	@ tmp217,
	mov	r6, r1	@ fs_list, fs_list
	str	r3, [fp, #-56]	@ list, %sfp
	moveq	r5, ip	@ is_ref, tmp218
	cmp	r0, #1	@ currStrcture,
	beq	.L470	@,
	cmp	r0, #2	@ currStrcture,
	bne	.L399	@,
	mov	r8, #0	@ bot_idx.1854,
	mov	r6, r5	@ is_ref, is_ref
	mov	sl, r8	@ top_idx, bot_idx.1854
	str	r1, [fp, #-48]	@ fs_list, %sfp
.L449:
	cmp	sl, r4	@ top_idx, list_idx.1876
	movcs	r2, #0	@,
	movcc	r2, #1	@,
	str	r2, [fp, #-52]	@, %sfp
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r8, r4	@ bot_idx.1854, list_idx.1876
	movcs	r3, #0	@, temp.1848
	movcc	r3, #1	@, temp.1848
	orrs	r1, r3, r1	@, temp.1848,
	beq	.L399	@,
	cmp	r3, #0	@ temp.1848,
	beq	.L404	@,
	ldr	ip, [fp, #-48]	@, %sfp
	mvn	r7, r8	@ tmp235, bot_idx.1854
	add	r5, r7, r4	@ tmp234, tmp235, list_idx.1876
	and	r5, r5, #1	@ tmp236, tmp234,
	add	r7, ip, r8, asl #2	@, ivtmp.1835,, bot_idx.1854,
	ldr	r0, [ip, r8, asl #2]	@ temp.1850,
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L471	@,
.L433:
	add	r8, r8, #1	@ bot_idx.1854, bot_idx.1854,
	add	r7, r7, #4	@ ivtmp.1835, ivtmp.1835,
	cmp	r8, r4	@ bot_idx.1854, list_idx.1876
	bcs	.L404	@,
	cmp	r5, #0	@ tmp236,
	beq	.L403	@,
	ldr	r0, [r7, #0]	@ temp.1850,* ivtmp.1835
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L472	@,
.L435:
	add	r8, r8, #1	@ bot_idx.1854, bot_idx.1854,
	add	r7, r7, #4	@ ivtmp.1835, ivtmp.1835,
	cmp	r8, r4	@ bot_idx.1854, list_idx.1876
	bcc	.L403	@,
	b	.L404	@
.L401:
	add	r7, r7, #4	@ ivtmp.1835, ivtmp.1835,
	add	r8, r8, #1	@ bot_idx.1854, bot_idx.1854,
	ldr	r0, [r7, #0]	@ temp.1850,* ivtmp.1835
	mov	r9, r8	@ tmp237, bot_idx.1854
	mov	r5, r7	@ tmp238, ivtmp.1835
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L473	@,
.L438:
	add	r8, r9, #1	@ bot_idx.1854, tmp237,
	add	r7, r5, #4	@ ivtmp.1835, tmp238,
	cmp	r8, r4	@ bot_idx.1854, list_idx.1876
	bcs	.L404	@,
.L403:
	ldr	r0, [r7, #0]	@ temp.1850,* ivtmp.1835
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	beq	.L401	@,
	add	r0, r0, #616	@, temp.1850,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L401	@,
.L457:
	ldr	r0, [fp, #4]	@, list_size
	add	r8, r8, #1	@ bot_idx.1854, bot_idx.1854,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	lr, [r7, #0]	@ tmp195,* ivtmp.1835
	ldr	r3, [r0, #0]	@ tmp194,
	add	r2, lr, #616	@ tmp196, tmp195,
	str	r2, [ip, r3, asl #2]	@ tmp196,
	ldr	lr, [fp, #4]	@, list_size
	ldr	r1, [lr, #0]	@ tmp197,
	add	r0, r1, #1	@ tmp198, tmp197,
	str	r0, [lr, #0]	@ tmp198,
.L404:
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r1, #0	@,
	beq	.L449	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mvn	r5, sl	@ tmp230, top_idx
	add	r7, r5, r4	@ tmp229, tmp230, list_idx.1876
	and	r7, r7, #1	@ tmp231, tmp229,
	add	r5, r3, sl, asl #2	@, ivtmp.1830,, top_idx,
	ldr	r0, [r3, sl, asl #2]	@ temp.1864,
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L474	@,
.L426:
	add	sl, sl, #1	@ top_idx, top_idx,
	add	r5, r5, #4	@ ivtmp.1830, ivtmp.1830,
	cmp	sl, r4	@ top_idx, list_idx.1876
	bcs	.L449	@,
	cmp	r7, #0	@ tmp231,
	beq	.L406	@,
	ldr	r0, [r5, #0]	@ temp.1864,* ivtmp.1830
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	bne	.L475	@,
.L428:
	add	sl, sl, #1	@ top_idx, top_idx,
	add	r5, r5, #4	@ ivtmp.1830, ivtmp.1830,
	cmp	sl, r4	@ top_idx, list_idx.1876
	bcc	.L406	@,
	b	.L449	@
.L405:
	add	r5, r5, #4	@ ivtmp.1830, ivtmp.1830,
	add	sl, sl, #1	@ top_idx, top_idx,
	ldr	r0, [r5, #0]	@ temp.1864,* ivtmp.1830
	mov	r9, sl	@ tmp232, top_idx
	mov	r7, r5	@ tmp233, ivtmp.1830
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L476	@,
.L431:
	add	sl, r9, #1	@ top_idx, tmp232,
	add	r5, r7, #4	@ ivtmp.1830, tmp233,
	cmp	sl, r4	@ top_idx, list_idx.1876
	bcs	.L449	@,
.L406:
	ldr	r0, [r5, #0]	@ temp.1864,* ivtmp.1830
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	beq	.L405	@,
	add	r0, r0, #576	@, temp.1864,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L405	@,
.L456:
	ldr	r0, [fp, #4]	@, list_size
	add	sl, sl, #1	@ top_idx, top_idx,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	lr, [r5, #0]	@ tmp204,* ivtmp.1830
	ldr	r3, [r0, #0]	@ tmp203,
	add	r2, lr, #576	@ tmp205, tmp204,
	str	r2, [r1, r3, asl #2]	@ tmp205,
	ldr	lr, [fp, #4]	@, list_size
	ldr	ip, [lr, #0]	@ tmp206,
	add	r0, ip, #1	@ tmp207, tmp206,
	str	r0, [lr, #0]	@ tmp207,
	b	.L449	@
.L399:
	mov	r0, #0	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L476:
	add	r0, r0, #576	@, temp.1864,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L431	@,
	b	.L456	@
.L473:
	add	r0, r0, #616	@, temp.1850,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L438	@,
	b	.L457	@
.L471:
	add	r0, r0, #616	@, temp.1850,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L433	@,
	b	.L457	@
.L474:
	add	r0, r0, #576	@, temp.1864,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L426	@,
	b	.L456	@
.L475:
	add	r0, r0, #576	@, temp.1864,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L428	@,
	b	.L456	@
.L472:
	add	r0, r0, #616	@, temp.1850,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L435	@,
	b	.L457	@
.L470:
	mov	r8, #0	@ bot_idx,
	mov	r6, r5	@ is_ref, is_ref
	mov	sl, r8	@ top_idx.1859, bot_idx
	str	r1, [fp, #-48]	@ fs_list, %sfp
.L444:
	cmp	r8, r4	@ bot_idx, list_idx.1876
	movcs	r1, #0	@,
	movcc	r1, #1	@,
	cmp	sl, r4	@ top_idx.1859, list_idx.1876
	movcs	r3, #0	@, D.41379
	movcc	r3, #1	@, D.41379
	str	r1, [fp, #-52]	@, %sfp
	orrs	r1, r1, r3	@,, D.41379
	beq	.L399	@,
	cmp	r3, #0	@ D.41379,
	beq	.L396	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mvn	r7, sl	@ tmp225, top_idx.1859
	add	r5, r7, r4	@ tmp224, tmp225, list_idx.1876
	and	r5, r5, #1	@ tmp226, tmp224,
	add	r7, r3, sl, asl #2	@, ivtmp.1825,, top_idx.1859,
	ldr	r0, [r3, sl, asl #2]	@ D.41352,
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L477	@,
.L419:
	add	sl, sl, #1	@ top_idx.1859, top_idx.1859,
	add	r7, r7, #4	@ ivtmp.1825, ivtmp.1825,
	cmp	sl, r4	@ top_idx.1859, list_idx.1876
	bcs	.L396	@,
	cmp	r5, #0	@ tmp226,
	beq	.L395	@,
	ldr	r0, [r7, #0]	@ D.41352,* ivtmp.1825
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L478	@,
.L421:
	add	sl, sl, #1	@ top_idx.1859, top_idx.1859,
	add	r7, r7, #4	@ ivtmp.1825, ivtmp.1825,
	cmp	sl, r4	@ top_idx.1859, list_idx.1876
	bcc	.L395	@,
	b	.L396	@
.L393:
	add	r7, r7, #4	@ ivtmp.1825, ivtmp.1825,
	add	sl, sl, #1	@ top_idx.1859, top_idx.1859,
	ldr	r0, [r7, #0]	@ D.41352,* ivtmp.1825
	mov	r9, sl	@ tmp228, top_idx.1859
	mov	r5, r7	@ tmp227, ivtmp.1825
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L479	@,
.L424:
	add	sl, r9, #1	@ top_idx.1859, tmp228,
	add	r7, r5, #4	@ ivtmp.1825, tmp227,
	cmp	sl, r4	@ top_idx.1859, list_idx.1876
	bcs	.L396	@,
.L395:
	ldr	r0, [r7, #0]	@ D.41352,* ivtmp.1825
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	beq	.L393	@,
	add	r0, r0, #576	@, D.41352,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L393	@,
.L455:
	ldr	r1, [fp, #4]	@, list_size
	add	sl, sl, #1	@ top_idx.1859, top_idx.1859,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r7, #0]	@ tmp170,* ivtmp.1825
	ldr	r3, [r1, #0]	@ tmp169,
	add	r2, r0, #576	@ tmp171, tmp170,
	str	r2, [ip, r3, asl #2]	@ tmp171,
	ldr	r0, [fp, #4]	@, list_size
	ldr	lr, [r0, #0]	@ tmp172,
	add	r1, lr, #1	@ tmp173, tmp172,
	str	r1, [r0, #0]	@ tmp173,
.L396:
	ldr	ip, [fp, #-52]	@, %sfp
	cmp	ip, #0	@,
	beq	.L444	@,
	ldr	r1, [fp, #-48]	@, %sfp
	mvn	r5, r8	@ tmp220, bot_idx
	add	r7, r5, r4	@ tmp219, tmp220, list_idx.1876
	and	r7, r7, #1	@ tmp221, tmp219,
	add	r5, r1, r8, asl #2	@, ivtmp.1820,, bot_idx,
	ldr	r0, [r1, r8, asl #2]	@ D.41369,
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L480	@,
.L412:
	add	r8, r8, #1	@ bot_idx, bot_idx,
	add	r5, r5, #4	@ ivtmp.1820, ivtmp.1820,
	cmp	r8, r4	@ bot_idx, list_idx.1876
	bcs	.L444	@,
	cmp	r7, #0	@ tmp221,
	beq	.L398	@,
	ldr	r0, [r5, #0]	@ D.41369,* ivtmp.1820
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #2	@ <variable>.is_used,
	bne	.L481	@,
.L414:
	add	r8, r8, #1	@ bot_idx, bot_idx,
	add	r5, r5, #4	@ ivtmp.1820, ivtmp.1820,
	cmp	r8, r4	@ bot_idx, list_idx.1876
	bcc	.L398	@,
	b	.L444	@
.L397:
	add	r5, r5, #4	@ ivtmp.1820, ivtmp.1820,
	add	r8, r8, #1	@ bot_idx, bot_idx,
	ldr	r0, [r5, #0]	@ D.41369,* ivtmp.1820
	mov	r9, r8	@ tmp222, bot_idx
	mov	r7, r5	@ tmp223, ivtmp.1820
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L482	@,
.L417:
	add	r8, r9, #1	@ bot_idx, tmp222,
	add	r5, r7, #4	@ ivtmp.1820, tmp223,
	cmp	r8, r4	@ bot_idx, list_idx.1876
	bcs	.L444	@,
.L398:
	ldr	r0, [r5, #0]	@ D.41369,* ivtmp.1820
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	beq	.L397	@,
	add	r0, r0, #616	@, D.41369,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L397	@,
.L454:
	ldr	r0, [fp, #4]	@, list_size
	add	r8, r8, #1	@ bot_idx, bot_idx,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	lr, [r5, #0]	@ tmp179,* ivtmp.1820
	ldr	r3, [r0, #0]	@ tmp178,
	add	ip, lr, #616	@ tmp180, tmp179,
	str	ip, [r1, r3, asl #2]	@ tmp180,
	ldr	lr, [fp, #4]	@, list_size
	ldr	r2, [lr, #0]	@ tmp181,
	add	r0, r2, #1	@ tmp182, tmp181,
	str	r0, [lr, #0]	@ tmp182,
	b	.L444	@
.L482:
	add	r0, r0, #616	@, D.41369,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L417	@,
	b	.L454	@
.L479:
	add	r0, r0, #576	@, D.41352,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L424	@,
	b	.L455	@
.L480:
	add	r0, r0, #616	@, D.41369,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L412	@,
	b	.L454	@
.L477:
	add	r0, r0, #576	@, D.41352,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L419	@,
	b	.L455	@
.L478:
	add	r0, r0, #576	@, D.41352,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L421	@,
	b	.L455	@
.L481:
	add	r0, r0, #616	@, D.41369,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L414	@,
	b	.L454	@
	.fnend
	.size	GenPiclistfromFrmlist, .-GenPiclistfromFrmlist
	.align	2
	.global	FindNearestPOCPicId
	.type	FindNearestPOCPicId, %function
FindNearestPOCPicId:
	.fnstart
.LFB1601:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #26636	@ tmp144,
	ldr	r6, [r0, r3]	@ D.41659, <variable>.DPB.used_size
	mov	r1, r0	@ pH264Ctx, pH264Ctx
	cmp	r6, #0	@ D.41659,
	mvneq	r0, #0	@ nearest_pic_id,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	movw	r4, #26440	@ tmp147,
	cmp	r6, #1	@ D.41659,
	ldr	ip, [r1, r4]	@ <variable>.DPB.fs, <variable>.DPB.fs
	movw	r2, #56356	@ tmp145,
	ldr	r4, [r1, r2]	@ curr_poc, <variable>.CurrPic.thispoc
	movls	r0, #0	@ nearest_pic_id,
	ldr	r2, [ip, #672]	@ nearest_poc, <variable>.poc
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	add	r0, r1, #26368	@ tmp151, pH264Ctx,
	sub	r6, r6, #1	@ tmp149, D.41659,
	add	r5, r0, #76	@ tmp151, tmp151,
	rsb	r2, r2, r4	@ tmp148, nearest_poc, curr_poc
	mov	r6, r6, asl #2	@ D.48811, tmp149,
	cmp	r2, #0	@ tmp148,
	ldr	ip, [r5, #0]	@ D.41666, <variable>.DPB.fs
	sub	r3, r6, #4	@ tmp158, D.48811,
	ubfx	r5, r3, #2, #1	@ tmp159, tmp158,,
	rsblt	r2, r2, #0	@ nearest_poc_diff, tmp148
	mov	r0, #0	@ nearest_pic_id,
	ldr	r3, [ip, #672]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, r4	@ tmp153, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp153,
	rsblt	r3, r3, #0	@ new_poc_diff, tmp153
	cmp	r3, r2	@ new_poc_diff, nearest_poc_diff
	blt	.L501	@,
	mov	r3, #4	@ ivtmp.1911,
	cmp	r3, r6	@ ivtmp.1911, D.48811
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L502:
	cmp	r5, #0	@ tmp159,
	beq	.L488	@,
	add	ip, r1, r3	@ tmp177, pH264Ctx, ivtmp.1911
	add	r3, r3, #4	@ ivtmp.1911, ivtmp.1911,
	add	r5, ip, #26368	@ tmp179, tmp177,
	add	ip, r5, #76	@ tmp179, tmp179,
	ldr	r5, [ip, #0]	@ D.41666, <variable>.DPB.fs
	ldr	ip, [r5, #672]	@ <variable>.poc, <variable>.poc
	rsb	ip, ip, r4	@ tmp182, <variable>.poc, curr_poc
	cmp	ip, #0	@ tmp182,
	rsblt	ip, ip, #0	@ new_poc_diff, tmp182
	cmp	ip, r2	@ new_poc_diff, nearest_poc_diff
	ldrlt	r0, [r5, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	r2, ip	@ nearest_poc_diff, new_poc_diff
	cmp	r3, r6	@ ivtmp.1911, D.48811
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L488:
	add	r5, r1, r3	@ tmp162, pH264Ctx, ivtmp.1911
	add	ip, r3, #4	@ tmp160, ivtmp.1911,
	add	r3, r5, #26368	@ tmp163, tmp162,
	add	r7, r1, ip	@ tmp170, pH264Ctx, tmp160
	add	r7, r7, #26368	@ tmp171, tmp170,
	ldr	r5, [r3, #76]	@ D.41666, <variable>.DPB.fs
	ldr	r3, [r5, #672]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, r4	@ tmp167, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp167,
	rsblt	r3, r3, #0	@ new_poc_diff, tmp167
	cmp	r3, r2	@ new_poc_diff, nearest_poc_diff
	ldrlt	r0, [r5, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	r2, r3	@ nearest_poc_diff, new_poc_diff
	ldr	r5, [r7, #76]	@ D.41666, <variable>.DPB.fs
	ldr	r3, [r5, #672]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, r4	@ tmp175, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp175,
	rsblt	r3, r3, #0	@ new_poc_diff, tmp175
	cmp	r3, r2	@ new_poc_diff, nearest_poc_diff
	ldrlt	r0, [r5, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	r2, r3	@ nearest_poc_diff, new_poc_diff
.L496:
	add	r3, ip, #4	@ ivtmp.1911, tmp160,
	cmp	r3, r6	@ ivtmp.1911, D.48811
	bne	.L488	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L501:
	mov	r2, r3	@ nearest_poc_diff, new_poc_diff
	mov	r3, #4	@ ivtmp.1911,
	cmp	r3, r6	@ ivtmp.1911, D.48811
	ldr	r0, [ip, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	bne	.L502	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	FindNearestPOCPicId, .-FindNearestPOCPicId
	.align	2
	.global	FindMinRefIdx
	.type	FindMinRefIdx, %function
FindMinRefIdx:
	.fnstart
.LFB1602:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r9, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #20688	@ tmp154,
	ldrb	r3, [r9, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L516	@,
	movw	r1, #55795	@ tmp156,
	ldrb	r0, [r9, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r0, #0	@ <variable>.CurrPic.structure,
	bne	.L545	@,
	movw	r1, #20732	@ tmp160,
	add	r6, r9, #26880	@ ivtmp.1962, pH264Ctx,
	ldr	r3, [r9, r1]	@, <variable>.CurrSlice.listXsize
	mov	sl, r1	@ tmp179, tmp160
	mov	r2, r6	@ tmp180, ivtmp.1962
	add	r6, r6, #36	@ ivtmp.1962, ivtmp.1962,
	add	r8, r2, #164	@ ivtmp.1954, tmp180,
	str	r3, [fp, #-48]	@, %sfp
.L507:
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, #0	@,
	beq	.L511	@,
	ldr	r2, [r8, #0]	@ tmp206, <variable>.pListX
	mov	r1, #32	@ minrefidx,
	ldr	r7, [r9, sl]	@ temp.1980, <variable>.CurrSlice.listXsize
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	sub	ip, r7, #1	@ tmp189, temp.1980,
	and	ip, ip, #1	@ tmp191, tmp189,
	ldr	r2, [r3, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r2, r0	@ <variable>.apc_idc, i
	beq	.L546	@,
.L519:
	mov	r2, #1	@ j,
	cmp	r7, r2	@ temp.1980, j
	add	r3, r8, #4	@ ivtmp.1954, ivtmp.1954,
	bls	.L539	@,
	cmp	ip, #0	@ tmp191,
	beq	.L509	@,
	ldr	ip, [r8, #4]	@ tmp227, <variable>.pListX
	ldr	ip, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [ip, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	ip, r0	@ <variable>.apc_idc, i
	beq	.L547	@,
.L521:
	add	r2, r2, #1	@ j, j,
	add	r3, r3, #4	@ ivtmp.1954, ivtmp.1954,
	cmp	r7, r2	@ temp.1980, j
	bhi	.L509	@,
	b	.L539	@
.L508:
	ldr	r3, [r3, #4]	@ tmp201, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	beq	.L548	@,
.L524:
	add	r2, ip, #1	@ j, tmp192,
	add	r3, r4, #4	@ ivtmp.1954, tmp193,
	cmp	r7, r2	@ temp.1980, j
	bls	.L539	@,
.L509:
	ldr	r5, [r3, #0]	@ tmp162, <variable>.pListX
	add	ip, r2, #1	@ tmp192, j,
	add	r4, r3, #4	@ tmp193, ivtmp.1954,
	ldr	r5, [r5, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [r5, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r5, r0	@ <variable>.apc_idc, i
	bne	.L508	@,
	ldr	r3, [r3, #4]	@ tmp201, <variable>.pListX
	cmp	r1, r2	@ minrefidx, j
	movcs	r1, r2	@ minrefidx, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	bne	.L524	@,
.L548:
	add	r2, ip, #1	@ j, tmp192,
	cmp	r1, ip	@ minrefidx, tmp192
	movcs	r1, ip	@ minrefidx, tmp192
	cmp	r7, r2	@ temp.1980, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	add	r3, r4, #4	@ ivtmp.1954, tmp193,
	bhi	.L509	@,
.L539:
	cmp	r1, #31	@ minrefidx,
	bls	.L510	@,
.L511:
	mov	ip, #0	@,
	str	ip, [r6, #0]	@, <variable>.APC.RefIdx
	str	ip, [r6, #4]	@, <variable>.APC.RefIdx
.L510:
	add	r0, r0, #1	@ i, i,
	add	r6, r6, #8	@ ivtmp.1962, ivtmp.1962,
	cmp	r0, #16	@ i,
	bne	.L507	@,
.L516:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L545:
	add	r8, r9, #26880	@ ivtmp.1976, pH264Ctx,
	movw	ip, #20732	@ tmp158,
	ldr	r2, [r9, ip]	@, <variable>.CurrSlice.listXsize
	mov	r0, #0	@ i.1987,
	mov	sl, r8	@ tmp185, ivtmp.1976
	add	r8, r8, #36	@ ivtmp.1976, ivtmp.1976,
	add	sl, sl, #164	@ ivtmp.1968, tmp185,
	str	r2, [fp, #-48]	@, %sfp
.L506:
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, #0	@,
	beq	.L515	@,
	ldr	r3, [sl, #0]	@ temp.1983, <variable>.pListX
	movw	r2, #20732	@,
	ldr	r7, [r9, r2]	@ temp.1981, <variable>.CurrSlice.listXsize
	mov	r6, #32	@ minrefidx.1979,
	ldr	ip, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	sub	r1, r7, #1	@ tmp194, temp.1981,
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	and	r1, r1, #1	@ tmp196, tmp194,
	ldr	r3, [ip, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r3, asl #1	@ tmp225, <variable>.apc_idc,
	cmp	r2, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp226, tmp225
	cmp	r3, r0	@ tmp226, i.1987
	beq	.L549	@,
.L526:
	mov	r2, #1	@ j.1986,
	cmp	r7, r2	@ temp.1981, j.1986
	add	r3, sl, #4	@ ivtmp.1968, ivtmp.1968,
	bls	.L540	@,
	cmp	r1, #0	@ tmp196,
	beq	.L513	@,
	ldr	r1, [sl, #4]	@ temp.1983, <variable>.pListX
	ldr	ip, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r4, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r1, [ip, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r1, r1, asl r2	@ tmp235, <variable>.apc_idc,
	cmp	r4, #2	@ <variable>.structure,
	orreq	r1, r1, #1	@,, tmp236, tmp235
	cmp	r1, r0	@ tmp236, i.1987
	beq	.L550	@,
.L528:
	add	r2, r2, #1	@ j.1986, j.1986,
	add	r3, r3, #4	@ ivtmp.1968, ivtmp.1968,
	cmp	r7, r2	@ temp.1981, j.1986
	bhi	.L513	@,
	b	.L540	@
.L512:
	ldr	r3, [r3, #4]	@ temp.1983, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r3, [r2, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r3, asl #1	@ tmp216, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp217, tmp216
	cmp	r3, r0	@ tmp217, i.1987
	beq	.L551	@,
	add	r2, ip, #1	@ j.1986, tmp197,
	add	r3, r4, #4	@ ivtmp.1968, tmp198,
	cmp	r7, r2	@ temp.1981, j.1986
	bls	.L540	@,
.L513:
	ldr	r1, [r3, #0]	@ temp.1983, <variable>.pListX
	add	ip, r2, #1	@ tmp197, j.1986,
	add	r4, r3, #4	@ tmp198, ivtmp.1968,
	ldr	r5, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r5, [r5, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r5, r5, asl #1	@ tmp173, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	movne	r1, r5	@, tmp175, tmp173
	orreq	r1, r5, #1	@,, tmp175, tmp173
	cmp	r1, r0	@ tmp175, i.1987
	bne	.L512	@,
	cmp	r6, r2	@ minrefidx.1979, j.1986
	movcs	r6, r2	@ minrefidx.1979, j.1986
	str	r6, [r8, #0]	@ minrefidx.1979, <variable>.APC.RefIdx
	b	.L512	@
.L551:
	add	r2, ip, #1	@ j.1986, tmp197,
	cmp	r6, ip	@ minrefidx.1979, tmp197
	movcs	r6, ip	@ minrefidx.1979, tmp197
	cmp	r7, r2	@ temp.1981, j.1986
	str	r6, [r8, #0]	@ minrefidx.1979, <variable>.APC.RefIdx
	add	r3, r4, #4	@ ivtmp.1968, tmp198,
	bhi	.L513	@,
.L540:
	cmp	r6, #31	@ minrefidx.1979,
	bls	.L514	@,
.L515:
	mov	ip, #0	@,
	str	ip, [r8, #0]	@, <variable>.APC.RefIdx
.L514:
	add	r0, r0, #1	@ i.1987, i.1987,
	add	r8, r8, #4	@ ivtmp.1976, ivtmp.1976,
	cmp	r0, #32	@ i.1987,
	bne	.L506	@,
	b	.L516	@
.L549:
	mov	r6, #0	@ minrefidx.1979,
	str	r6, [r8, #0]	@ minrefidx.1979, <variable>.APC.RefIdx
	b	.L526	@
.L550:
	cmp	r6, r2	@ minrefidx.1979, j.1986
	movcs	r6, r2	@ minrefidx.1979, j.1986
	str	r6, [r8, #0]	@ minrefidx.1979, <variable>.APC.RefIdx
	b	.L528	@
.L546:
	mov	r1, #0	@ minrefidx,
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L519	@
.L547:
	cmp	r1, r2	@ minrefidx, j
	movcs	r1, r2	@ minrefidx, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L521	@
	.fnend
	.size	FindMinRefIdx, .-FindMinRefIdx
	.align	2
	.global	NoPicOut
	.type	NoPicOut, %function
NoPicOut:
	.fnstart
.LFB1604:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #57704	@ tmp169,
	ldr	r5, [r0, r3]	@ D.41758, <variable>.TotalFsNum
	cmp	r5, #0	@ D.41758,
	beq	.L553	@,
	add	r3, r0, #27904	@ ivtmp.2019, pH264Ctx,
	sub	r1, r5, #1	@ tmp187, D.41758,
	and	r4, r1, #1	@ tmp189, tmp187,
	mov	ip, #0	@ tmp181,
	ldr	r2, [r3, #92]!	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, #1	@ <variable>.is_displayed,
	beq	.L566	@,
	ldrb	r2, [r3, #-680]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #1	@ <variable>.is_in_dpb,
	beq	.L566	@,
.L567:
	mov	r1, #1	@ i,
	cmp	r1, r5	@ i, D.41758
	add	r3, r3, #712	@ ivtmp.2019, ivtmp.2019,
	bcs	.L553	@,
	cmp	r4, #0	@ tmp189,
	beq	.L556	@,
	ldr	r2, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, r1	@ <variable>.is_displayed,
	beq	.L569	@,
	ldrb	r2, [r3, #-680]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #1	@ <variable>.is_in_dpb,
	beq	.L569	@,
	add	r1, r1, #1	@ i, i,
	add	r3, r3, #712	@ ivtmp.2019, ivtmp.2019,
	cmp	r1, r5	@ i, D.41758
	bcc	.L556	@,
.L553:
	movw	r2, #57708	@ tmp177,
	ldr	ip, [r0, r2]	@ D.41759, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.41759,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	add	r3, r0, #57600	@ tmp178, pH264Ctx,
	mov	r2, #1	@ i.2025,
	add	r4, r3, #36	@ ivtmp.2014, tmp178,
	cmp	r2, ip	@ i.2025, D.41759
	sub	r1, ip, #1	@ tmp182, D.41759,
	mov	r0, #0	@ tmp180,
	str	r0, [r4, #0]	@ tmp180, <variable>.PmvStoreUsedFlag
	and	r4, r1, r2	@ tmp184, tmp182,
	add	r1, r3, #40	@ ivtmp.2014, tmp178,
	ldmcsfd	sp, {r4, r5, fp, sp, pc}	@
	cmp	r4, #0	@ tmp184,
	beq	.L558	@,
	mov	r2, #2	@ i.2025,
	cmp	r2, ip	@ i.2025, D.41759
	str	r0, [r1, #0]	@ tmp180, <variable>.PmvStoreUsedFlag
	add	r1, r3, #44	@ ivtmp.2014, tmp178,
	ldmcsfd	sp, {r4, r5, fp, sp, pc}	@
.L558:
	add	r2, r2, #2	@ i.2025, i.2025,
	mov	r3, r1	@ tmp186, ivtmp.2014
	cmp	r2, ip	@ i.2025, D.41759
	str	r0, [r3], #4	@ tmp180, <variable>.PmvStoreUsedFlag
	str	r0, [r1, #4]	@ tmp180, <variable>.PmvStoreUsedFlag
	add	r1, r3, #4	@ ivtmp.2014, tmp186,
	bcc	.L558	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L581:
	ldrb	r4, [r3, #-680]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r4, #1	@ <variable>.is_in_dpb,
	beq	.L554	@,
	ldr	r3, [r3, #712]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r3, #1	@ <variable>.is_displayed,
	beq	.L573	@,
.L579:
	ldrb	r3, [r2, #-680]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r3, #1	@ <variable>.is_in_dpb,
	beq	.L573	@,
.L574:
	add	r1, r1, #1	@ i, tmp191,
	add	r3, r2, #712	@ ivtmp.2019, tmp190,
	cmp	r1, r5	@ i, D.41758
	bcs	.L553	@,
.L556:
	ldr	r4, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	add	r1, r1, #1	@ tmp191, i,
	add	r2, r3, #712	@ tmp190, ivtmp.2019,
	cmp	r4, #1	@ <variable>.is_displayed,
	bne	.L581	@,
.L554:
	strb	ip, [r3, #-683]	@ tmp181, <variable>.is_used
	strb	ip, [r3, #-682]	@ tmp181, <variable>.is_reference
	ldr	r3, [r3, #712]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r3, #1	@ <variable>.is_displayed,
	bne	.L579	@,
.L573:
	strb	ip, [r2, #-683]	@ tmp181, <variable>.is_used
	strb	ip, [r2, #-682]	@ tmp181, <variable>.is_reference
	b	.L574	@
.L569:
	add	r1, r1, #1	@ i, i,
	strb	ip, [r3, #-683]	@ tmp181, <variable>.is_used
	cmp	r1, r5	@ i, D.41758
	strb	ip, [r3, #-682]	@ tmp181, <variable>.is_reference
	add	r3, r3, #712	@ ivtmp.2019, ivtmp.2019,
	bcc	.L556	@,
	b	.L553	@
.L566:
	strb	ip, [r3, #-683]	@ tmp181, <variable>.is_used
	strb	ip, [r3, #-682]	@ tmp181, <variable>.is_reference
	b	.L567	@
	.fnend
	.size	NoPicOut, .-NoPicOut
	.align	2
	.global	wait_vo
	.type	wait_vo, %function
wait_vo:
	.fnstart
.LFB1607:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	wait_vo, .-wait_vo
	.align	2
	.global	GetReRangeFlag
	.type	GetReRangeFlag, %function
GetReRangeFlag:
	.fnstart
.LFB1608:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #20700	@ tmp148,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r6, [r0, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r0, #13592	@ tmp150,
	mov	r5, #2208	@ tmp152,
	ldr	r7, [r4, r0]	@ <variable>.PPS, <variable>.PPS
	movw	r2, #13588	@ tmp146,
	ldr	r2, [r4, r2]	@ <variable>.SPS, <variable>.SPS
	mov	ip, #13568	@ tmp159,
	movw	r3, #13564	@ tmp158,
	mla	r0, r5, r6, r7	@ tmp153, tmp152, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	mov	r6, r1	@ p_dpb_changed, p_dpb_changed
	mov	r5, #4000	@ tmp156,
	ldr	r7, [r4, ip]	@ oldh, <variable>.CurHeightInMb
	ldr	r3, [r4, r3]	@ oldw, <variable>.CurWidthInMb
	ldr	r1, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r5, r5, r1, r2	@ pSPS, tmp156, <variable>.seq_parameter_set_id, <variable>.SPS
	ldrb	ip, [r5, #18]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r2, [r5, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r1, ip, #2	@ tmp162, <variable>.frame_mbs_only_flag,
	ldr	r0, [r5, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	mla	r1, r2, r1, r1	@ newh, <variable>.pic_height_in_map_units_minus1, tmp162, tmp162
	add	r0, r0, #1	@ neww, <variable>.pic_width_in_mbs_minus1,
	cmp	r0, r3	@ neww, oldw
	cmpeq	r1, r7	@, newh, oldh
	moveq	ip, #0	@, tmp171
	movne	ip, #1	@, tmp171
	bne	.L585	@,
	movw	r8, #26632	@ tmp172,
	ldr	r2, [r5, #3980]	@ prephitmp.2062, <variable>.dpb_size_plus1
	ldr	r8, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r8, r8, #1	@ tmp173, <variable>.DPB.size,
	cmp	r2, r8	@ prephitmp.2062, tmp173
	movls	r3, ip	@ prephitmp.2074, tmp171
	movls	r0, r3	@ ReRangeFlg, prephitmp.2074
	bls	.L586	@,
.L585:
	movw	r2, #:lower16:g_event_report	@ tmp175,
	movt	r2, #:upper16:g_event_report	@ tmp175,
	ldr	ip, [r2, #0]	@ g_event_report.629, g_event_report
	cmp	ip, #0	@ g_event_report.629,
	beq	.L589	@,
	movw	lr, #59224	@ tmp184,
	mov	r2, r3, asl #4	@ tmp177, oldw,
	mov	r1, r1, asl #4	@ tmp183, newh,
	strh	r2, [fp, #-44]	@ movhi	@ tmp177, para
	mov	r3, r0, asl #4	@ tmp181, neww,
	strh	r1, [fp, #-38]	@ movhi	@ tmp183, para
	strh	r3, [fp, #-40]	@ movhi	@ tmp181, para
	sub	r2, fp, #44	@,,
	mov	r3, #8	@,
	mov	r7, r7, asl #4	@ tmp179, oldh,
	mov	r1, #2	@,
	strh	r7, [fp, #-42]	@ movhi	@ tmp179, para
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	ip	@ g_event_report.629
	ldr	r2, [r5, #3980]	@ prephitmp.2062, <variable>.dpb_size_plus1
	mov	r3, #1	@ prephitmp.2074,
	mov	r0, r3	@ ReRangeFlg, prephitmp.2074
.L586:
	movw	r1, #14340	@ tmp187,
	ldr	ip, [r5, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r5, [r4, r1]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	movw	r1, #17576	@ tmp192,
	ldr	r1, [r4, r1]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	cmp	r5, ip	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.seq_parameter_set_id
	orrne	r3, r3, #1	@,, dpb_changed, prephitmp.2074
	cmp	r1, r2	@ <variable>.CurrSPS.dpb_size_plus1, prephitmp.2062
	moveq	ip, r3	@, tmp196, dpb_changed
	orrne	ip, r3, #1	@,, tmp196, dpb_changed
	str	ip, [r6, #0]	@ tmp196,* p_dpb_changed
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L589:
	mov	r3, #1	@ prephitmp.2074,
	ldr	r2, [r5, #3980]	@ prephitmp.2062, <variable>.dpb_size_plus1
	mov	r0, r3	@ ReRangeFlg, prephitmp.2074
	b	.L586	@
	.fnend
	.size	GetReRangeFlag, .-GetReRangeFlag
	.global	__aeabi_uidiv
	.global	__aeabi_uidivmod
	.align	2
	.global	DecPOC
	.type	DecPOC, %function
DecPOC:
	.fnstart
.LFB1609:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #20700	@ tmp174,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	ip, [r0, r2]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r0, #13592	@ tmp176,
	mov	r5, #2208	@ tmp178,
	ldr	r1, [r4, r0]	@ <variable>.PPS, <variable>.PPS
	movw	r3, #13588	@ tmp172,
	ldr	r3, [r4, r3]	@ <variable>.SPS, <variable>.SPS
	movw	r2, #20691	@ tmp169,
	mla	r0, r5, ip, r1	@ tmp179, tmp178, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	mov	r5, #4000	@ tmp182,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	mov	r2, #1	@ tmp186,
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	r1, #0	@, tmp171
	moveq	r1, #1	@, tmp171
	ldr	ip, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r5, r5, ip, r3	@ sps, tmp182, <variable>.seq_parameter_set_id, <variable>.SPS
	ldr	r3, [r5, #2908]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r0, [r5, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r3, r2	@ <variable>.pic_order_cnt_type,
	ldr	ip, [r5, #2912]	@ D.41940, <variable>.log2_max_pic_order_cnt_lsb_minus4
	add	r0, r0, #4	@ tmp184, <variable>.log2_max_frame_num_minus4,
	mov	r0, r2, asl r0	@ MaxFrameNum, tmp186,
	beq	.L593	@,
	bcs	.L645	@,
	cmp	r1, #0	@ tmp171,
	add	ip, ip, #4	@ tmp188, D.41940,
	mov	r2, r2, asl ip	@ MaxPicOrderCntLsb, tmp186,
	bne	.L646	@,
	movw	r3, #19828	@ tmp194,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	ip, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L597	@,
	movw	r1, #19812	@ tmp197,
	movw	r5, #19816	@ tmp196,
	ldr	ip, [r4, r1]	@ prephitmp.2112, <variable>.CurrPOC.PrevPicOrderCntMsb
	ldr	r1, [r4, r5]	@ prephitmp.2110, <variable>.CurrPOC.PrevPicOrderCntLsb
	mov	r5, ip	@ prephitmp.2114, prephitmp.2112
.L598:
	movw	r3, #19804	@ tmp208,
	ldr	r0, [r4, r3]	@ D.41963, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	r0, r1	@ D.41963, prephitmp.2110
	bcs	.L600	@,
	rsb	r3, r0, r1	@ tmp209, D.41963, prephitmp.2110
	cmp	r3, r2, lsr #1	@ tmp209, MaxPicOrderCntLsb,
	addcs	r3, r5, r2	@ D.41972, prephitmp.2114, MaxPicOrderCntLsb
	movwcs	r2, #19820	@ tmp212,
	strcs	r3, [r4, r2]	@ D.41972, <variable>.CurrPOC.PicOrderCntMsb
	bcs	.L603	@,
.L600:
	movw	r3, #19812	@ tmp213,
	ldr	r3, [r4, r3]	@ prephitmp.2180, <variable>.CurrPOC.PrevPicOrderCntMsb
.L602:
	cmp	r1, r0	@ prephitmp.2110, D.41963
	bcs	.L604	@,
	rsb	r1, r1, r0	@ tmp214, prephitmp.2110, D.41963
	cmp	r1, r2, lsr #1	@ tmp214, MaxPicOrderCntLsb,
	bhi	.L647	@,
.L604:
	movw	r0, #19820	@ tmp217,
	str	ip, [r4, r0]	@ prephitmp.2112, <variable>.CurrPOC.PicOrderCntMsb
.L603:
	movw	r1, #20689	@ tmp218,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L605	@,
	movw	r2, #19804	@ tmp220,
	movw	r0, #19808	@ tmp223,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	r1, [r4, r0]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r0, #19836	@ tmp222,
	add	r2, r3, ip	@ D.41986, prephitmp.2180, <variable>.CurrPOC.pic_order_cnt_lsb
	str	r2, [r4, r0]	@ D.41986, <variable>.CurrPOC.toppoc
	add	ip, r2, r1	@ D.41988, D.41986, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r0, #19844	@ tmp226,
	cmp	ip, r2	@ D.41988, D.41986
	movlt	r3, ip	@ prephitmp.2105, D.41988
	movge	r3, r2	@ prephitmp.2105, D.41986
	movw	r2, #19840	@ tmp225,
	str	ip, [r4, r2]	@ D.41988, <variable>.CurrPOC.bottompoc
	movw	r2, #19848	@ tmp227,
	str	r3, [r4, r0]	@ prephitmp.2105,
	str	r3, [r4, r2]	@ prephitmp.2105, <variable>.CurrPOC.ThisPOC
.L606:
	movw	ip, #19844	@ tmp238,
	movw	r1, #19868	@ tmp239,
	movw	r2, #19864	@ tmp240,
	ldr	r1, [r4, r1]	@ D.41998, <variable>.CurrPOC.frame_num
	str	r3, [r4, ip]	@ prephitmp.2105, <variable>.CurrPOC.framepoc
	movw	ip, #20720	@ tmp243,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	ldr	r3, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r1, r0	@ D.41998, <variable>.CurrPOC.PreviousFrameNum
	strne	r1, [r4, r2]	@ D.41998, <variable>.CurrPOC.PreviousFrameNum
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	movw	r2, #19804	@ tmp246,
	movw	r1, #19820	@ tmp249,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movw	ip, #19816	@ tmp245,
	ldr	r2, [r4, r1]	@ <variable>.CurrPOC.PicOrderCntMsb, <variable>.CurrPOC.PicOrderCntMsb
	movw	r3, #19812	@ tmp248,
	str	r0, [r4, ip]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.PrevPicOrderCntLsb
	str	r2, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L645:
	cmp	r3, #2	@ <variable>.pic_order_cnt_type,
	ldmnefd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r1, #0	@ tmp171,
	bne	.L648	@,
	movw	ip, #19828	@ tmp355,
	ldr	r3, [r4, ip]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r3, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L629	@,
	movw	r2, #19864	@ tmp358,
	movw	ip, #19868	@ tmp359,
	ldr	r1, [r4, r2]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	movw	r3, #19876	@ tmp357,
	ldr	r2, [r4, ip]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r3, [r4, r3]	@ prephitmp.2100, <variable>.CurrPOC.PrevFrameNumOffset
	cmp	r1, r2	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.frame_num
	addhi	r3, r3, r0	@ prephitmp.2100, prephitmp.2100, MaxFrameNum
	movwhi	r2, #19872	@ tmp366,
	strhi	r3, [r4, r2]	@ prephitmp.2100, <variable>.CurrPOC.FrameNumOffset
	bls	.L631	@,
.L632:
	movw	r2, #19868	@ tmp368,
	movw	r1, #20720	@ tmp371,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movw	r2, #20689	@ tmp376,
	ldr	r0, [r4, r1]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r1, #19860	@ tmp370,
	add	r3, r3, ip	@ temp.2170, prephitmp.2100, <variable>.CurrPOC.frame_num
	ldrb	ip, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	str	r3, [r4, r1]	@ temp.2170, <variable>.CurrPOC.AbsFrameNum
	mov	r3, r3, asl #1	@ tmp373, temp.2170,
	movw	r0, #19848	@ tmp375,
	subeq	r3, r3, #1	@ prephitmp.2172, tmp373,
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r3, [r4, r0]	@ prephitmp.2172, <variable>.CurrPOC.ThisPOC
	bne	.L635	@,
	movw	r2, #19844	@ tmp378,
	movw	r0, #19836	@ tmp380,
	movw	ip, #19840	@ tmp379,
	str	r3, [r4, r2]	@ prephitmp.2172, <variable>.CurrPOC.framepoc
	str	r3, [r4, r0]	@ prephitmp.2172, <variable>.CurrPOC.toppoc
	str	r3, [r4, ip]	@ prephitmp.2172,
.L628:
	movw	r2, #19868	@ tmp388,
	movw	r0, #19872	@ tmp391,
	ldr	r1, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movw	ip, #19864	@ tmp387,
	ldr	r2, [r4, r0]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movw	r3, #19876	@ tmp390,
	str	r1, [r4, ip]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	str	r2, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L593:
	cmp	r1, #0	@ tmp171,
	movwne	r3, #19872	@ tmp251,
	movne	r2, #0	@ tmp252,
	strne	r2, [r4, r3]	@ tmp252, <variable>.CurrPOC.FrameNumOffset
	bne	.L610	@,
	movw	r3, #19828	@ tmp253,
	ldr	r7, [r4, r3]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r7, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L611	@,
	movw	ip, #19876	@ tmp255,
	movw	r0, #19864	@ tmp257,
	mov	r3, r1	@ prephitmp.2104, tmp171
	str	r1, [r4, ip]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
	str	r1, [r4, r0]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
.L612:
	movw	r2, #19872	@ tmp268,
	str	r3, [r4, r2]	@ prephitmp.2104, <variable>.CurrPOC.FrameNumOffset
.L610:
	ldr	ip, [r5, #2924]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movw	r0, #20720	@ tmp278,
	ldr	r3, [r4, r0]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	ip, #0	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle,
	movwne	ip, #19868	@ tmp271,
	movweq	r2, #19860	@ tmp276,
	ldrne	r2, [r4, ip]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movwne	ip, #19872	@ tmp272,
	ldrne	ip, [r4, ip]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	streq	ip, [r4, r2]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.CurrPOC.AbsFrameNum
	addne	r2, r2, ip	@ tmp275, <variable>.CurrPOC.frame_num, <variable>.CurrPOC.FrameNumOffset
	movwne	ip, #19860	@ tmp270,
	strne	r2, [r4, ip]	@ tmp275, <variable>.CurrPOC.AbsFrameNum
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L649	@,
.L616:
	movw	ip, #19892	@ tmp283,
	mov	r3, #0	@ tmp284,
	str	r3, [r4, ip]	@ tmp284, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2924]	@ temp.2175, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r3	@ temp.2175,
	ble	.L617	@,
	add	r0, r5, #2928	@ ivtmp.2134, sps,
	mov	r2, r3	@ i, prephitmp.2101
.L618:
	ldr	r7, [r0], #4	@ tmp285, <variable>.offset_for_ref_frame
	add	r2, r2, #1	@ i, i,
	add	r3, r3, r7	@ prephitmp.2101, prephitmp.2101, tmp285
	str	r3, [r4, ip]	@ prephitmp.2101, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2924]	@ temp.2175, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r2	@ temp.2175, i
	bgt	.L618	@,
.L617:
	movw	r3, #19860	@ tmp287,
	ldr	r7, [r4, r3]	@ temp.2149, <variable>.CurrPOC.AbsFrameNum
	cmp	r7, #0	@ temp.2149,
	movweq	r3, #19888	@ tmp307,
	moveq	r6, r7	@ prephitmp.2153, temp.2149
	streq	r7, [r4, r3]	@ temp.2149, <variable>.CurrPOC.ExpectedPicOrderCnt
	beq	.L620	@,
	sub	r7, r7, #1	@ tmp288, temp.2149,
	mov	r0, r7	@, tmp288
	bl	__aeabi_uidiv	@
	movw	ip, #19884	@ tmp292,
	mov	r6, r0	@ tmp291,
	mov	r0, r7	@, tmp288
	str	r6, [r4, ip]	@ tmp291, <variable>.CurrPOC.PicOrderCntCycleCnt
	ldr	r1, [r5, #2924]	@, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bl	__aeabi_uidivmod	@
	movw	r2, #19892	@ tmp302,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	movw	ip, #19888	@ tmp304,
	movw	r2, #19880	@ tmp301,
	mul	r6, r0, r6	@ prephitmp.2153, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, tmp291
	str	r6, [r4, ip]	@ prephitmp.2153, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	r1, #0	@ D.42039,
	str	r1, [r4, r2]	@ D.42039, <variable>.CurrPOC.FrameNumInPicOrderCntCycle
	blt	.L620	@,
	add	r2, r5, #2928	@ ivtmp.2129, sps,
	cmp	r1, #1	@ D.42039,
	and	r7, r1, #1	@ tmp399, D.42039,
	mov	r0, #1	@ i.2155,
	ldr	lr, [r2], #4	@ tmp305, <variable>.offset_for_ref_frame
	add	r6, r6, lr	@ prephitmp.2153, prephitmp.2153, tmp305
	str	r6, [r4, ip]	@ prephitmp.2153, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L620	@,
	cmp	r7, #0	@ tmp399,
	beq	.L621	@,
	ldr	lr, [r2], #4	@ tmp411, <variable>.offset_for_ref_frame
	mov	r0, #2	@ i.2155,
	cmp	r1, r0	@ D.42039, i.2155
	add	r6, r6, lr	@ prephitmp.2153, prephitmp.2153, tmp411
	str	r6, [r4, ip]	@ prephitmp.2153, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L620	@,
.L621:
	mov	r3, r2	@ tmp401, ivtmp.2129
	add	r0, r0, #2	@ i.2155, i.2155,
	ldr	r7, [r3], #4	@ tmp404, <variable>.offset_for_ref_frame
	cmp	r1, r0	@ D.42039, i.2155
	add	r6, r6, r7	@ prephitmp.2153, prephitmp.2153, tmp404
	str	r6, [r4, ip]	@ prephitmp.2153, <variable>.CurrPOC.ExpectedPicOrderCnt
	ldr	r7, [r2, #4]	@ tmp409, <variable>.offset_for_ref_frame
	add	r2, r3, #4	@ ivtmp.2129, tmp401,
	add	r6, r6, r7	@ prephitmp.2153, prephitmp.2153, tmp409
	str	r6, [r4, ip]	@ prephitmp.2153, <variable>.CurrPOC.ExpectedPicOrderCnt
	bge	.L621	@,
.L620:
	movw	r3, #20720	@ tmp309,
	movw	r0, #20689	@ tmp314,
	ldr	ip, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.nal_ref_idc,
	ldreq	ip, [r5, #2916]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	movwne	ip, #19888	@ tmp311,
	ldrne	r6, [r4, ip]	@ prephitmp.2157, <variable>.CurrPOC.ExpectedPicOrderCnt
	addeq	r6, r6, ip	@ prephitmp.2157, prephitmp.2153, <variable>.offset_for_non_ref_pic
	movweq	ip, #19888	@ tmp313,
	streq	r6, [r4, ip]	@ prephitmp.2157, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	r1, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L650	@,
	movw	ip, #20690	@ tmp326,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r0, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movwne	r2, #19852	@ tmp332,
	ldrne	r0, [r5, #2920]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movweq	r0, #19852	@ tmp328,
	ldrne	r2, [r4, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	ldreq	r0, [r4, r0]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	addne	r0, r2, r0	@ tmp333, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	movw	r2, #19848	@ tmp337,
	addeq	r6, r6, r0	@ prephitmp.2162, prephitmp.2157, <variable>.CurrPOC.delta_pic_order_cnt
	addne	r6, r0, r6	@ prephitmp.2162, tmp333, prephitmp.2157
	movweq	r0, #19836	@ tmp330,
	movwne	r0, #19840	@ tmp336,
	str	r6, [r4, r0]	@ prephitmp.2162,
	str	r6, [r4, r2]	@ prephitmp.2162, <variable>.CurrPOC.ThisPOC
.L625:
	movw	r2, #19868	@ tmp340,
	movw	r1, #19872	@ tmp343,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movw	ip, #19844	@ tmp338,
	ldr	r2, [r4, r1]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movw	r3, #19864	@ tmp339,
	movw	r1, #19876	@ tmp342,
	str	r6, [r4, ip]	@ prephitmp.2162, <variable>.CurrPOC.framepoc
	str	r0, [r4, r3]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	str	r2, [r4, r1]	@ <variable>.CurrPOC.FrameNumOffset,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L650:
	movw	r3, #19852	@ tmp316,
	movw	r1, #19856	@ tmp319,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r0, #19836	@ tmp318,
	ldr	r2, [r4, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	add	r6, r6, ip	@ D.42053, prephitmp.2157, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r0]	@ D.42053, <variable>.CurrPOC.toppoc
	ldr	r1, [r5, #2920]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	ip, #19840	@ tmp323,
	add	r3, r2, r1	@ tmp320, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	movw	r1, #19844	@ tmp324,
	add	r0, r3, r6	@ D.42057, tmp320, D.42053
	movw	r2, #19848	@ tmp325,
	cmp	r0, r6	@ D.42057, D.42053
	movlt	r6, r0	@ prephitmp.2162, D.42057
	movge	r6, r6	@ prephitmp.2162, D.42053
	str	r0, [r4, ip]	@ D.42057, <variable>.CurrPOC.bottompoc
	str	r6, [r4, r1]	@ prephitmp.2162,
	str	r6, [r4, r2]	@ prephitmp.2162, <variable>.CurrPOC.ThisPOC
	b	.L625	@
.L649:
	movw	r1, #19860	@ tmp280,
	ldr	r2, [r4, r1]	@ D.42024, <variable>.CurrPOC.AbsFrameNum
	cmp	r2, #0	@ D.42024,
	subne	r2, r2, #1	@ tmp282, D.42024,
	strne	r2, [r4, r1]	@ tmp282, <variable>.CurrPOC.AbsFrameNum
	b	.L616	@
.L648:
	movw	r0, #19848	@ tmp353,
	mov	r3, #0	@ tmp346,
	movw	r2, #19872	@ tmp345,
	str	r3, [r4, r0]	@ tmp346, <variable>.CurrPOC.ThisPOC
	movw	r1, #19840	@ tmp347,
	movw	ip, #19836	@ tmp349,
	movw	r0, #19844	@ tmp351,
	str	r3, [r4, r2]	@ tmp346, <variable>.CurrPOC.FrameNumOffset
	str	r3, [r4, r1]	@ tmp346, <variable>.CurrPOC.bottompoc
	str	r3, [r4, ip]	@ tmp346,
	str	r3, [r4, r0]	@ tmp346,
	b	.L628	@
.L646:
	movw	r0, #19816	@ tmp192,
	movw	r1, #19812	@ tmp190,
	mov	r3, #0	@ tmp191,
	str	r3, [r4, r0]	@ tmp191, <variable>.CurrPOC.PrevPicOrderCntLsb
	str	r3, [r4, r1]	@ tmp191, <variable>.CurrPOC.PrevPicOrderCntMsb
.L596:
	movw	ip, #19804	@ tmp393,
	movw	r1, #19812	@ tmp394,
	mov	r3, #0	@ prephitmp.2180,
	ldr	r0, [r4, ip]	@ D.41963, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	ip, [r4, r1]	@ prephitmp.2112, <variable>.CurrPOC.PrevPicOrderCntMsb
	mov	r1, r3	@ prephitmp.2110, prephitmp.2180
	b	.L602	@
.L605:
	movw	r1, #20690	@ tmp228,
	movw	r0, #19804	@ tmp230,
	ldrb	r2, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	movw	r1, #19848	@ tmp237,
	ldr	ip, [r4, r0]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	r2, #0	@ <variable>.CurrSlice.bottom_field_flag,
	add	r3, r3, ip	@ prephitmp.2105, prephitmp.2180, <variable>.CurrPOC.pic_order_cnt_lsb
	movweq	ip, #19836	@ tmp232,
	movwne	ip, #19840	@ tmp236,
	str	r3, [r4, ip]	@ prephitmp.2105,
	str	r3, [r4, r1]	@ prephitmp.2105, <variable>.CurrPOC.ThisPOC
	b	.L606	@
.L597:
	movw	r0, #19832	@ tmp198,
	ldr	r3, [r4, r0]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.last_pic_bottom_field
	cmp	r3, #0	@ <variable>.CurrPOC.last_pic_bottom_field,
	beq	.L599	@,
	movw	r3, #19816	@ tmp202,
	movw	ip, #19812	@ tmp200,
	str	r1, [r4, r3]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntLsb
	str	r1, [r4, ip]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntMsb
	b	.L596	@
.L629:
	movw	r3, #19864	@ tmp362,
	movw	r0, #19876	@ tmp364,
	str	r1, [r4, r3]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
	mov	r3, r1	@ prephitmp.2100, tmp171
	str	r1, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
.L631:
	movw	r1, #19872	@ tmp367,
	str	r3, [r4, r1]	@ prephitmp.2100, <variable>.CurrPOC.FrameNumOffset
	b	.L632	@
.L635:
	movw	r0, #20690	@ tmp381,
	movw	r1, #19844	@ tmp385,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movweq	ip, #19836	@ tmp384,
	movwne	ip, #19840	@ tmp386,
	str	r3, [r4, ip]	@ prephitmp.2172,
	str	r3, [r4, r1]	@ prephitmp.2172,
	b	.L628	@
.L611:
	movw	r3, #19868	@ tmp259,
	movw	r7, #19864	@ tmp260,
	ldr	r2, [r4, r3]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r1, [r4, r7]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	cmp	r2, r1	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	bcs	.L613	@,
	movw	r7, #19876	@ tmp264,
	movw	ip, #19872	@ tmp263,
	ldr	r1, [r4, r7]	@ <variable>.CurrPOC.PrevFrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	add	r0, r0, r1	@ tmp266, MaxFrameNum, <variable>.CurrPOC.PrevFrameNumOffset
	str	r0, [r4, ip]	@ tmp266, <variable>.CurrPOC.FrameNumOffset
	b	.L610	@
.L647:
	rsb	r3, r2, r3	@ D.41979, MaxPicOrderCntLsb, prephitmp.2180
	movw	r2, #19820	@ tmp216,
	str	r3, [r4, r2]	@ D.41979, <variable>.CurrPOC.PicOrderCntMsb
	b	.L603	@
.L599:
	movw	r1, #19836	@ tmp206,
	movw	r0, #19812	@ tmp204,
	ldr	r1, [r4, r1]	@ prephitmp.2110, <variable>.CurrPOC.toppoc
	mov	r5, r3	@ prephitmp.2114, <variable>.CurrPOC.last_pic_bottom_field
	str	r3, [r4, r0]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.PrevPicOrderCntMsb
	movw	r0, #19816	@ tmp207,
	mov	ip, r3	@ prephitmp.2112, prephitmp.2114
	str	r1, [r4, r0]	@ prephitmp.2110, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L598	@
.L613:
	movw	r2, #19876	@ tmp267,
	ldr	r3, [r4, r2]	@ prephitmp.2104, <variable>.CurrPOC.PrevFrameNumOffset
	b	.L612	@
	.fnend
	.size	DecPOC, .-DecPOC
	.align	2
	.global	CalcPicNum
	.type	CalcPicNum, %function
CalcPicNum:
	.fnstart
.LFB1610:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20700	@ tmp158,
	movw	r2, #13592	@ tmp160,
	ldr	r4, [r0, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r5, [r0, r2]	@ <variable>.PPS, <variable>.PPS
	mov	ip, #2208	@ tmp162,
	movw	r1, #13588	@ tmp166,
	movw	r2, #55795	@ tmp173,
	ldr	r1, [r0, r1]	@ <variable>.SPS, <variable>.SPS
	mla	r3, ip, r4, r5	@ tmp163, tmp162, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	mov	ip, #4000	@ tmp168,
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ D.42117, <variable>.CurrPic.structure
	cmp	r2, #0	@ D.42117,
	ldr	r5, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mov	r3, #1	@ tmp172,
	mla	r4, ip, r5, r1	@ tmp169, tmp168, <variable>.seq_parameter_set_id, <variable>.SPS
	ldr	r1, [r4, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	ip, r1, #4	@ tmp170, <variable>.log2_max_frame_num_minus4,
	mov	ip, r3, asl ip	@ MaxFrameNum, tmp172,
	beq	.L652	@,
	movw	r7, #26640	@ tmp176,
	cmp	r2, #2	@ D.42117,
	movne	r4, #0	@, add_bottom
	moveq	r4, #1	@, add_bottom
	ldr	r6, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r2, #1	@ D.42117,
	movne	r5, #0	@, add_top
	moveq	r5, #1	@, add_top
	cmp	r6, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L654	@,
	add	r8, r0, #26368	@ ivtmp.2248, pH264Ctx,
	mov	r2, #0	@ i,
	add	r3, r8, #136	@ ivtmp.2248, ivtmp.2248,
	movw	r8, #56344	@ tmp245,
.L667:
	ldr	r1, [r3, #0]	@ temp.2256, <variable>.DPB.fs_ref
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #0	@ <variable>.is_reference,
	beq	.L663	@,
	ldr	r6, [r1, #660]	@ temp.2258, <variable>.frame_num
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	r6, sl	@ temp.2258, <variable>.CurrPic.frame_num
	rsbhi	r6, ip, r6	@ tmp205, MaxFrameNum, temp.2258
	str	r6, [r1, #664]	@ temp.2258, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ prephitmp.2216, <variable>.DPB.fs_ref
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ prephitmp.2220, <variable>.is_reference
	tst	r6, #1	@ prephitmp.2220,
	beq	.L666	@,
	ldr	sl, [r1, #576]	@ tmp209,
	bic	sl, sl, #-16777216	@ tmp207, tmp209,
	bic	sl, sl, #255	@ tmp207, tmp207,
	cmp	sl, #65536	@ tmp207,
	ldreq	r6, [r1, #664]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	r6, r5, r6, asl #1	@, tmp212, add_top, <variable>.frame_num_wrap,
	streq	r6, [r1, #588]	@ tmp212, <variable>.top_field.pic_num
	ldreq	r1, [r3, #0]	@ prephitmp.2216, <variable>.DPB.fs_ref
	ldreqb	r6, [r1, #2]	@ zero_extendqisi2	@ prephitmp.2220, <variable>.is_reference
.L666:
	tst	r6, #2	@ prephitmp.2220,
	beq	.L663	@,
	ldr	r6, [r1, #616]	@ tmp216,
	bic	r6, r6, #-16777216	@ tmp214, tmp216,
	bic	r6, r6, #255	@ tmp214, tmp214,
	cmp	r6, #65536	@ tmp214,
	ldreq	r6, [r1, #664]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	r6, r4, r6, asl #1	@, tmp219, add_bottom, <variable>.frame_num_wrap,
	streq	r6, [r1, #628]	@ tmp219, <variable>.bottom_field.pic_num
.L663:
	ldr	r1, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2248, ivtmp.2248,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L667	@,
.L654:
	movw	r6, #26644	@ tmp222,
	ldr	r3, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r0, #26368	@ ivtmp.2243, pH264Ctx,
	add	r3, r2, #200	@ ivtmp.2243, ivtmp.2243,
	mov	r2, #0	@ i.2260,
.L670:
	ldr	ip, [r3, #0]	@ prephitmp.2209, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2260, i.2260,
	ldrb	r1, [ip, #2]	@ zero_extendqisi2	@ temp.2270, <variable>.is_reference
	cmp	r1, #0	@ temp.2270,
	beq	.L668	@,
	tst	r1, #1	@ prephitmp.2213,
	beq	.L669	@,
	ldr	r7, [ip, #576]	@ tmp228,
	bic	r7, r7, #-16777216	@ tmp226, tmp228,
	bic	r7, r7, #255	@ tmp226, tmp226,
	cmp	r7, #256	@ tmp226,
	ldreq	r1, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r5, r1, asl #1	@, tmp231, add_top, <variable>.long_term_frame_idx,
	streq	r1, [ip, #584]	@ tmp231, <variable>.top_field.long_term_pic_num
	ldreq	ip, [r3, #0]	@ prephitmp.2209, <variable>.DPB.fs_ltref
	ldreqb	r1, [ip, #2]	@ zero_extendqisi2	@ prephitmp.2213, <variable>.is_reference
.L669:
	tst	r1, #2	@ prephitmp.2213,
	beq	.L668	@,
	ldr	r1, [ip, #616]	@ tmp235,
	bic	r1, r1, #-16777216	@ tmp233, tmp235,
	bic	r1, r1, #255	@ tmp233, tmp233,
	cmp	r1, #256	@ tmp233,
	ldreq	r1, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r4, r1, asl #1	@, tmp238, add_bottom, <variable>.long_term_frame_idx,
	streq	r1, [ip, #624]	@ tmp238, <variable>.bottom_field.long_term_pic_num
.L668:
	ldr	ip, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.2243, ivtmp.2243,
	cmp	ip, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2260
	bhi	.L670	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L652:
	movw	r5, #26640	@ tmp178,
	ldr	r4, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r4, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L655	@,
	add	r1, r0, #26368	@ ivtmp.2238, pH264Ctx,
	movw	r6, #56344	@ tmp242,
	add	r3, r1, #136	@ ivtmp.2238, ivtmp.2238,
	b	.L659	@
.L656:
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i.2253, i.2253,
	add	r3, r3, #4	@ ivtmp.2238, ivtmp.2238,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2253
	bls	.L655	@,
.L659:
	ldr	r1, [r3, #0]	@ D.42121, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L656	@,
	ldr	r4, [r1, #536]	@ tmp184,
	bic	r4, r4, #-16777216	@ tmp182, tmp184,
	bic	r4, r4, #255	@ tmp182, tmp182,
	cmp	r4, #65536	@ tmp182,
	bne	.L656	@,
	ldr	r4, [r1, #660]	@ D.42129, <variable>.frame_num
	add	r2, r2, #1	@ i.2253, i.2253,
	ldr	r7, [r0, r6]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	r4, r7	@ D.42129, <variable>.CurrPic.frame_num
	rsb	r7, ip, r4	@ tmp187, MaxFrameNum, D.42129
	strls	r4, [r1, #664]	@ D.42129, <variable>.frame_num_wrap
	strhi	r7, [r1, #664]	@ tmp187, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ temp.2252, <variable>.DPB.fs_ref
	add	r3, r3, #4	@ ivtmp.2238, ivtmp.2238,
	ldr	r4, [r1, #664]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	str	r4, [r1, #548]	@ <variable>.frame_num_wrap, <variable>.frame.pic_num
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2253
	bhi	.L659	@,
.L655:
	movw	r4, #26644	@ tmp191,
	ldr	ip, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r0, #26368	@ ivtmp.2233, pH264Ctx,
	add	r3, r2, #200	@ ivtmp.2233, ivtmp.2233,
	mov	r2, #0	@ i.2254,
	b	.L662	@
.L661:
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2254
	bls	.L676	@,
.L662:
	ldr	r1, [r3, #0]	@ D.42139, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2254, i.2254,
	add	r3, r3, #4	@ ivtmp.2233, ivtmp.2233,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L661	@,
	ldr	ip, [r1, #536]	@ tmp197,
	bic	ip, ip, #-16777216	@ tmp195, tmp197,
	bic	ip, ip, #255	@ tmp195, tmp195,
	cmp	ip, #256	@ tmp195,
	ldreq	ip, [r1, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r1, #544]	@ <variable>.long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2254
	bhi	.L662	@,
.L676:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	CalcPicNum, .-CalcPicNum
	.align	2
	.global	IsOutDPB
	.type	IsOutDPB, %function
IsOutDPB:
	.fnstart
.LFB1611:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pFrameStore
	beq	.L678	@,
	movw	r3, #26636	@ tmp141,
	ldr	r4, [r0, r3]	@ D.42215, <variable>.DPB.used_size
	cmp	r4, #0	@ D.42215,
	beq	.L678	@,
	movw	ip, #26440	@ tmp142,
	ldr	r2, [r0, ip]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r2, r1	@ <variable>.DPB.fs, pFrameStore
	beq	.L679	@,
	tst	r4, #1	@ D.42215,
	add	r3, r0, #26368	@ tmp144, pH264Ctx,
	add	r2, r3, #76	@ ivtmp.2302, tmp144,
	mov	r0, #0	@ i,
	bne	.L680	@,
	ldr	ip, [r2, #0]	@ D.42212, <variable>.DPB.fs
	mov	r0, #1	@ i,
	add	r2, r3, #80	@ ivtmp.2302, tmp144,
	cmp	ip, r1	@ D.42212, pFrameStore
	bne	.L680	@,
.L679:
	mov	r0, #0	@ D.42210,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L681:
	ldr	ip, [r3], #4	@ D.42212, <variable>.DPB.fs
	cmp	ip, r1	@ D.42212, pFrameStore
	beq	.L679	@,
	ldr	ip, [r2, #4]	@ D.42212, <variable>.DPB.fs
	add	r2, r3, #4	@ ivtmp.2302, tmp150,
	cmp	ip, r1	@ D.42212, pFrameStore
	beq	.L679	@,
.L680:
	add	r0, r0, #1	@ tmp149, i,
	mov	r3, r2	@ tmp150, ivtmp.2302
	cmp	r0, r4	@ tmp149, D.42215
	add	r0, r0, #1	@ i, tmp149,
	bcc	.L681	@,
.L678:
	mov	r0, #1	@ D.42210,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	IsOutDPB, .-IsOutDPB
	.align	2
	.global	UpdatePicQpInf
	.type	UpdatePicQpInf, %function
UpdatePicQpInf:
	.fnstart
.LFB1617:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r1, #28]	@ <variable>.MaxQp, <variable>.MaxQp
	ldr	r3, [r1, #32]	@ <variable>.MinQp, <variable>.MinQp
	cmp	r2, r0	@ <variable>.MaxQp, SlcQp
	strge	r2, [r1, #28]	@, <variable>.MaxQp, <variable>.MaxQp
	strlt	r0, [r1, #28]	@, SlcQp, <variable>.MaxQp
	cmp	r3, r0	@ <variable>.MinQp, SlcQp
	strle	r3, [r1, #32]	@, <variable>.MinQp, <variable>.MinQp
	strgt	r0, [r1, #32]	@, SlcQp, <variable>.MinQp
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	UpdatePicQpInf, .-UpdatePicQpInf
	.align	2
	.global	StopPicNum
	.type	StopPicNum, %function
StopPicNum:
	.fnstart
.LFB1619:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	StopPicNum, .-StopPicNum
	.align	2
	.global	H264_GetPicStreamSize
	.type	H264_GetPicStreamSize, %function
H264_GetPicStreamSize:
	.fnstart
.LFB1621:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #58876	@ tmp138,
	ldr	r3, [r0, r3]	@ pH264SliceParam, <variable>.DecPicPara.pFirstSlice
	cmp	r3, #0	@ pH264SliceParam,
	moveq	r0, r3	@ TotalSize, pH264SliceParam
	ldmeqfd	sp, {fp, sp, pc}	@
	mov	r0, #0	@ TotalSize,
.L696:
	ldr	r2, [r3, #12]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r1, [r3, #8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r3, #4056]	@ pH264SliceParam, <variable>.pNextSlice
	add	ip, r1, r2	@ tmp139, <variable>.valid_bitlen, <variable>.valid_bitlen
	add	r2, ip, #7	@ tmp142, tmp139,
	cmp	r3, #0	@ pH264SliceParam,
	add	r0, r0, r2, lsr #3	@, TotalSize, TotalSize, tmp142,
	bne	.L696	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	H264_GetPicStreamSize, .-H264_GetPicStreamSize
	.align	2
	.global	ExitSlice
	.type	ExitSlice, %function
ExitSlice:
	.fnstart
.LFB1632:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #20700	@ tmp137,
	movw	ip, #13592	@ tmp140,
	ldr	r1, [r0, r4]	@ D.44202, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r3, [r0, ip]	@ <variable>.PPS, <variable>.PPS
	movw	r6, #13588	@ tmp138,
	mov	r2, #2208	@ tmp142,
	ldr	ip, [r0, r6]	@ <variable>.SPS, <variable>.SPS
	movw	r5, #20689	@ tmp158,
	movw	r4, #20740	@ tmp152,
	mla	r6, r2, r1, r3	@ tmp143, tmp142, D.44202, <variable>.PPS
	ldrb	r3, [r0, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	ldr	r5, [r0, r4]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movw	r4, #20708	@ tmp155,
	ldr	r4, [r0, r4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	cmp	r3, #0	@ <variable>.CurrSlice.field_pic_flag,
	ldr	r2, [r6, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r6, #22344	@ tmp148,
	str	r1, [r0, r6]	@ D.44202, <variable>.PrevSlice.pic_parameter_set_id
	mov	r1, #4000	@ tmp146,
	mla	r2, r1, r2, ip	@ sps, tmp146, <variable>.seq_parameter_set_id, <variable>.SPS
	movw	r1, #22376	@ tmp151,
	ldr	ip, [r2, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	str	r5, [r0, r1]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	movw	r1, #22352	@ tmp154,
	str	r4, [r0, r1]	@ <variable>.CurrSlice.frame_num, <variable>.PrevSlice.frame_num
	movw	r1, #22340	@ tmp149,
	str	ip, [r0, r1]	@ <variable>.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	movw	ip, #22336	@ tmp157,
	strb	r3, [r0, ip]	@ <variable>.CurrSlice.field_pic_flag, <variable>.PrevSlice.field_pic_flag
	movwne	r3, #20690	@ tmp164,
	ldrneb	ip, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	movwne	r3, #22337	@ tmp163,
	movw	r1, #20720	@ tmp168,
	ldr	r1, [r0, r1]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	strneb	ip, [r0, r3]	@ <variable>.CurrSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
	movw	r3, #20691	@ tmp171,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	ip, #22338	@ tmp170,
	cmp	r3, #5	@ <variable>.CurrSlice.nal_unit_type,
	strb	r3, [r0, ip]	@ <variable>.CurrSlice.nal_unit_type, <variable>.PrevSlice.nal_unit_type
	movw	r3, #22348	@ tmp167,
	str	r1, [r0, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevSlice.nal_ref_idc
	movweq	r3, #20728	@ tmp177,
	ldreq	r1, [r0, r3]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	movweq	r3, #22356	@ tmp176,
	streq	r1, [r0, r3]	@ <variable>.CurrSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	ldr	r3, [r2, #2908]	@ prephitmp.2392, <variable>.pic_order_cnt_type
	cmp	r3, #0	@ prephitmp.2392,
	bne	.L702	@,
	movw	r1, #19804	@ tmp180,
	movw	r3, #19808	@ tmp183,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r3, #22360	@ tmp179,
	str	ip, [r0, r3]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.PrevSlice.pic_oder_cnt_lsb
	movw	r3, #22364	@ tmp182,
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	r3, [r2, #2908]	@ prephitmp.2392, <variable>.pic_order_cnt_type
.L702:
	cmp	r3, #1	@ prephitmp.2392,
	bne	.L703	@,
	movw	r2, #19852	@ tmp186,
	movw	ip, #19856	@ tmp189,
	ldr	r1, [r0, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r3, #22368	@ tmp185,
	ldr	r2, [r0, ip]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movw	ip, #22372	@ tmp188,
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	str	r2, [r0, ip]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
.L703:
	movw	r3, #59180	@ tmp191,
	ldr	ip, [r0, r3]	@ <variable>.TotalSlice, <variable>.TotalSlice
	add	r1, ip, #1	@ tmp194, <variable>.TotalSlice,
	str	r1, [r0, r3]	@ tmp194, <variable>.TotalSlice
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	ExitSlice, .-ExitSlice
	.align	2
	.global	PicTypeStatistic
	.type	PicTypeStatistic, %function
PicTypeStatistic:
	.fnstart
.LFB1633:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20688	@ tmp134,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L708	@,
	bcs	.L713	@,
	movw	r1, #56372	@ tmp140,
	ldr	r2, [r0, r1]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r2, #2	@ <variable>.CurrPic.pic_type,
	movne	r2, #1	@ tmp143,
	strne	r2, [r0, r1]	@ tmp143, <variable>.CurrPic.pic_type
	movw	r1, #56376	@ tmp150,
	mov	r2, #0	@ tmp151,
	str	r2, [r0, r1]	@ tmp151, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
.L713:
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmnefd	sp, {fp, sp, pc}	@
	movw	r3, #20691	@ tmp146,
	ldrb	ip, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	ip, #5	@ <variable>.CurrSlice.nal_unit_type,
	movweq	ip, #56376	@ tmp148,
	moveq	r2, #1	@ tmp149,
	streq	r2, [r0, ip]	@ tmp149, <variable>.CurrPic.is_idr_pic
	movwne	r1, #56376	@ tmp150,
	movne	r2, #0	@ tmp151,
	strne	r2, [r0, r1]	@ tmp151, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
.L708:
	movw	r3, #56372	@ tmp136,
	movw	r1, #56376	@ tmp138,
	mov	ip, #2	@ tmp137,
	mov	r2, #0	@ tmp139,
	str	ip, [r0, r3]	@ tmp137, <variable>.CurrPic.pic_type
	str	r2, [r0, r1]	@ tmp139, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	PicTypeStatistic, .-PicTypeStatistic
	.align	2
	.global	PassBytes
	.type	PassBytes, %function
PassBytes:
	.fnstart
.LFB1646:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #368]	@ D.45728, <variable>.pCurrNal
	cmp	r3, #0	@ D.45728,
	cmpne	r1, #0	@, len,
	bne	.L721	@,
.L715:
	mvn	r0, #0	@ D.45734,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L721:
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.45735, <variable>.nal_used_segment
	rsb	ip, r2, r2, asl #3	@, tmp155, D.45735, D.45735,
	add	ip, r3, ip, asl #2	@, tmp157, D.45728, tmp155,
	ldr	ip, [ip, #8]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	ip, #0	@ <variable>.streamBuffer,
	beq	.L715	@,
	ldr	ip, [r3, #68]	@ D.45742, <variable>.nal_segment
	cmp	ip, #2	@ D.45742,
	bhi	.L715	@,
	cmp	r2, #1	@ D.45735,
	bhi	.L715	@,
	cmp	ip, r2	@ D.45742, segment_idx
	bls	.L715	@,
	mov	r4, r1, asl #3	@ len.2459, len,
	mov	r6, #28	@ tmp188,
.L719:
	mla	r3, r6, r2, r3	@ tmp163, tmp188, segment_idx, D.45728
	add	r2, r2, #1	@ segment_idx, segment_idx,
	add	r5, r3, #24	@ tmp164, tmp163,
	ldr	r1, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	mov	r1, r1, asl #3	@ D.45750, <variable>.bitstream_length,
	add	ip, r4, ip	@ D.45748, len.2459, <variable>.bitsoffset
	cmp	ip, r1	@ D.45748, D.45750
	rsb	r4, r1, ip	@ len.2459, D.45750, D.45748
	bls	.L722	@,
	str	r1, [r3, #24]	@ D.45750, <variable>.bitsoffset
	ldr	r3, [r0, #368]	@ temp.2460, <variable>.pCurrNal
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	ip, r1, #1	@ tmp184, <variable>.nal_used_segment,
	strb	ip, [r3, #0]	@ tmp184, <variable>.nal_used_segment
	ldr	r3, [r0, #368]	@ D.45728, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r2	@ <variable>.nal_segment, segment_idx
	bhi	.L719	@,
	mov	r0, #0	@ D.45734,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L722:
	str	ip, [r5, #0]	@ D.45748, <variable>.bitsoffset
	mov	r0, #1	@ D.45734,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	PassBytes, .-PassBytes
	.align	2
	.global	GetBytes
	.type	GetBytes, %function
GetBytes:
	.fnstart
.LFB1647:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pdes
	mov	r3, r0	@ pH264Ctx, pH264Ctx
	bne	.L731	@,
.L724:
	mvn	r2, #0	@ len,
.L726:
	mov	r0, r2	@, len
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L731:
	ldr	r5, [r0, #368]	@ D.45772, <variable>.pCurrNal
	cmp	r5, #0	@ D.45772,
	cmpne	r2, #0	@, len,
	movgt	r4, #0	@, tmp157
	movle	r4, #1	@, tmp157
	ble	.L724	@,
	ldrb	ip, [r5, #0]	@ zero_extendqisi2	@ D.45777, <variable>.nal_used_segment
	rsb	r0, ip, ip, asl #3	@, tmp161, D.45777, D.45777,
	add	r0, r5, r0, asl #2	@, tmp163, D.45772, tmp161,
	ldr	r0, [r0, #8]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r0, #0	@ <variable>.streamBuffer,
	beq	.L724	@,
	ldr	r0, [r5, #68]	@ D.45784, <variable>.nal_segment
	cmp	r0, #2	@ D.45784,
	bhi	.L724	@,
	cmp	ip, #1	@ D.45777,
	bhi	.L724	@,
	cmp	r0, ip	@ D.45784, segment_idx
	bls	.L724	@,
	mov	r9, #28	@ tmp207,
.L729:
	mul	r8, r9, ip	@ tmp167, tmp207, segment_idx
	mov	r0, #0	@ ivtmp.2490,
	add	sl, r8, r5	@ tmp169, tmp167, D.45772
	ldr	r6, [sl, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	r5, [sl, #8]	@ D.45789, <variable>.streamBuffer
	ldr	r7, [sl, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r6, r6, #7	@ tmp176, <variable>.bitsoffset,
	add	r7, r5, r7	@ end_byte, D.45789, <variable>.bitstream_length
	add	r5, r5, r6, lsr #3	@, byte_pos, D.45789, tmp176,
.L725:
	add	sl, r0, r5	@ D.49421, ivtmp.2490, byte_pos
	add	r6, r0, r1	@ D.49419, ivtmp.2490, pdes
	cmp	r7, sl	@ end_byte, D.49421
	bls	.L732	@,
	ldrb	sl, [r5, r0]	@ zero_extendqisi2	@ tmp185,* ivtmp.2490
	add	r4, r4, #1	@ cnt, cnt,
	cmp	r4, r2	@ cnt, len
	strb	sl, [r1, r0]	@ tmp185,* ivtmp.2490
	add	r0, r0, #1	@ ivtmp.2490, ivtmp.2490,
	ldr	r6, [r3, #368]	@ temp.2508, <variable>.pCurrNal
	add	r6, r8, r6	@ tmp190, tmp206, temp.2508
	ldr	sl, [r6, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	sl, sl, #8	@ tmp198, <variable>.bitsoffset,
	str	sl, [r6, #24]	@ tmp198, <variable>.bitsoffset
	bcc	.L725	@,
	b	.L726	@
.L732:
	ldr	r5, [r3, #368]	@ temp.2510, <variable>.pCurrNal
	add	ip, ip, #1	@ segment_idx, segment_idx,
	ldrb	r1, [r5, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r0, r1, #1	@ tmp201, <variable>.nal_used_segment,
	strb	r0, [r5, #0]	@ tmp201, <variable>.nal_used_segment
	ldr	r5, [r3, #368]	@ D.45772, <variable>.pCurrNal
	ldr	r1, [r5, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, ip	@ <variable>.nal_segment, segment_idx
	movhi	r1, r6	@ pdes, D.49419
	bhi	.L729	@
.L728:
	mov	r2, r4	@ len, cnt
	b	.L726	@
	.fnend
	.size	GetBytes, .-GetBytes
	.align	2
	.global	InitOldSlice
	.type	InitOldSlice, %function
InitOldSlice:
	.fnstart
.LFB1651:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #13580	@ tmp135,
	ldr	r2, [r0, r1]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r3, #22344	@ tmp134,
	movw	ip, #22372	@ tmp156,
	movw	r1, #22336	@ tmp139,
	str	r2, [r0, r3]	@ <variable>.MaxPpsNum, <variable>.PrevSlice.pic_parameter_set_id
	mov	r3, #0	@ tmp140,
	str	r3, [r0, ip]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	movw	ip, #22352	@ tmp137,
	movw	r2, #:lower16:88888	@ tmp160,
	movt	r2, #:upper16:88888	@ tmp160,
	str	r2, [r0, ip]	@ tmp160, <variable>.PrevSlice.frame_num
	movw	r2, #22337	@ tmp142,
	movw	ip, #22348	@ tmp145,
	strb	r3, [r0, r1]	@ tmp140, <variable>.PrevSlice.field_pic_flag
	mov	r1, #2	@ tmp143,
	strb	r1, [r0, r2]	@ tmp143, <variable>.PrevSlice.bottom_field_flag
	movw	r2, #22338	@ tmp147,
	mov	r1, #7	@ tmp146,
	str	r1, [r0, ip]	@ tmp146, <variable>.PrevSlice.nal_ref_idc
	mov	ip, #32	@ tmp148,
	movw	r1, #22360	@ tmp150,
	strb	ip, [r0, r2]	@ tmp148, <variable>.PrevSlice.nal_unit_type
	movw	r2, #22364	@ tmp152,
	mov	ip, #3	@ tmp151,
	str	ip, [r0, r1]	@ tmp151, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	r1, #0	@ tmp153,
	movw	ip, #22376	@ tmp158,
	str	r1, [r0, r2]	@ tmp153, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	movw	r2, #22368	@ tmp154,
	mov	r1, #262144	@ tmp159,
	str	r3, [r0, r2]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	str	r1, [r0, ip]	@ tmp159, <variable>.PrevSlice.first_mb_in_slice
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	InitOldSlice, .-InitOldSlice
	.align	2
	.global	FindNaluArraySlot
	.type	FindNaluArraySlot, %function
FindNaluArraySlot:
	.fnstart
.LFB1659:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r0, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r2, r0, #96	@ ivtmp.2568, pH264Ctx,
	movne	r3, #1	@ Pos,
	bne	.L737	@,
	b	.L736	@
.L746:
	ldrb	ip, [r2, #473]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r2, r2, #192	@ ivtmp.2568, ivtmp.2568,
	cmp	ip, #0	@ <variable>.is_valid,
	beq	.L736	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L738	@,
.L737:
	ldrb	r1, [r2, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L746	@,
.L736:
	cmp	r3, #136	@ Pos,
	bhi	.L738	@,
	add	r1, r3, r3, asl #1	@, tmp155, Pos, Pos,
	mov	r2, #1	@ tmp159,
	add	r0, r0, r1, asl #5	@, tmp157, pH264Ctx, tmp155,
	strb	r2, [r0, #377]	@ tmp159, <variable>.is_valid
	mov	r0, r3	@, D.46794
	ldmfd	sp, {fp, sp, pc}	@
.L738:
	mvn	r3, #0	@ D.46794,
	mov	r0, r3	@, D.46794
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	FindNaluArraySlot, .-FindNaluArraySlot
	.align	2
	.global	HaveSliceToDec
	.type	HaveSliceToDec, %function
HaveSliceToDec:
	.fnstart
.LFB1662:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #59148	@ tmp136,
	ldr	r3, [r0, r1]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #0	@ <variable>.SliceParaNum,
	mvneq	r0, #0	@,,
	movne	r0, #0	@,,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	HaveSliceToDec, .-HaveSliceToDec
	.align	2
	.global	H264DEC_GetImageWidth
	.type	H264DEC_GetImageWidth, %function
H264DEC_GetImageWidth:
	.fnstart
.LFB1670:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #17552	@ tmp136,
	ldr	r1, [r0, r3]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	add	r0, r1, #1	@ tmp137, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	mov	r0, r0, asl #4	@, tmp137,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	H264DEC_GetImageWidth, .-H264DEC_GetImageWidth
	.align	2
	.global	H264DEC_GetImageHeight
	.type	H264DEC_GetImageHeight, %function
H264DEC_GetImageHeight:
	.fnstart
.LFB1671:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #17556	@ tmp136,
	ldr	r3, [r0, r1]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	r2, #13614	@ tmp140,
	ldrb	ip, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	add	r1, r3, #1	@ tmp137, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	rsb	r0, ip, #2	@ tmp142, <variable>.CurrSPS.frame_mbs_only_flag,
	mov	r3, r1, asl #4	@ tmp139, tmp137,
	mul	r0, r0, r3	@, tmp142, tmp139
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	H264DEC_GetImageHeight, .-H264DEC_GetImageHeight
	.global	__aeabi_idiv
	.align	2
	.global	H264GetDar
	.type	H264GetDar, %function
H264GetDar:
	.fnstart
.LFB1642:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ ar_idc
	mov	ip, r1	@ sar_width, sar_width
	mov	r4, r3	@ img_width, img_width
	beq	.L756	@,
	subs	r3, r0, #255	@ D.45140, ar_idc,
	movne	r3, #1	@ D.45140
	cmp	r0, #255	@ ar_idc,
	cmpne	r0, #16	@, ar_idc,
	bgt	.L756	@,
	cmp	r1, #0	@ sar_width,
	cmpne	r2, #0	@, sar_height,
	beq	.L773	@,
.L757:
	cmp	r0, #1	@ ar_idc,
	moveq	r4, #5	@ final_dar,
	beq	.L759	@,
	cmp	r3, #0	@ D.45140,
	movwne	r3, #:lower16:.LANCHOR0	@ tmp162,
	movtne	r3, #:upper16:.LANCHOR0	@ tmp162,
	addne	r2, r3, r0, asl #3	@, tmp165, tmp162, ar_idc,
	ldrne	ip, [r3, r0, asl #3]	@ sar_width, SarTable
	ldrne	r2, [r2, #4]	@ sar_height, SarTable
	mov	r0, ip, asl #10	@, sar_width,
	mov	r1, r2	@, sar_height
	bl	__aeabi_idiv	@
	ldr	r1, [fp, #4]	@, img_height
	mov	r5, r0	@ tmp170,
	mov	r0, r4, asl #10	@, img_width,
	bl	__aeabi_idiv	@
	mul	r5, r0, r5	@ tmp176,, tmp170
	add	ip, r5, #1020	@ tmp178, tmp176,
	cmp	r5, #0	@ tmp176,
	add	r1, ip, #3	@ tmp178, tmp178,
	movlt	r5, r1	@ tmp177, tmp178
	mov	r5, r5, asr #10	@ dar, tmp177,
	sub	r0, r5, #2400	@ iftmp.744, dar,
	sub	r3, r5, #2256	@ iftmp.2665, dar,
	sub	r2, r0, #6	@ iftmp.744, iftmp.744,
	sub	r3, r3, #7	@ iftmp.2665, iftmp.2665,
	cmp	r2, #0	@ iftmp.744,
	rsblt	r2, r5, #2400	@ tmp182, dar,
	addlt	r2, r2, #6	@ iftmp.744, tmp182,
	cmp	r3, #0	@ iftmp.2665,
	rsblt	r1, r5, #2256	@ tmp184, dar,
	addlt	r1, r1, #7	@ iftmp.745, tmp184,
	movge	r1, r3	@ iftmp.745, iftmp.2665
	cmp	r2, r1	@ iftmp.744, iftmp.745
	movlt	r4, #4	@ final_dar,
	blt	.L759	@,
	cmp	r3, #0	@ iftmp.2665,
	sub	lr, r5, #1808	@ iftmp.2666, dar,
	rsblt	r3, r5, #2256	@ tmp185, dar,
	sub	r2, lr, #12	@ iftmp.2666, iftmp.2666,
	addlt	r3, r3, #7	@ iftmp.2665, tmp185,
	cmp	r2, #0	@ iftmp.2666,
	rsblt	r1, r5, #1808	@ tmp187, dar,
	addlt	r1, r1, #12	@ iftmp.747, tmp187,
	movge	r1, r2	@ iftmp.747, iftmp.2666
	cmp	r3, r1	@ iftmp.2665, iftmp.747
	movlt	r4, #3	@ final_dar,
	blt	.L759	@,
	cmp	r2, #0	@ iftmp.2666,
	sub	r4, r5, #1360	@ iftmp.749, dar,
	sub	r4, r4, #5	@ iftmp.749, iftmp.749,
	rsblt	r2, r5, #1808	@ tmp188, dar,
	addlt	r2, r2, #12	@ iftmp.2666, tmp188,
	cmp	r4, #0	@ iftmp.749,
	rsblt	r4, r5, #1360	@ tmp190, dar,
	addlt	r4, r4, #5	@ iftmp.749, tmp190,
	cmp	r4, r2	@ iftmp.749, iftmp.2666
	movgt	r4, #2	@ final_dar,
	movle	r4, #1	@ final_dar,
	b	.L759	@
.L773:
	cmp	r0, #255	@ ar_idc,
	bne	.L757	@,
.L756:
	mov	r4, #0	@ final_dar,
.L759:
	mov	r2, r4	@, final_dar
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC0	@,
	movt	r1, #:upper16:.LC0	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, final_dar
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	H264GetDar, .-H264GetDar
	.align	2
	.global	SPSEqual
	.type	SPSEqual, %function
SPSEqual:
	.fnstart
.LFB1641:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r3, r0, #0	@ pSPS1, pSPS1
	beq	.L806	@,
	cmp	r1, #0	@ pSPS2,
	beq	.L807	@,
	ldr	r6, [r3, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldr	r4, [r1, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldrb	r7, [r3, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r2, [r1, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r5, [r3, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	cmp	r6, r4	@ <variable>.profile_idc, <variable>.profile_idc
	cmpeq	r7, r2	@, <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	ldrb	r4, [r3, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	ldrb	r7, [r1, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	ip, #0	@, equal.2764
	moveq	ip, #1	@, equal.2764
	ldr	r6, [r1, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r5, r0	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	movne	r0, #0	@, equal.2765
	andeq	r0, ip, #1	@,, equal.2765, equal.2764
	ldr	r5, [r3, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r4, r7	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	r2, #0	@, equal.2766
	andeq	r2, r0, #1	@,, equal.2766, equal.2765
	ldr	r4, [r3, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r7, [r1, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r5, r6	@ <variable>.level_idc, <variable>.level_idc
	movne	ip, #0	@, equal.2767
	andeq	ip, r2, #1	@,, equal.2767, equal.2766
	ldrb	r2, [r3, #25]	@ zero_extendqisi2	@ D.45032, <variable>.seq_scaling_matrix_present_flag
	ldrb	r6, [r1, #25]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r4, r7	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movne	r0, #0	@, equal.2768
	andeq	r0, ip, #1	@,, equal.2768, equal.2767
	cmp	r6, r2	@ <variable>.seq_scaling_matrix_present_flag, D.45032
	movne	r6, #0	@, equal
	andeq	r6, r0, #1	@,, equal, equal.2768
	cmp	r2, #0	@ D.45032,
	beq	.L778	@,
	mov	r9, r3	@ ivtmp.2727, pSPS1
	mov	r8, r1	@ ivtmp.2729, pSPS2
	mov	sl, #0	@ i,
	str	r3, [fp, #-48]	@ pSPS1, %sfp
	str	r1, [fp, #-52]	@ pSPS2, %sfp
	b	.L782	@
.L809:
	ldr	r7, [fp, #-48]	@, %sfp
	mov	r4, sl, asl #6	@ tmp291, i,
	ldr	ip, [r9, #768]	@ tmp235, <variable>.ScalingList4x4
	add	r2, r4, r1	@, tmp291,
	ldr	r0, [r8, #768]	@ tmp236, <variable>.ScalingList4x4
	add	r5, r4, r7	@, tmp291,
	str	r2, [fp, #-60]	@, %sfp
	ldr	r1, [r9, #764]	@ tmp239, <variable>.ScalingList4x4
	str	r5, [fp, #-56]	@, %sfp
	ldr	r3, [r8, #764]	@ tmp240, <variable>.ScalingList4x4
	ldr	r5, [r9, #772]	@ tmp243, <variable>.ScalingList4x4
	cmp	ip, r0	@ tmp235, tmp236
	cmpeq	r1, r3	@, tmp239, tmp240
	ldr	r4, [r8, #772]	@ tmp244, <variable>.ScalingList4x4
	ldr	r7, [r9, #776]	@ tmp247, <variable>.ScalingList4x4
	ldr	r1, [r8, #776]	@ tmp248, <variable>.ScalingList4x4
	movne	r2, #0	@, equal.2785
	moveq	r2, #1	@, equal.2785
	ldr	ip, [r9, #780]	@ tmp251, <variable>.ScalingList4x4
	cmp	r5, r4	@ tmp243, tmp244
	movne	r3, #0	@, equal.2789
	andeq	r3, r2, #1	@,, equal.2789, equal.2785
	ldr	r0, [r8, #780]	@ tmp252, <variable>.ScalingList4x4
	cmp	r7, r1	@ tmp247, tmp248
	movne	r5, #0	@, equal.2793
	andeq	r5, r3, #1	@,, equal.2793, equal.2789
	ldr	r4, [r9, #784]	@ tmp255, <variable>.ScalingList4x4
	ldr	r3, [r8, #784]	@ tmp256, <variable>.ScalingList4x4
	cmp	ip, r0	@ tmp251, tmp252
	movne	r1, #0	@, equal.2797
	andeq	r1, r5, #1	@,, equal.2797, equal.2793
	ldr	r7, [r9, #788]	@ tmp259, <variable>.ScalingList4x4
	ldr	r2, [r8, #788]	@ tmp260, <variable>.ScalingList4x4
	cmp	r4, r3	@ tmp255, tmp256
	movne	r0, #0	@, equal.2801
	andeq	r0, r1, #1	@,, equal.2801, equal.2797
	ldr	r5, [r9, #792]	@ tmp263, <variable>.ScalingList4x4
	ldr	r3, [r8, #792]	@ tmp264, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp259, tmp260
	movne	ip, #0	@, equal.2805
	andeq	ip, r0, #1	@,, equal.2805, equal.2801
	ldr	r4, [r8, #796]	@ tmp268, <variable>.ScalingList4x4
	ldr	r7, [r9, #796]	@ tmp267, <variable>.ScalingList4x4
	cmp	r5, r3	@ tmp263, tmp264
	movne	r1, #0	@, equal.2809
	andeq	r1, ip, #1	@,, equal.2809, equal.2805
	ldr	ip, [r9, #800]	@ tmp271, <variable>.ScalingList4x4
	ldr	r5, [r8, #800]	@ tmp272, <variable>.ScalingList4x4
	cmp	r7, r4	@ tmp267, tmp268
	movne	r0, #0	@, equal.2813
	andeq	r0, r1, #1	@,, equal.2813, equal.2809
	ldr	r7, [r9, #804]	@ tmp275, <variable>.ScalingList4x4
	ldr	r4, [r8, #804]	@ tmp276, <variable>.ScalingList4x4
	cmp	ip, r5	@ tmp271, tmp272
	movne	r2, #0	@, equal.2817
	andeq	r2, r0, #1	@,, equal.2817, equal.2813
	ldr	r3, [r8, #808]	@ tmp280, <variable>.ScalingList4x4
	ldr	r5, [r9, #808]	@ tmp279, <variable>.ScalingList4x4
	cmp	r7, r4	@ tmp275, tmp276
	movne	r1, #0	@, equal.2821
	andeq	r1, r2, #1	@,, equal.2821, equal.2817
	ldr	ip, [r9, #812]	@ tmp283, <variable>.ScalingList4x4
	ldr	r2, [r8, #812]	@ tmp284, <variable>.ScalingList4x4
	cmp	r5, r3	@ tmp279, tmp280
	movne	r0, #0	@, equal.2825
	andeq	r0, r1, #1	@,, equal.2825, equal.2821
	ldr	r4, [fp, #-56]	@, %sfp
	cmp	ip, r2	@ tmp283, tmp284
	movne	r5, #0	@, equal.2829
	andeq	r5, r0, #1	@,, equal.2829, equal.2825
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r7, [r8, #816]	@ tmp288, <variable>.ScalingList4x4
	ldr	r1, [r9, #816]	@ tmp287, <variable>.ScalingList4x4
	ldr	r0, [r4, #760]	@ tmp299, <variable>.ScalingList4x4
	cmp	r1, r7	@ tmp287, tmp288
	movne	r5, #0	@, equal.2833
	andeq	r5, r5, #1	@,, equal.2833, equal.2829
	ldr	r3, [ip, #760]	@ tmp300, <variable>.ScalingList4x4
	and	r6, r6, r5	@ equal.2837, equal, equal.2833
	ldr	r7, [r9, #820]	@ tmp303, <variable>.ScalingList4x4
	ldr	r2, [r8, #820]	@ tmp304, <variable>.ScalingList4x4
	cmp	r0, r3	@ tmp299, tmp300
	movne	r4, #0	@, equal.2841
	andeq	r4, r6, #1	@,, equal.2841, equal.2837
	cmp	r7, r2	@ tmp303, tmp304
	movne	r6, #0	@, equal
	andeq	r6, r4, #1	@,, equal, equal.2841
.L779:
	add	sl, sl, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.2727, ivtmp.2727,
	cmp	sl, #8	@ i,
	add	r8, r8, #64	@ ivtmp.2729, ivtmp.2729,
	beq	.L808	@,
.L782:
	ldr	r1, [fp, #-48]	@, %sfp
	add	ip, r1, sl	@ tmp228,, i
	ldr	r1, [fp, #-52]	@, %sfp
	add	r5, r1, sl	@ tmp229,, i
	ldrb	r3, [ip, #4]	@ zero_extendqisi2	@ D.45038, <variable>.seq_scaling_list_present_flag
	ldrb	r0, [r5, #4]	@ zero_extendqisi2	@ D.45038, <variable>.seq_scaling_list_present_flag
	cmp	r3, r0	@ D.45038, D.45038
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r3, #0	@ D.45038,
	beq	.L779	@,
	cmp	sl, #5	@ i,
	bls	.L809	@,
	ldr	r0, [fp, #-52]	@, %sfp
	mov	r5, sl, asl #8	@ tmp306, i,
	ldr	r4, [fp, #-48]	@, %sfp
	sub	r1, r5, #392	@ tmp307, tmp306,
	ldr	r7, [fp, #-48]	@, %sfp
	add	r3, r0, r1	@ ivtmp.2714,, tmp307
	add	r2, r4, r1	@ ivtmp.2711,, tmp307
	ldr	r5, [r0, r1]	@ tmp314, <variable>.ScalingList8x8
	add	r0, r2, #8	@ ivtmp.2711, ivtmp.2711,
	mov	ip, #2	@ j,
	ldr	r4, [r7, r1]	@ tmp313, <variable>.ScalingList8x8
	add	r1, r3, #8	@ ivtmp.2714, ivtmp.2714,
	ldr	r7, [r2, #4]	@ tmp442, <variable>.ScalingList8x8
	ldr	r3, [r3, #4]	@ tmp443, <variable>.ScalingList8x8
	cmp	r4, r5	@ tmp313, tmp314
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r7, r3	@ tmp442, tmp443
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
.L781:
	mov	r2, r0	@ tmp409, ivtmp.2711
	mov	r3, r1	@ tmp410, ivtmp.2714
	ldr	r7, [r2], #4	@ tmp414, <variable>.ScalingList8x8
	add	ip, ip, #2	@ j, j,
	ldr	r5, [r3], #4	@ tmp415, <variable>.ScalingList8x8
	ldr	r4, [r0, #4]	@ tmp421, <variable>.ScalingList8x8
	add	r0, r2, #4	@ ivtmp.2711, tmp409,
	ldr	r2, [r1, #4]	@ tmp422, <variable>.ScalingList8x8
	cmp	r7, r5	@ tmp414, tmp415
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	add	r1, r3, #4	@ ivtmp.2714, tmp410,
	cmp	r4, r2	@ tmp421, tmp422
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	ip, #64	@ j,
	bne	.L781	@,
	add	sl, sl, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.2727, ivtmp.2727,
	cmp	sl, #8	@ i,
	add	r8, r8, #64	@ ivtmp.2729, ivtmp.2729,
	bne	.L782	@,
.L808:
	ldr	r3, [fp, #-48]	@ pSPS1, %sfp
	ldr	r1, [fp, #-52]	@ pSPS2, %sfp
.L778:
	ldr	r2, [r3, #2908]	@ D.45057, <variable>.pic_order_cnt_type
	ldr	r4, [r1, #2908]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r0, [r3, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	ldr	r5, [r1, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, r4	@ D.45057, <variable>.pic_order_cnt_type
	cmpeq	r0, r5	@, <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	movne	ip, #0	@, equal.2769
	moveq	ip, #1	@, equal.2769
	cmp	r2, #0	@ D.45057,
	and	r6, ip, r6	@ equal.2759, equal.2769, equal
	bne	.L810	@,
	ldr	r7, [r3, #2912]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	ldr	r2, [r1, #2912]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	cmp	r7, r2	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	movne	r6, #0	@, equal.2759
	andeq	r6, r6, #1	@,, equal.2759, equal.2759
.L783:
	ldrb	r2, [r1, #17]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	r5, [r3, #3952]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r0, [r1, #3952]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r7, [r3, #17]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	ip, [r1, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	cmp	r7, r2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	cmpeq	r5, r0	@, <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r4, [r3, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r5, [r3, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r0, [r1, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r2, #0	@, equal.2773
	moveq	r2, #1	@, equal.2773
	cmp	r4, ip	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movne	r4, #0	@, equal.2774
	andeq	r4, r2, #1	@,, equal.2774, equal.2773
	ldrb	r2, [r3, #18]	@ zero_extendqisi2	@ D.45090, <variable>.frame_mbs_only_flag
	ldrb	ip, [r1, #18]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r5, r0	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r0, #0	@, equal.2775
	andeq	r0, r4, #1	@,, equal.2775, equal.2774
	cmp	ip, r2	@ <variable>.frame_mbs_only_flag, D.45090
	movne	r0, #0	@, equal.2776
	andeq	r0, r0, #1	@,, equal.2776, equal.2775
	cmp	r2, #0	@ D.45090,
	and	r6, r0, r6	@ equal.2760, equal.2776, equal.2759
	bne	.L787	@,
	ldrb	r4, [r3, #19]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	ldrb	ip, [r1, #19]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	cmp	r4, ip	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movne	r6, #0	@, equal.2760
	andeq	r6, r6, #1	@,, equal.2760, equal.2760
.L787:
	ldrb	r2, [r3, #21]	@ zero_extendqisi2	@ D.45101, <variable>.frame_cropping_flag
	ldrb	r0, [r3, #20]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldrb	r4, [r1, #21]	@ zero_extendqisi2	@ <variable>.frame_cropping_flag, <variable>.frame_cropping_flag
	ldrb	ip, [r1, #20]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	cmp	r4, r2	@ <variable>.frame_cropping_flag, D.45101
	cmpeq	r0, ip	@, <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	movne	r0, #0	@, equal.2777
	moveq	r0, #1	@, equal.2777
	cmp	r2, #0	@ D.45101,
	and	r2, r0, r6	@ equal.2761, equal.2777, equal.2760
	beq	.L788	@,
	ldr	r5, [r1, #3968]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r4, [r3, #3964]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r0, [r1, #3964]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r7, [r3, #3968]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r6, [r3, #3972]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	cmp	r7, r5	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	cmpeq	r4, r0	@, <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	ip, [r1, #3972]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r4, [r3, #3976]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	ldr	r0, [r1, #3976]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r5, #0	@, equal.2778
	moveq	r5, #1	@, equal.2778
	cmp	r6, ip	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	movne	ip, #0	@, equal.2779
	andeq	ip, r5, #1	@,, equal.2779, equal.2778
	cmp	r4, r0	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r0, #0	@, equal.2780
	andeq	r0, ip, #1	@,, equal.2780, equal.2779
	and	r2, r2, r0	@ equal.2761, equal.2761, equal.2780
.L788:
	ldrb	ip, [r3, #22]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	ldrb	r3, [r1, #22]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	ip, r3	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	movne	r2, #0	@, tmp398
	andeq	r2, r2, #1	@,, tmp398, equal.2761
	cmp	r2, #0	@ tmp398,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L776:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L810:
	cmp	r2, #1	@ D.45057,
	bne	.L783	@,
	ldr	r7, [r3, #2916]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldr	ip, [r1, #2916]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldrb	r5, [r3, #16]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldrb	r0, [r1, #16]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r4, [r3, #2920]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	cmp	r7, ip	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	cmpeq	r5, r0	@, <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r2, [r1, #2920]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	ldr	r7, [r3, #2924]	@ D.45072, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	ldr	r0, [r1, #2924]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	ip, #0	@, equal.2770
	moveq	ip, #1	@, equal.2770
	cmp	r4, r2	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movne	r5, #0	@, equal.2771
	andeq	r5, ip, #1	@,, equal.2771, equal.2770
	cmp	r7, r0	@ D.45072, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	r5, #0	@, equal.2772
	andeq	r5, r5, #1	@,, equal.2772, equal.2771
	cmp	r7, #0	@ D.45072,
	and	r6, r6, r5	@ equal.2759, equal.2759, equal.2772
	beq	.L783	@,
	ldr	r4, [r3, #2928]	@ tmp345, <variable>.offset_for_ref_frame
	mov	r7, r7, asl #2	@ D.49627, D.45072,
	ldr	r5, [r1, #2928]	@ tmp346, <variable>.offset_for_ref_frame
	mov	r2, #4	@ ivtmp.2702,
	sub	r0, r7, #4	@ tmp403, D.49627,
	cmp	r4, r5	@ tmp345, tmp346
	movne	r6, #0	@, equal.2759
	andeq	r6, r6, #1	@,, equal.2759, equal.2759
	cmp	r2, r7	@ ivtmp.2702, D.49627
	ubfx	r0, r0, #2, #1	@ tmp404, tmp403,,
	beq	.L783	@,
	cmp	r0, #0	@ tmp404,
	beq	.L786	@,
	ldr	r4, [r3, #2932]	@ tmp439, <variable>.offset_for_ref_frame
	mov	r2, #8	@ ivtmp.2702,
	ldr	r0, [r1, #2932]	@ tmp440, <variable>.offset_for_ref_frame
	cmp	r4, r0	@ tmp439, tmp440
	movne	r6, #0	@, equal.2759
	andeq	r6, r6, #1	@,, equal.2759, equal.2759
	cmp	r2, r7	@ ivtmp.2702, D.49627
	beq	.L783	@,
.L786:
	add	r0, r2, #4	@ tmp405, ivtmp.2702,
	add	r4, r3, r2	@ tmp425, pSPS1, ivtmp.2702
	add	r2, r1, r2	@ tmp426, pSPS2, ivtmp.2702
	add	ip, r3, r0	@ tmp432, pSPS1, tmp405
	add	r8, r1, r0	@ tmp433, pSPS2, tmp405
	ldr	r5, [r4, #2928]	@ tmp427, <variable>.offset_for_ref_frame
	ldr	r4, [r2, #2928]	@ tmp428, <variable>.offset_for_ref_frame
	add	r2, r0, #4	@ ivtmp.2702, tmp405,
	ldr	ip, [ip, #2928]	@ tmp434, <variable>.offset_for_ref_frame
	ldr	r0, [r8, #2928]	@ tmp435, <variable>.offset_for_ref_frame
	cmp	r5, r4	@ tmp427, tmp428
	movne	r6, #0	@, equal.2759
	andeq	r6, r6, #1	@,, equal.2759, equal.2759
	cmp	ip, r0	@ tmp434, tmp435
	movne	r6, #0	@, equal.2759
	andeq	r6, r6, #1	@,, equal.2759, equal.2759
	cmp	r2, r7	@ ivtmp.2702, D.49627
	bne	.L786	@,
	b	.L783	@
.L807:
	mov	r0, r1	@, pSPS2
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #9175	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L776	@
.L806:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #9174	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L776	@
	.fnend
	.size	SPSEqual, .-SPSEqual
	.align	2
	.global	PPSEqual
	.type	PPSEqual, %function
PPSEqual:
	.fnstart
.LFB1639:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r2, r0, #0	@, pPPS1
	str	r2, [fp, #-48]	@, %sfp
	beq	.L832	@,
	cmp	r1, #0	@ pPPS2,
	beq	.L833	@,
	ldr	r7, [fp, #-48]	@, %sfp
	ldr	r3, [r1, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r2, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r5, [r7, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r7, [fp, #-48]	@, %sfp
	ldrb	ip, [r1, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	ldr	r4, [r7, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r0, [r7, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r5, r3	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmpeq	r4, r2	@, <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r5, [r7, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	r3, #0	@, equal.2925
	moveq	r3, #1	@, equal.2925
	cmp	r0, ip	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	movne	r0, #0	@, equal.2926
	andeq	r0, r3, #1	@,, equal.2926, equal.2925
	ldr	ip, [r1, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	cmp	r5, r4	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	r2, #0	@, equal.2927
	andeq	r2, r0, #1	@,, equal.2927, equal.2926
	ldr	r3, [r7, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldr	r5, [r7, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	ldr	r4, [r1, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r3, ip	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movne	r3, #0	@, equal.2928
	andeq	r3, r2, #1	@,, equal.2928, equal.2927
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	ldrb	r2, [r7, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r5, r4	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movne	r0, #0	@, equal.2929
	andeq	r0, r3, #1	@,, equal.2929, equal.2928
	ldr	r5, [r7, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	ldr	r4, [r1, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	r2, ip	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	movne	r2, #0	@, equal.2930
	andeq	r2, r0, #1	@,, equal.2930, equal.2929
	ldr	ip, [r1, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	ldr	r0, [r7, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	cmp	r5, r4	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	movne	r3, #0	@, equal.2931
	andeq	r3, r2, #1	@,, equal.2931, equal.2930
	ldr	r5, [r7, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	ldr	r4, [r1, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	cmp	r0, ip	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	movne	r0, #0	@, equal.2932
	andeq	r0, r3, #1	@,, equal.2932, equal.2931
	ldrb	ip, [r1, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	ldrb	r3, [r7, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r5, r4	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movne	r2, #0	@, equal.2933
	andeq	r2, r0, #1	@,, equal.2933, equal.2932
	ldrb	r5, [r7, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	ldrb	r4, [r1, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	cmp	r3, ip	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	movne	r3, #0	@, equal.2934
	andeq	r3, r2, #1	@,, equal.2934, equal.2933
	ldr	r2, [r7, #60]	@ D.44785, <variable>.transform_8x8_mode_flag
	ldr	ip, [r1, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	cmp	r5, r4	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	movne	r0, #0	@, equal.2935
	andeq	r0, r3, #1	@,, equal.2935, equal.2934
	ldrb	r3, [r7, #18]	@ zero_extendqisi2	@ D.44788, <variable>.pic_scaling_matrix_present_flag
	ldrb	r5, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r2, ip	@ D.44785, <variable>.transform_8x8_mode_flag
	movne	r0, #0	@, equal.2936
	andeq	r0, r0, #1	@,, equal.2936, equal.2935
	cmp	r5, r3	@ <variable>.pic_scaling_matrix_present_flag, D.44788
	movne	r5, #0	@, equal
	andeq	r5, r0, #1	@,, equal, equal.2936
	cmp	r3, #0	@ D.44788,
	beq	.L815	@,
	mov	ip, r2, asl #1	@ tmp237, D.44785,
	adds	r0, ip, #6	@, tmp237,
	str	r0, [fp, #-56]	@, %sfp
	beq	.L815	@,
	mov	sl, r7	@ ivtmp.2891,
	mov	r9, r1	@ ivtmp.2893, pPPS2
	mov	r8, #0	@ i,
	str	r1, [fp, #-52]	@ pPPS2, %sfp
	b	.L819	@
.L830:
	cmp	r8, #5	@ i,
	bhi	.L817	@,
	ldr	r6, [sl, #72]	@ tmp245, <variable>.ScalingList4x4
	add	r8, r8, #1	@ i, i,
	ldr	ip, [r9, #72]	@ tmp246, <variable>.ScalingList4x4
	ldr	r0, [sl, #68]	@ tmp249, <variable>.ScalingList4x4
	ldr	r1, [r9, #68]	@ tmp250, <variable>.ScalingList4x4
	ldr	r2, [sl, #76]	@ tmp253, <variable>.ScalingList4x4
	cmp	r6, ip	@ tmp245, tmp246
	cmpeq	r0, r1	@, tmp249, tmp250
	ldr	r3, [r9, #76]	@ tmp254, <variable>.ScalingList4x4
	ldr	r7, [sl, #80]	@ tmp257, <variable>.ScalingList4x4
	ldr	r6, [r9, #80]	@ tmp258, <variable>.ScalingList4x4
	movne	r4, #0	@, equal.2941
	moveq	r4, #1	@, equal.2941
	ldr	r0, [sl, #84]	@ tmp261, <variable>.ScalingList4x4
	cmp	r2, r3	@ tmp253, tmp254
	movne	ip, #0	@, equal.2945
	andeq	ip, r4, #1	@,, equal.2945, equal.2941
	ldr	r2, [r9, #84]	@ tmp262, <variable>.ScalingList4x4
	cmp	r7, r6	@ tmp257, tmp258
	movne	r6, #0	@, equal.2949
	andeq	r6, ip, #1	@,, equal.2949, equal.2945
	ldr	r4, [sl, #88]	@ tmp265, <variable>.ScalingList4x4
	ldr	r3, [r9, #88]	@ tmp266, <variable>.ScalingList4x4
	cmp	r0, r2	@ tmp261, tmp262
	movne	r1, #0	@, equal.2953
	andeq	r1, r6, #1	@,, equal.2953, equal.2949
	ldr	r7, [sl, #92]	@ tmp269, <variable>.ScalingList4x4
	ldr	r2, [r9, #92]	@ tmp270, <variable>.ScalingList4x4
	cmp	r4, r3	@ tmp265, tmp266
	movne	ip, #0	@, equal.2957
	andeq	ip, r1, #1	@,, equal.2957, equal.2953
	ldr	r0, [sl, #96]	@ tmp273, <variable>.ScalingList4x4
	ldr	r3, [r9, #96]	@ tmp274, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp269, tmp270
	movne	r4, #0	@, equal.2961
	andeq	r4, ip, #1	@,, equal.2961, equal.2957
	ldr	r7, [sl, #100]	@ tmp277, <variable>.ScalingList4x4
	ldr	r2, [r9, #100]	@ tmp278, <variable>.ScalingList4x4
	cmp	r0, r3	@ tmp273, tmp274
	movne	r1, #0	@, equal.2965
	andeq	r1, r4, #1	@,, equal.2965, equal.2961
	ldr	ip, [sl, #104]	@ tmp281, <variable>.ScalingList4x4
	ldr	r3, [r9, #104]	@ tmp282, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp277, tmp278
	movne	r0, #0	@, equal.2969
	andeq	r0, r1, #1	@,, equal.2969, equal.2965
	ldr	r4, [sl, #108]	@ tmp285, <variable>.ScalingList4x4
	ldr	r2, [r9, #108]	@ tmp286, <variable>.ScalingList4x4
	cmp	ip, r3	@ tmp281, tmp282
	movne	r7, #0	@, equal.2973
	andeq	r7, r0, #1	@,, equal.2973, equal.2969
	ldr	r0, [sl, #112]	@ tmp289, <variable>.ScalingList4x4
	ldr	r3, [r9, #112]	@ tmp290, <variable>.ScalingList4x4
	cmp	r4, r2	@ tmp285, tmp286
	movne	r1, #0	@, equal.2977
	andeq	r1, r7, #1	@,, equal.2977, equal.2973
	ldr	ip, [sl, #116]	@ tmp293, <variable>.ScalingList4x4
	ldr	r4, [r9, #116]	@ tmp294, <variable>.ScalingList4x4
	cmp	r0, r3	@ tmp289, tmp290
	movne	r7, #0	@, equal.2981
	andeq	r7, r1, #1	@,, equal.2981, equal.2977
	ldr	r1, [sl, #120]	@ tmp297, <variable>.ScalingList4x4
	ldr	r3, [r9, #120]	@ tmp298, <variable>.ScalingList4x4
	cmp	ip, r4	@ tmp293, tmp294
	movne	r2, #0	@, equal.2985
	andeq	r2, r7, #1	@,, equal.2985, equal.2981
	ldr	r7, [fp, #-48]	@, %sfp
	cmp	r1, r3	@ tmp297, tmp298
	movne	r3, #0	@, equal.2989
	andeq	r3, r2, #1	@,, equal.2989, equal.2985
	ldr	r1, [fp, #-52]	@, %sfp
	ldr	ip, [sl, #124]	@ tmp307, <variable>.ScalingList4x4
	and	r3, r5, r3	@ equal.2993, equal, equal.2989
	ldr	r4, [r7, r8, asl #6]	@ tmp303, <variable>.ScalingList4x4
	add	sl, sl, #64	@ ivtmp.2891, ivtmp.2891,
	ldr	r0, [r1, r8, asl #6]	@ tmp304, <variable>.ScalingList4x4
	ldr	r2, [r9, #124]	@ tmp308, <variable>.ScalingList4x4
	add	r9, r9, #64	@ ivtmp.2893, ivtmp.2893,
	cmp	r4, r0	@ tmp303, tmp304
	movne	r3, #0	@, equal.2997
	andeq	r3, r3, #1	@,, equal.2997, equal.2993
	cmp	ip, r2	@ tmp307, tmp308
	movne	r5, #0	@, equal
	andeq	r5, r3, #1	@,, equal, equal.2997
	ldr	ip, [fp, #-56]	@, %sfp
	cmp	ip, r8	@, i
	bls	.L834	@,
.L819:
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	r0, [fp, #-52]	@, %sfp
	add	r3, r1, r8	@ tmp238,, i
	add	ip, r0, r8	@ tmp239,, i
	ldrb	r1, [r3, #5]	@ zero_extendqisi2	@ D.44794, <variable>.pic_scaling_list_present_flag
	ldrb	r2, [ip, #5]	@ zero_extendqisi2	@ D.44794, <variable>.pic_scaling_list_present_flag
	cmp	r1, r2	@ D.44794, D.44794
	movne	r5, #0	@, equal
	andeq	r5, r5, #1	@,, equal, equal
	cmp	r1, #0	@ D.44794,
	bne	.L830	@,
	add	r8, r8, #1	@ i, i,
.L835:
	ldr	ip, [fp, #-56]	@, %sfp
	add	sl, sl, #64	@ ivtmp.2891, ivtmp.2891,
	add	r9, r9, #64	@ ivtmp.2893, ivtmp.2893,
	cmp	ip, r8	@, i
	bhi	.L819	@,
.L834:
	ldr	r1, [fp, #-52]	@ pPPS2, %sfp
.L815:
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r0, [r1, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r2, [r3, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	cmp	r2, r0	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	movne	r5, #0	@, tmp322
	andeq	r5, r5, #1	@,, tmp322, equal
	cmp	r5, #0	@ tmp322,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L813:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L817:
	ldr	r0, [fp, #-52]	@, %sfp
	mov	r6, r8, asl #8	@ tmp310, i,
	ldr	r4, [fp, #-48]	@, %sfp
	sub	r1, r6, #1088	@ tmp311, tmp310,
	ldr	r7, [fp, #-48]	@, %sfp
	add	r3, r0, r1	@ ivtmp.2881,, tmp311
	add	r2, r4, r1	@ ivtmp.2878,, tmp311
	ldr	r6, [r0, r1]	@ tmp316, <variable>.ScalingList8x8
	add	r0, r2, #8	@ ivtmp.2878, ivtmp.2878,
	mov	ip, #2	@ j,
	ldr	r4, [r7, r1]	@ tmp315, <variable>.ScalingList8x8
	add	r1, r3, #8	@ ivtmp.2881, ivtmp.2881,
	ldr	r7, [r2, #4]	@ tmp344, <variable>.ScalingList8x8
	ldr	r3, [r3, #4]	@ tmp345, <variable>.ScalingList8x8
	cmp	r4, r6	@ tmp315, tmp316
	movne	r5, #0	@, equal
	andeq	r5, r5, #1	@,, equal, equal
	cmp	r7, r3	@ tmp344, tmp345
	movne	r5, #0	@, equal
	andeq	r5, r5, #1	@,, equal, equal
.L818:
	mov	r2, r0	@ tmp329, ivtmp.2878
	mov	r3, r1	@ tmp330, ivtmp.2881
	ldr	r7, [r2], #4	@ tmp334, <variable>.ScalingList8x8
	add	ip, ip, #2	@ j, j,
	ldr	r6, [r3], #4	@ tmp335, <variable>.ScalingList8x8
	ldr	r4, [r0, #4]	@ tmp341, <variable>.ScalingList8x8
	add	r0, r2, #4	@ ivtmp.2878, tmp329,
	ldr	r2, [r1, #4]	@ tmp342, <variable>.ScalingList8x8
	cmp	r7, r6	@ tmp334, tmp335
	movne	r5, #0	@, equal
	andeq	r5, r5, #1	@,, equal, equal
	add	r1, r3, #4	@ ivtmp.2881, tmp330,
	cmp	r4, r2	@ tmp341, tmp342
	movne	r5, #0	@, equal
	andeq	r5, r5, #1	@,, equal, equal
	cmp	ip, #64	@ j,
	bne	.L818	@,
	add	r8, r8, #1	@ i, i,
	b	.L835	@
.L833:
	mov	r0, r1	@, pPPS2
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #8965	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L813	@
.L832:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #8964	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L813	@
	.fnend
	.size	PPSEqual, .-PPSEqual
	.align	2
	.global	CalcStreamBits
	.type	CalcStreamBits, %function
CalcStreamBits:
	.fnstart
.LFB1634:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #17596	@ tmp169,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	cmp	r3, #0	@ <variable>.CurrPPS.entropy_coding_mode_flag,
	beq	.L837	@,
	ldr	lr, [r4, #368]	@ D.44264, <variable>.pCurrNal
	ldr	r0, [lr, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r3, r0, #7	@ tmp171, <variable>.nal_bitoffset,
	bic	ip, r3, #7	@ tmp173, tmp171,
	str	ip, [lr, #64]	@ tmp173, <variable>.nal_bitoffset
	ldr	r1, [r4, #368]	@ temp.3044, <variable>.pCurrNal
	ldr	r5, [r1, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	sub	r2, r5, #1	@ tmp175, <variable>.nal_trail_zero_bit_num,
	str	r2, [r1, #72]	@ tmp175, <variable>.nal_trail_zero_bit_num
.L837:
	ldr	ip, [r4, #368]	@ temp.3045, <variable>.pCurrNal
	ldrb	r5, [ip, #0]	@ zero_extendqisi2	@ temp.3093, <variable>.nal_used_segment
	cmp	r5, #0	@ temp.3093,
	moveq	r6, r5	@ code_len_byte, temp.3093
	moveq	r7, r5	@ temp.3093, temp.3093
	beq	.L839	@,
	mov	r7, r5, asl #3	@ temp.3093, temp.3093,
	mov	r3, #28	@ ivtmp.3042,
	rsb	r1, r5, r7	@ tmp178, temp.3093, temp.3093
	ldr	r6, [ip, #12]	@ code_len_byte, <variable>.bitstream_length
	add	r2, ip, r3	@ ivtmp.3043, temp.3045,
	mov	r1, r1, asl #2	@ D.49976, tmp178,
	cmp	r3, r1	@ ivtmp.3042, D.49976
	sub	lr, r1, #28	@ tmp366, D.49976,
	ubfx	r0, lr, #2, #1	@ tmp370, tmp366,,
	beq	.L839	@,
	cmp	r0, #0	@ tmp370,
	beq	.L840	@,
	ldr	lr, [r2, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r3, #56	@ ivtmp.3042,
	cmp	r3, r1	@ ivtmp.3042, D.49976
	add	r2, ip, r3	@ ivtmp.3043, temp.3045,
	add	r6, r6, lr	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	beq	.L839	@,
.L840:
	ldr	lr, [r2, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r3, r3, #56	@ ivtmp.3042, ivtmp.3042,
	ldr	r0, [r2, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, r1	@ ivtmp.3042, D.49976
	add	r6, r6, lr	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	add	r2, r2, #56	@ ivtmp.3043, ivtmp.3043,
	add	r6, r6, r0	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	bne	.L840	@,
.L839:
	rsb	r1, r5, r7	@ tmp186, temp.3093, temp.3093
	ldr	r2, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	mov	r3, r6	@, code_len_byte
	mov	r0, #7	@,
	mov	r7, r1, asl #2	@ tmp187, tmp186,
	movw	r1, #:lower16:.LC3	@,
	add	lr, r7, ip	@ tmp188, tmp187, temp.3045
	movt	r1, #:upper16:.LC3	@,
	ldr	lr, [lr, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	str	lr, [sp, #0]	@ <variable>.bitstream_length,
	ldr	lr, [ip, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	str	lr, [sp, #4]	@ <variable>.nal_trail_zero_bit_num,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #368]	@ temp.3048, <variable>.pCurrNal
	mov	r0, #7	@,
	mov	r2, r5	@, temp.3093
	movw	r1, #:lower16:.LC4	@,
	movt	r1, #:upper16:.LC4	@,
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	ip, ip, ip, asl #3	@, tmp196, <variable>.nal_used_segment, <variable>.nal_used_segment,
	and	lr, lr, r0	@ tmp201, <variable>.nal_bitoffset,
	add	r3, r3, ip, asl #2	@, tmp198, temp.3048, tmp196,
	str	lr, [r3, #24]	@ tmp201, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.3051, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ temp.3054, <variable>.nal_used_segment
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	ip, ip, ip, asl #3	@, tmp205, temp.3054, temp.3054,
	add	r3, r3, ip, asl #2	@, tmp207, temp.3051, tmp205,
	ldr	ip, [r3, #16]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	add	ip, ip, lr, lsr #3	@, tmp218, <variable>.stream_phy_addr, <variable>.nal_bitoffset,
	rsb	lr, r6, ip	@ tmp220, code_len_byte, tmp218
	str	lr, [r3, #28]	@ tmp220, <variable>.bytespos
	ldr	r3, [r4, #368]	@ temp.3055, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ temp.3057, <variable>.nal_used_segment
	ldr	lr, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	ip, ip, ip, asl #3	@, tmp224, temp.3057, temp.3057,
	add	r3, r3, ip, asl #2	@, tmp226, temp.3055, tmp224,
	ldr	ip, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r6, r6, ip	@ tmp235, code_len_byte, <variable>.bitstream_length
	rsb	r6, lr, r6, asl #3	@, tmp239, <variable>.nal_bitoffset, tmp235,
	str	r6, [r3, #20]	@ tmp239, <variable>.valid_bitlen
	ldr	lr, [r4, #368]	@ temp.3060, <variable>.pCurrNal
	ldrb	ip, [lr, #0]	@ zero_extendqisi2	@ temp.3062, <variable>.nal_used_segment
	rsb	r3, ip, ip, asl #3	@, tmp243, temp.3062, temp.3062,
	add	r3, lr, r3, asl #2	@, tmp245, temp.3060, tmp243,
	ldr	ip, [r3, #28]	@ <variable>.bytespos, <variable>.bytespos
	ldr	lr, [r3, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	and	ip, ip, #3	@ tmp254, <variable>.bytespos,
	add	ip, lr, ip, asl #3	@, tmp265, <variable>.bitsoffset, tmp254,
	str	ip, [r3, #24]	@ tmp265, <variable>.bitsoffset
	ldr	ip, [r4, #368]	@ temp.3063, <variable>.pCurrNal
	ldrb	r3, [ip, #0]	@ zero_extendqisi2	@ temp.3065, <variable>.nal_used_segment
	rsb	lr, r3, r3, asl #3	@, tmp269, temp.3065, temp.3065,
	add	r3, ip, lr, asl #2	@, tmp271, temp.3063, tmp269,
	add	r3, r3, #24	@ tmp272, tmp271,
	ldr	lr, [r3, #4]	@ <variable>.bytespos, <variable>.bytespos
	bic	ip, lr, #3	@ tmp281, <variable>.bytespos,
	str	ip, [r3, #4]	@ tmp281, <variable>.bytespos
	ldr	ip, [r4, #368]	@ temp.3067, <variable>.pCurrNal
	add	r7, r7, ip	@ tmp288, tmp187, temp.3067
	ldr	lr, [r7, #20]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r7, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	lr, [sp, #0]	@ <variable>.valid_bitlen,
	ldrb	lr, [ip, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	rsb	lr, lr, lr, asl #3	@, tmp303, <variable>.nal_used_segment, <variable>.nal_used_segment,
	add	ip, ip, lr, asl #2	@, tmp305, temp.3067, tmp303,
	ldr	ip, [ip, #28]	@ <variable>.bytespos, <variable>.bytespos
	str	ip, [sp, #4]	@ <variable>.bytespos,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #368]	@ temp.3071, <variable>.pCurrNal
	ldr	r2, [r3, #68]	@ temp.3072, <variable>.nal_segment
	sub	r1, r2, #1	@ prephitmp.3019, temp.3072,
	cmp	r1, #1	@ prephitmp.3019,
	bhi	.L855	@,
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r0, ip, #1	@ i.3075, <variable>.nal_used_segment,
	cmp	r2, r0	@ temp.3072, i.3075
	movls	ip, #0	@,
	movhi	ip, #1	@,
	cmp	r0, #1	@ i.3075,
	movhi	ip, #0	@,,
	cmp	ip, #0	@ tmp316,
	beq	.L843	@,
	mov	r2, #0	@ tmp317,
	str	r2, [r3, #52]	@ tmp317, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.3077, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC6	@,
	mov	r2, #1	@,
	movt	r1, #:upper16:.LC6	@,
	ldr	lr, [r3, #44]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	lr, [r3, #56]	@ <variable>.stream_phy_addr, <variable>.bytespos
	ldr	r3, [r4, #368]	@ temp.3078, <variable>.pCurrNal
	ldr	ip, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	lr, ip, asl #3	@ tmp320, <variable>.bitstream_length,
	str	lr, [r3, #48]	@ tmp320, <variable>.valid_bitlen
	ldr	r3, [r4, #368]	@ temp.3080, <variable>.pCurrNal
	ldr	ip, [r3, #56]	@ <variable>.bytespos, <variable>.bytespos
	ldr	lr, [r3, #52]	@ <variable>.bitsoffset, <variable>.bitsoffset
	and	ip, ip, #3	@ tmp321, <variable>.bytespos,
	add	ip, lr, ip, asl #3	@, tmp325, <variable>.bitsoffset, tmp321,
	str	ip, [r3, #52]	@ tmp325, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.3082, <variable>.pCurrNal
	ldr	ip, [r3, #56]	@ <variable>.bytespos, <variable>.bytespos
	bic	lr, ip, #3	@ tmp327, <variable>.bytespos,
	str	lr, [r3, #56]	@ tmp327, <variable>.bytespos
	ldr	ip, [r4, #368]	@ temp.3084, <variable>.pCurrNal
	ldr	lr, [ip, #48]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [ip, #52]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	lr, [sp, #0]	@ <variable>.valid_bitlen,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #368]	@ temp.3071, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	sub	r1, r1, #1	@ prephitmp.3019, <variable>.nal_segment,
.L843:
	rsb	r0, r1, r1, asl #3	@, tmp335, prephitmp.3019, prephitmp.3019,
	ldr	r2, [r3, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r3, r3, r0, asl #2	@, tmp337, temp.3071, tmp335,
	add	ip, r3, #16	@ tmp338, tmp337,
	ldr	r1, [ip, #4]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	rsb	r0, r2, r1	@ tmp348, <variable>.nal_trail_zero_bit_num, <variable>.valid_bitlen
	str	r0, [ip, #4]	@ tmp348, <variable>.valid_bitlen
	ldr	r2, [r4, #368]	@ temp.3088, <variable>.pCurrNal
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ i, <variable>.nal_used_segment
	ldr	r1, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r3	@ <variable>.nal_segment, i
	bls	.L846	@,
	movw	r5, #56400	@ tmp363,
.L847:
	rsb	r0, r3, r3, asl #3	@, tmp353, i, i,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	add	r3, r3, #1	@ i, i,
	add	r0, r2, r0, asl #2	@, tmp355, temp.3088, tmp353,
	ldr	r0, [r0, #28]	@ temp.3091, <variable>.bytespos
	cmp	r0, ip	@ temp.3091, <variable>.CurrPic.stream_base_addr
	strcc	r0, [r4, r5]	@ temp.3091, <variable>.CurrPic.stream_base_addr
	ldrcc	r1, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r3	@ <variable>.nal_segment, i
	bhi	.L847	@,
.L846:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L855:
	movw	r1, #:lower16:.LC5	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC5	@,
	bl	dprint_vfmw	@
	b	.L846	@
	.fnend
	.size	CalcStreamBits, .-CalcStreamBits
	.align	2
	.global	IsNewPic
	.type	IsNewPic, %function
IsNewPic:
	.fnstart
.LFB1625:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #22340	@ tmp151,
	mov	r3, r0	@ pH264Ctx, pH264Ctx
	ldr	r4, [r0, ip]	@ <variable>.PrevSlice.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	movw	lr, #22344	@ tmp157,
	movw	r0, #14340	@ tmp152,
	movw	r2, #20700	@ tmp158,
	ldr	ip, [r3, r0]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	ldr	r2, [r3, r2]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r1, #22352	@ tmp163,
	ldr	r0, [r3, lr]	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movw	lr, #20708	@ tmp164,
	ldr	r1, [r3, r1]	@ <variable>.PrevSlice.frame_num, <variable>.PrevSlice.frame_num
	cmp	r0, r2	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmpeq	r4, ip	@, <variable>.PrevSlice.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	ldr	lr, [r3, lr]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movw	r4, #22336	@ tmp169,
	movw	r0, #20689	@ tmp170,
	ldrb	r2, [r3, r4]	@ zero_extendqisi2	@ D.43532, <variable>.PrevSlice.field_pic_flag
	moveq	ip, #0	@, result.3119
	movne	ip, #1	@, result.3119
	ldrb	r0, [r3, r0]	@ zero_extendqisi2	@ D.43533, <variable>.CurrSlice.field_pic_flag
	cmp	r1, lr	@ <variable>.PrevSlice.frame_num, <variable>.CurrSlice.frame_num
	moveq	r1, ip	@, result.3120, result.3119
	orrne	r1, ip, #1	@,, result.3120, result.3119
	cmp	r2, r0	@ D.43532, D.43533
	orrne	r1, r1, #1	@,, result, result.3120
	cmp	r2, #0	@ D.43532,
	beq	.L857	@,
	cmp	r0, #0	@ D.43533,
	bne	.L865	@,
.L857:
	movw	r4, #22348	@ tmp179,
	movw	ip, #20720	@ tmp180,
	ldr	r2, [r3, r4]	@ D.43546, <variable>.PrevSlice.nal_ref_idc
	ldr	r4, [r3, ip]	@ D.43547, <variable>.CurrSlice.nal_ref_idc
	cmp	r2, r4	@ D.43546, D.43547
	moveq	r4, #0	@ prephitmp.3107,
	beq	.L859	@,
	cmp	r2, #0	@ D.43546,
	moveq	r4, #1	@ prephitmp.3107,
	bne	.L866	@,
.L859:
	movw	r0, #20691	@ tmp184,
	movw	lr, #22338	@ tmp183,
	ldrb	r2, [r3, r0]	@ zero_extendqisi2	@ D.43552, <variable>.CurrSlice.nal_unit_type
	ldrb	r0, [r3, lr]	@ zero_extendqisi2	@ D.43551, <variable>.PrevSlice.nal_unit_type
	cmp	r0, r2	@ D.43551, D.43552
	orrne	r1, r1, #1	@,, result.3121, result
	cmp	r2, #5	@ D.43552,
	orr	r4, r1, r4	@ result.3118, result.3121, prephitmp.3107
	beq	.L867	@,
.L861:
	movw	r0, #16504	@ tmp193,
	ldr	r2, [r3, r0]	@ D.43561, <variable>.CurrSPS.pic_order_cnt_type
	cmp	r2, #0	@ D.43561,
	bne	.L862	@,
	movw	r2, #22364	@ tmp194,
	movw	lr, #19808	@ tmp195,
	movw	r0, #22360	@ tmp200,
	movw	r1, #19804	@ tmp201,
	ldr	ip, [r3, r2]	@ <variable>.PrevSlice.delta_pic_oder_cnt_bottom, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	r2, [r3, lr]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	ldr	lr, [r3, r0]	@ <variable>.PrevSlice.pic_oder_cnt_lsb, <variable>.PrevSlice.pic_oder_cnt_lsb
	ldr	r0, [r3, r1]	@ <variable>.CurrPOC.pic_order_cnt_lsb,
	cmp	lr, r0	@ <variable>.PrevSlice.pic_oder_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	cmpeq	ip, r2	@, <variable>.PrevSlice.delta_pic_oder_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	moveq	r1, #0	@, result.3122
	movne	r1, #1	@, result.3122
	orr	r4, r4, r1	@ result.3118, result.3118, result.3122
.L863:
	movw	lr, #20740	@ tmp218,
	mov	r0, #19	@,
	ldr	r3, [r3, lr]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movw	r1, #:lower16:.LC7	@,
	movt	r1, #:upper16:.LC7	@,
	cmp	r3, #0	@ <variable>.CurrSlice.first_mb_in_slice,
	orreq	r4, r4, #1	@,, result.3124, result.3118
	mov	r2, r4	@, result.3124
	bl	dprint_vfmw	@
	mov	r0, r4	@, result.3124
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L862:
	cmp	r2, #1	@ D.43561,
	bne	.L863	@,
	movw	r0, #22372	@ tmp206,
	movw	r1, #22368	@ tmp212,
	ldr	ip, [r3, r0]	@ <variable>.PrevSlice.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	movw	r2, #19856	@ tmp207,
	ldr	r0, [r3, r1]	@ <variable>.PrevSlice.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	movw	r1, #19852	@ tmp213,
	ldr	lr, [r3, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [r3, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	cmp	r0, r1	@ <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	cmpeq	ip, lr	@, <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	moveq	ip, #0	@, result.3123
	movne	ip, #1	@, result.3123
	orr	r4, r4, ip	@ result.3118, result.3118, result.3123
	b	.L863	@
.L866:
	rsbs	r4, r4, #1	@ prephitmp.3107, D.43547
	movcc	r4, #0	@ prephitmp.3107
	b	.L859	@
.L865:
	movw	r0, #22337	@ tmp173,
	movw	lr, #20690	@ tmp174,
	ldrb	r4, [r3, r0]	@ zero_extendqisi2	@ <variable>.PrevSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
	ldrb	r2, [r3, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, r2	@ <variable>.PrevSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	orrne	r1, r1, #1	@,, result, result
	b	.L857	@
.L867:
	cmp	r0, #5	@ D.43551,
	bne	.L861	@,
	movw	lr, #22356	@ tmp187,
	movw	r2, #20728	@ tmp188,
	ldr	r1, [r3, lr]	@ <variable>.PrevSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	ldr	ip, [r3, r2]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	cmp	r1, ip	@ <variable>.PrevSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	orrne	r4, r4, #1	@,, result.3118, result.3118
	b	.L861	@
	.fnend
	.size	IsNewPic, .-IsNewPic
	.align	2
	.global	PPSSPSCheckTmpId
	.type	PPSSPSCheckTmpId, %function
PPSSPSCheckTmpId:
	.fnstart
.LFB1624:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ tmp_pic_parameter_set_id, tmp_pic_parameter_set_id
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r2, r5	@, tmp_pic_parameter_set_id
	movw	r1, #:lower16:.LC8	@,
	mov	r0, #19	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
	movw	ip, #13592	@ tmp140,
	ldr	r3, [r4, ip]	@ <variable>.PPS, <variable>.PPS
	mov	r1, #2208	@ tmp142,
	mla	r3, r1, r5, r3	@ pPPS, tmp142, tmp_pic_parameter_set_id, <variable>.PPS
	ldrb	r2, [r3, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	beq	.L874	@,
	movw	r1, #13576	@ tmp146,
	ldr	r2, [r3, #28]	@ D.43506, <variable>.seq_parameter_set_id
	ldr	r3, [r4, r1]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	lr, r3, #1	@ tmp147, <variable>.MaxSpsNum,
	cmp	r2, lr	@ D.43506, tmp147
	bhi	.L875	@,
	movw	ip, #13588	@ tmp151,
	mov	r1, #4000	@ tmp153,
	ldr	r3, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	mla	lr, r1, r2, r3	@ tmp154, tmp153, D.43506, <variable>.SPS
	ldrb	ip, [lr, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	ip, #0	@ <variable>.is_valid,
	movne	r0, #0	@ D.43505,
	ldmnefd	sp, {r4, r5, fp, sp, pc}	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC11	@,
	movt	r1, #:upper16:.LC11	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43505,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L874:
	mov	r2, r5	@, tmp_pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC9	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43505,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L875:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC10	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43505,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	PPSSPSCheckTmpId, .-PPSSPSCheckTmpId
	.align	2
	.global	PPSSPSCheck
	.type	PPSSPSCheck, %function
PPSSPSCheck:
	.fnstart
.LFB1623:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #20700	@ tmp140,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r1, #:lower16:.LC12	@,
	ldr	r2, [r4, r5]	@, <variable>.CurrSlice.pic_parameter_set_id
	movt	r1, #:upper16:.LC12	@,
	mov	r0, #19	@,
	bl	dprint_vfmw	@
	movw	r1, #13592	@ tmp143,
	ldr	r3, [r4, r1]	@ <variable>.PPS, <variable>.PPS
	mov	ip, #2208	@ tmp145,
	ldr	r2, [r4, r5]	@ temp.3171, <variable>.CurrSlice.pic_parameter_set_id
	mla	r3, ip, r2, r3	@ pPPS, tmp145, temp.3171, <variable>.PPS
	ldrb	r1, [r3, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	beq	.L881	@,
	movw	lr, #13588	@ tmp150,
	ldr	r2, [r3, #28]	@ D.43486, <variable>.seq_parameter_set_id
	ldr	ip, [r4, lr]	@ <variable>.SPS, <variable>.SPS
	mov	r1, #4000	@ tmp152,
	mla	r3, r1, r2, ip	@ tmp153, tmp152, D.43486, <variable>.SPS
	ldrb	lr, [r3, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	movne	r0, #0	@ D.43484,
	ldmnefd	sp, {r4, r5, fp, sp, pc}	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC14	@,
	movt	r1, #:upper16:.LC14	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43484,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L881:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC13	@,
	movt	r1, #:upper16:.LC13	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43484,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	PPSSPSCheck, .-PPSSPSCheck
	.align	2
	.global	WriteCurrPicYUV
	.type	WriteCurrPicYUV, %function
WriteCurrPicYUV:
	.fnstart
.LFB1615:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #55795	@ tmp136,
	ldrb	r5, [r0, r2]	@ zero_extendqisi2	@ structure, <variable>.CurrPic.structure
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #56336	@ tmp139,
	movw	r1, #:lower16:.LC15	@,
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r1, #:upper16:.LC15	@,
	mov	r2, r5	@, structure
	mov	r0, #2	@,
	ldr	r3, [lr, #204]	@, <variable>.fs_image.image_id
	bl	dprint_vfmw	@
	movw	r1, #56388	@ tmp151,
	cmp	r5, #3	@ structure,
	cmpne	r5, #0	@, structure,
	ldr	ip, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movw	r3, #56384	@ tmp149,
	addne	r2, r5, #1	@ PicStructure, structure,
	ldr	r3, [r4, r3]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	moveq	r2, #1	@ PicStructure,
	movw	r1, #:lower16:.LC16	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC16	@,
	str	ip, [sp, #0]	@ <variable>.CurrPic.pic_height_in_mb,
	bl	dprint_vfmw	@
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
	.fnend
	.size	WriteCurrPicYUV, .-WriteCurrPicYUV
	.align	2
	.global	DumpList
	.type	DumpList, %function
DumpList:
	.fnstart
.LFB1600:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:g_PrintEnable	@ tmp146,
	movt	r1, #:upper16:g_PrintEnable	@ tmp146,
	mov	r8, r0	@ pH264Ctx, pH264Ctx
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #8192	@ g_PrintEnable,
	addne	r6, r0, #20480	@ ivtmp.3247, pH264Ctx,
	movne	r7, #0	@ j,
	addne	r6, r6, #252	@ ivtmp.3247, ivtmp.3247,
	beq	.L905	@,
.L888:
	ldr	r2, [r6, #0]	@ tmp154, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ tmp154,
	beq	.L891	@,
	add	r1, r7, r7, asl #5	@, tmp157, j, j,
	mov	r4, #0	@ i,
	add	r3, r8, r1, asl #2	@, tmp161, pH264Ctx, tmp157,
	add	r5, r3, #26880	@ ivtmp.3239, tmp161,
	add	r5, r5, #164	@ ivtmp.3239, ivtmp.3239,
.L889:
	ldr	ip, [r5], #4	@ tmp150, <variable>.pListX
	mov	r3, r4	@, i
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC17	@,
	mov	r2, r7	@, j
	movt	r1, #:upper16:.LC17	@,
	ldr	ip, [ip, #4]	@ D.41621, <variable>.frame_store
	add	r4, r4, #1	@ i, i,
	ldr	lr, [ip, #660]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.frame_num,
	ldr	ip, [ip, #672]	@ <variable>.poc, <variable>.poc
	str	ip, [sp, #4]	@ <variable>.poc,
	bl	dprint_vfmw	@
	ldr	r0, [r6, #0]	@ tmp153, <variable>.CurrSlice.listXsize
	cmp	r0, r4	@ tmp153, i
	bhi	.L889	@,
.L891:
	add	r7, r7, #1	@ j, j,
	add	r6, r6, #4	@ ivtmp.3247, ivtmp.3247,
	cmp	r7, #2	@ j,
	bne	.L888	@,
	movw	r6, #20732	@ tmp162,
	ldr	r0, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	bne	.L909	@,
	mov	r6, #20736	@ tmp181,
	ldr	r1, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ <variable>.CurrSlice.listXsize,
	bne	.L910	@,
.L905:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L910:
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC23	@,
	movt	r1, #:upper16:.LC23	@,
	bl	dprint_vfmw	@
	ldr	r0, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L899	@,
	add	r5, r8, #27136	@ ivtmp.3229, pH264Ctx,
	add	r4, r5, #40	@ ivtmp.3229, ivtmp.3229,
	mov	r5, #0	@ i.3251,
	b	.L904	@
.L901:
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #672]	@, <variable>.poc
	bl	dprint_vfmw	@
.L900:
	ldr	r2, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r5, r5, #1	@ i.3251, i.3251,
	add	r4, r4, #4	@ ivtmp.3229, ivtmp.3229,
	cmp	r2, r5	@ <variable>.CurrSlice.listXsize, i.3251
	bls	.L899	@,
.L904:
	ldr	r3, [r4, #0]	@ D.41642, <variable>.pListX
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r2, #1	@ <variable>.structure,
	beq	.L902	@,
	movw	r1, #:lower16:.LC19	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC19	@,
	bcc	.L901	@,
	cmp	r2, #2	@ <variable>.structure,
	bne	.L900	@,
	ldr	ip, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	movw	r1, #:lower16:.LC21	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC21	@,
	add	r5, r5, #1	@ i.3251, i.3251,
	add	r4, r4, #4	@ ivtmp.3229, ivtmp.3229,
	ldr	r2, [ip, #672]	@, <variable>.poc
	bl	dprint_vfmw	@
	ldr	r2, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, r5	@ <variable>.CurrSlice.listXsize, i.3251
	bhi	.L904	@,
.L899:
	movw	r1, #:lower16:.LC22	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
	b	.L905	@
.L902:
	ldr	r3, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	movw	r1, #:lower16:.LC20	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC20	@,
	ldr	r2, [r3, #672]	@, <variable>.poc
	bl	dprint_vfmw	@
	b	.L900	@
.L909:
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC18	@,
	movt	r1, #:upper16:.LC18	@,
	bl	dprint_vfmw	@
	ldr	ip, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L893	@,
	add	r4, r8, #26880	@ ivtmp.3234, pH264Ctx,
	mov	r5, #0	@ i.3256,
	add	r4, r4, #164	@ ivtmp.3234, ivtmp.3234,
	b	.L898	@
.L895:
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #672]	@, <variable>.poc
	bl	dprint_vfmw	@
.L894:
	ldr	r2, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r5, r5, #1	@ i.3256, i.3256,
	add	r4, r4, #4	@ ivtmp.3234, ivtmp.3234,
	cmp	r2, r5	@ <variable>.CurrSlice.listXsize, i.3256
	bls	.L893	@,
.L898:
	ldr	r3, [r4, #0]	@ D.41629, <variable>.pListX
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r2, #1	@ <variable>.structure,
	beq	.L896	@,
	movw	r1, #:lower16:.LC19	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC19	@,
	bcc	.L895	@,
	cmp	r2, #2	@ <variable>.structure,
	bne	.L894	@,
	ldr	ip, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	movw	r1, #:lower16:.LC21	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC21	@,
	add	r5, r5, #1	@ i.3256, i.3256,
	add	r4, r4, #4	@ ivtmp.3234, ivtmp.3234,
	ldr	r2, [ip, #672]	@, <variable>.poc
	bl	dprint_vfmw	@
	ldr	r2, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, r5	@ <variable>.CurrSlice.listXsize, i.3256
	bhi	.L898	@,
.L893:
	movw	r1, #:lower16:.LC22	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC22	@,
	mov	r6, #20736	@ tmp181,
	bl	dprint_vfmw	@
	ldr	r1, [r8, r6]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L905	@,
	b	.L910	@
.L896:
	ldr	r3, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	movw	r1, #:lower16:.LC20	@,
	mov	r0, #13	@,
	movt	r1, #:upper16:.LC20	@,
	ldr	r2, [r3, #672]	@, <variable>.poc
	bl	dprint_vfmw	@
	b	.L894	@
	.fnend
	.size	DumpList, .-DumpList
	.align	2
	.global	DumpDPB
	.type	DumpDPB, %function
DumpDPB:
	.fnstart
.LFB1572:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:g_PrintEnable	@ tmp144,
	movt	r1, #:upper16:g_PrintEnable	@ tmp144,
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #16384	@ g_PrintEnable,
	beq	.L917	@,
	movw	r7, #26636	@ tmp147,
	ldr	r0, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	beq	.L913	@,
	add	r6, r5, #26368	@ ivtmp.3311, pH264Ctx,
	mov	r4, #0	@ i,
	add	r6, r6, #72	@ ivtmp.3311, ivtmp.3311,
.L914:
	ldr	ip, [r6], #4	@ D.40240, <variable>.DPB.fs
	mov	r2, r4	@, i
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC24	@,
	movt	r1, #:upper16:.LC24	@,
	add	r4, r4, #1	@ i, i,
	ldr	lr, [ip, #672]	@ <variable>.poc, <variable>.poc
	ldr	r3, [ip, #660]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.poc,
	ldrb	ip, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	str	ip, [sp, #4]	@ <variable>.is_reference,
	bl	dprint_vfmw	@
	ldr	r2, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, r4	@ <variable>.DPB.used_size, i
	bhi	.L914	@,
.L913:
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC22	@,
	movw	r7, #26640	@ tmp155,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L915	@,
	add	r4, r5, #26368	@ ivtmp.3306, pH264Ctx,
	add	r6, r4, #136	@ ivtmp.3306, ivtmp.3306,
	mov	r4, #0	@ i.3316,
.L916:
	ldr	ip, [r6, #0]	@ D.40248, <variable>.DPB.fs_ref
	mov	r2, r4	@, i.3316
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC25	@,
	movt	r1, #:upper16:.LC25	@,
	ldr	lr, [ip, #672]	@ <variable>.poc, <variable>.poc
	ldr	r3, [ip, #660]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.poc,
	ldrb	lr, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	str	lr, [sp, #4]	@ <variable>.is_reference,
	bl	dprint_vfmw	@
	ldr	ip, [r6], #4	@ tmp161, <variable>.DPB.fs_ref
	mov	r2, r4	@, i.3316
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC26	@,
	movt	r1, #:upper16:.LC26	@,
	add	r4, r4, #1	@ i.3316, i.3316,
	ldr	r3, [ip, #552]	@, <variable>.frame.poc
	bl	dprint_vfmw	@
	ldr	r1, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r4	@ <variable>.DPB.ref_frames_in_buffer, i.3316
	bhi	.L916	@,
.L915:
	movw	r1, #:lower16:.LC22	@,
	mov	r0, #14	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
.L917:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
	.fnend
	.size	DumpDPB, .-DumpDPB
	.align	2
	.global	IsRefListWrong
	.type	IsRefListWrong, %function
IsRefListWrong:
	.fnstart
.LFB1663:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #20732	@ tmp143,
	ldr	r3, [r0, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L921	@,
	add	r5, r0, #26880	@ ivtmp.3357, pH264Ctx,
	mov	r6, #0	@ i.3361,
	add	r5, r5, #164	@ ivtmp.3357, ivtmp.3357,
	movw	r7, #59224	@ tmp167,
	b	.L923	@
.L930:
	ldr	ip, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	ip, #0	@ <variable>.pstDecodeFs,
	beq	.L922	@,
	ldr	r3, [r4, r8]	@ D.46926, <variable>.CurrSlice.listXsize
	cmp	r3, r6	@ D.46926, i.3361
	bls	.L929	@,
.L923:
	ldr	r1, [r5, #0]	@ tmp148, <variable>.pListX
	add	r6, r6, #1	@ i.3361, i.3361,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3357, ivtmp.3357,
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	bne	.L930	@,
.L922:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L921:
	mov	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L929:
	cmp	r3, #0	@ D.46926,
	beq	.L921	@,
	mov	r8, #20736	@ tmp153,
	ldr	r0, [r4, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L921	@,
	add	r6, r4, #27136	@ ivtmp.3352, pH264Ctx,
	movw	r7, #59224	@ tmp165,
	add	r5, r6, #40	@ ivtmp.3352, ivtmp.3352,
	mov	r6, #0	@ i,
	b	.L924	@
.L931:
	ldr	r2, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r2, #0	@ <variable>.pstDecodeFs,
	beq	.L922	@,
	ldr	r1, [r4, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r6	@ <variable>.CurrSlice.listXsize, i
	bls	.L921	@,
.L924:
	ldr	r3, [r5, #0]	@ tmp158, <variable>.pListX
	add	r6, r6, #1	@ i, i,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3352, ivtmp.3352,
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs.3364
	bne	.L931	@,
	b	.L922	@
	.fnend
	.size	IsRefListWrong, .-IsRefListWrong
	.align	2
	.global	WriteSliceMsg
	.type	WriteSliceMsg, %function
WriteSliceMsg:
	.fnstart
.LFB1618:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #59148	@ tmp200,
	ldr	r8, [r0, r3]	@, <variable>.SliceParaNum
	movw	r6, #13572	@ tmp205,
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	movw	r1, #4060	@ tmp204,
	str	r8, [fp, #-48]	@, %sfp
	ldr	r7, [r0, r6]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	movw	r0, #59144	@ tmp202,
	ldr	ip, [fp, #-48]	@, %sfp
	sub	r4, r7, #1	@ tmp206, <variable>.MaxSliceNum,
	cmp	ip, r4	@, tmp206
	ldr	r4, [r5, r0]	@ D.43075, <variable>.DecSlicePara
	add	r2, ip, #1	@ D.43074,,
	str	r2, [r5, r3]	@ D.43074, <variable>.SliceParaNum
	mul	r6, r1, ip	@ tmp203, tmp204,
	movcs	r3, #0	@ tmp211,
	mlacc	r2, r1, r2, r4	@ tmp210, tmp204, D.43074, D.43075
	add	r7, r4, r6	@ pCurrSlicePara, D.43075, tmp203
	strcs	r3, [r7, #4056]	@ tmp211, <variable>.pNextSlice
	strcc	r2, [r7, #4056]	@ tmp210, <variable>.pNextSlice
	ldr	r1, [r5, #368]	@ D.43086, <variable>.pCurrNal
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ i.3568, <variable>.nal_used_segment
	ldr	r0, [r1, #68]	@ i.3724, <variable>.nal_segment
	cmp	r3, #1	@ i.3568,
	cmpls	r3, r0	@, i.3568, i.3724
	bcs	.L935	@,
	add	lr, r3, #4	@ tmp219, i.3568,
	add	r2, r7, lr, asl #2	@, ivtmp.3560, pCurrSlicePara, tmp219,
.L936:
	rsb	r0, r3, r3, asl #3	@, tmp224, i.3568, i.3568,
	add	r3, r3, #1	@ i.3568, i.3568,
	mov	r8, r0, asl #2	@ tmp225, tmp224,
	add	r1, r8, r1	@ tmp226, tmp225, D.43086
	ldr	ip, [r1, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	ip, [r2, #0]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	lr, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r1, r8, lr	@ tmp235, tmp225, <variable>.pCurrNal
	ldr	ip, [r1, #20]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	str	ip, [r2, #-8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	cmp	r3, #1	@ i.3568,
	movhi	ip, #0	@, tmp253
	movls	ip, #1	@, tmp253
	ldr	lr, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r0, r8, lr	@ tmp244, tmp225, <variable>.pCurrNal
	ldr	r1, [r0, #28]	@ <variable>.bytespos, <variable>.bytespos
	str	r1, [r2, #8]	@ <variable>.bytespos, <variable>.bytespos
	add	r2, r2, #4	@ ivtmp.3560, ivtmp.3560,
	ldr	r1, [r5, #368]	@ D.43086, <variable>.pCurrNal
	ldr	r0, [r1, #68]	@ i.3724, <variable>.nal_segment
	cmp	r0, r3	@ i.3724, i.3568
	movls	ip, #0	@, tmp253,
	cmp	ip, #0	@ tmp253,
	bne	.L936	@,
.L935:
	cmp	r0, #1	@ i.3724,
	bhi	.L937	@,
	add	r3, r0, #4	@ tmp254, i.3724,
	add	r1, r7, #24	@ D.50518, pCurrSlicePara,
	mov	r2, #0	@ tmp632,
	add	r8, r7, r3, asl #2	@, ivtmp.3553, pCurrSlicePara, tmp254,
	add	r3, r8, #4	@ ivtmp.3553, ivtmp.3553,
	rsb	ip, r8, r1	@ tmp645, ivtmp.3553, D.50518
	cmp	r3, r1	@ ivtmp.3553, D.50518
	sub	lr, ip, #4	@ tmp646, tmp645,
	ubfx	ip, lr, #2, #1	@ tmp647, tmp646,,
	str	r2, [r8, #0]	@ tmp632, <variable>.bitsoffset
	str	r2, [r8, #-8]	@ tmp632, <variable>.valid_bitlen
	str	r2, [r8, #8]	@ tmp632, <variable>.bytespos
	beq	.L937	@,
	cmp	ip, #0	@ tmp647,
	beq	.L938	@,
	str	r2, [r3, #0]	@ tmp632, <variable>.bitsoffset
	str	r2, [r3, #-8]	@ tmp632, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp632, <variable>.bytespos
	add	r3, r3, #4	@ ivtmp.3553, ivtmp.3553,
	cmp	r3, r1	@ ivtmp.3553, D.50518
	beq	.L937	@,
.L938:
	add	r0, r3, #4	@ tmp648, ivtmp.3553,
	str	r2, [r3, #-8]	@ tmp632, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp632, <variable>.bytespos
	str	r2, [r3, #4]	@ tmp632, <variable>.bitsoffset
	str	r2, [r3, #0]	@ tmp632, <variable>.bitsoffset
	add	r3, r0, #4	@ ivtmp.3553, tmp648,
	cmp	r3, r1	@ ivtmp.3553, D.50518
	str	r2, [r0, #-8]	@ tmp632, <variable>.valid_bitlen
	str	r2, [r0, #8]	@ tmp632, <variable>.bytespos
	bne	.L938	@,
.L937:
	movw	r1, #55801	@ tmp259,
	movw	r3, #22300	@ tmp263,
	ldrb	r2, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	movw	r0, #17644	@ tmp262,
	movw	r1, #20689	@ tmp267,
	strb	r2, [r7, #1]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldr	lr, [r5, r3]	@ <variable>.CurrSlice.slice_qp_delta, <variable>.CurrSlice.slice_qp_delta
	ldr	ip, [r5, r0]	@ <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrPPS.pic_init_qp_minus26
	add	r8, ip, lr	@ tmp264, <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrSlice.slice_qp_delta
	add	r3, r8, #26	@ D.43101, tmp264,
	str	r3, [r7, #32]	@ D.43101, <variable>.SliceQPy
	ldrb	r2, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r2, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L939	@,
	movw	r2, #56336	@ tmp269,
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r8, [r5, r2]	@ D.43105, <variable>.CurrPic.frame_store
	movw	r0, #59148	@ tmp273,
	ldr	r1, [r5, r0]	@, <variable>.SliceParaNum
	ldr	lr, [r8, #572]	@ <variable>.frame.AvgQp, <variable>.frame.AvgQp
	mla	r0, lr, ip, r3	@, <variable>.frame.AvgQp,, D.43101
	bl	__aeabi_uidiv	@
	str	r0, [r8, #572]	@, <variable>.frame.AvgQp
.L940:
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	r3, #0	@,
	bne	.L942	@,
	movw	ip, #56336	@ tmp299,
	ldr	r0, [r7, #32]	@ <variable>.SliceQPy, <variable>.SliceQPy
	ldr	r1, [r5, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r1, #564]	@ <variable>.SliceQPy, <variable>.frame.MaxQp
	ldr	lr, [r5, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r2, [r7, #32]	@ <variable>.SliceQPy, <variable>.SliceQPy
	str	r2, [lr, #568]	@ <variable>.SliceQPy, <variable>.frame.MinQp
.L943:
	movw	r1, #22296	@ tmp309,
	movw	r0, #20748	@ tmp311,
	ldr	lr, [r5, r1]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.CurrSlice.cabac_init_idc
	movw	r3, #20744	@ tmp313,
	movw	r1, #20688	@ tmp315,
	str	lr, [r7, #36]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.cabac_init_idc
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	movw	r0, #20740	@ tmp318,
	str	ip, [r7, #40]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	ldr	r2, [r5, r3]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movw	r3, #20694	@ tmp320,
	str	r2, [r7, #44]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldrb	lr, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	strb	lr, [r4, r6]	@ <variable>.CurrSlice.slice_type, <variable>.slice_type
	movw	lr, #13616	@ tmp323,
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	str	ip, [r7, #48]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.first_mb_in_slice
	movw	ip, #20732	@ tmp326,
	ldrb	r2, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	strb	r2, [r7, #2]	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.direct_spatial_mv_pred_flag
	mov	r2, #20736	@ tmp328,
	ldrb	r0, [r5, lr]	@ zero_extendqisi2	@ <variable>.CurrSPS.direct_8x8_inference_flag, <variable>.CurrSPS.direct_8x8_inference_flag
	strb	r0, [r7, #3]	@ <variable>.CurrSPS.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldr	r3, [r5, ip]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	r3, [r7, #52]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldr	lr, [r5, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	lr, [r7, #56]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldrb	r3, [r5, r1]	@ zero_extendqisi2	@ temp.3584, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ temp.3584,
	beq	.L1032	@,
	cmp	r3, #0	@ temp.3584,
	movweq	r3, #17598	@ tmp334,
	movne	r3, #0	@ tmp337,
	ldreqb	r3, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_pred_flag, <variable>.CurrPPS.weighted_pred_flag
	strb	r3, [r7, #4]	@ tmp337, <variable>.weight_flag
.L945:
	movw	r3, #17648	@ tmp339,
	movw	r1, #17652	@ tmp341,
	ldr	r2, [r5, r3]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.CurrPPS.chroma_qp_index_offset
	movw	r0, #22308	@ tmp343,
	movw	r3, #22312	@ tmp345,
	str	r2, [r7, #60]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	ldr	lr, [r5, r1]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.CurrPPS.second_chroma_qp_index_offset
	movw	r1, #22304	@ tmp347,
	str	lr, [r7, #64]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	movw	r0, #20688	@ tmp349,
	str	ip, [r7, #68]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.slice_alpha_c0_offset_div2
	ldr	r2, [r5, r3]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.CurrSlice.slice_beta_offset_div2
	str	r2, [r7, #72]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.slice_beta_offset_div2
	ldr	lr, [r5, r1]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	lr, [r7, #76]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.disable_deblocking_filter_idc
	ldrb	ip, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L947	@,
	movw	ip, #20732	@ tmp351,
	ldr	r4, [r5, ip]	@ temp.3741, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.3741,
	beq	.L948	@,
	movw	r1, #27044	@ tmp353,
	ldr	lr, [r5, r1]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [lr, #4]	@ temp.3719, <variable>.frame_store
	ldrb	r0, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r0, #0	@ <variable>.non_existing,
	beq	.L949	@,
	tst	r4, #1	@ temp.3741,
	add	r3, r5, #26880	@ tmp363, pH264Ctx,
	add	r1, r3, #168	@ ivtmp.3547, tmp363,
	mov	r0, #0	@ i.3587,
	bne	.L951	@,
	ldr	ip, [r1, #0]	@ tmp667, <variable>.pListX
	add	r1, r3, #172	@ ivtmp.3547, tmp363,
	mov	r0, #1	@ i.3587,
	ldr	r3, [ip, #4]	@ temp.3719, <variable>.frame_store
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	lr, #0	@ <variable>.non_existing,
	bne	.L951	@,
.L949:
	movw	r2, #59224	@ tmp357,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r5, r2]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLogicFs,
	beq	.L1033	@,
	ldr	r0, [r3, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r4, [r0, #4]	@, <variable>.PhyFsID
	str	r4, [fp, #-52]	@, %sfp
	b	.L954	@
.L955:
	ldr	r3, [r2], #4	@ tmp355, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.3719, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L949	@,
	ldr	r3, [r1, #4]	@ tmp669, <variable>.pListX
	add	r1, r2, #4	@ ivtmp.3547, tmp642,
	ldr	r3, [r3, #4]	@ temp.3719, <variable>.frame_store
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	beq	.L949	@,
.L951:
	add	lr, r0, #1	@ tmp643, i.3587,
	mov	r2, r1	@ tmp642, ivtmp.3547
	cmp	lr, r4	@ tmp643, temp.3741
	add	r0, lr, #1	@ i.3587, tmp643,
	bcc	.L955	@,
.L948:
	mov	r1, #0	@,
	str	r1, [fp, #-52]	@, %sfp
.L954:
	mov	ip, #20736	@ tmp364,
	ldr	r4, [r5, ip]	@ temp.3590, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.3590,
	beq	.L956	@,
	movw	r0, #27176	@ tmp366,
	ldr	r3, [r5, r0]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.3720, <variable>.frame_store
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	beq	.L957	@,
	tst	r4, #1	@ temp.3590,
	add	r3, r5, #27136	@ tmp376, pH264Ctx,
	add	r1, r3, #44	@ ivtmp.3542, tmp376,
	mov	r0, #0	@ i.3595,
	bne	.L959	@,
	ldr	ip, [r1, #0]	@ tmp663, <variable>.pListX
	add	r1, r3, #48	@ ivtmp.3542, tmp376,
	mov	r0, #1	@ i.3595,
	ldr	r3, [ip, #4]	@ temp.3720, <variable>.frame_store
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	lr, #0	@ <variable>.non_existing,
	bne	.L959	@,
	b	.L957	@
.L962:
	ldr	ip, [r2], #4	@ tmp368, <variable>.pListX
	ldr	r3, [ip, #4]	@ temp.3720, <variable>.frame_store
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	lr, #0	@ <variable>.non_existing,
	beq	.L957	@,
	ldr	r3, [r1, #4]	@ tmp665, <variable>.pListX
	add	r1, r2, #4	@ ivtmp.3542, tmp637,
	ldr	r3, [r3, #4]	@ temp.3720, <variable>.frame_store
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	beq	.L957	@,
.L959:
	add	r3, r0, #1	@ tmp638, i.3595,
	mov	r2, r1	@ tmp637, ivtmp.3542
	cmp	r4, r3	@ temp.3590, tmp638
	add	r0, r3, #1	@ i.3595, tmp638,
	bhi	.L962	@,
.L956:
	mov	r1, #0	@,
	str	r1, [fp, #-60]	@, %sfp
.L961:
	movw	r0, #55795	@ tmp377,
	ldrb	r8, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r8, #0	@ <variable>.CurrPic.structure,
	beq	.L963	@,
	movw	r9, #20732	@ tmp379,
	ldr	lr, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	lr, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L965	@,
	add	r8, r5, #26880	@ ivtmp.3522, pH264Ctx,
	mov	r6, r7	@ ivtmp.3527, pCurrSlicePara
	add	r4, r8, #164	@ ivtmp.3522, ivtmp.3522,
	str	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
	mov	r8, #0	@ i.3684,
	movw	sl, #59224	@ tmp629,
	ldr	r7, [fp, #-52]	@ ExistImgIdc_0.3566, %sfp
	b	.L981	@
.L979:
	strb	r3, [r6, #1630]	@ temp.3678, <variable>.btm_structure
	add	r8, r8, #1	@ i.3684, i.3684,
	ldr	r3, [r4, #0]	@ tmp511, <variable>.pListX
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r6, #1631]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r2, [r4, #0]	@ tmp514, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3522, ivtmp.3522,
	ldr	lr, [r2, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r6, #1656]	@ <variable>.poc, <variable>.btm_poc
	add	r6, r6, #36	@ ivtmp.3527, ivtmp.3527,
	ldr	r1, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r8	@ <variable>.CurrSlice.listXsize, i.3684
	bls	.L1034	@,
.L981:
	ldr	r2, [r4, #0]	@ tmp475, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	ip, [r4, #0]	@ tmp478, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r1, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r3, [r6, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r2, [r4, #0]	@ tmp481, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r1, [r6, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	r3, [r4, #0]	@ tmp485, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_0.3564, ExistImgIdc_0.3566
	beq	.L977	@,
	cmp	r0, #0	@ pstLogicFs.3655,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0.3564, <variable>.PhyFsID
.L977:
	str	r0, [r6, #1640]	@ ExistImgIdc_0.3564, <variable>.img_idc
	ldr	r2, [r4, #0]	@ tmp489, <variable>.pListX
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	str	ip, [r6, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r1, [r4, #0]	@ tmp492, <variable>.pListX
	ldr	r3, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r3, #672]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #1632]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r4, #0]	@ tmp495, <variable>.pListX
	ldrb	lr, [r2, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r6, #1624]	@ <variable>.structure, <variable>.list_structure
	ldr	ip, [r4, #0]	@ tmp498, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r1, #536]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r3, [r6, #1626]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #0]	@ tmp502, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.3678, <variable>.structure
	cmp	r3, #1	@ temp.3678,
	bne	.L979	@,
	strb	r3, [r6, #1628]	@ temp.3678, <variable>.top_structure
	add	r8, r8, #1	@ i.3684, i.3684,
	ldr	ip, [r4, #0]	@ tmp505, <variable>.pListX
	ldrb	r1, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r1, [r6, #1629]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r3, [r4, #0]	@ tmp508, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3522, ivtmp.3522,
	ldr	r0, [r3, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #1652]	@ <variable>.poc, <variable>.top_poc
	add	r6, r6, #36	@ ivtmp.3527, ivtmp.3527,
	ldr	r1, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r8	@ <variable>.CurrSlice.listXsize, i.3684
	bhi	.L981	@,
.L1034:
	ldr	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
.L965:
	movw	lr, #20688	@ tmp518,
	ldrb	ip, [r5, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1035	@,
.L971:
	mov	r3, #0	@ ivtmp.3460,
.L988:
	add	r0, r5, r3	@ tmp570, pH264Ctx, ivtmp.3460
	add	lr, r3, #4	@ tmp633, ivtmp.3460,
	add	r2, r0, #26880	@ tmp572, tmp570,
	add	r1, r5, lr	@ tmp659, pH264Ctx, tmp633
	add	r0, r7, r3	@ tmp569, pCurrSlicePara, ivtmp.3460
	add	r1, r1, #26880	@ tmp660, tmp659,
	ldr	ip, [r2, #36]	@ tmp573, <variable>.APC.RefIdx
	add	r3, lr, #4	@ ivtmp.3460, tmp633,
	add	r2, r7, lr	@ tmp658, pCurrSlicePara, tmp633
	cmp	r3, #128	@ ivtmp.3460,
	str	ip, [r0, #3928]	@ tmp573, <variable>.Apc2RefIdx
	ldr	lr, [r1, #36]	@ tmp662, <variable>.APC.RefIdx
	str	lr, [r2, #3928]	@ tmp662, <variable>.Apc2RefIdx
	bne	.L988	@,
	movw	r0, #17598	@ tmp574,
	movw	r2, #17640	@ tmp577,
	ldrb	r1, [r5, r0]	@ zero_extendqisi2	@ temp.3729, <variable>.CurrPPS.weighted_pred_flag
	movw	lr, #58036	@ tmp575,
	ldr	ip, [r5, r2]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	movw	r3, #58040	@ tmp576,
	cmp	r1, #0	@ temp.3729,
	str	r1, [r5, lr]	@ temp.3729, <variable>.DecPicPara.weighted_pred_flag
	str	ip, [r5, r3]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.DecPicPara.weighted_bipred_idc
	beq	.L989	@,
	movw	r3, #20688	@ tmp579,
	ldrb	ip, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L989	@,
.L990:
	movw	r1, #20752	@ tmp585,
	movw	lr, #20756	@ tmp587,
	ldr	r4, [r5, r1]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.CurrSlice.luma_log2_weight_denom
	add	r3, r5, #20736	@ ivtmp.3439, pH264Ctx,
	add	r3, r3, #24	@ ivtmp.3439, ivtmp.3439,
	mov	r0, r7	@ ivtmp.3443, pCurrSlicePara
	mov	r2, r7	@ ivtmp.3747, ivtmp.3443
	mov	r1, #0	@ i,
	str	r4, [r7, #80]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.luma_log2_weight_denom
	movw	r4, #20744	@ tmp617,
	ldr	ip, [r5, lr]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	str	ip, [r7, #84]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.chroma_log2_weight_denom
.L991:
	ldr	ip, [r3, #0]	@ tmp590, <variable>.CurrSlice.wp_weight_l0_y
	add	r1, r1, #1	@ i, i,
	str	ip, [r2, #88]	@ tmp590, <variable>.wp_weight_l0_y
	ldr	lr, [r3, #128]	@ tmp591, <variable>.CurrSlice.wp_weight_l0_u
	str	lr, [r2, #216]	@ tmp591, <variable>.wp_weight_l0_u
	ldr	ip, [r3, #256]	@ tmp592, <variable>.CurrSlice.wp_weight_l0_v
	str	ip, [r2, #344]	@ tmp592, <variable>.wp_weight_l0_v
	ldr	lr, [r3, #768]	@ tmp593, <variable>.CurrSlice.wp_offset_l0_y
	str	lr, [r2, #856]	@ tmp593, <variable>.wp_offset_l0_y
	ldr	ip, [r3, #896]	@ tmp594, <variable>.CurrSlice.wp_offset_l0_u
	str	ip, [r2, #984]	@ tmp594, <variable>.wp_offset_l0_u
	ldr	lr, [r3, #1024]	@ tmp595, <variable>.CurrSlice.wp_offset_l0_v
	add	r3, r3, #4	@ ivtmp.3439, ivtmp.3439,
	str	lr, [r2, #1112]	@ tmp595, <variable>.wp_offset_l0_v
	add	r2, r2, #4	@ ivtmp.3747, ivtmp.3747,
	ldr	ip, [r5, r4]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	ip, r1	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	bcs	.L991	@,
	movw	r3, #20688	@ tmp598,
	ldrb	r2, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1036	@,
.L947:
	ldr	r1, [fp, #-48]	@, %sfp
	mov	r0, #0	@ tmp615,
	ldr	ip, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r3, r1, #14272	@ tmp609,,
	add	r2, r5, r3, asl #2	@, tmp612, pH264Ctx, tmp609,
	str	ip, [r2, #4]	@ <variable>.pCurrNal, <variable>.pSliceNal
	str	r0, [r5, #368]	@ tmp615, <variable>.pCurrNal
.L993:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L942:
	movw	r0, #56336	@ tmp304,
	ldr	r2, [r7, #32]	@ temp.3581, <variable>.SliceQPy
	ldr	r3, [r5, r0]	@ temp.3582, <variable>.CurrPic.frame_store
	ldr	ip, [r3, #564]	@ <variable>.frame.MaxQp, <variable>.frame.MaxQp
	ldr	lr, [r3, #568]	@ <variable>.frame.MinQp, <variable>.frame.MinQp
	cmp	ip, r2	@ <variable>.frame.MaxQp, temp.3581
	strge	ip, [r3, #564]	@, <variable>.frame.MaxQp, <variable>.frame.MaxQp
	strlt	r2, [r3, #564]	@, temp.3581, <variable>.frame.MaxQp
	cmp	lr, r2	@ <variable>.frame.MinQp, temp.3581
	strle	lr, [r3, #568]	@, <variable>.frame.MinQp, <variable>.frame.MinQp
	strgt	r2, [r3, #568]	@, temp.3581, <variable>.frame.MinQp
	b	.L943	@
.L939:
	movw	r1, #20690	@ tmp278,
	ldrb	r8, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r8, #0	@ <variable>.CurrSlice.bottom_field_flag,
	bne	.L941	@,
	movw	r2, #56336	@ tmp280,
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r8, [r5, r2]	@ temp.3572, <variable>.CurrPic.frame_store
	movw	r0, #59148	@ tmp284,
	ldr	r1, [r5, r0]	@, <variable>.SliceParaNum
	ldr	lr, [r8, #612]	@ <variable>.top_field.AvgQp, <variable>.top_field.AvgQp
	mla	r0, lr, ip, r3	@, <variable>.top_field.AvgQp,, D.43101
	bl	__aeabi_uidiv	@
	str	r0, [r8, #612]	@, <variable>.top_field.AvgQp
	b	.L940	@
.L941:
	movw	r1, #56336	@ tmp289,
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r8, [r5, r1]	@ temp.3574, <variable>.CurrPic.frame_store
	movw	r0, #59148	@ tmp293,
	ldr	r1, [r5, r0]	@, <variable>.SliceParaNum
	ldr	lr, [r8, #652]	@ <variable>.bottom_field.AvgQp, <variable>.bottom_field.AvgQp
	mla	r0, lr, ip, r3	@, <variable>.bottom_field.AvgQp,, D.43101
	bl	__aeabi_uidiv	@
	str	r0, [r8, #652]	@, <variable>.bottom_field.AvgQp
	b	.L940	@
.L989:
	movw	r1, #17640	@ tmp581,
	ldr	lr, [r5, r1]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	cmp	lr, #1	@ <variable>.CurrPPS.weighted_bipred_idc,
	bne	.L947	@,
	movw	r0, #20688	@ tmp583,
	ldrb	r2, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L947	@,
	b	.L990	@
.L963:
	movw	r9, #20732	@ tmp381,
	ldr	ip, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L966	@,
	mov	r4, r7	@ ivtmp.3489, pCurrSlicePara
	str	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
	ldr	r7, [fp, #-52]	@ ExistImgIdc_0.3566, %sfp
	add	sl, r5, #26880	@ ivtmp.3484, pH264Ctx,
	add	r6, sl, #164	@ ivtmp.3484, ivtmp.3484,
	movw	sl, #59224	@ tmp622,
.L970:
	ldr	r2, [r6, #0]	@ tmp386, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	ip, [r6, #0]	@ tmp389, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r1, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r3, [r4, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r2, [r6, #0]	@ tmp392, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r1, [r4, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	r3, [r6, #0]	@ tmp396, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_0, ExistImgIdc_0.3566
	beq	.L968	@,
	cmp	r0, #0	@ pstLogicFs.3600,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0, <variable>.PhyFsID
.L968:
	str	r0, [r4, #1640]	@ ExistImgIdc_0, <variable>.img_idc
	add	r8, r8, #1	@ i.3585, i.3585,
	ldr	r1, [r6, #0]	@ tmp400, <variable>.pListX
	ldr	r3, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r3, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r0, [r4, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r2, [r6, #0]	@ tmp403, <variable>.pListX
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #672]	@ <variable>.poc, <variable>.poc
	str	ip, [r4, #1632]	@ <variable>.poc, <variable>.poc
	ldr	r1, [r6, #0]	@ tmp406, <variable>.pListX
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r3, [r4, #1627]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r0, [r6, #0]	@ tmp409, <variable>.pListX
	ldrb	r2, [r0, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	r2, [r4, #1626]	@ <variable>.structure, <variable>.frame_structure
	ldr	lr, [r6, #0]	@ tmp412, <variable>.pListX
	ldr	ip, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [ip, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	str	r1, [r4, #1648]	@ <variable>.frame.poc, <variable>.frame_poc
	mov	r1, #0	@,
	ldr	r3, [r6, #0]	@ tmp415, <variable>.pListX
	ldr	r0, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r0, #592]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	r2, [r4, #1652]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	lr, [r6], #4	@ tmp418, <variable>.pListX
	ldr	ip, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [ip, #632]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	r1, [r4, #1624]	@, <variable>.list_structure
	str	r3, [r4, #1656]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3489, ivtmp.3489,
	ldr	r0, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.3585
	bhi	.L970	@,
	ldr	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
.L966:
	movw	lr, #20688	@ tmp425,
	ldrb	ip, [r5, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L971	@,
	mov	r9, #20736	@ tmp427,
	ldr	r2, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L971	@,
	add	r4, r7, #1632	@ ivtmp.3473, pCurrSlicePara,
	add	r6, r5, #27136	@ ivtmp.3466, pH264Ctx,
	str	r7, [fp, #-52]	@ pCurrSlicePara, %sfp
	add	r6, r6, #40	@ ivtmp.3466, ivtmp.3466,
	ldr	r7, [fp, #-60]	@ ExistImgIdc_1.3567, %sfp
	add	r4, r4, #8	@ ivtmp.3473, ivtmp.3473,
	mov	r8, #0	@ i.3649,
	movw	sl, #59224	@ tmp618,
.L975:
	ldr	r3, [r6, #0]	@ tmp433, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r2, [r6, #0]	@ tmp436, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [ip, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r1, [r4, #1148]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r6, #0]	@ tmp439, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	ip, [r4, #1137]	@ <variable>.is_used, <variable>.is_used
	ldr	r1, [r6, #0]	@ tmp443, <variable>.pListX
	ldr	r3, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_1, ExistImgIdc_1.3567
	beq	.L973	@,
	cmp	r0, #0	@ pstLogicFs.3627,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1, <variable>.PhyFsID
.L973:
	str	r0, [r4, #0]	@ ExistImgIdc_1, <variable>.img_idc
	add	r8, r8, #1	@ i.3649, i.3649,
	ldr	ip, [r6, #0]	@ tmp447, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r1, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r0, [r4, #1156]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r3, [r6, #0]	@ tmp450, <variable>.pListX
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #672]	@ <variable>.poc, <variable>.poc
	str	r2, [r4, #1144]	@ <variable>.poc, <variable>.poc
	ldr	ip, [r6, #0]	@ tmp453, <variable>.pListX
	ldrb	r1, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r1, [r4, #1139]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r0, [r6, #0]	@ tmp456, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	r3, [r4, #1138]	@ <variable>.structure, <variable>.frame_structure
	ldr	lr, [r6, #0]	@ tmp459, <variable>.pListX
	ldr	r2, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	str	ip, [r4, #1160]	@ <variable>.frame.poc, <variable>.frame_poc
	mov	ip, #0	@,
	ldr	r1, [r6, #0]	@ tmp462, <variable>.pListX
	ldr	r0, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r0, #592]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	r3, [r4, #1164]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	lr, [r6], #4	@ tmp465, <variable>.pListX
	ldr	r2, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r2, #632]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	ip, [r4, #1136]	@, <variable>.list_structure
	str	r1, [r4, #1168]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3473, ivtmp.3473,
	ldr	r0, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.3649
	bhi	.L975	@,
.L1031:
	ldr	r7, [fp, #-52]	@ pCurrSlicePara, %sfp
	b	.L971	@
.L957:
	movw	r2, #59224	@ tmp370,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r5, r2]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLogicFs.3591,
	beq	.L1037	@,
	ldr	r8, [r3, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r9, [r8, #4]	@, <variable>.PhyFsID
	str	r9, [fp, #-60]	@, %sfp
	b	.L961	@
.L1032:
	movw	r3, #17640	@ tmp331,
	ldr	r2, [r5, r3]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	strb	r2, [r7, #4]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.weight_flag
	b	.L945	@
.L1035:
	mov	r9, #20736	@ tmp520,
	ldr	r2, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L971	@,
	add	sl, r7, #2800	@ ivtmp.3511, pCurrSlicePara,
	add	r4, r5, #27136	@ ivtmp.3502, pH264Ctx,
	add	r6, sl, #4	@ ivtmp.3511, ivtmp.3511,
	str	r7, [fp, #-52]	@ pCurrSlicePara, %sfp
	add	r4, r4, #40	@ ivtmp.3502, ivtmp.3502,
	mov	r8, #0	@ i.3680,
	movw	sl, #59224	@ tmp626,
	ldr	r7, [fp, #-60]	@ ExistImgIdc_1.3567, %sfp
	b	.L987	@
.L985:
	strb	r3, [r6, #-22]	@ temp.3718, <variable>.btm_structure
	ldr	r1, [r4, #0]	@ tmp562, <variable>.pListX
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r6, #-21]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r3, [r4, #0]	@ tmp565, <variable>.pListX
	ldr	lr, [r3, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r6, #4]	@ <variable>.poc, <variable>.btm_poc
.L986:
	ldr	ip, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r8, r8, #1	@ i.3680, i.3680,
	add	r4, r4, #4	@ ivtmp.3502, ivtmp.3502,
	add	r6, r6, #36	@ ivtmp.3511, ivtmp.3511,
	cmp	ip, r8	@ <variable>.CurrSlice.listXsize, i.3680
	bls	.L1031	@,
.L987:
	ldr	r3, [r4, #0]	@ tmp526, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r2, [r4, #0]	@ tmp529, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [ip, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r1, [r6, #-16]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r4, #0]	@ tmp532, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	ip, [r6, #-27]	@ <variable>.is_used, <variable>.is_used
	ldr	r1, [r4, #0]	@ tmp536, <variable>.pListX
	ldr	r3, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_1.3565, ExistImgIdc_1.3567
	beq	.L983	@,
	cmp	r0, #0	@ pstLogicFs.3695,
	ldrne	r3, [r0, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1.3565, <variable>.PhyFsID
.L983:
	str	r0, [r6, #-12]	@ ExistImgIdc_1.3565, <variable>.img_idc
	ldr	r3, [r4, #0]	@ tmp540, <variable>.pListX
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r2, [r6, #-8]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	ip, [r4, #0]	@ tmp543, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r1, #672]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #-20]	@ <variable>.poc, <variable>.poc
	ldr	r3, [r4, #0]	@ tmp546, <variable>.pListX
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r6, #-28]	@ <variable>.structure, <variable>.list_structure
	ldr	r2, [r4, #0]	@ tmp549, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [ip, #536]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r1, [r6, #-26]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #0]	@ tmp553, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.3718, <variable>.structure
	cmp	r3, #1	@ temp.3718,
	bne	.L985	@,
	strb	r3, [r6, #-24]	@ temp.3718, <variable>.top_structure
	ldr	r2, [r4, #0]	@ tmp556, <variable>.pListX
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r6, #-23]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r1, [r4, #0]	@ tmp559, <variable>.pListX
	ldr	r0, [r1, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #0]	@ <variable>.poc, <variable>.top_poc
	b	.L986	@
.L1036:
	add	r1, r5, #20992	@ ivtmp.3422, pH264Ctx,
	mov	r2, #0	@ i.3571,
	add	r3, r1, #152	@ ivtmp.3422, ivtmp.3422,
	movw	ip, #20748	@ tmp616,
.L992:
	ldr	lr, [r3, #0]	@ tmp601, <variable>.CurrSlice.wp_weight_l1_y
	add	r2, r2, #1	@ i.3571, i.3571,
	str	lr, [r0, #472]	@ tmp601, <variable>.wp_weight_l1_y
	ldr	r1, [r3, #128]	@ tmp602, <variable>.CurrSlice.wp_weight_l1_u
	str	r1, [r0, #600]	@ tmp602, <variable>.wp_weight_l1_u
	ldr	lr, [r3, #256]	@ tmp603, <variable>.CurrSlice.wp_weight_l1_v
	str	lr, [r0, #728]	@ tmp603, <variable>.wp_weight_l1_v
	ldr	r1, [r3, #768]	@ tmp604, <variable>.CurrSlice.wp_offset_l1_y
	str	r1, [r0, #1240]	@ tmp604, <variable>.wp_offset_l1_y
	ldr	lr, [r3, #896]	@ tmp605, <variable>.CurrSlice.wp_offset_l1_u
	str	lr, [r0, #1368]	@ tmp605, <variable>.wp_offset_l1_u
	ldr	r1, [r3, #1024]	@ tmp606, <variable>.CurrSlice.wp_offset_l1_v
	add	r3, r3, #4	@ ivtmp.3422, ivtmp.3422,
	str	r1, [r0, #1496]	@ tmp606, <variable>.wp_offset_l1_v
	add	r0, r0, #4	@ ivtmp.3443, ivtmp.3443,
	ldr	lr, [r5, ip]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	lr, r2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.3571
	bcs	.L992	@,
	b	.L947	@
.L1033:
	movw	r1, #:lower16:.LC27	@,
	movw	r2, #6930	@,
	movt	r1, #:upper16:.LC27	@,
	bl	dprint_vfmw	@
	b	.L993	@
.L1037:
	movw	r1, #:lower16:.LC27	@,
	movw	r2, #6948	@,
	movt	r1, #:upper16:.LC27	@,
	bl	dprint_vfmw	@
	b	.L993	@
	.fnend
	.size	WriteSliceMsg, .-WriteSliceMsg
	.align	2
	.global	GetAPC
	.type	GetAPC, %function
GetAPC:
	.fnstart
.LFB1566:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pFrameStore, pFrameStore
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	beq	.L1065	@,
	cmp	r2, #1	@ structure,
	beq	.L1042	@,
	cmp	r2, #2	@ structure,
	beq	.L1066	@,
	ldr	r7, [r5, #592]	@ toppoc, <variable>.top_field.poc
	ldr	r8, [r5, #632]	@ bottompoc, <variable>.bottom_field.poc
.L1044:
	movw	r3, #26908	@ tmp152,
	ldr	r0, [r6, r3]	@ D.39835, <variable>.APC.size
	cmp	r0, #0	@ D.39835,
	beq	.L1045	@,
	movw	r1, #26652	@ tmp153,
	ldr	r4, [r6, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	cmp	r4, #0	@ <variable>.APC.is_used,
	beq	.L1047	@,
	tst	r0, #1	@ D.39835,
	add	r3, r6, #26624	@ tmp191, pH264Ctx,
	add	r2, r3, #32	@ ivtmp.3774, tmp191,
	mov	r4, #0	@ i,
	bne	.L1048	@,
	ldr	ip, [r2, #0]	@ D.39807, <variable>.APC.is_used
	mov	r4, #1	@ i,
	add	r2, r3, #36	@ ivtmp.3774, tmp191,
	cmp	ip, #0	@ D.39807,
	bne	.L1048	@,
	b	.L1047	@
.L1053:
	ldr	ip, [r3], #4	@ D.39807, <variable>.APC.is_used
	cmp	ip, #0	@ D.39807,
	beq	.L1047	@,
	ldr	r1, [r2, #4]	@ D.39807, <variable>.APC.is_used
	add	r4, r4, #1	@ i, i,
	add	r2, r3, #4	@ ivtmp.3774, tmp196,
	cmp	r1, #0	@ D.39807,
	beq	.L1047	@,
.L1048:
	add	r4, r4, #1	@ i, i,
	mov	r3, r2	@ tmp196, ivtmp.3774
	cmp	r4, r0	@ i, D.39835
	bcc	.L1053	@,
.L1045:
	mvn	r0, #0	@ D.39805,
.L1040:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L1066:
	ldr	r7, [r5, #632]	@ toppoc, <variable>.bottom_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1044	@
.L1047:
	movw	r2, #59224	@ tmp155,
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r6, r2]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	ip, r0, #0	@ pstLogicFs,
	beq	.L1049	@,
	ldr	r0, [ip, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r0, #0	@ <variable>.pstDecodeFs,
	beq	.L1049	@,
	add	r2, r4, #6656	@ tmp160, i,
	movw	sl, #26912	@ tmp186,
	movw	r1, #:lower16:.LC28	@,
	mov	r3, r4	@, i
	add	r0, r6, r2, asl #2	@, tmp163, pH264Ctx, tmp160,
	ldr	r2, [r6, sl]	@ D.39822, <variable>.APC.used_size
	mov	sl, #1	@ tmp165,
	movt	r1, #:upper16:.LC28	@,
	mov	lr, r0	@ tmp184, tmp163
	str	sl, [r0, #28]	@ tmp165, <variable>.APC.is_used
	ldr	r0, [ip, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r2, #15	@ D.39822,
	addls	r2, r2, #1	@ iftmp.506, D.39822,
	movhi	r2, #16	@ iftmp.506,
	ldr	ip, [r0, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	mov	r0, #13	@,
	str	r7, [lr, #156]	@ toppoc, <variable>.APC.poc
	str	r8, [lr, #220]	@ bottompoc, <variable>.APC.poc
	str	ip, [lr, #92]	@ <variable>.PhyFsID, <variable>.APC.idc
	movw	lr, #26912	@ tmp187,
	str	r2, [r6, lr]	@ iftmp.506, <variable>.APC.used_size
	ldr	r2, [r5, #204]	@, <variable>.fs_image.image_id
	bl	dprint_vfmw	@
	str	r4, [r5, #704]	@ i, <variable>.apc_idc
	mov	r0, #0	@ D.39805,
	b	.L1040	@
.L1042:
	ldr	r7, [r5, #592]	@ toppoc, <variable>.top_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1044	@
.L1065:
	mov	r0, r5	@, pFrameStore
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	mov	r3, #1968	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39805,
	b	.L1040	@
.L1049:
	mov	lr, #0	@ tmp190,
	ldrb	r3, [r5, #2]	@ zero_extendqisi2	@ D.39830, <variable>.is_reference
	ldr	r2, [r5, #656]	@ D.39811, <variable>.logic_fs_id
	mov	r0, lr	@, tmp190
	movw	r1, #:lower16:.LC29	@,
	movt	r1, #:upper16:.LC29	@,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39805,
	b	.L1040	@
	.fnend
	.size	GetAPC, .-GetAPC
	.align	2
	.global	ExchangePts
	.type	ExchangePts, %function
ExchangePts:
	.fnstart
.LFB1559:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r1, [fp, #-60]	@ pFrameStore, %sfp
	ldrd	r2, [r1, #16]	@ <variable>.fs_image.PTS, pFrameStore,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mvn	r1, #0	@,
	mvn	r0, #0	@ tmp145,
	cmp	r3, r1	@ <variable>.fs_image.PTS, tmp145
	cmpeq	r2, r0	@ <variable>.fs_image.PTS, tmp145
	beq	.L1073	@,
	movw	r7, #26636	@ tmp146,
	ldr	r3, [r4, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L1073	@,
	add	r5, r4, #26368	@ ivtmp.3808, pH264Ctx,
	mvn	r8, #1	@ MinPts.3815,
	add	r5, r5, #72	@ ivtmp.3808, ivtmp.3808,
	mvn	r9, #0	@ MinPts.3815,
	mov	r6, #0	@ i,
	movw	sl, #59224	@ tmp169,
	mvn	r0, #0	@,
	str	r0, [fp, #-56]	@, %sfp
.L1072:
	ldr	r3, [r5, #0]	@ D.39440, <variable>.DPB.fs
	cmp	r3, #0	@ D.39440,
	beq	.L1069	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1069	@,
	ldrsb	r1, [r0, #1]	@ D.39448, <variable>.s32DispState
	cmp	r1, #3	@ D.39448,
	cmpne	r1, #0	@, D.39448,
	beq	.L1069	@,
	ldr	r2, [r5, #0]	@ tmp161, <variable>.DPB.fs
	ldrd	r0, [r2, #16]	@, tmp161,
	cmp	r1, r9	@, MinPts.3815
	cmpeq	r0, r8	@, MinPts.3815
	strcc	r6, [fp, #-56]	@ i, %sfp
	strd	r0, [fp, #-52]	@,,
	bcc	.L1070	@,
.L1069:
	strd	r8, [fp, #-52]	@ MinPts.3815,,
.L1070:
	ldr	ip, [r4, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r6, r6, #1	@ i, i,
	ldrd	r8, [fp, #-52]	@ MinPts.3815,,
	add	r5, r5, #4	@ ivtmp.3808, ivtmp.3808,
	cmp	r6, ip	@ i, <variable>.DPB.used_size
	bcc	.L1072	@,
	ldr	r3, [fp, #-56]	@, %sfp
	cmn	r3, #1	@,
	beq	.L1073	@,
	ldr	r6, [fp, #-60]	@, %sfp
	mov	r0, r8	@, MinPts.3815
	mov	r1, r9	@, MinPts.3815
	ldrd	r2, [r6, #16]	@ temp.3812,,
	cmp	r1, r3	@, temp.3812
	cmpeq	r0, r2	@, temp.3812
	bcc	.L1074	@,
.L1073:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1074:
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC30	@,
	movt	r1, #:upper16:.LC30	@,
	mov	r6, r8	@, MinPts.3815
	mov	r7, r9	@, MinPts.3815
	strd	r6, [sp]	@,
	bl	dprint_vfmw	@
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	add	ip, r1, #6592	@ tmp165,,
	add	r2, ip, #18	@ tmp165, tmp165,
	ldrd	r0, [r7, #16]	@ <variable>.fs_image.PTS,,
	ldr	r7, [r4, r2, asl #2]	@ tmp167, <variable>.DPB.fs
	strd	r0, [r7, #16]	@ <variable>.fs_image.PTS, tmp167,
	ldrd	r6, [fp, #-52]	@,,
	ldr	r0, [fp, #-60]	@, %sfp
	strd	r6, [r0, #16]	@,,
	b	.L1073	@
	.fnend
	.size	ExchangePts, .-ExchangePts
	.align	2
	.global	CheckFrameStore
	.type	CheckFrameStore, %function
CheckFrameStore:
	.fnstart
.LFB1558:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #57720	@ tmp145,
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r3, [r5, r0]	@ <variable>.IDRFound, <variable>.IDRFound
	cmp	r3, #0	@ <variable>.IDRFound,
	bne	.L1076	@,
	ldr	r1, [r1, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r1, #1	@ <variable>.eFoState,
	beq	.L1077	@,
	movw	ip, #59152	@ tmp148,
	ldr	r2, [r5, ip]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r2, #0	@ <variable>.OldDecMode,
	beq	.L1093	@,
.L1077:
	movw	r1, #57720	@ tmp152,
	mov	lr, #1	@ tmp153,
	str	lr, [r5, r1]	@ tmp153, <variable>.IDRFound
.L1076:
	movw	r2, #59224	@ tmp154,
	ldr	r1, [r4, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r5, r2]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1079	@,
	ldrsb	r3, [r0, #1]	@ D.39375, <variable>.s32DispState
	cmp	r3, #3	@ D.39375,
	cmpne	r3, #0	@, D.39375,
	beq	.L1094	@,
	ldrb	r2, [r4, #1]	@ zero_extendqisi2	@ D.39392, <variable>.is_used
	cmp	r2, #0	@ D.39392,
	ldreqb	r3, [r4, #0]	@ zero_extendqisi2	@ prephitmp.3830, <variable>.non_existing
	beq	.L1089	@,
	ldrb	r3, [r4, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	beq	.L1089	@,
	ldr	r3, [r4, #0]	@ tmp178,* pFrameStore
	movw	ip, #:lower16:50332416	@ tmp179,
	movt	ip, #:upper16:50332416	@ tmp179,
	bic	r1, r3, #16711680	@ tmp176, tmp178,
	bic	lr, r1, #255	@ tmp176, tmp176,
	cmp	lr, ip	@ tmp176, tmp179
	beq	.L1095	@,
	cmp	r2, #1	@ D.39392,
	beq	.L1096	@,
	cmp	r2, #2	@ D.39392,
	beq	.L1097	@,
.L1086:
	ldr	lr, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #208]	@ D.39418, <variable>.stDispImg.error_level
	ldr	r3, [lr, #4]	@ D.39419, <variable>.s32OutErrThr
	cmp	r2, r3	@ D.39418, D.39419
	movls	r0, #0	@ D.39369,
	bhi	.L1098	@,
.L1078:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L1097:
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@ temp.3848, <variable>.mode_skip_flag
	tst	r3, #2	@ temp.3848,
	beq	.L1086	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC36	@,
	movt	r1, #:upper16:.LC36	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39369,
	b	.L1078	@
.L1094:
	movw	r1, #:lower16:.LC31	@,
	ldr	r2, [r4, #656]	@, <variable>.logic_fs_id
	movt	r1, #:upper16:.LC31	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
.L1081:
	ldr	r3, [r4, #676]	@ <variable>.eFoState, <variable>.eFoState
	mvn	r0, #2	@ D.39369,
	cmp	r3, #1	@ <variable>.eFoState,
	moveq	r3, #2	@ tmp173,
	streq	r3, [r4, #676]	@ tmp173, <variable>.eFoState
	b	.L1078	@
.L1096:
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@ temp.3846, <variable>.mode_skip_flag
	tst	r3, #1	@ temp.3846,
	beq	.L1086	@,
	mov	r0, r2	@, D.39392
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39369,
	b	.L1078	@
.L1079:
	ldr	ip, [r4, #656]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	movw	r1, #:lower16:.LC32	@,
	ldr	r3, [r4, #676]	@ <variable>.eFoState, <variable>.eFoState
	movt	r1, #:upper16:.LC32	@,
	mov	r2, r4	@, pFrameStore
	mov	r0, #1	@,
	str	ip, [sp, #0]	@ <variable>.logic_fs_id,
	bl	dprint_vfmw	@
	b	.L1081	@
.L1093:
	ldr	r0, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r0, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #0	@ <variable>.s32DecOrderOutput,
	bne	.L1077	@,
	mvn	r0, #0	@ D.39369,
	b	.L1078	@
.L1089:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC33	@,
	movt	r1, #:upper16:.LC33	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39369,
	b	.L1078	@
.L1098:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39369,
	b	.L1078	@
.L1095:
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@, <variable>.mode_skip_flag
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39369,
	b	.L1078	@
	.fnend
	.size	CheckFrameStore, .-CheckFrameStore
	.align	2
	.global	H264DEC_RecycleImage
	.type	H264DEC_RecycleImage, %function
H264DEC_RecycleImage:
	.fnstart
.LFB1667:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #59224	@ tmp144,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r5, r1	@ PicID, PicID
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r1, r5	@, PicID
	bl	FSP_GetLogicFs	@
	subs	r7, r0, #0	@ pstLogicFs,
	bne	.L1107	@,
.L1100:
	mvn	r0, #0	@ D.47240,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1107:
	ldrsb	r3, [r7, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r3, #0	@ <variable>.s32DispState,
	beq	.L1100	@,
	ldr	r1, [r7, #220]	@ D.47242, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ D.47242,
	beq	.L1101	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp149,
	str	r0, [r7, #220]	@ tmp149, <variable>.stDispImg.p_usrdat
.L1101:
	ldr	r1, [r7, #224]	@ temp.3882, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.3882,
	beq	.L1102	@,
	movw	r2, #59224	@ tmp150,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp152,
	str	r1, [r7, #224]	@ tmp152, <variable>.stDispImg.p_usrdat
.L1102:
	ldr	r1, [r7, #228]	@ temp.3884, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.3884,
	beq	.L1103	@,
	movw	lr, #59224	@ tmp153,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	ip, #0	@ tmp155,
	str	ip, [r7, #228]	@ tmp155, <variable>.stDispImg.p_usrdat
.L1103:
	ldr	r1, [r7, #232]	@ temp.3878, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.3878,
	beq	.L1104	@,
	movw	r2, #59224	@ tmp156,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r3, #0	@ tmp158,
	str	r3, [r7, #232]	@ tmp158, <variable>.stDispImg.p_usrdat
.L1104:
	movw	ip, #59224	@ tmp159,
	mov	r1, r5	@, PicID
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mov	r0, #0	@ D.47240,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	H264DEC_RecycleImage, .-H264DEC_RecycleImage
	.align	2
	.global	InquireSliceExtProperty
	.type	InquireSliceExtProperty, %function
InquireSliceExtProperty:
	.fnstart
.LFB1660:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	add	r0, r0, #13504	@, pH264Ctx,
	mov	r1, #24	@,
	add	r0, r0, #24	@,,
	bl	BsGet	@
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	r2, r0, #23, #1	@ tmp143, D.46800,,
	strb	r2, [r1, #3]	@ tmp143, <variable>.svc_extension_flag
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r2, #3]	@ zero_extendqisi2	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r3, #0	@ <variable>.svc_extension_flag,
	bne	.L1109	@,
	movw	ip, #57080	@ tmp147,
	mov	r0, #0	@,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ prephitmp.3900, <variable>.SVC_NALUSVCEXT_S.idr_flag
	cmp	r3, #1	@ prephitmp.3900,
	moveq	r3, #5	@ tmp197,
	streqb	r3, [r2, #2]	@ tmp197, <variable>.nal_unit_type
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1109:
	movw	r3, #57089	@ tmp192,
	and	r1, r0, #3	@ tmp194, D.46800,
	strb	r1, [r4, r3]	@ tmp194, <variable>.SVC_NALUSVCEXT_S.reserved_three_2bits
	movw	r1, #57081	@ tmp152,
	ubfx	ip, r0, #16, #6	@ tmp155, D.46800,,
	movw	lr, #57080	@ tmp150,
	strb	ip, [r4, r1]	@ tmp155, <variable>.SVC_NALUSVCEXT_S.priority_id
	movw	r1, #57082	@ tmp157,
	ubfx	r3, r0, #22, #1	@ prephitmp.3900, D.46800,,
	strb	r3, [r4, lr]	@ prephitmp.3900, <variable>.SVC_NALUSVCEXT_S.idr_flag
	ubfx	lr, r0, #15, #1	@ tmp160, D.46800,,
	strb	lr, [r4, r1]	@ tmp160, <variable>.SVC_NALUSVCEXT_S.no_inter_layer_pred_flag
	movw	lr, #57083	@ tmp162,
	ubfx	ip, r0, #12, #3	@ tmp165, D.46800,,
	strb	ip, [r4, lr]	@ tmp165, <variable>.SVC_NALUSVCEXT_S.dependency_id
	movw	lr, #57084	@ tmp167,
	ubfx	r1, r0, #8, #4	@ tmp170, D.46800,,
	strb	r1, [r4, lr]	@ tmp170, <variable>.SVC_NALUSVCEXT_S.quality_id
	movw	r1, #57085	@ tmp172,
	ubfx	ip, r0, #5, #3	@ tmp175, D.46800,,
	cmp	r3, #1	@ prephitmp.3900,
	strb	ip, [r4, r1]	@ tmp175, <variable>.SVC_NALUSVCEXT_S.temporal_id
	movw	r1, #57086	@ tmp177,
	ubfx	lr, r0, #4, #1	@ tmp180, D.46800,,
	strb	lr, [r4, r1]	@ tmp180, <variable>.SVC_NALUSVCEXT_S.use_ref_base_pic_flag
	movw	lr, #57087	@ tmp182,
	mov	r1, #57088	@ tmp187,
	ubfx	ip, r0, #3, #1	@ tmp185, D.46800,,
	moveq	r3, #5	@ tmp197,
	strb	ip, [r4, lr]	@ tmp185, <variable>.SVC_NALUSVCEXT_S.discardable_flag
	ubfx	lr, r0, #2, #1	@ tmp190, D.46800,,
	mov	r0, #0	@,
	strb	lr, [r4, r1]	@ tmp190, <variable>.SVC_NALUSVCEXT_S.output_flag
	streqb	r3, [r2, #2]	@ tmp197, <variable>.nal_unit_type
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	InquireSliceExtProperty, .-InquireSliceExtProperty
	.align	2
	.global	u_1
	.type	u_1, %function
u_1:
	.fnstart
.LFB1531:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	add	r0, r0, #13504	@, pH264Ctx,
	mov	r6, r1	@ SE_TRACEstring, SE_TRACEstring
	add	r0, r0, #24	@,,
	mov	r1, #1	@,
	bl	BsGet	@
	ldr	ip, [r5, #368]	@ D.38654, <variable>.pCurrNal
	mov	r2, r6	@, SE_TRACEstring
	movw	r1, #:lower16:.LC39	@,
	movt	r1, #:upper16:.LC39	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	lr, lr, #1	@ tmp142, <variable>.nal_bitoffset,
	str	lr, [ip, #64]	@ tmp142, <variable>.nal_bitoffset
	mov	r4, r0	@ D.38653,
	mov	r0, #21	@,
	mov	r3, r4	@, D.38653
	bl	dprint_vfmw	@
	mov	r0, r4	@, D.38653
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	u_1, .-u_1
	.align	2
	.global	u_v
	.type	u_v, %function
u_v:
	.fnstart
.LFB1530:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	add	r0, r0, #13504	@, pH264Ctx,
	mov	r7, r2	@ SE_TRACEstring, SE_TRACEstring
	add	r0, r0, #24	@,,
	mov	r5, r1	@ LenInBits, LenInBits
	bl	BsGet	@
	ldr	ip, [r6, #368]	@ D.38642, <variable>.pCurrNal
	mov	r2, r7	@, SE_TRACEstring
	movw	r1, #:lower16:.LC39	@,
	movt	r1, #:upper16:.LC39	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp142, <variable>.nal_bitoffset, LenInBits
	str	r5, [ip, #64]	@ tmp142, <variable>.nal_bitoffset
	mov	r4, r0	@ INFO,
	mov	r0, #21	@,
	mov	r3, r4	@, INFO
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	u_v, .-u_v
	.align	2
	.global	H264_DecPicTimingSEI
	.type	H264_DecPicTimingSEI, %function
H264_DecPicTimingSEI:
	.fnstart
.LFB1649:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #13588	@ tmp150,
	movw	ip, #14340	@ tmp151,
	ldr	r4, [r0, r3]	@ pSPS, <variable>.SPS
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	ldr	r0, [r0, ip]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	mov	r1, #4000	@ tmp154,
	mla	r3, r1, r0, r4	@ pSPS.3989, tmp154, <variable>.CurrSPS.seq_parameter_set_id, pSPS
	ldrb	r2, [r3, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	movne	r4, r3	@ pSPS, pSPS.3989
	bne	.L1123	@,
	movw	r2, #13576	@ tmp156,
	ldr	ip, [r5, r2]	@ D.45872, <variable>.MaxSpsNum
	cmp	ip, #0	@ D.45872,
	ble	.L1119	@,
	ldrb	r2, [r4, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	bne	.L1120	@,
	tst	ip, #1	@ D.45872,
	add	r3, r4, #4000	@ ivtmp.3985, pSPS,
	bne	.L1122	@,
	ldrb	r0, [r3, #23]	@ zero_extendqisi2	@ D.45869, <variable>.is_valid
	mov	r4, r3	@ pSPS, ivtmp.3985
	mov	r2, #1	@ i,
	add	r3, r3, #4000	@ ivtmp.3985, ivtmp.3985,
	cmp	r0, #0	@ D.45869,
	beq	.L1122	@,
	b	.L1120	@
.L1124:
	ldrb	r0, [r3, #23]	@ zero_extendqisi2	@ D.45869, <variable>.is_valid
	cmp	r0, #0	@ D.45869,
	bne	.L1120	@,
	ldrb	r0, [r3, #4023]	@ zero_extendqisi2	@ D.45869, <variable>.is_valid
	mov	r4, r1	@ pSPS, tmp178
	add	r3, r3, #8000	@ ivtmp.3985, ivtmp.3985,
	cmp	r0, #0	@ D.45869,
	bne	.L1120	@,
.L1122:
	add	r1, r2, #1	@ tmp179, i,
	mov	r4, r3	@ pSPS, ivtmp.3985
	cmp	ip, r1	@ D.45872, tmp179
	add	r2, r1, #1	@ i, tmp179,
	add	r1, r3, #4000	@ tmp178, ivtmp.3985,
	bgt	.L1124	@,
.L1119:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC40	@,
	movt	r1, #:upper16:.LC40	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.45876,
.L1125:
	mov	r0, r3	@, D.45876
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1120:
	cmp	r4, #0	@ pSPS,
	beq	.L1119	@,
.L1123:
	ldrb	ip, [r4, #22]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	ip, #0	@ <variable>.vui_parameters_present_flag,
	beq	.L1126	@,
	ldrb	r3, [r4, #35]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag, <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag
	cmp	r3, #0	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag,
	beq	.L1141	@,
	ldr	lr, [r4, #388]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r6, [r4, #392]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, lr, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r6, #1	@ dpb_output_len, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1,
.L1129:
	mov	r0, r5	@, pH264Ctx
	movw	r2, #:lower16:.LC41	@,
	movt	r2, #:upper16:.LC41	@,
	bl	u_v	@
	movw	r3, #26432	@ tmp167,
	mov	r1, r6	@, dpb_output_len
	movw	r2, #:lower16:.LC42	@,
	movt	r2, #:upper16:.LC42	@,
	str	r0, [r5, r3]	@, <variable>.PicTimingSEI.cpb_removal_delay
	mov	r0, r5	@, pH264Ctx
	bl	u_v	@
	movw	ip, #26436	@ tmp169,
	str	r0, [r5, ip]	@, <variable>.PicTimingSEI.dpb_output_delay
.L1126:
	ldrb	r3, [r4, #39]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.pic_struct_present_flag, <variable>.vui_seq_parameters.pic_struct_present_flag
	cmp	r3, #0	@ <variable>.vui_seq_parameters.pic_struct_present_flag,
	beq	.L1125	@,
	mov	r0, r5	@, pH264Ctx
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC43	@,
	movt	r2, #:upper16:.LC43	@,
	bl	u_v	@
	mov	r3, #0	@ D.45876,
	movw	r2, #26428	@ tmp172,
	strb	r0, [r5, r2]	@, <variable>.PicTimingSEI.pic_struct
	mov	r0, r3	@, D.45876
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1141:
	ldrb	r2, [r4, #38]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag, <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag,
	beq	.L1126	@,
	ldr	r1, [r4, #700]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r0, [r4, #704]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, r1, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r0, #1	@ dpb_output_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1,
	b	.L1129	@
	.fnend
	.size	H264_DecPicTimingSEI, .-H264_DecPicTimingSEI
	.align	2
	.global	Sps_SvcExt
	.type	Sps_SvcExt, %function
Sps_SvcExt:
	.fnstart
.LFB1644:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #20700	@ tmp149,
	movw	r1, #13592	@ tmp151,
	ldr	r5, [r0, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r6, [r0, r1]	@ <variable>.PPS, <variable>.PPS
	mov	ip, #2208	@ tmp153,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	add	r0, r0, #13504	@, pH264Ctx,
	movw	r2, #13588	@ tmp147,
	mov	r1, #32	@,
	mla	r3, ip, r5, r6	@ tmp154, tmp153, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	add	r0, r0, #24	@,,
	ldr	r6, [r4, r2]	@ D.45602, <variable>.SPS
	ldr	r5, [r3, #28]	@ D.45603, <variable>.seq_parameter_set_id
	bl	BsGet	@
	movw	r1, #:lower16:.LC44	@,
	movt	r1, #:upper16:.LC44	@,
	mov	r7, r0	@ D.45606,
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC45	@,
	movt	r1, #:upper16:.LC45	@,
	mov	r2, r0	@ inter_layer_present_flag,
	mov	r0, #17	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC46	@,
	movt	r2, #:upper16:.LC46	@,
	bl	u_v	@
	cmp	r0, #1	@,
	beq	.L1150	@,
	mov	r2, #4000	@ tmp162,
	mla	r5, r2, r5, r6	@ pSPS, tmp162, D.45603, D.45602
	ldr	r3, [r5, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	sub	lr, r3, #1	@ tmp163, <variable>.chroma_format_idc,
	cmp	lr, #1	@ tmp163,
	bls	.L1151	@,
.L1145:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC52	@,
	movt	r1, #:upper16:.LC52	@,
	bl	u_1	@
	cmp	r0, #0	@,
	bne	.L1152	@,
.L1146:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC55	@,
	movt	r1, #:upper16:.LC55	@,
	bl	u_1	@
	cmp	r0, #1	@ slice_header_restriction_flag,
	beq	.L1149	@,
	ldr	lr, [r5, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	mov	r2, r0	@, slice_header_restriction_flag
	movw	r1, #:lower16:.LC56	@,
	mov	r3, r7	@, D.45606
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC56	@,
	str	lr, [sp, #0]	@ <variable>.chroma_format_idc,
	bl	dprint_vfmw	@
.L1149:
	mov	r0, #0	@ D.45613,
.L1144:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L1152:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC53	@,
	movt	r1, #:upper16:.LC53	@,
	bl	u_1	@
	movw	r1, #:lower16:.LC54	@,
	movt	r1, #:upper16:.LC54	@,
	mov	r2, r0	@ adaptive_tcoeff_level_prediction_flag,
	mov	r0, #17	@,
	bl	dprint_vfmw	@
	b	.L1146	@
.L1151:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC48	@,
	movt	r1, #:upper16:.LC48	@,
	bl	u_1	@
	movw	r1, #:lower16:.LC49	@,
	movt	r1, #:upper16:.LC49	@,
	mov	r2, r0	@ chroma_phase_x_plus1_flag,
	mov	r0, #17	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	ip, #1	@ <variable>.chroma_format_idc,
	bne	.L1145	@,
	mov	r1, #2	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC50	@,
	movt	r2, #:upper16:.LC50	@,
	bl	u_v	@
	movw	r1, #:lower16:.LC51	@,
	movt	r1, #:upper16:.LC51	@,
	mov	r2, r0	@ D.45622,
	mov	r0, #17	@,
	bl	dprint_vfmw	@
	b	.L1145	@
.L1150:
	movw	r1, #:lower16:.LC47	@,
	movt	r1, #:upper16:.LC47	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45613,
	b	.L1144	@
	.fnend
	.size	Sps_SvcExt, .-Sps_SvcExt
	.align	2
	.global	GetBackPicFromVOQueue
	.type	GetBackPicFromVOQueue, %function
GetBackPicFromVOQueue:
	.fnstart
.LFB1606:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #59224	@ tmp144,
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	beq	.L1171	@,
.L1154:
	movw	sl, #57704	@ tmp147,
	ldr	r0, [r6, sl]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r0, #0	@ <variable>.TotalFsNum,
	beq	.L1155	@,
	add	r4, r6, #27136	@ ivtmp.4051, pH264Ctx,
	mov	r7, #0	@ i,
	add	r4, r4, #177	@ ivtmp.4051, ivtmp.4051,
	mov	r5, r7	@ tmp172, i
	movw	r8, #59224	@ tmp173,
.L1160:
	ldr	r1, [r4, #219]	@ D.41845, <variable>.fs_image.p_usrdat
	add	r7, r7, #1	@ i, i,
	strb	r5, [r4, #0]	@ tmp172, <variable>.is_used
	cmp	r1, #0	@ D.41845,
	strb	r5, [r4, #1]	@ tmp172, <variable>.is_reference
	beq	.L1156	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #219]	@ tmp172, <variable>.fs_image.p_usrdat
.L1156:
	ldr	r1, [r4, #223]	@ temp.4064, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4064,
	beq	.L1157	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #223]	@ tmp172, <variable>.fs_image.p_usrdat
.L1157:
	ldr	r1, [r4, #227]	@ temp.4066, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4066,
	beq	.L1158	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #227]	@ tmp172, <variable>.fs_image.p_usrdat
.L1158:
	ldr	r1, [r4, #231]	@ temp.4059, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4059,
	beq	.L1159	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #231]	@ tmp172, <variable>.fs_image.p_usrdat
.L1159:
	ldr	r1, [r6, sl]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r4, r4, #712	@ ivtmp.4051, ivtmp.4051,
	cmp	r1, r7	@ <variable>.TotalFsNum, i
	bhi	.L1160	@,
.L1155:
	movw	r2, #57708	@ tmp168,
	ldr	ip, [r6, r2]	@ D.41849, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.41849,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r6, r6, #57600	@ tmp169, pH264Ctx,
	mov	r2, #1	@ i.4061,
	add	r3, r6, #36	@ ivtmp.4046, tmp169,
	cmp	r2, ip	@ i.4061, D.41849
	sub	lr, ip, #1	@ tmp175, D.41849,
	mov	r0, #0	@ tmp171,
	add	r1, r6, #40	@ ivtmp.4046, tmp169,
	str	r0, [r3, #0]	@ tmp171, <variable>.PmvStoreUsedFlag
	and	r3, lr, r2	@ tmp177, tmp175,
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r3, #0	@ tmp177,
	beq	.L1162	@,
	mov	r2, #2	@ i.4061,
	cmp	r2, ip	@ i.4061, D.41849
	str	r0, [r1, #0]	@ tmp171, <variable>.PmvStoreUsedFlag
	add	r1, r6, #44	@ ivtmp.4046, tmp169,
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1162:
	add	r2, r2, #2	@ i.4061, i.4061,
	mov	lr, r1	@ tmp179, ivtmp.4046
	cmp	r2, ip	@ i.4061, D.41849
	str	r0, [lr], #4	@ tmp171, <variable>.PmvStoreUsedFlag
	str	r0, [r1, #4]	@ tmp171, <variable>.PmvStoreUsedFlag
	add	r1, lr, #4	@ ivtmp.4046, tmp179,
	bcc	.L1162	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1171:
	add	r0, r6, #8	@, pH264Ctx,
	bl	ResetVoQueue	@
	b	.L1154	@
	.fnend
	.size	GetBackPicFromVOQueue, .-GetBackPicFromVOQueue
	.align	2
	.global	ReleaseNAL
	.type	ReleaseNAL, %function
ReleaseNAL:
	.fnstart
.LFB1579:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r1, #0	@ pNalu, pNalu
	mov	r6, r0	@ ChanID, ChanID
	beq	.L1178	@,
	ldr	r3, [r4, #8]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r5, #0	@ tmp137,
	strb	r5, [r4, #1]	@ tmp137, <variable>.is_valid
	cmp	r3, r5	@ <variable>.streamBuffer,
	strb	r5, [r4, #4]	@ tmp137, <variable>.nal_integ
	beq	.L1175	@,
	ldr	r1, [r4, #32]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC57	@,
	ldr	r2, [r4, #8]	@, <variable>.streamBuffer
	movt	r1, #:upper16:.LC57	@,
	ldr	r3, [r4, #12]	@, <variable>.bitstream_length
	bl	dprint_vfmw	@
	str	r5, [r4, #12]	@ tmp137, <variable>.bitstream_length
	str	r5, [r4, #8]	@ tmp137, <variable>.streamBuffer
	str	r5, [r4, #24]	@ tmp137, <variable>.bitsoffset
.L1175:
	ldr	r0, [r4, #36]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r0, #0	@ <variable>.streamBuffer,
	beq	.L1176	@,
	ldr	r1, [r4, #60]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC57	@,
	ldr	r2, [r4, #36]	@, <variable>.streamBuffer
	movt	r1, #:upper16:.LC57	@,
	ldr	r3, [r4, #40]	@, <variable>.bitstream_length
	bl	dprint_vfmw	@
	mov	r1, #0	@ tmp154,
	str	r1, [r4, #40]	@ tmp154, <variable>.bitstream_length
	str	r1, [r4, #36]	@ tmp154, <variable>.streamBuffer
	str	r1, [r4, #52]	@ tmp154, <variable>.bitsoffset
.L1176:
	mov	r2, #0	@ tmp157,
	str	r2, [r4, #68]	@ tmp157, <variable>.nal_segment
	strb	r2, [r4, #0]	@ tmp157, <variable>.nal_used_segment
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1178:
	mov	r0, r4	@, pNalu
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #3791	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	ReleaseNAL, .-ReleaseNAL
	.align	2
	.global	ClearAllSlice
	.type	ClearAllSlice, %function
ClearAllSlice:
	.fnstart
.LFB1535:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r4, r0, #57088	@ ivtmp.4134, pH264Ctx,
	add	sl, r0, #57600	@ D.51108, pH264Ctx,
	add	r4, r4, #4	@ ivtmp.4134, ivtmp.4134,
	add	sl, sl, #36	@ D.51108, D.51108,
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	movw	r8, #59224	@ tmp148,
	mov	r7, #0	@ tmp149,
.L1181:
	ldr	r1, [r4, #0]	@ D.38698, <variable>.pSliceNal
	add	r5, r4, #4	@ tmp150, ivtmp.4134,
	cmp	r1, #0	@ D.38698,
	beq	.L1180	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	ReleaseNAL	@
	str	r7, [r4, #0]	@ tmp149, <variable>.pSliceNal
.L1180:
	ldr	r1, [r4, #4]	@ D.38698, <variable>.pSliceNal
	cmp	r1, #0	@ D.38698,
	beq	.L1184	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	ReleaseNAL	@
	str	r7, [r4, #4]	@ tmp149, <variable>.pSliceNal
.L1184:
	add	r4, r5, #4	@ ivtmp.4134, tmp150,
	cmp	r4, sl	@ ivtmp.4134, D.51108
	bne	.L1181	@,
	movw	r1, #59148	@ tmp143,
	movw	r3, #59208	@ tmp145,
	mov	r0, #0	@ tmp144,
	str	r0, [r6, r1]	@ tmp144, <variable>.SliceParaNum
	str	r0, [r6, r3]	@ tmp144, <variable>.MaxBytesReceived
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	ClearAllSlice, .-ClearAllSlice
	.align	2
	.global	H264_ClearCurrPic
	.type	H264_ClearCurrPic, %function
H264_ClearCurrPic:
	.fnstart
.LFB1536:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	ClearAllSlice	@
	movw	r1, #13580	@ tmp136,
	ldr	r0, [r4, r1]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	ip, #22336	@ tmp140,
	mov	r3, #0	@ tmp141,
	movw	r2, #22344	@ tmp135,
	strb	r3, [r4, ip]	@ tmp141, <variable>.PrevSlice.field_pic_flag
	movw	ip, #22352	@ tmp138,
	str	r0, [r4, r2]	@ <variable>.MaxPpsNum, <variable>.PrevSlice.pic_parameter_set_id
	movw	r1, #22368	@ tmp155,
	movw	r2, #:lower16:88888	@ tmp162,
	movt	r2, #:upper16:88888	@ tmp162,
	str	r2, [r4, ip]	@ tmp162, <variable>.PrevSlice.frame_num
	movw	r2, #22337	@ tmp143,
	str	r3, [r4, r1]	@ tmp141, <variable>.PrevSlice.delta_pic_order_cnt
	movw	ip, #22348	@ tmp146,
	mov	r1, #2	@ tmp144,
	strb	r1, [r4, r2]	@ tmp144, <variable>.PrevSlice.bottom_field_flag
	movw	r2, #22338	@ tmp148,
	mov	r1, #7	@ tmp147,
	str	r1, [r4, ip]	@ tmp147, <variable>.PrevSlice.nal_ref_idc
	mov	ip, #32	@ tmp149,
	movw	r1, #22360	@ tmp151,
	strb	ip, [r4, r2]	@ tmp149, <variable>.PrevSlice.nal_unit_type
	movw	r2, #22364	@ tmp153,
	mov	ip, #3	@ tmp152,
	str	ip, [r4, r1]	@ tmp152, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	r1, #0	@ tmp154,
	movw	ip, #22376	@ tmp159,
	str	r1, [r4, r2]	@ tmp154, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	movw	r2, #22372	@ tmp157,
	mov	r1, #262144	@ tmp160,
	mov	r0, r3	@, tmp141
	str	r1, [r4, ip]	@ tmp160, <variable>.PrevSlice.first_mb_in_slice
	str	r3, [r4, r2]	@ tmp141, <variable>.PrevSlice.delta_pic_order_cnt
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	H264_ClearCurrPic, .-H264_ClearCurrPic
	.align	2
	.global	ClearAllNal
	.type	ClearAllNal, %function
ClearAllNal:
	.fnstart
.LFB1533:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	movw	r7, #59224	@ tmp147,
	cmp	r3, #1	@ <variable>.is_valid,
	beq	.L1202	@,
.L1195:
	mov	r3, #1	@ i,
	add	r2, r6, #96	@ ivtmp.4192, pH264Ctx,
	b	.L1192	@
.L1191:
	ldrb	r0, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	beq	.L1203	@,
.L1197:
	add	r3, r5, #1	@ i, tmp148,
	add	r2, r4, #96	@ ivtmp.4192, tmp149,
	cmp	r3, #137	@ i,
	beq	.L1204	@,
.L1192:
	add	r4, r2, #96	@ tmp149, ivtmp.4192,
	ldrb	r2, [r2, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r5, r3, #1	@ tmp148, i,
	cmp	r2, #1	@ <variable>.is_valid,
	bne	.L1191	@,
	add	ip, r3, r3, asl #1	@, tmp142, i, i,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	add	r1, r6, ip, asl #5	@, tmp144, pH264Ctx, tmp142,
	add	r1, r1, #376	@, tmp144,
	bl	ReleaseNAL	@
	ldrb	r0, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	bne	.L1197	@,
.L1203:
	add	r3, r5, r5, asl #1	@, tmp166, tmp148, tmp148,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	add	lr, r6, r3, asl #5	@, tmp168, pH264Ctx, tmp166,
	add	r1, lr, #376	@, tmp168,
	bl	ReleaseNAL	@
	add	r3, r5, #1	@ i, tmp148,
	cmp	r3, #137	@ i,
	add	r2, r4, #96	@ ivtmp.4192, tmp149,
	bne	.L1192	@,
.L1204:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1202:
	ldr	r0, [r0, r7]	@, <variable>.ChanID
	add	r1, r6, #376	@, pH264Ctx,
	bl	ReleaseNAL	@
	b	.L1195	@
	.fnend
	.size	ClearAllNal, .-ClearAllNal
	.align	2
	.global	H264DEC_Destroy
	.type	H264DEC_Destroy, %function
H264DEC_Destroy:
	.fnstart
.LFB1665:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	bl	H264_ClearCurrPic	@
	mov	r0, r6	@, pH264Ctx
	bl	ClearAllNal	@
	movw	r0, #59160	@ tmp145,
	ldr	r2, [r6, r0]	@ <variable>.MutexHold, <variable>.MutexHold
	movw	r7, #57732	@ tmp149,
	ldr	r3, [r6, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r2, #1	@ <variable>.MutexHold,
	moveq	r2, #0	@ tmp148,
	streq	r2, [r6, r0]	@ tmp148, <variable>.MutexHold
	cmp	r3, #0	@ <variable>.TotalUsrDatNum,
	beq	.L1207	@,
	add	r4, r6, #57600	@ ivtmp.4236, pH264Ctx,
	mov	r5, #0	@ i,
	add	r4, r4, #136	@ ivtmp.4236, ivtmp.4236,
	movw	sl, #59224	@ tmp174,
	mov	r8, r5	@ tmp175, i
.L1209:
	ldr	r1, [r4, #0]	@ D.47073, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i, i,
	cmp	r1, #0	@ D.47073,
	beq	.L1208	@,
	ldr	r0, [r6, sl]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #0]	@ tmp175, <variable>.pUsrDatArray
.L1208:
	ldr	r1, [r6, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r4, r4, #4	@ ivtmp.4236, ivtmp.4236,
	cmp	r1, r5	@ <variable>.TotalUsrDatNum, i
	bhi	.L1209	@,
.L1207:
	add	r5, r6, #27392	@ ivtmp.4228, pH264Ctx,
	add	sl, r6, #55808	@ D.51208, pH264Ctx,
	add	r4, r5, #140	@ ivtmp.4228, ivtmp.4228,
	add	sl, sl, #204	@ D.51208, D.51208,
	movw	r8, #59224	@ tmp172,
	mov	r7, #0	@ tmp173,
.L1210:
	ldr	r1, [r4, #0]	@ temp.4240, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4240,
	beq	.L1212	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #0]	@ tmp173, <variable>.fs_image.p_usrdat
.L1212:
	ldr	r1, [r4, #4]	@ temp.4243, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4243,
	beq	.L1213	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #4]	@ tmp173, <variable>.fs_image.p_usrdat
.L1213:
	ldr	r1, [r4, #8]	@ temp.4245, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4245,
	beq	.L1214	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #8]	@ tmp173, <variable>.fs_image.p_usrdat
.L1214:
	ldr	r1, [r4, #12]	@ D.47079, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.47079,
	beq	.L1216	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #12]	@ tmp173, <variable>.fs_image.p_usrdat
.L1216:
	ldr	r1, [r4, #712]	@ temp.4240, <variable>.fs_image.p_usrdat
	add	r5, r4, #712	@ tmp177, ivtmp.4228,
	cmp	r1, #0	@ temp.4240,
	beq	.L1220	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r4, #712]	@ tmp173, <variable>.fs_image.p_usrdat
.L1220:
	ldr	r1, [r5, #4]	@ temp.4243, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4243,
	beq	.L1221	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r5, #4]	@ tmp173, <variable>.fs_image.p_usrdat
.L1221:
	ldr	r1, [r5, #8]	@ temp.4245, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4245,
	beq	.L1222	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r5, #8]	@ tmp173, <variable>.fs_image.p_usrdat
.L1222:
	ldr	r1, [r5, #12]	@ D.47079, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.47079,
	beq	.L1226	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r7, [r5, #12]	@ tmp173, <variable>.fs_image.p_usrdat
.L1226:
	add	r4, r5, #712	@ ivtmp.4228, tmp177,
	cmp	r4, sl	@ ivtmp.4228, D.51208
	bne	.L1210	@,
	movw	r1, #:lower16:.LC58	@,
	mov	r0, #2	@,
	movt	r1, #:upper16:.LC58	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	H264DEC_Destroy, .-H264DEC_Destroy
	.align	2
	.global	ClearCurrNal
	.type	ClearCurrNal, %function
ClearCurrNal:
	.fnstart
.LFB1532:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r1, [r0, #368]	@ D.38662, <variable>.pCurrNal
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r1, #0	@ D.38662,
	beq	.L1228	@,
	movw	r2, #59224	@ tmp136,
	ldr	r0, [r0, r2]	@, <variable>.ChanID
	bl	ReleaseNAL	@
	mov	r3, #0	@ tmp138,
	str	r3, [r4, #368]	@ tmp138, <variable>.pCurrNal
.L1228:
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	ClearCurrNal, .-ClearCurrNal
	.align	2
	.global	ClearCurrSlice
	.type	ClearCurrSlice, %function
ClearCurrSlice:
	.fnstart
.LFB1534:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC59	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movt	r1, #:upper16:.LC59	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	movw	r3, #59180	@ tmp136,
	ldr	r1, [r4, r3]	@ <variable>.TotalSlice, <variable>.TotalSlice
	mov	r0, #0	@,
	add	r2, r1, #1	@ tmp139, <variable>.TotalSlice,
	str	r2, [r4, r3]	@ tmp139, <variable>.TotalSlice
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	ClearCurrSlice, .-ClearCurrSlice
	.align	2
	.global	RepairList
	.type	RepairList, %function
RepairList:
	.fnstart
.LFB1581:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20688	@ tmp159,
	ldrb	r2, [r0, r3]	@ zero_extendqisi2	@ D.40842, <variable>.CurrSlice.slice_type
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r2, #1	@ D.40842,
	beq	.L1235	@,
	movcc	r9, #1	@ i_list_cnt,
	bcs	.L1271	@,
.L1238:
	add	r6, r4, #20480	@ ivtmp.4342, pH264Ctx,
	add	r7, r4, #26880	@ ivtmp.4345, pH264Ctx,
	mov	r5, #0	@ i_list,
	add	r6, r6, #252	@ ivtmp.4342, ivtmp.4342,
	add	r7, r7, #164	@ ivtmp.4345, ivtmp.4345,
	mov	sl, r5	@ pRepairPic.4353, i_list
	movw	r8, #56336	@ tmp198,
.L1252:
	ldr	r3, [r6, #0]	@ temp.4348, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ temp.4348,
	beq	.L1239	@,
	ldr	r0, [r7, #0]	@ pRepairPic.4354, <variable>.pListX
	cmp	r0, #0	@ pRepairPic.4354,
	movne	r2, r0	@ pRepairPic, pRepairPic.4354
	bne	.L1241	@,
	add	r1, r5, r5, asl #5	@, tmp163, i_list, i_list,
	tst	r3, #1	@ temp.4348,
	mov	ip, r0	@ i, pRepairPic.4354
	add	r2, r4, r1, asl #2	@, tmp167, pH264Ctx, tmp163,
	add	r1, r2, #26880	@ ivtmp.4339, tmp167,
	add	r1, r1, #164	@ ivtmp.4339, ivtmp.4339,
	bne	.L1242	@,
	ldr	r2, [r1, #4]!	@ pRepairPic, <variable>.pListX
	mov	ip, #1	@ i,
	cmp	r2, #0	@ pRepairPic,
	beq	.L1242	@,
	b	.L1241	@
.L1244:
	ldr	r2, [r1, #4]!	@ pRepairPic, <variable>.pListX
	cmp	r2, #0	@ pRepairPic,
	bne	.L1241	@,
	ldr	r2, [r1, #4]!	@ pRepairPic, <variable>.pListX
	cmp	r2, #0	@ pRepairPic,
	bne	.L1241	@,
.L1242:
	add	ip, ip, #1	@ tmp208, i,
	cmp	r3, ip	@ temp.4348, tmp208
	add	ip, ip, #1	@ i, tmp208,
	bhi	.L1244	@,
	mov	r2, sl	@ pRepairPic, pRepairPic.4353
	mov	ip, #1	@ prephitmp.4309,
	mov	r1, #0	@ found,
.L1243:
	cmp	r2, #0	@ pRepairPic,
	orreq	ip, ip, #1	@,, tmp172, prephitmp.4309
	cmp	ip, #0	@ tmp172,
	beq	.L1245	@,
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1272	@,
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r2, r2, #536	@ pRepairPic, <variable>.CurrPic.frame_store,
.L1245:
	add	r1, r5, r5, asl #5	@, tmp180, i_list, i_list,
	tst	r3, #1	@ temp.4348,
	mov	ip, #0	@ i.4349,
	add	r1, r4, r1, asl #2	@, tmp184, pH264Ctx, tmp180,
	add	r1, r1, #26880	@ ivtmp.4327, tmp184,
	add	r1, r1, #168	@ ivtmp.4327, ivtmp.4327,
	bne	.L1249	@,
	cmp	r0, #0	@ pRepairPic.4354,
	mov	ip, #1	@ i.4349,
	streq	r2, [r1, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r3, ip	@ temp.4348, i.4349
	add	r1, r1, #4	@ ivtmp.4327, ivtmp.4327,
	ldrhi	r0, [r1, #-4]	@ pRepairPic.4354, <variable>.pListX
	bhi	.L1249	@,
	b	.L1248	@
.L1258:
	mov	r1, r0	@ ivtmp.4327, tmp204
	add	ip, ip, #1	@ i.4349, tmp203,
	ldr	r0, [r1], #4	@ pRepairPic.4354, <variable>.pListX
.L1249:
	add	ip, ip, #1	@ tmp203, i.4349,
	cmp	r0, #0	@ pRepairPic.4354,
	streq	r2, [r1, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r3, ip	@ temp.4348, tmp203
	add	r0, r1, #4	@ tmp204, ivtmp.4327,
	bls	.L1248	@,
	ldr	r1, [r0, #-4]	@ pRepairPic.4354, <variable>.pListX
	cmp	r1, #0	@ pRepairPic.4354,
	streq	r2, [r0, #-4]	@ pRepairPic, <variable>.pListX
	b	.L1258	@
.L1239:
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1273	@,
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, sl	@ pRepairPic, pRepairPic.4353
	mov	r1, #1	@,
	str	r1, [r6, #0]	@, <variable>.CurrSlice.listXsize
	add	r3, r0, #536	@ tmp191, <variable>.CurrPic.frame_store,
	str	r3, [r7, #0]	@ tmp191, <variable>.pListX
.L1248:
	add	r5, r5, #1	@ i_list, i_list,
	add	r6, r6, #4	@ ivtmp.4342, ivtmp.4342,
	cmp	r5, r9	@ i_list, i_list_cnt
	add	r7, r7, #132	@ ivtmp.4345, ivtmp.4345,
	bcs	.L1236	@,
	mov	sl, r2	@ pRepairPic.4353, pRepairPic
	b	.L1252	@
.L1241:
	mov	ip, #0	@ prephitmp.4309,
	mov	r1, #1	@ found,
	b	.L1243	@
.L1271:
	cmp	r2, #2	@ D.40842,
	beq	.L1236	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC60	@,
	movt	r1, #:upper16:.LC60	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	mvn	r0, #0	@ D.40845,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1236:
	mov	r0, #0	@ D.40845,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1235:
	mov	r9, #2	@ i_list_cnt,
	b	.L1238	@
.L1273:
	mov	r2, r5	@, i_list
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	mvn	r0, #0	@ D.40845,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1272:
	mov	r3, r1	@, found
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC61	@,
	movt	r1, #:upper16:.LC61	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	mvn	r0, #0	@ D.40845,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	RepairList, .-RepairList
	.align	2
	.global	CombinePacket
	.type	CombinePacket, %function
CombinePacket:
	.fnstart
.LFB1657:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r0, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r3, [r0, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, #4096	@ <variable>.bitstream_length,
	bcs	.L1276	@,
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC63	@,
	movt	r1, #:upper16:.LC63	@,
	mov	r5, #0	@ tmp162,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #368]	@ temp.4380, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC64	@,
	movt	r1, #:upper16:.LC64	@,
	ldr	r6, [ip, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [ip, #16]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	ldr	r3, [ip, #44]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	r6, [sp, #0]	@ <variable>.bitstream_length,
	ldr	lr, [ip, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	str	lr, [sp, #4]	@ <variable>.bitstream_length,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #368]	@ temp.4382, <variable>.pCurrNal
	ldr	r3, [r0, #12]	@ temp.4383, <variable>.bitstream_length
	ldr	r6, [r0, #36]	@ <variable>.streamBuffer, <variable>.streamBuffer
	ldr	r1, [r0, #8]	@, <variable>.streamBuffer
	mov	r2, r3	@, temp.4383
	rsb	r0, r3, r6	@, temp.4383, <variable>.streamBuffer
	bl	memcpy	@
	ldr	ip, [r4, #368]	@ temp.4384, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC65	@,
	movt	r1, #:upper16:.LC65	@,
	ldr	r2, [ip, #60]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r6, [ip, #32]	@ StreamId, <variable>.StreamID
	str	r2, [ip, #32]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r3, #24]	@ tmp162, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.4386, <variable>.pCurrNal
	ldr	r2, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #36]	@ <variable>.streamBuffer, <variable>.streamBuffer
	rsb	r2, r2, ip	@ tmp166, <variable>.bitstream_length, <variable>.streamBuffer
	str	r2, [r3, #8]	@ tmp166, <variable>.streamBuffer
	ldr	r3, [r4, #368]	@ temp.4391, <variable>.pCurrNal
	ldr	r2, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #44]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	rsb	r2, r2, ip	@ tmp169, <variable>.bitstream_length, <variable>.stream_phy_addr
	str	r2, [r3, #16]	@ tmp169, <variable>.stream_phy_addr
	ldr	r3, [r4, #368]	@ temp.4394, <variable>.pCurrNal
	ldr	ip, [r3, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r2, ip, r2	@ tmp172, <variable>.bitstream_length, <variable>.bitstream_length
	str	r2, [r3, #12]	@ tmp172, <variable>.bitstream_length
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #1	@ tmp174,
	str	ip, [r3, #68]	@ tmp174, <variable>.nal_segment
	ldr	r2, [r4, #368]	@ temp.4398, <variable>.pCurrNal
	ldr	r3, [r2, #12]	@, <variable>.bitstream_length
	ldr	r2, [r2, #16]	@, <variable>.stream_phy_addr
	bl	dprint_vfmw	@
	movw	r3, #59224	@ tmp178,
	mov	r1, r6	@, StreamId
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [ip, #36]	@ tmp162, <variable>.streamBuffer
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r2, #52]	@ tmp162, <variable>.bitsoffset
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r1, #40]	@ tmp162, <variable>.bitstream_length
.L1276:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
	.fnend
	.size	CombinePacket, .-CombinePacket
	.align	2
	.global	FindZeroBitsInSeg
	.type	FindZeroBitsInSeg, %function
FindZeroBitsInSeg:
	.fnstart
.LFB1655:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ ptr,
	cmpne	r1, #0	@, len,
	str	r1, [fp, #-48]	@ len, %sfp
	mov	r8, r0	@ ptr, ptr
	movgt	r4, #0	@, tmp159
	movle	r4, #1	@, tmp159
	ble	.L1304	@,
	ldr	r2, [fp, #-48]	@, %sfp
	ands	r3, r2, #63	@ tmp163,,
	movne	r3, #1	@, tmp163,
	adds	sl, r3, r2, asr #6	@, nRound, tmp163,,
	moveq	r4, sl	@ zero_byte, nRound
	beq	.L1281	@,
	movw	r5, #:lower16:.LANCHOR1	@ tmp198,
	ldr	r7, [fp, #-48]	@ ivtmp.4454, %sfp
	movt	r5, #:upper16:.LANCHOR1	@ tmp198,
	mov	r9, r5	@ tmp199, tmp198
.L1286:
	cmp	r7, #64	@ ivtmp.4454,
	movcc	r6, r7	@ ThisRoundSize, ivtmp.4454
	movcs	r6, #64	@ ThisRoundSize,
	movw	r0, #:lower16:.LANCHOR1	@,
	rsb	r1, r6, r7	@ tmp166, ThisRoundSize, ivtmp.4454
	movt	r0, #:upper16:.LANCHOR1	@,
	mov	r2, r6	@, ThisRoundSize
	sub	r6, r6, #1	@ tmp173, ThisRoundSize,
	add	r1, r8, r1	@, ptr, tmp166
	bl	memcpy	@
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ tmp174,
	add	r3, r5, r6	@ pLastByte, tmp198, tmp173
	cmp	r0, #0	@ tmp174,
	bne	.L1282	@,
	cmp	r3, r9	@ pLastByte, tmp199
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1283	@,
	ldrb	r2, [r3, #-1]	@ zero_extendqisi2	@ tmp177,
	rsb	lr, r3, r5	@ tmp201, pLastByte, tmp198
	cmp	r2, #0	@ tmp177,
	mvn	ip, lr	@ tmp200, tmp201
	and	r2, ip, #1	@ tmp202, tmp200,
	bne	.L1282	@,
	sub	r3, r3, #1	@ ivtmp.4445, pLastByte,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4445, tmp198
	beq	.L1283	@,
	cmp	r2, #0	@ tmp202,
	beq	.L1284	@,
	ldrb	lr, [r3, #-1]	@ zero_extendqisi2	@ tmp209,
	cmp	lr, #0	@ tmp209,
	bne	.L1282	@,
	sub	r3, r3, #1	@ ivtmp.4445, ivtmp.4445,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4445, tmp198
	bne	.L1284	@,
	b	.L1283	@
.L1285:
	ldrb	r0, [r2, #-1]	@ zero_extendqisi2	@ tmp207,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r0, #0	@ tmp207,
	bne	.L1282	@,
	cmp	r3, r5	@ ivtmp.4445, tmp198
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1283	@,
.L1284:
	ldrb	r1, [r3, #-1]	@ zero_extendqisi2	@ tmp208,
	sub	r2, r3, #1	@ tmp204, ivtmp.4445,
	sub	r3, r2, #1	@ ivtmp.4445, tmp204,
	cmp	r1, #0	@ tmp208,
	beq	.L1285	@,
.L1282:
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	r4, r3	@ zero_byte,
	blt	.L1281	@,
.L1303:
	mov	r3, #0	@ zero_bit,
.L1287:
	add	r0, r3, r4, asl #3	@, D.46613, zero_bit, zero_byte,
.L1279:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1283:
	subs	sl, sl, #1	@ r, r,
	sub	r7, r7, #64	@ ivtmp.4454, ivtmp.4454,
	bne	.L1286	@,
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	r4, r3	@ zero_byte,
	bge	.L1303	@,
.L1281:
	ldr	r2, [fp, #-48]	@, %sfp
	sub	r0, r2, #1	@ tmp179,,
	rsb	ip, r4, r0	@ tmp178, zero_byte, tmp179
	ldrb	r3, [r8, ip]	@ zero_extendqisi2	@ Byte,
	tst	r3, #1	@ Byte,
	bne	.L1303	@,
	mov	r3, r3, lsr #1	@ Byte.4458, Byte,
	tst	r3, #1	@ Byte.4458,
	movne	r3, #1	@ zero_bit,
	bne	.L1287	@,
	mov	r3, r3, lsr #1	@ Byte.4461, Byte.4458,
	tst	r3, #1	@ Byte.4461,
	movne	r3, #2	@ zero_bit,
	bne	.L1287	@,
	mov	r3, r3, lsr #1	@ Byte.4464, Byte.4461,
	tst	r3, #1	@ Byte.4464,
	movne	r3, #3	@ zero_bit,
	bne	.L1287	@,
	mov	r3, r3, lsr #1	@ Byte.4467, Byte.4464,
	tst	r3, #1	@ Byte.4467,
	movne	r3, #4	@ zero_bit,
	bne	.L1287	@,
	mov	r3, r3, lsr #1	@ Byte.4470, Byte.4467,
	tst	r3, #1	@ Byte.4470,
	movne	r3, #5	@ zero_bit,
	bne	.L1287	@,
	mov	r3, r3, lsr #1	@ Byte.4473, Byte.4470,
	tst	r3, #1	@ Byte.4473,
	movne	r3, #6	@ zero_bit,
	bne	.L1287	@,
	movs	r3, r3, lsr #1	@, Byte.4473,
	movne	r3, #7	@, zero_bit,
	moveq	r3, #8	@, zero_bit,
	b	.L1287	@
.L1304:
	mov	r2, r1	@, len
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC66	@,
	movt	r1, #:upper16:.LC66	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.46613,
	b	.L1279	@
	.fnend
	.size	FindZeroBitsInSeg, .-FindZeroBitsInSeg
	.align	2
	.global	FindTrailZeros
	.type	FindTrailZeros, %function
FindTrailZeros:
	.fnstart
.LFB1656:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pH264Ctx, pH264Ctx
	mvneq	r0, #0	@ D.46644,
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	ldr	r3, [r4, #368]	@ prephitmp.4501, <variable>.pCurrNal
	ldr	r2, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r2, #1	@ <variable>.nal_segment,
	bls	.L1308	@,
	ldr	r1, [r3, #40]	@, <variable>.bitstream_length
	ldr	r0, [r3, #36]	@, <variable>.streamBuffer
	bl	FindZeroBitsInSeg	@
	ldr	r3, [r4, #368]	@ prephitmp.4501, <variable>.pCurrNal
	ldr	r1, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r0, r1, asl #3	@ zero_bit, <variable>.bitstream_length,
	bcs	.L1313	@,
	cmn	r0, #1	@ zero_bit,
	beq	.L1308	@,
.L1310:
	add	r0, r0, #1	@ tmp153, zero_bit,
	str	r0, [r3, #72]	@ tmp153, <variable>.nal_trail_zero_bit_num
	ldr	r3, [r4, #368]	@ temp.4516, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bls	.L1311	@,
	ldr	ip, [r3, #40]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r3, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	cmp	r2, ip, asl #3	@ <variable>.nal_trail_zero_bit_num, <variable>.bitstream_length,
	bcs	.L1314	@,
.L1311:
	mov	r0, #0	@ D.46644,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1314:
	movw	lr, #59224	@ tmp158,
	ldr	r1, [r3, #60]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp162,
	mov	ip, #1	@ tmp164,
	mov	r0, r3	@ D.46644, tmp162
	str	r3, [r1, #36]	@ tmp162, <variable>.streamBuffer
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	ip, [r2, #68]	@ tmp164, <variable>.nal_segment
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r3, [r1, #72]	@ tmp162, <variable>.nal_trail_zero_bit_num
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1313:
	movw	lr, #59224	@ tmp144,
	ldr	r1, [r3, #60]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #0	@ tmp148,
	mov	r0, #1	@ tmp150,
	str	ip, [r2, #36]	@ tmp148, <variable>.streamBuffer
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [r3, #68]	@ tmp150, <variable>.nal_segment
	ldr	r3, [r4, #368]	@ prephitmp.4501, <variable>.pCurrNal
.L1308:
	ldr	r1, [r3, #12]	@, <variable>.bitstream_length
	ldr	r0, [r3, #8]	@, <variable>.streamBuffer
	bl	FindZeroBitsInSeg	@
	ldr	r3, [r4, #368]	@ prephitmp.4501, <variable>.pCurrNal
	b	.L1310	@
	.fnend
	.size	FindTrailZeros, .-FindTrailZeros
	.align	2
	.global	H264_IsNewPicNal
	.type	H264_IsNewPicNal, %function
H264_IsNewPicNal:
	.fnstart
.LFB1653:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ tmp140,
	mov	r4, r0	@ pNewPicDetector, pNewPicDetector
	add	r1, r1, #3	@ pu8.4548, pu8,
	and	r0, r2, #31	@ tmp141, tmp140,
	sub	r3, r0, #1	@ tmp142, tmp141,
	cmp	r3, #7	@ tmp142,
	ldrls	pc, [pc, r3, asl #2]	@ tmp142
	b	.L1316	@
.L1319:
	.word	.L1317
	.word	.L1316
	.word	.L1316
	.word	.L1316
	.word	.L1317
	.word	.L1316
	.word	.L1318
	.word	.L1318
.L1318:
	ldr	r0, [r4, #0]	@ tmp157,* pNewPicDetector
	mov	r3, #1	@ tmp158,
	str	r3, [r4, #0]	@ tmp158,* pNewPicDetector
	cmp	r0, #0	@ tmp157,
	mvnne	r0, #0	@, ret,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1317:
	ldr	r5, [r4, #0]	@ tmp143,* pNewPicDetector
	cmp	r5, #0	@ tmp143,
	beq	.L1326	@,
.L1321:
	mvn	r0, #0	@ ret,
.L1322:
	mov	r1, #0	@ tmp156,
	str	r1, [r4, #0]	@ tmp156,* pNewPicDetector
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1316:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1326:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ tmp146,
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ tmp144,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ tmp151,
	ldrb	lr, [r1, #4]	@ zero_extendqisi2	@ tmp149,
	mov	r3, r2, asl #16	@ tmp147, tmp146,
	orr	r1, r3, r0, asl #8	@, tmp148, tmp147, tmp144,
	orr	r6, r1, lr	@ tmp150, tmp148, tmp149
	orr	r6, r6, ip, asl #24	@, tmpbits, tmp150, tmp151,
	mov	r0, r6	@, tmpbits
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	bhi	.L1321	@,
	mov	ip, r0, asl #1	@ tmp153, zeros,
	rsb	r0, ip, #31	@ tmp154, tmp153,
	mov	r6, r6, lsr r0	@ tmp155, tmpbits,
	cmp	r6, #1	@ tmp155,
	moveq	r0, r5	@ ret, tmp143
	bne	.L1321	@,
	b	.L1322	@
	.fnend
	.size	H264_IsNewPicNal, .-H264_IsNewPicNal
	.align	2
	.global	WritePicMsg
	.type	WritePicMsg, %function
WritePicMsg:
	.fnstart
.LFB1616:
	@ args = 0, pretend = 0, frame = 208
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #220
	sub	sp, sp, #220	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #56352	@ tmp350,
	movw	r5, #55795	@ tmp352,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r2, [r0, r6]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movw	sl, #56404	@ tmp356,
	ldrb	r3, [r0, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r0, #56004	@ tmp354,
	ldr	r7, [r4, r0]	@ <variable>.CurrPic.fs_image.image_id, <variable>.CurrPic.fs_image.image_id
	movw	r1, #:lower16:.LC67	@,
	ldr	lr, [r4, sl]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movt	r1, #:upper16:.LC67	@,
	mov	r0, #2	@,
	movw	r9, #55816	@ tmp361,
	str	r7, [sp, #0]	@ <variable>.CurrPic.fs_image.image_id,
	movw	r8, #59144	@ tmp364,
	str	lr, [sp, #4]	@ <variable>.CurrPic.pmv_address_idc,
	bl	dprint_vfmw	@
	movw	ip, #56000	@ tmp367,
	movw	r2, #13615	@ tmp377,
	movw	r3, #56388	@ tmp380,
	ldrd	r0, [r4, r9]	@, pH264Ctx, tmp361
	ldr	r9, [r4, r8]	@ <variable>.DecSlicePara, <variable>.DecSlicePara
	movw	r7, #56336	@ tmp418,
	ldr	r8, [r4, ip]	@ <variable>.CurrPic.fs_image.image_stride, <variable>.CurrPic.fs_image.image_stride
	ldrb	ip, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSPS.mb_adaptive_frame_field_flag, <variable>.CurrSPS.mb_adaptive_frame_field_flag
	ldr	r2, [r4, r3]	@, <variable>.CurrPic.pic_height_in_mb
	movw	r3, #56392	@ tmp383,
	str	r2, [fp, #-76]	@, %sfp
	ldr	r2, [r4, r3]	@, <variable>.CurrPic.frame_height_in_mb
	movw	r3, #13614	@ tmp390,
	str	r2, [fp, #-84]	@, %sfp
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@, <variable>.CurrSPS.frame_mbs_only_flag
	movw	r3, #17656	@ tmp394,
	str	r2, [fp, #-64]	@, %sfp
	ldr	r2, [r4, r3]	@, <variable>.CurrPPS.transform_8x8_mode_flag
	movw	r3, #17596	@ tmp397,
	str	r2, [fp, #-68]	@, %sfp
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@, <variable>.CurrPPS.entropy_coding_mode_flag
	movw	r3, #14344	@ tmp400,
	str	r2, [fp, #-100]	@, %sfp
	ldr	r2, [r4, r3]	@, <variable>.CurrSPS.chroma_format_idc
	movw	r3, #17600	@ tmp404,
	str	r2, [fp, #-140]	@, %sfp
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@, <variable>.CurrPPS.constrained_intra_pred_flag
	movw	r3, #19848	@ tmp407,
	str	r2, [fp, #-80]	@, %sfp
	ldr	r2, [r4, r3]	@, <variable>.CurrPOC.ThisPOC
	movw	r3, #19836	@ tmp410,
	str	r2, [fp, #-72]	@, %sfp
	ldr	r2, [r4, r3]	@, <variable>.CurrPOC.toppoc
	movw	r3, #19840	@ tmp413,
	str	r2, [fp, #-48]	@, %sfp
	movw	r2, #17552	@ tmp386,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movw	r6, #57760	@ tmp360,
	strd	r0, [r4, r6]	@, pH264Ctx, tmp360
	movw	r6, #58876	@ tmp363,
	str	r9, [r4, r6]	@ <variable>.DecSlicePara, <variable>.DecPicPara.pFirstSlice
	movw	r6, #58664	@ tmp366,
	str	r8, [r4, r6]	@ <variable>.CurrPic.fs_image.image_stride, <variable>.DecPicPara.imgstride
	movw	r8, #59148	@ tmp358,
	ldrb	r5, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r9, #0	@ tmp359,
	str	r9, [r4, r8]	@ tmp359, <variable>.SliceParaNum
	movw	r9, #57768	@ tmp369,
	str	lr, [r4, r9]	@ <variable>.CurrPic.nal_ref_idc, <variable>.DecPicPara.nal_ref_idc
	movw	r8, #57784	@ tmp376,
	movw	lr, #57752	@ tmp372,
	str	ip, [r4, r8]	@ <variable>.CurrSPS.mb_adaptive_frame_field_flag, <variable>.DecPicPara.mb_adaptive_frame_field_flag
	strb	r5, [r4, lr]	@ <variable>.CurrPic.structure, <variable>.DecPicPara.pic_structure
	movw	r9, #57772	@ tmp379,
	ldr	r5, [fp, #-76]	@, %sfp
	movw	lr, #57776	@ tmp382,
	ldr	r3, [r4, r3]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPOC.bottompoc
	movw	ip, #57780	@ tmp385,
	ldr	r2, [r4, r2]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	movw	r0, #57792	@ tmp396,
	str	r5, [r4, r9]	@, <variable>.DecPicPara.pic_height_in_mb
	movw	r9, #57755	@ tmp389,
	ldr	r1, [fp, #-84]	@, %sfp
	add	r2, r2, #1	@ tmp388, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	str	r2, [r4, ip]	@ tmp388, <variable>.DecPicPara.pic_width_in_mb
	movw	r5, #57788	@ tmp393,
	movw	r2, #57753	@ tmp399,
	movw	ip, #57796	@ tmp403,
	str	r1, [r4, lr]	@, <variable>.DecPicPara.frame_height_in_mb
	movw	r6, #59224	@ tmp415,
	ldr	r8, [fp, #-64]	@, %sfp
	strb	r8, [r4, r9]	@, <variable>.DecPicPara.frame_mbs_only_flag
	ldr	r9, [fp, #-68]	@, %sfp
	str	r9, [r4, r5]	@, <variable>.DecPicPara.transform_8x8_mode_flag
	ldr	r1, [fp, #-100]	@, %sfp
	str	r1, [r4, r0]	@, <variable>.DecPicPara.entropy_coding_mode_flag
	movw	r1, #57800	@ tmp406,
	ldr	lr, [fp, #-140]	@, %sfp
	movw	r0, #57804	@ tmp409,
	strb	lr, [r4, r2]	@, <variable>.DecPicPara.chroma_format_idc
	movw	r2, #57808	@ tmp412,
	ldr	r8, [fp, #-80]	@, %sfp
	str	r8, [r4, ip]	@, <variable>.DecPicPara.constrained_intra_pred_flag
	ldr	r5, [fp, #-72]	@, %sfp
	str	r5, [r4, r1]	@, <variable>.DecPicPara.ThisPoc
	ldr	r8, [fp, #-48]	@, %sfp
	str	r3, [r4, r2]	@ <variable>.CurrPOC.bottompoc, <variable>.DecPicPara.BottomPoc
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r8, [r4, r0]	@, <variable>.DecPicPara.TopPoc
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r5, r0, #0	@ pstLogicFs,
	beq	.L1360	@,
	ldr	r2, [r5, #544]	@ D.42867, <variable>.pstDecodeFs
	cmp	r2, #0	@ D.42867,
	ldreq	r3, [r5, #548]	@ prephitmp.4602, <variable>.pstDispOutFs
	beq	.L1331	@,
	ldr	r3, [r5, #548]	@ prephitmp.4602, <variable>.pstDispOutFs
	cmp	r3, #0	@ prephitmp.4602,
	beq	.L1331	@,
	add	r8, r4, #58368	@ tmp427, pH264Ctx,
	add	lr, r4, #58112	@, pH264Ctx,
	add	r7, r4, #57856	@, pH264Ctx,
	add	r3, lr, #204	@,,
	add	r2, r7, #204	@,,
	add	r1, r8, #204	@, tmp427,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	add	r7, r4, #58624	@ tmp438, pH264Ctx,
	bl	FSP_GetDecFsAddrTab	@
	ldr	r3, [r5, #544]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	add	r2, r8, #208	@, tmp427,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	add	r1, r7, #32	@, tmp438,
	ldr	ip, [r3, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movw	r3, #58044	@ tmp432,
	str	ip, [r4, r3]	@ <variable>.PhyFsID, <variable>.DecPicPara.CurrPicImgIdc
	bl	FSP_GetPmvAddrTab	@
	ldr	r8, [r4, sl]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movw	sl, #58052	@ tmp441,
	movw	r2, #58660	@ tmp444,
	movw	ip, #26908	@ tmp453,
	movw	r0, #58048	@ tmp446,
	str	r8, [r4, sl]	@ <variable>.CurrPic.pmv_address_idc, <variable>.DecPicPara.CurrPicPmvIdc
	ldr	r1, [r5, #560]	@ <variable>.HalfPmvOffset, <variable>.HalfPmvOffset
	ldr	sl, [r4, ip]	@ <variable>.APC.size, <variable>.APC.size
	str	r1, [r4, r2]	@ <variable>.HalfPmvOffset, <variable>.DecPicPara.half_pmvblk_offset
	cmp	sl, #0	@ <variable>.APC.size,
	ldr	r3, [r5, #548]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	movw	r2, #58868	@ tmp452,
	ldr	r8, [r3, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	str	r8, [r4, r0]	@ <variable>.PhyAddr, <variable>.DecPicPara.CurrPicImg2DAddr
	ldr	ip, [r5, #548]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	movw	r5, #58056	@ tmp449,
	ldr	r1, [ip, #44]	@ <variable>.ChromOffset, <variable>.ChromOffset
	str	sl, [r4, r2]	@ <variable>.APC.size, <variable>.DecPicPara.ApcSize
	str	r1, [r4, r5]	@ <variable>.ChromOffset, <variable>.DecPicPara.ChromaOffset
	beq	.L1333	@,
	add	r5, r4, #26624	@ tmp456, pH264Ctx,
	sub	r6, sl, #1	@ tmp1941, <variable>.APC.size,
	mov	ip, #1	@ i,
	and	r9, r6, ip	@ tmp1943, tmp1941,
	mov	lr, r5	@ ivtmp.4656, tmp456
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r8, [lr, #92]!	@ tmp458, <variable>.APC.idc
	mov	r1, r7	@ ivtmp.4659, tmp438
	add	r2, r5, #96	@ ivtmp.4656, tmp456,
	add	r3, r7, #56	@ ivtmp.4659, tmp438,
	ldr	r6, [lr, #128]	@ tmp460, <variable>.APC.poc
	ldr	r0, [lr, #64]	@ tmp459, <variable>.APC.poc
	str	r8, [r1, #52]!	@ tmp458, <variable>.DecPicPara.Apc2Idc
	str	r6, [r1, #128]	@ tmp460, <variable>.DecPicPara.Apc2Poc
	str	r0, [r1, #64]	@ tmp459, <variable>.DecPicPara.Apc2Poc
	bcs	.L1333	@,
	cmp	r9, #0	@ tmp1943,
	beq	.L1359	@,
	ldr	r6, [r2, #128]	@ tmp2023, <variable>.APC.poc
	mov	ip, #2	@ i,
	ldr	lr, [r2, #0]	@ tmp2021, <variable>.APC.idc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r8, [r2, #64]	@ tmp2022, <variable>.APC.poc
	add	r2, r5, #100	@ ivtmp.4656, tmp456,
	str	r6, [r3, #128]	@ tmp2023, <variable>.DecPicPara.Apc2Poc
	str	lr, [r3, #0]	@ tmp2021, <variable>.DecPicPara.Apc2Idc
	str	r8, [r3, #64]	@ tmp2022, <variable>.DecPicPara.Apc2Poc
	add	r3, r7, #60	@ ivtmp.4659, tmp438,
	bcs	.L1333	@,
.L1359:
	mov	r9, r4	@ pH264Ctx, pH264Ctx
.L1334:
	add	lr, r2, #4	@ tmp1945, ivtmp.4656,
	ldmia	r2, {r5, r8}	@ phole ldm
	add	ip, ip, #2	@ i, i,
	ldr	r7, [r2, #64]	@ tmp1951, <variable>.APC.poc
	add	r1, r3, #4	@ tmp1946, ivtmp.4659,
	ldr	r6, [r2, #128]	@ tmp1952, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r4, [lr, #64]	@ tmp1957, <variable>.APC.poc
	add	r2, lr, #4	@ ivtmp.4656, tmp1945,
	ldr	r0, [lr, #128]	@ tmp1958, <variable>.APC.poc
	str	r7, [r3, #64]	@ tmp1951, <variable>.DecPicPara.Apc2Poc
	str	r6, [r3, #128]	@ tmp1952, <variable>.DecPicPara.Apc2Poc
	stmia	r3, {r5, r8}	@ phole stm
	add	r3, r1, #4	@ ivtmp.4659, tmp1946,
	str	r4, [r1, #64]	@ tmp1957, <variable>.DecPicPara.Apc2Poc
	str	r0, [r1, #128]	@ tmp1958, <variable>.DecPicPara.Apc2Poc
	bcc	.L1334	@,
	mov	r4, r9	@ pH264Ctx, pH264Ctx
.L1333:
	movw	ip, #13621	@ tmp461,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSPS.seq_scaling_matrix_present_flag, <variable>.CurrSPS.seq_scaling_matrix_present_flag
	cmp	r2, #0	@ <variable>.CurrSPS.seq_scaling_matrix_present_flag,
	bne	.L1335	@,
	movw	r3, #17614	@ tmp463,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ prephitmp.4605, <variable>.CurrPPS.pic_scaling_matrix_present_flag
	cmp	r2, #0	@ prephitmp.4605,
	bne	.L1336	@,
	add	r3, r4, #57600	@ ivtmp.4635, pH264Ctx,
	movw	r6, #:lower16:.LANCHOR2	@ tmp1930,
	add	r5, r3, #212	@ ivtmp.4635, ivtmp.4635,
	movt	r6, #:upper16:.LANCHOR2	@ tmp1930,
.L1337:
	and	r3, r2, #3	@ tmp466, i.4673,
	add	r2, r2, #1	@ tmp1935, i.4673,
	and	r7, r2, #3	@ tmp1962, tmp1935,
	mov	r1, r5	@ tmp1936, ivtmp.4635
	ldr	lr, [r6, r3, asl #2]	@ D.42900, quant_org
	add	r2, r2, #1	@ i.4673, tmp1935,
	cmp	r2, #24	@ i.4673,
	movw	r3, #:lower16:.LANCHOR2	@ tmp1961,
	bic	ip, lr, #16711680	@ tmp469, D.42900,
	ubfx	r8, lr, #8, #8	@ tmp471, D.42900,,
	bic	r0, ip, #65280	@ tmp469, tmp469,
	mov	ip, lr, lsr #8	@ tmp477, D.42900,
	and	ip, ip, #65280	@ tmp476, tmp477,
	orr	lr, r0, r8, asl #16	@, tmp473, tmp469, tmp471,
	orr	r0, lr, ip	@ tmp478, tmp473, tmp476
	str	r0, [r1], #4	@ tmp478, <variable>.DecPicPara.Qmatrix
	ldr	r8, [r6, r7, asl #2]	@ D.42900, quant_org
	movt	r3, #:upper16:.LANCHOR2	@ tmp1961,
	bic	lr, r8, #16711680	@ tmp1966, D.42900,
	ubfx	r7, r8, #8, #8	@ tmp1968, D.42900,,
	bic	r0, lr, #65280	@ tmp1966, tmp1966,
	mov	ip, r8, lsr #8	@ tmp1972, D.42900,
	and	lr, ip, #65280	@ tmp1973, tmp1972,
	orr	r8, r0, r7, asl #16	@, tmp1970, tmp1966, tmp1968,
	orr	r0, r8, lr	@ tmp1974, tmp1970, tmp1973
	str	r0, [r5, #4]	@ tmp1974, <variable>.DecPicPara.Qmatrix
	add	r5, r1, #4	@ ivtmp.4635, tmp1936,
	bne	.L1337	@,
	ldr	r0, [r3, #20]	@ temp.5472, quant8_org
	ldr	lr, [r3, #16]	@ temp.5477, quant8_org
	and	ip, r0, #255	@ tmp484, temp.5472,
	mov	r1, r0, lsr #16	@ tmp482, temp.5472,
	and	r0, lr, #255	@ tmp487, temp.5477,
	mov	r8, ip, asl #16	@ tmp485, tmp484,
	mov	r2, lr, lsr #8	@ tmp492, temp.5477,
	orr	lr, r8, r1, asl #24	@, tmp486, tmp485, tmp482,
	and	ip, r2, #65280	@ tmp491, tmp492,
	orr	r8, lr, r0	@ tmp488, tmp486, tmp487
	movw	r0, #57908	@ tmp481,
	orr	r1, r8, ip	@ tmp493, tmp488, tmp491
	str	r1, [r4, r0]	@ tmp493, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #16]	@ temp.5490, quant8_org
	ldr	r2, [r3, #20]	@ temp.5485, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp502, temp.5490,,
	mov	r8, lr, lsr #24	@ tmp497, temp.5490,
	and	ip, r2, #-16777216	@ tmp499, temp.5485,
	ubfx	lr, r2, #8, #8	@ tmp505, temp.5485,,
	movw	r2, #57912	@ tmp496,
	orr	r1, ip, r8, asl #8	@, tmp500, tmp499, tmp497,
	orr	r8, r1, r0	@ tmp503, tmp500, tmp502
	orr	r1, r8, lr, asl #16	@, tmp507, tmp503, tmp505,
	str	r1, [r4, r2]	@ tmp507, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #28]	@ temp.5498, quant8_org
	ldr	lr, [r3, #24]	@ temp.5503, quant8_org
	and	ip, r0, #255	@ tmp513, temp.5498,
	mov	r1, r0, lsr #16	@ tmp511, temp.5498,
	and	r0, lr, #255	@ tmp516, temp.5503,
	mov	r8, ip, asl #16	@ tmp514, tmp513,
	mov	r2, lr, lsr #8	@ tmp521, temp.5503,
	orr	lr, r8, r1, asl #24	@, tmp515, tmp514, tmp511,
	and	ip, r2, #65280	@ tmp520, tmp521,
	orr	r8, lr, r0	@ tmp517, tmp515, tmp516
	movw	r0, #57916	@ tmp510,
	orr	r1, r8, ip	@ tmp522, tmp517, tmp520
	str	r1, [r4, r0]	@ tmp522, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #24]	@ temp.5516, quant8_org
	ldr	r2, [r3, #28]	@ temp.5511, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp531, temp.5516,,
	mov	r8, lr, lsr #24	@ tmp526, temp.5516,
	and	ip, r2, #-16777216	@ tmp528, temp.5511,
	ubfx	lr, r2, #8, #8	@ tmp534, temp.5511,,
	movw	r2, #57920	@ tmp525,
	orr	r1, ip, r8, asl #8	@, tmp529, tmp528, tmp526,
	orr	r8, r1, r0	@ tmp532, tmp529, tmp531
	orr	r1, r8, lr, asl #16	@, tmp536, tmp532, tmp534,
	str	r1, [r4, r2]	@ tmp536, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #36]	@ temp.5524, quant8_org
	ldr	lr, [r3, #32]	@ temp.5529, quant8_org
	and	ip, r0, #255	@ tmp542, temp.5524,
	mov	r1, r0, lsr #16	@ tmp540, temp.5524,
	and	r0, lr, #255	@ tmp545, temp.5529,
	mov	r8, ip, asl #16	@ tmp543, tmp542,
	mov	r2, lr, lsr #8	@ tmp550, temp.5529,
	orr	lr, r8, r1, asl #24	@, tmp544, tmp543, tmp540,
	and	ip, r2, #65280	@ tmp549, tmp550,
	orr	r8, lr, r0	@ tmp546, tmp544, tmp545
	movw	r0, #57924	@ tmp539,
	orr	r1, r8, ip	@ tmp551, tmp546, tmp549
	str	r1, [r4, r0]	@ tmp551, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #32]	@ temp.5542, quant8_org
	ldr	r2, [r3, #36]	@ temp.5537, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp560, temp.5542,,
	mov	r8, lr, lsr #24	@ tmp555, temp.5542,
	and	ip, r2, #-16777216	@ tmp557, temp.5537,
	ubfx	lr, r2, #8, #8	@ tmp563, temp.5537,,
	movw	r2, #57928	@ tmp554,
	orr	r1, ip, r8, asl #8	@, tmp558, tmp557, tmp555,
	orr	r8, r1, r0	@ tmp561, tmp558, tmp560
	orr	r1, r8, lr, asl #16	@, tmp565, tmp561, tmp563,
	str	r1, [r4, r2]	@ tmp565, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #44]	@ temp.5550, quant8_org
	ldr	lr, [r3, #40]	@ temp.5555, quant8_org
	and	ip, r0, #255	@ tmp571, temp.5550,
	mov	r1, r0, lsr #16	@ tmp569, temp.5550,
	and	r0, lr, #255	@ tmp574, temp.5555,
	mov	r8, ip, asl #16	@ tmp572, tmp571,
	mov	r2, lr, lsr #8	@ tmp579, temp.5555,
	orr	lr, r8, r1, asl #24	@, tmp573, tmp572, tmp569,
	and	ip, r2, #65280	@ tmp578, tmp579,
	orr	r8, lr, r0	@ tmp575, tmp573, tmp574
	movw	r0, #57932	@ tmp568,
	orr	r1, r8, ip	@ tmp580, tmp575, tmp578
	str	r1, [r4, r0]	@ tmp580, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #40]	@ temp.5568, quant8_org
	ldr	r2, [r3, #44]	@ temp.5563, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp589, temp.5568,,
	mov	r8, lr, lsr #24	@ tmp584, temp.5568,
	and	ip, r2, #-16777216	@ tmp586, temp.5563,
	ubfx	lr, r2, #8, #8	@ tmp592, temp.5563,,
	movw	r2, #57936	@ tmp583,
	orr	r1, ip, r8, asl #8	@, tmp587, tmp586, tmp584,
	orr	r8, r1, r0	@ tmp590, tmp587, tmp589
	orr	r1, r8, lr, asl #16	@, tmp594, tmp590, tmp592,
	str	r1, [r4, r2]	@ tmp594, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #52]	@ temp.5576, quant8_org
	ldr	lr, [r3, #48]	@ temp.5581, quant8_org
	and	ip, r0, #255	@ tmp600, temp.5576,
	mov	r1, r0, lsr #16	@ tmp598, temp.5576,
	and	r0, lr, #255	@ tmp603, temp.5581,
	mov	r8, ip, asl #16	@ tmp601, tmp600,
	mov	r2, lr, lsr #8	@ tmp608, temp.5581,
	orr	lr, r8, r1, asl #24	@, tmp602, tmp601, tmp598,
	and	ip, r2, #65280	@ tmp607, tmp608,
	orr	r8, lr, r0	@ tmp604, tmp602, tmp603
	movw	r0, #57940	@ tmp597,
	orr	r1, r8, ip	@ tmp609, tmp604, tmp607
	str	r1, [r4, r0]	@ tmp609, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #48]	@ temp.5594, quant8_org
	ldr	r2, [r3, #52]	@ temp.5589, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp618, temp.5594,,
	mov	r8, lr, lsr #24	@ tmp613, temp.5594,
	and	ip, r2, #-16777216	@ tmp615, temp.5589,
	ubfx	lr, r2, #8, #8	@ tmp621, temp.5589,,
	movw	r2, #57944	@ tmp612,
	orr	r1, ip, r8, asl #8	@, tmp616, tmp615, tmp613,
	orr	r8, r1, r0	@ tmp619, tmp616, tmp618
	orr	r1, r8, lr, asl #16	@, tmp623, tmp619, tmp621,
	str	r1, [r4, r2]	@ tmp623, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #60]	@ temp.5602, quant8_org
	ldr	lr, [r3, #56]	@ temp.5607, quant8_org
	and	ip, r0, #255	@ tmp629, temp.5602,
	mov	r1, r0, lsr #16	@ tmp627, temp.5602,
	and	r0, lr, #255	@ tmp632, temp.5607,
	mov	r8, ip, asl #16	@ tmp630, tmp629,
	mov	r2, lr, lsr #8	@ tmp637, temp.5607,
	orr	lr, r8, r1, asl #24	@, tmp631, tmp630, tmp627,
	and	ip, r2, #65280	@ tmp636, tmp637,
	orr	r8, lr, r0	@ tmp633, tmp631, tmp632
	movw	r0, #57948	@ tmp626,
	orr	r1, r8, ip	@ tmp638, tmp633, tmp636
	str	r1, [r4, r0]	@ tmp638, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #56]	@ temp.5620, quant8_org
	ldr	r2, [r3, #60]	@ temp.5615, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp647, temp.5620,,
	mov	r8, lr, lsr #24	@ tmp642, temp.5620,
	and	ip, r2, #-16777216	@ tmp644, temp.5615,
	ubfx	lr, r2, #8, #8	@ tmp650, temp.5615,,
	movw	r2, #57952	@ tmp641,
	orr	r1, ip, r8, asl #8	@, tmp645, tmp644, tmp642,
	orr	r8, r1, r0	@ tmp648, tmp645, tmp647
	orr	r1, r8, lr, asl #16	@, tmp652, tmp648, tmp650,
	str	r1, [r4, r2]	@ tmp652, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #68]	@ temp.5628, quant8_org
	ldr	lr, [r3, #64]	@ temp.5633, quant8_org
	and	ip, r0, #255	@ tmp658, temp.5628,
	mov	r1, r0, lsr #16	@ tmp656, temp.5628,
	and	r0, lr, #255	@ tmp661, temp.5633,
	mov	r8, ip, asl #16	@ tmp659, tmp658,
	mov	r2, lr, lsr #8	@ tmp666, temp.5633,
	orr	lr, r8, r1, asl #24	@, tmp660, tmp659, tmp656,
	and	ip, r2, #65280	@ tmp665, tmp666,
	orr	r8, lr, r0	@ tmp662, tmp660, tmp661
	movw	r0, #57956	@ tmp655,
	orr	r1, r8, ip	@ tmp667, tmp662, tmp665
	str	r1, [r4, r0]	@ tmp667, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #64]	@ temp.5646, quant8_org
	ldr	r2, [r3, #68]	@ temp.5641, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp676, temp.5646,,
	mov	r8, lr, lsr #24	@ tmp671, temp.5646,
	and	ip, r2, #-16777216	@ tmp673, temp.5641,
	ubfx	lr, r2, #8, #8	@ tmp679, temp.5641,,
	movw	r2, #57960	@ tmp670,
	orr	r1, ip, r8, asl #8	@, tmp674, tmp673, tmp671,
	orr	r8, r1, r0	@ tmp677, tmp674, tmp676
	orr	r1, r8, lr, asl #16	@, tmp681, tmp677, tmp679,
	str	r1, [r4, r2]	@ tmp681, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #76]	@ temp.5654, quant8_org
	ldr	lr, [r3, #72]	@ temp.5659, quant8_org
	and	ip, r0, #255	@ tmp687, temp.5654,
	mov	r1, r0, lsr #16	@ tmp685, temp.5654,
	and	r0, lr, #255	@ tmp690, temp.5659,
	mov	r8, ip, asl #16	@ tmp688, tmp687,
	mov	r2, lr, lsr #8	@ tmp695, temp.5659,
	orr	lr, r8, r1, asl #24	@, tmp689, tmp688, tmp685,
	and	ip, r2, #65280	@ tmp694, tmp695,
	orr	r8, lr, r0	@ tmp691, tmp689, tmp690
	movw	r0, #57964	@ tmp684,
	orr	r1, r8, ip	@ tmp696, tmp691, tmp694
	str	r1, [r4, r0]	@ tmp696, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #72]	@ temp.5672, quant8_org
	ldr	r2, [r3, #76]	@ temp.5667, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp705, temp.5672,,
	mov	r8, lr, lsr #24	@ tmp700, temp.5672,
	and	ip, r2, #-16777216	@ tmp702, temp.5667,
	ubfx	lr, r2, #8, #8	@ tmp708, temp.5667,,
	movw	r2, #57968	@ tmp699,
	orr	r1, ip, r8, asl #8	@, tmp703, tmp702, tmp700,
	orr	r8, r1, r0	@ tmp706, tmp703, tmp705
	orr	r1, r8, lr, asl #16	@, tmp710, tmp706, tmp708,
	str	r1, [r4, r2]	@ tmp710, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #20]	@ temp.5680, quant8_org
	ldr	lr, [r3, #16]	@ temp.5685, quant8_org
	and	ip, r0, #255	@ tmp716, temp.5680,
	mov	r1, r0, lsr #16	@ tmp714, temp.5680,
	and	r0, lr, #255	@ tmp719, temp.5685,
	mov	r8, ip, asl #16	@ tmp717, tmp716,
	mov	r2, lr, lsr #8	@ tmp724, temp.5685,
	orr	lr, r8, r1, asl #24	@, tmp718, tmp717, tmp714,
	and	ip, r2, #65280	@ tmp723, tmp724,
	orr	r8, lr, r0	@ tmp720, tmp718, tmp719
	movw	r0, #57972	@ tmp713,
	orr	r1, r8, ip	@ tmp725, tmp720, tmp723
	str	r1, [r4, r0]	@ tmp725, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #16]	@ temp.5698, quant8_org
	ldr	r2, [r3, #20]	@ temp.5693, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp734, temp.5698,,
	mov	r8, lr, lsr #24	@ tmp729, temp.5698,
	and	ip, r2, #-16777216	@ tmp731, temp.5693,
	ubfx	lr, r2, #8, #8	@ tmp737, temp.5693,,
	movw	r2, #57976	@ tmp728,
	orr	r1, ip, r8, asl #8	@, tmp732, tmp731, tmp729,
	orr	r8, r1, r0	@ tmp735, tmp732, tmp734
	orr	r1, r8, lr, asl #16	@, tmp739, tmp735, tmp737,
	str	r1, [r4, r2]	@ tmp739, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #28]	@ temp.5706, quant8_org
	ldr	lr, [r3, #24]	@ temp.5711, quant8_org
	and	ip, r0, #255	@ tmp745, temp.5706,
	mov	r1, r0, lsr #16	@ tmp743, temp.5706,
	and	r0, lr, #255	@ tmp748, temp.5711,
	mov	r8, ip, asl #16	@ tmp746, tmp745,
	mov	r2, lr, lsr #8	@ tmp753, temp.5711,
	orr	lr, r8, r1, asl #24	@, tmp747, tmp746, tmp743,
	and	ip, r2, #65280	@ tmp752, tmp753,
	orr	r8, lr, r0	@ tmp749, tmp747, tmp748
	movw	r0, #57980	@ tmp742,
	orr	r1, r8, ip	@ tmp754, tmp749, tmp752
	str	r1, [r4, r0]	@ tmp754, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #24]	@ temp.5724, quant8_org
	ldr	r2, [r3, #28]	@ temp.5719, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp763, temp.5724,,
	mov	r8, lr, lsr #24	@ tmp758, temp.5724,
	and	ip, r2, #-16777216	@ tmp760, temp.5719,
	ubfx	lr, r2, #8, #8	@ tmp766, temp.5719,,
	movw	r2, #57984	@ tmp757,
	orr	r1, ip, r8, asl #8	@, tmp761, tmp760, tmp758,
	orr	r8, r1, r0	@ tmp764, tmp761, tmp763
	orr	r1, r8, lr, asl #16	@, tmp768, tmp764, tmp766,
	str	r1, [r4, r2]	@ tmp768, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #36]	@ temp.5732, quant8_org
	ldr	lr, [r3, #32]	@ temp.5737, quant8_org
	and	ip, r0, #255	@ tmp774, temp.5732,
	mov	r1, r0, lsr #16	@ tmp772, temp.5732,
	and	r0, lr, #255	@ tmp777, temp.5737,
	mov	r8, ip, asl #16	@ tmp775, tmp774,
	mov	r2, lr, lsr #8	@ tmp782, temp.5737,
	orr	lr, r8, r1, asl #24	@, tmp776, tmp775, tmp772,
	and	ip, r2, #65280	@ tmp781, tmp782,
	orr	r8, lr, r0	@ tmp778, tmp776, tmp777
	movw	r0, #57988	@ tmp771,
	orr	r1, r8, ip	@ tmp783, tmp778, tmp781
	str	r1, [r4, r0]	@ tmp783, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #32]	@ temp.5750, quant8_org
	ldr	r2, [r3, #36]	@ temp.5745, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp792, temp.5750,,
	mov	r8, lr, lsr #24	@ tmp787, temp.5750,
	and	ip, r2, #-16777216	@ tmp789, temp.5745,
	ubfx	lr, r2, #8, #8	@ tmp795, temp.5745,,
	movw	r2, #57992	@ tmp786,
	orr	r1, ip, r8, asl #8	@, tmp790, tmp789, tmp787,
	orr	r8, r1, r0	@ tmp793, tmp790, tmp792
	orr	r1, r8, lr, asl #16	@, tmp797, tmp793, tmp795,
	str	r1, [r4, r2]	@ tmp797, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #44]	@ temp.5758, quant8_org
	ldr	lr, [r3, #40]	@ temp.5763, quant8_org
	and	ip, r0, #255	@ tmp803, temp.5758,
	mov	r1, r0, lsr #16	@ tmp801, temp.5758,
	and	r0, lr, #255	@ tmp806, temp.5763,
	mov	r8, ip, asl #16	@ tmp804, tmp803,
	mov	r2, lr, lsr #8	@ tmp811, temp.5763,
	orr	lr, r8, r1, asl #24	@, tmp805, tmp804, tmp801,
	and	ip, r2, #65280	@ tmp810, tmp811,
	orr	r8, lr, r0	@ tmp807, tmp805, tmp806
	movw	r0, #57996	@ tmp800,
	orr	r1, r8, ip	@ tmp812, tmp807, tmp810
	str	r1, [r4, r0]	@ tmp812, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #40]	@ temp.5776, quant8_org
	ldr	r2, [r3, #44]	@ temp.5771, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp821, temp.5776,,
	mov	r8, lr, lsr #24	@ tmp816, temp.5776,
	and	ip, r2, #-16777216	@ tmp818, temp.5771,
	ubfx	lr, r2, #8, #8	@ tmp824, temp.5771,,
	movw	r2, #58000	@ tmp815,
	orr	r1, ip, r8, asl #8	@, tmp819, tmp818, tmp816,
	orr	r8, r1, r0	@ tmp822, tmp819, tmp821
	orr	r1, r8, lr, asl #16	@, tmp826, tmp822, tmp824,
	str	r1, [r4, r2]	@ tmp826, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #52]	@ temp.5784, quant8_org
	ldr	lr, [r3, #48]	@ temp.5789, quant8_org
	and	ip, r0, #255	@ tmp832, temp.5784,
	mov	r1, r0, lsr #16	@ tmp830, temp.5784,
	and	r0, lr, #255	@ tmp835, temp.5789,
	mov	r8, ip, asl #16	@ tmp833, tmp832,
	mov	r2, lr, lsr #8	@ tmp840, temp.5789,
	orr	lr, r8, r1, asl #24	@, tmp834, tmp833, tmp830,
	and	ip, r2, #65280	@ tmp839, tmp840,
	orr	r8, lr, r0	@ tmp836, tmp834, tmp835
	movw	r0, #58004	@ tmp829,
	orr	r1, r8, ip	@ tmp841, tmp836, tmp839
	str	r1, [r4, r0]	@ tmp841, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r3, #48]	@ temp.5802, quant8_org
	ldr	r2, [r3, #52]	@ temp.5797, quant8_org
	ubfx	r0, lr, #8, #8	@ tmp850, temp.5802,,
	mov	r8, lr, lsr #24	@ tmp845, temp.5802,
	and	ip, r2, #-16777216	@ tmp847, temp.5797,
	ubfx	lr, r2, #8, #8	@ tmp853, temp.5797,,
	orr	r1, ip, r8, asl #8	@, tmp848, tmp847, tmp845,
	movw	r8, #58008	@ tmp844,
	orr	ip, r1, r0	@ tmp851, tmp848, tmp850
	orr	r0, ip, lr, asl #16	@, tmp855, tmp851, tmp853,
	str	r0, [r4, r8]	@ tmp855, <variable>.DecPicPara.Qmatrix
	ldr	r1, [r3, #60]	@ temp.5810, quant8_org
	ldr	lr, [r3, #56]	@ temp.5815, quant8_org
	and	r2, r1, #255	@ tmp861, temp.5810,
	mov	r8, r1, lsr #16	@ tmp859, temp.5810,
	and	r0, lr, #255	@ tmp864, temp.5815,
	mov	ip, r2, asl #16	@ tmp862, tmp861,
	mov	r2, lr, lsr #8	@ tmp869, temp.5815,
	orr	r1, ip, r8, asl #24	@, tmp863, tmp862, tmp859,
	and	lr, r2, #65280	@ tmp868, tmp869,
	orr	ip, r1, r0	@ tmp865, tmp863, tmp864
	movw	r8, #58012	@ tmp858,
	orr	r1, ip, lr	@ tmp870, tmp865, tmp868
	str	r1, [r4, r8]	@ tmp870, <variable>.DecPicPara.Qmatrix
	ldr	r2, [r3, #56]	@ temp.5828, quant8_org
	ldr	lr, [r3, #60]	@ temp.5823, quant8_org
	ubfx	r8, r2, #8, #8	@ tmp879, temp.5828,,
	mov	r0, r2, lsr #24	@ tmp874, temp.5828,
	and	ip, lr, #-16777216	@ tmp876, temp.5823,
	ubfx	r2, lr, #8, #8	@ tmp882, temp.5823,,
	orr	r1, ip, r0, asl #8	@, tmp877, tmp876, tmp874,
	movw	r0, #58016	@ tmp873,
	orr	lr, r1, r8	@ tmp880, tmp877, tmp879
	orr	r8, lr, r2, asl #16	@, tmp884, tmp880, tmp882,
	str	r8, [r4, r0]	@ tmp884, <variable>.DecPicPara.Qmatrix
	ldr	r1, [r3, #68]	@ temp.5836, quant8_org
	ldr	r2, [r3, #64]	@ temp.5841, quant8_org
	and	ip, r1, #255	@ tmp890, temp.5836,
	mov	r0, r1, lsr #16	@ tmp888, temp.5836,
	and	r8, r2, #255	@ tmp893, temp.5841,
	mov	lr, ip, asl #16	@ tmp891, tmp890,
	mov	r2, r2, lsr #8	@ tmp898, temp.5841,
	orr	r1, lr, r0, asl #24	@, tmp892, tmp891, tmp888,
	and	ip, r2, #65280	@ tmp897, tmp898,
	orr	lr, r1, r8	@ tmp894, tmp892, tmp893
	movw	r0, #58020	@ tmp887,
	orr	r8, lr, ip	@ tmp899, tmp894, tmp897
	str	r8, [r4, r0]	@ tmp899, <variable>.DecPicPara.Qmatrix
	ldr	r1, [r3, #64]	@ temp.5854, quant8_org
	ldr	r2, [r3, #68]	@ temp.5849, quant8_org
	ubfx	r0, r1, #8, #8	@ tmp908, temp.5854,,
	mov	lr, r1, lsr #24	@ tmp903, temp.5854,
	and	ip, r2, #-16777216	@ tmp905, temp.5849,
	ubfx	r2, r2, #8, #8	@ tmp911, temp.5849,,
	orr	r8, ip, lr, asl #8	@, tmp906, tmp905, tmp903,
	movw	ip, #58024	@ tmp902,
	orr	r1, r8, r0	@ tmp909, tmp906, tmp908
	orr	lr, r1, r2, asl #16	@, tmp913, tmp909, tmp911,
	str	lr, [r4, ip]	@ tmp913, <variable>.DecPicPara.Qmatrix
	ldr	r0, [r3, #76]	@ D.42917, quant8_org
	ldr	r2, [r3, #72]	@ D.42924, quant8_org
	and	r8, r0, #255	@ tmp919, D.42917,
	mov	r1, r0, lsr #16	@ tmp917, D.42917,
	and	r0, r2, #255	@ tmp922, D.42924,
	mov	ip, r8, asl #16	@ tmp920, tmp919,
	mov	lr, r2, lsr #8	@ tmp927, D.42924,
	orr	r8, ip, r1, asl #24	@, tmp921, tmp920, tmp917,
	and	r2, lr, #65280	@ tmp926, tmp927,
	orr	r1, r8, r0	@ tmp923, tmp921, tmp922
	movw	ip, #58028	@ tmp916,
	orr	lr, r1, r2	@ tmp928, tmp923, tmp926
	str	lr, [r4, ip]	@ tmp928, <variable>.DecPicPara.Qmatrix
	ldr	r8, [r3, #72]	@ temp.4675, quant8_org
	ldr	r3, [r3, #76]	@ temp.4674, quant8_org
	ubfx	r1, r8, #8, #8	@ tmp937, temp.4675,,
	mov	r2, r8, lsr #24	@ tmp932, temp.4675,
	and	r0, r3, #-16777216	@ tmp934, temp.4674,
	ubfx	lr, r3, #8, #8	@ tmp940, temp.4674,,
	orr	ip, r0, r2, asl #8	@, tmp935, tmp934, tmp932,
	movw	r0, #58032	@ tmp931,
	orr	r8, ip, r1	@ tmp938, tmp935, tmp937
	orr	r1, r8, lr, asl #16	@, tmp942, tmp938, tmp940,
	str	r1, [r4, r0]	@ tmp942, <variable>.DecPicPara.Qmatrix
	b	.L1338	@
.L1335:
	movw	r3, #17614	@ tmp943,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ prephitmp.4605, <variable>.CurrPPS.pic_scaling_matrix_present_flag
.L1336:
	cmp	r2, #1	@ prephitmp.4605,
	addne	r6, r4, #57600	@ ivtmp.4651, pH264Ctx,
	movne	r3, #0	@ i.4679,
	addne	r6, r6, #212	@ ivtmp.4651, ivtmp.4651,
	beq	.L1361	@,
.L1341:
	add	r9, r3, #1	@ tmp1939, i.4679,
	add	r8, r3, #4064	@ tmp1436, i.4679,
	add	r3, r9, #4064	@ tmp2005, tmp1939,
	add	r7, r8, #4	@ tmp1436, tmp1436,
	add	lr, r3, #4	@ tmp2005, tmp2005,
	add	r3, r9, #1	@ i.4679, tmp1939,
	add	r1, r4, r7, asl #2	@, tmp1440, pH264Ctx, tmp1436,
	cmp	r3, #24	@ i.4679,
	add	sl, r4, lr, asl #2	@, tmp2007, pH264Ctx, tmp2005,
	mov	lr, r6	@ tmp1940, ivtmp.4651
	ldr	r5, [r1, #4]	@ D.42984, <variable>.CurrSPS.qmatrix4x4
	ldr	r2, [sl, #4]	@ D.42984, <variable>.CurrSPS.qmatrix4x4
	bic	r0, r5, #16711680	@ tmp1444, D.42984,
	ubfx	r8, r5, #8, #8	@ tmp1446, D.42984,,
	bic	ip, r2, #16711680	@ tmp2012, D.42984,
	ubfx	r7, r2, #8, #8	@ tmp2014, D.42984,,
	bic	r9, r0, #65280	@ tmp1444, tmp1444,
	mov	sl, r5, lsr #8	@ tmp1452, D.42984,
	bic	r1, ip, #65280	@ tmp2012, tmp2012,
	mov	ip, r2, lsr #8	@ tmp2018, D.42984,
	orr	r0, r9, r8, asl #16	@, tmp1448, tmp1444, tmp1446,
	and	r5, sl, #65280	@ tmp1451, tmp1452,
	orr	r9, r1, r7, asl #16	@, tmp2016, tmp2012, tmp2014,
	and	r2, ip, #65280	@ tmp2019, tmp2018,
	orr	sl, r0, r5	@ tmp1453, tmp1448, tmp1451
	orr	r8, r9, r2	@ tmp2020, tmp2016, tmp2019
	str	sl, [lr], #4	@ tmp1453, <variable>.DecPicPara.Qmatrix
	str	r8, [r6, #4]	@ tmp2020, <variable>.DecPicPara.Qmatrix
	add	r6, lr, #4	@ ivtmp.4651, tmp1940,
	bne	.L1341	@,
	movw	r3, #16376	@ tmp1454,
	movw	sl, #16372	@ tmp1455,
	ldr	r8, [r4, r3]	@ temp.4696, <variable>.CurrSPS.qmatrix8x8
	mov	r5, #16384	@ tmp1483,
	ldr	r7, [r4, sl]	@, <variable>.CurrSPS.qmatrix8x8
	movw	lr, #16380	@ tmp1484,
	movw	r2, #16392	@ tmp1512,
	movw	r9, #16388	@ tmp1513,
	mov	r1, r8, lsr #16	@, temp.4696,
	and	r6, r8, #255	@, temp.4696,
	str	r7, [fp, #-240]	@, %sfp
	ldr	r7, [r4, r5]	@ temp.4718, <variable>.CurrSPS.qmatrix8x8
	str	r1, [fp, #-76]	@, %sfp
	movw	r1, #16400	@ tmp1541,
	ldr	r0, [r4, lr]	@, <variable>.CurrSPS.qmatrix8x8
	and	ip, r7, #255	@, temp.4718,
	str	r6, [fp, #-96]	@, %sfp
	ldr	sl, [fp, #-240]	@, %sfp
	str	r0, [fp, #-48]	@, %sfp
	movw	r0, #16396	@ tmp1542,
	ldr	r6, [r4, r2]	@ temp.4744, <variable>.CurrSPS.qmatrix8x8
	str	ip, [fp, #-84]	@, %sfp
	mov	r5, sl, lsr #24	@,,
	ldr	r3, [r4, r9]	@, <variable>.CurrSPS.qmatrix8x8
	and	lr, r6, #255	@, temp.4744,
	str	r5, [fp, #-104]	@, %sfp
	movw	r9, #16408	@ tmp1570,
	movw	sl, #16404	@ tmp1571,
	mov	ip, r7, lsr #16	@, temp.4718,
	str	r3, [fp, #-72]	@, %sfp
	ldr	r5, [r4, r1]	@ temp.4770, <variable>.CurrSPS.qmatrix8x8
	str	lr, [fp, #-88]	@, %sfp
	ldr	r2, [r4, r0]	@, <variable>.CurrSPS.qmatrix8x8
	and	r3, r5, #255	@, temp.4770,
	str	ip, [fp, #-124]	@, %sfp
	ldr	lr, [fp, #-48]	@, %sfp
	str	r2, [fp, #-80]	@, %sfp
	movw	r2, #16416	@ tmp1599,
	ldr	ip, [r4, r9]	@ temp.4796, <variable>.CurrSPS.qmatrix8x8
	str	r3, [fp, #-116]	@, %sfp
	movw	r3, #16412	@ tmp1600,
	ldr	r1, [r4, sl]	@, <variable>.CurrSPS.qmatrix8x8
	mov	r0, lr, lsr #24	@,,
	and	r9, ip, #255	@, temp.4796,
	str	r0, [fp, #-108]	@, %sfp
	movw	lr, #16424	@ tmp1628,
	str	r1, [fp, #-68]	@, %sfp
	mov	r1, r6, lsr #16	@, temp.4744,
	ldr	r0, [r4, r2]	@ temp.4822, <variable>.CurrSPS.qmatrix8x8
	str	r9, [fp, #-92]	@, %sfp
	movw	r9, #16420	@ tmp1629,
	ldr	sl, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	and	r2, r0, #255	@, temp.4822,
	str	r1, [fp, #-132]	@, %sfp
	str	sl, [fp, #-64]	@, %sfp
	ldr	r1, [r4, lr]	@ temp.4848, <variable>.CurrSPS.qmatrix8x8
	str	r2, [fp, #-120]	@, %sfp
	movw	r2, #16432	@ tmp1657,
	ldr	r3, [r4, r9]	@, <variable>.CurrSPS.qmatrix8x8
	and	r9, r1, #255	@, temp.4848,
	str	r3, [fp, #-60]	@, %sfp
	movw	r3, #16428	@ tmp1658,
	ldr	sl, [fp, #-72]	@, %sfp
	mov	lr, sl, lsr #24	@,,
	str	lr, [fp, #-128]	@, %sfp
	ldr	lr, [r4, r2]	@ temp.4874, <variable>.CurrSPS.qmatrix8x8
	mov	sl, r5, lsr #16	@, temp.4770,
	str	r9, [fp, #-152]	@, %sfp
	ldr	r9, [r4, r3]	@ temp.4879, <variable>.CurrSPS.qmatrix8x8
	movw	r3, #16440	@ tmp1686,
	str	sl, [fp, #-136]	@, %sfp
	ldr	sl, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	and	r3, lr, #255	@, temp.4874,
	str	r3, [fp, #-148]	@, %sfp
	str	sl, [fp, #-140]	@, %sfp
	movw	sl, #16436	@ tmp1687,
	ldr	r3, [r4, sl]	@, <variable>.CurrSPS.qmatrix8x8
	ldr	sl, [fp, #-80]	@, %sfp
	str	r3, [fp, #-100]	@, %sfp
	mov	r3, sl, lsr #24	@,,
	ldr	sl, [fp, #-140]	@, %sfp
	str	r3, [fp, #-160]	@, %sfp
	and	r3, sl, #255	@ tmp1691,,
	mov	sl, ip, lsr #16	@, temp.4796,
	str	sl, [fp, #-164]	@, %sfp
	ldr	sl, [fp, #-68]	@, %sfp
	mov	r3, r3, asl #16	@, tmp1691,
	mov	sl, sl, lsr #24	@,,
	str	sl, [fp, #-176]	@, %sfp
	mov	sl, r0, lsr #16	@, temp.4822,
	str	sl, [fp, #-180]	@, %sfp
	ldr	sl, [fp, #-64]	@, %sfp
	mov	sl, sl, lsr #24	@,,
	str	sl, [fp, #-168]	@, %sfp
	mov	sl, r1, lsr #16	@, temp.4848,
	str	sl, [fp, #-188]	@, %sfp
	ldr	sl, [fp, #-60]	@, %sfp
	mov	sl, sl, lsr #24	@,,
	str	sl, [fp, #-204]	@, %sfp
	mov	sl, lr, lsr #16	@, temp.4874,
	str	sl, [fp, #-212]	@, %sfp
	mov	sl, r9, lsr #24	@, temp.4879,
	str	sl, [fp, #-220]	@, %sfp
	ldr	sl, [fp, #-140]	@, %sfp
	mov	sl, sl, lsr #16	@,,
	str	sl, [fp, #-228]	@, %sfp
	ldr	sl, [fp, #-76]	@, %sfp
	mov	sl, sl, asl #24	@,,
	str	sl, [fp, #-76]	@, %sfp
	ldr	sl, [fp, #-84]	@, %sfp
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-84]	@, %sfp
	ldr	sl, [fp, #-88]	@, %sfp
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-112]	@, %sfp
	ldr	sl, [fp, #-116]	@, %sfp
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-156]	@, %sfp
	ldr	sl, [fp, #-92]	@, %sfp
	str	r3, [fp, #-232]	@, %sfp
	and	r3, r7, #-16777216	@, temp.4718,
	str	r3, [fp, #-88]	@, %sfp
	and	r3, r5, #-16777216	@, temp.4770,
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-144]	@, %sfp
	ldr	sl, [fp, #-120]	@, %sfp
	str	r3, [fp, #-120]	@, %sfp
	and	r3, r0, #-16777216	@, temp.4822,
	str	r3, [fp, #-196]	@, %sfp
	and	r3, lr, #-16777216	@, temp.4874,
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-184]	@, %sfp
	ldr	sl, [fp, #-152]	@, %sfp
	str	r3, [fp, #-224]	@, %sfp
	ldr	r3, [fp, #-76]	@, %sfp
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-172]	@, %sfp
	ldr	sl, [fp, #-148]	@, %sfp
	mov	sl, sl, asl #16	@,,
	str	sl, [fp, #-216]	@, %sfp
	and	sl, r8, #-16777216	@, temp.4696,
	str	sl, [fp, #-92]	@, %sfp
	and	sl, r6, #-16777216	@, temp.4744,
	str	sl, [fp, #-116]	@, %sfp
	and	sl, ip, #-16777216	@, temp.4796,
	str	sl, [fp, #-148]	@, %sfp
	and	sl, r1, #-16777216	@, temp.4848,
	str	sl, [fp, #-208]	@, %sfp
	ldr	sl, [fp, #-96]	@, %sfp
	orr	r3, r3, sl, asl #16	@,,,,
	ldr	sl, [fp, #-104]	@, %sfp
	str	r3, [fp, #-96]	@, %sfp
	ldr	r3, [fp, #-92]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-124]	@, %sfp
	str	r3, [fp, #-76]	@, %sfp
	ldr	r3, [fp, #-84]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-108]	@, %sfp
	str	r3, [fp, #-84]	@, %sfp
	ldr	r3, [fp, #-88]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-132]	@, %sfp
	str	r3, [fp, #-108]	@, %sfp
	ldr	r3, [fp, #-112]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-128]	@, %sfp
	str	r3, [fp, #-112]	@, %sfp
	ldr	r3, [fp, #-116]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	str	r3, [fp, #-116]	@, %sfp
	ldr	sl, [fp, #-136]	@, %sfp
	ldr	r3, [fp, #-156]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-160]	@, %sfp
	str	r3, [fp, #-92]	@, %sfp
	ldr	r3, [fp, #-120]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-164]	@, %sfp
	str	r3, [fp, #-120]	@, %sfp
	ldr	r3, [fp, #-144]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-176]	@, %sfp
	str	r3, [fp, #-152]	@, %sfp
	ldr	r3, [fp, #-148]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-180]	@, %sfp
	str	r3, [fp, #-148]	@, %sfp
	ldr	r3, [fp, #-184]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-168]	@, %sfp
	str	r3, [fp, #-192]	@, %sfp
	ldr	r3, [fp, #-196]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-188]	@, %sfp
	str	r3, [fp, #-196]	@, %sfp
	ldr	r3, [fp, #-172]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-204]	@, %sfp
	str	r3, [fp, #-200]	@, %sfp
	ldr	r3, [fp, #-208]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-212]	@, %sfp
	str	r3, [fp, #-208]	@, %sfp
	ldr	r3, [fp, #-216]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	ldr	sl, [fp, #-220]	@, %sfp
	str	r3, [fp, #-236]	@, %sfp
	ldr	r3, [fp, #-224]	@, %sfp
	orr	r3, r3, sl, asl #8	@,,,,
	ldr	sl, [fp, #-228]	@, %sfp
	str	r3, [fp, #-220]	@, %sfp
	ldr	r3, [fp, #-232]	@, %sfp
	orr	r3, r3, sl, asl #24	@,,,,
	str	r3, [fp, #-232]	@, %sfp
	ldr	r3, [fp, #-240]	@, %sfp
	ubfx	sl, r3, #8, #8	@,,,
	ubfx	r3, r8, #8, #8	@, temp.4696,,
	str	sl, [fp, #-104]	@, %sfp
	ldr	r8, [fp, #-48]	@, %sfp
	str	r3, [fp, #-124]	@, %sfp
	ubfx	r3, r7, #8, #8	@, temp.4718,,
	ubfx	sl, r8, #8, #8	@,,,
	str	r3, [fp, #-132]	@, %sfp
	ldr	r8, [fp, #-72]	@, %sfp
	ubfx	r7, r6, #8, #8	@, temp.4744,,
	ldr	r3, [fp, #-80]	@, %sfp
	str	sl, [fp, #-88]	@, %sfp
	ubfx	sl, r8, #8, #8	@,,,
	ubfx	r8, r3, #8, #8	@,,,
	ldr	r3, [fp, #-64]	@, %sfp
	str	sl, [fp, #-136]	@, %sfp
	ubfx	sl, r5, #8, #8	@, temp.4770,,
	str	r8, [fp, #-164]	@, %sfp
	ubfx	r8, r3, #8, #8	@,,,
	str	sl, [fp, #-144]	@, %sfp
	ubfx	sl, r0, #8, #8	@, temp.4822,,
	ldr	r3, [fp, #-240]	@, %sfp
	str	r8, [fp, #-188]	@, %sfp
	str	sl, [fp, #-172]	@, %sfp
	ldr	r8, [fp, #-48]	@, %sfp
	mov	r2, r3, lsr #8	@,,
	ldr	sl, [fp, #-72]	@, %sfp
	ldr	r6, [fp, #-68]	@, %sfp
	ldr	r0, [fp, #-60]	@, %sfp
	ubfx	r5, r6, #8, #8	@,,,
	str	r7, [fp, #-156]	@, %sfp
	ubfx	r6, r1, #8, #8	@, temp.4848,,
	ubfx	r7, ip, #8, #8	@, temp.4796,,
	mov	r1, r8, lsr #8	@,,
	ubfx	ip, r0, #8, #8	@,,,
	str	r7, [fp, #-184]	@, %sfp
	mov	r0, sl, lsr #8	@,,
	ubfx	r7, lr, #8, #8	@, temp.4874,,
	str	r6, [fp, #-216]	@, %sfp
	ldr	lr, [fp, #-80]	@, %sfp
	ldr	r6, [fp, #-68]	@, %sfp
	str	r7, [fp, #-228]	@, %sfp
	and	r7, r3, #255	@ tmp1462,,
	str	r1, [fp, #-48]	@, %sfp
	and	r1, sl, #255	@ tmp1520,,
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	sl, [fp, #-60]	@, %sfp
	str	r5, [fp, #-180]	@, %sfp
	ubfx	r5, r9, #8, #8	@, temp.4879,,
	str	ip, [fp, #-212]	@, %sfp
	mov	ip, lr, lsr #8	@,,
	str	r5, [fp, #-224]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	str	r2, [fp, #-248]	@, %sfp
	and	r2, r8, #255	@ tmp1491,,
	str	r0, [fp, #-128]	@, %sfp
	mov	r8, r3, lsr #8	@,,
	and	r0, lr, #255	@ tmp1549,,
	str	ip, [fp, #-160]	@, %sfp
	mov	lr, sl, lsr #8	@,,
	and	ip, r6, #255	@ tmp1578,,
	str	r5, [fp, #-176]	@, %sfp
	and	r5, r3, #255	@ tmp1607,,
	str	r8, [fp, #-168]	@, %sfp
	and	r8, sl, #255	@ tmp1636,,
	str	lr, [fp, #-204]	@, %sfp
	and	lr, r9, #255	@ tmp1665, temp.4879,
	ldr	r6, [fp, #-100]	@, %sfp
	mov	r9, r9, lsr #8	@ tmp1670, temp.4879,
	and	r9, r9, #65280	@ tmp1669, tmp1670,
	and	sl, r6, #255	@ tmp1694,,
	mov	r3, r6, lsr #8	@,,
	ldr	r6, [fp, #-96]	@, %sfp
	str	r3, [fp, #-240]	@, %sfp
	orr	r7, r6, r7	@,, tmp1462
	ldr	r3, [fp, #-104]	@, %sfp
	ldr	r6, [fp, #-76]	@, %sfp
	str	r7, [fp, #-60]	@, %sfp
	orr	r7, r6, r3	@,,
	ldr	r6, [fp, #-84]	@, %sfp
	str	r7, [fp, #-64]	@, %sfp
	orr	r3, r6, r2	@,, tmp1491
	ldr	r7, [fp, #-108]	@, %sfp
	ldr	r2, [fp, #-88]	@, %sfp
	str	r3, [fp, #-68]	@, %sfp
	ldr	r3, [fp, #-112]	@, %sfp
	orr	r6, r7, r2	@,,
	ldr	r7, [fp, #-136]	@, %sfp
	orr	r2, r3, r1	@,, tmp1520
	str	r6, [fp, #-80]	@, %sfp
	ldr	r3, [fp, #-92]	@, %sfp
	ldr	r6, [fp, #-116]	@, %sfp
	str	r2, [fp, #-72]	@, %sfp
	orr	r2, r3, r0	@,, tmp1549
	orr	r1, r6, r7	@,,
	ldr	r0, [fp, #-164]	@, %sfp
	ldr	r7, [fp, #-120]	@, %sfp
	ldr	r3, [fp, #-180]	@, %sfp
	orr	r6, r7, r0	@,,
	str	r1, [fp, #-96]	@, %sfp
	ldr	r7, [fp, #-148]	@, %sfp
	ldr	r1, [fp, #-152]	@, %sfp
	str	r2, [fp, #-76]	@, %sfp
	str	r6, [fp, #-104]	@, %sfp
	orr	r2, r1, ip	@,, tmp1578
	orr	r6, r7, r3	@,,
	ldr	ip, [fp, #-192]	@, %sfp
	ldr	r1, [fp, #-188]	@, %sfp
	ldr	r7, [fp, #-200]	@, %sfp
	orr	r0, ip, r5	@,, tmp1607
	str	r2, [fp, #-84]	@, %sfp
	ldr	r2, [fp, #-196]	@, %sfp
	str	r6, [fp, #-108]	@, %sfp
	orr	r6, r7, r8	@,, tmp1636
	orr	r3, r2, r1	@,,
	str	r0, [fp, #-88]	@, %sfp
	str	r3, [fp, #-112]	@, %sfp
	str	r6, [fp, #-116]	@, %sfp
	ldr	ip, [fp, #-208]	@, %sfp
	ldr	r5, [fp, #-212]	@, %sfp
	ldr	r1, [fp, #-236]	@, %sfp
	ldr	r3, [fp, #-220]	@, %sfp
	orr	r0, ip, r5	@,,
	ldr	r8, [fp, #-224]	@, %sfp
	orr	r2, r1, lr	@,, tmp1665
	ldr	r5, [fp, #-48]	@, %sfp
	ldr	r7, [fp, #-232]	@, %sfp
	orr	lr, r3, r8	@,,
	ldr	r6, [fp, #-248]	@, %sfp
	ldr	ip, [fp, #-128]	@, %sfp
	ldr	r1, [fp, #-176]	@, %sfp
	ldr	r8, [fp, #-204]	@, %sfp
	ldr	r3, [fp, #-240]	@, %sfp
	str	r0, [fp, #-136]	@, %sfp
	str	r2, [fp, #-92]	@, %sfp
	ldr	r0, [fp, #-160]	@, %sfp
	ldr	r2, [fp, #-168]	@, %sfp
	str	lr, [fp, #-120]	@, %sfp
	orr	lr, r7, sl	@ tmp1695,, tmp1694
	and	r7, r6, #65280	@ tmp1466,,
	and	r6, r5, #65280	@ tmp1495,,
	and	r5, ip, #65280	@ tmp1524,,
	and	ip, r0, #65280	@ tmp1553,,
	and	r0, r1, #65280	@ tmp1582,,
	and	r1, r2, #65280	@ tmp1611,,
	and	r2, r8, #65280	@ tmp1640,,
	and	r8, r3, #65280	@,,
	ldr	r3, [fp, #-60]	@, %sfp
	str	r8, [fp, #-48]	@, %sfp
	movw	r8, #57908	@ tmp1456,
	orr	r7, r3, r7	@ tmp1468,, tmp1466
	str	r7, [r4, r8]	@ tmp1468, <variable>.DecPicPara.Qmatrix
	ldr	r3, [fp, #-124]	@, %sfp
	ldr	r7, [fp, #-64]	@, %sfp
	orr	r8, r7, r3, asl #16	@, tmp1482,,,
	movw	r3, #57912	@ tmp1471,
	str	r8, [r4, r3]	@ tmp1482, <variable>.DecPicPara.Qmatrix
	movw	r3, #57916	@ tmp1485,
	ldr	r7, [fp, #-68]	@, %sfp
	orr	r6, r7, r6	@ tmp1497,, tmp1495
	str	r6, [r4, r3]	@ tmp1497, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-132]	@, %sfp
	movw	r3, #57920	@ tmp1500,
	ldr	r8, [fp, #-80]	@, %sfp
	orr	r7, r8, r6, asl #16	@, tmp1511,,,
	str	r7, [r4, r3]	@ tmp1511, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-72]	@, %sfp
	movw	r7, #57924	@ tmp1514,
	orr	r5, r6, r5	@ tmp1526,, tmp1524
	str	r5, [r4, r7]	@ tmp1526, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-156]	@, %sfp
	movw	r5, #57928	@ tmp1529,
	ldr	r3, [fp, #-96]	@, %sfp
	orr	r6, r3, r8, asl #16	@, tmp1540,,,
	str	r6, [r4, r5]	@ tmp1540, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-76]	@, %sfp
	movw	r3, #57932	@ tmp1543,
	orr	r8, r7, ip	@ tmp1555,, tmp1553
	str	r8, [r4, r3]	@ tmp1555, <variable>.DecPicPara.Qmatrix
	ldr	ip, [fp, #-144]	@, %sfp
	movw	r7, #57936	@ tmp1558,
	ldr	r6, [fp, #-104]	@, %sfp
	movw	r3, #57940	@ tmp1572,
	orr	r5, r6, ip, asl #16	@, tmp1569,,,
	str	r5, [r4, r7]	@ tmp1569, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-84]	@, %sfp
	movw	r5, #57944	@ tmp1587,
	orr	ip, r8, r0	@ tmp1584,, tmp1582
	str	ip, [r4, r3]	@ tmp1584, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-184]	@, %sfp
	movw	r3, #57948	@ tmp1601,
	ldr	r0, [fp, #-108]	@, %sfp
	orr	r7, r0, r6, asl #16	@, tmp1598,,,
	str	r7, [r4, r5]	@ tmp1598, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-88]	@, %sfp
	movw	r7, #57952	@ tmp1616,
	orr	ip, r8, r1	@ tmp1613,, tmp1611
	str	ip, [r4, r3]	@ tmp1613, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-172]	@, %sfp
	movw	r8, #57956	@ tmp1630,
	ldr	r0, [fp, #-112]	@, %sfp
	orr	r1, r0, r6, asl #16	@, tmp1627,,,
	str	r1, [r4, r7]	@ tmp1627, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-116]	@, %sfp
	movw	r0, #57960	@ tmp1645,
	orr	ip, r5, r2	@ tmp1642,, tmp1640
	str	ip, [r4, r8]	@ tmp1642, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-216]	@, %sfp
	movw	r2, #57964	@ tmp1659,
	ldr	r3, [fp, #-136]	@, %sfp
	orr	r7, r3, r6, asl #16	@, tmp1656,,,
	str	r7, [r4, r0]	@ tmp1656, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-92]	@, %sfp
	movw	r3, #57968	@ tmp1674,
	movw	r7, #57972	@ tmp1688,
	orr	r5, r1, r9	@ tmp1671,, tmp1669
	str	r5, [r4, r2]	@ tmp1671, <variable>.DecPicPara.Qmatrix
	ldr	ip, [fp, #-228]	@, %sfp
	movw	r1, #16444	@ tmp1716,
	ldr	r8, [fp, #-120]	@, %sfp
	ldr	r1, [r4, r1]	@ temp.4931, <variable>.CurrSPS.qmatrix8x8
	orr	r6, r8, ip, asl #16	@, tmp1685,,,
	str	r6, [r4, r3]	@ tmp1685, <variable>.DecPicPara.Qmatrix
	ldr	r9, [fp, #-48]	@, %sfp
	movw	r6, #16456	@ tmp1744,
	orr	r0, lr, r9	@ tmp1700, tmp1695,
	str	r0, [r4, r7]	@ tmp1700, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-100]	@, %sfp
	movw	lr, #16448	@ tmp1715,
	ldr	r5, [fp, #-140]	@, %sfp
	movw	r9, #16452	@ tmp1745,
	mov	r2, sl, lsr #24	@ tmp1704,,
	ldr	sl, [r4, lr]	@ temp.4926, <variable>.CurrSPS.qmatrix8x8
	and	ip, r5, #-16777216	@ tmp1706,,
	movw	lr, #16464	@ tmp1773,
	orr	r8, ip, r2, asl #8	@,, tmp1706, tmp1704,
	and	r3, sl, #255	@, temp.4926,
	str	r8, [fp, #-80]	@, %sfp
	movw	r2, #16460	@ tmp1774,
	ldr	r8, [r4, r6]	@ temp.4952, <variable>.CurrSPS.qmatrix8x8
	mov	r7, sl, lsr #16	@, temp.4926,
	str	r3, [fp, #-48]	@, %sfp
	movw	r3, #16472	@ tmp1802,
	ldr	r0, [r4, r9]	@, <variable>.CurrSPS.qmatrix8x8
	and	r5, r8, #255	@, temp.4952,
	mov	r6, r1, lsr #24	@, temp.4931,
	str	r0, [fp, #-208]	@, %sfp
	movw	r0, #16468	@ tmp1803,
	str	r7, [fp, #-72]	@, %sfp
	ldr	r7, [r4, lr]	@ temp.4978, <variable>.CurrSPS.qmatrix8x8
	str	r5, [fp, #-76]	@, %sfp
	mov	r5, r8, lsr #16	@, temp.4952,
	ldr	ip, [r4, r2]	@, <variable>.CurrSPS.qmatrix8x8
	and	r9, r7, #255	@, temp.4978,
	str	r6, [fp, #-96]	@, %sfp
	movw	r2, #16480	@ tmp1831,
	str	ip, [fp, #-204]	@, %sfp
	ldr	r6, [r4, r3]	@ temp.5004, <variable>.CurrSPS.qmatrix8x8
	movw	r3, #16476	@ tmp1832,
	str	r9, [fp, #-108]	@, %sfp
	ldr	lr, [r4, r0]	@, <variable>.CurrSPS.qmatrix8x8
	and	ip, r6, #255	@, temp.5004,
	str	r5, [fp, #-104]	@, %sfp
	ldr	r0, [fp, #-208]	@, %sfp
	str	lr, [fp, #-68]	@, %sfp
	ldr	r5, [r4, r2]	@ temp.5030, <variable>.CurrSPS.qmatrix8x8
	movw	r2, #16488	@ tmp1860,
	str	ip, [fp, #-128]	@, %sfp
	mov	lr, r0, lsr #24	@,,
	ldr	r9, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	movw	r3, #16484	@ tmp1861,
	str	lr, [fp, #-84]	@, %sfp
	and	ip, r5, #255	@, temp.5030,
	mov	r0, r7, lsr #16	@, temp.4978,
	str	r9, [fp, #-64]	@, %sfp
	ldr	lr, [r4, r2]	@ temp.5056, <variable>.CurrSPS.qmatrix8x8
	movw	r2, #16496	@ tmp1889,
	str	ip, [fp, #-92]	@, %sfp
	ldr	r9, [r4, r3]	@, <variable>.CurrSPS.qmatrix8x8
	movw	r3, #16492	@ tmp1890,
	str	r0, [fp, #-88]	@, %sfp
	and	ip, lr, #255	@, temp.5056,
	str	r9, [fp, #-60]	@, %sfp
	ldr	r9, [fp, #-204]	@, %sfp
	ldr	r0, [r4, r2]	@ D.42996, <variable>.CurrSPS.qmatrix8x8
	str	ip, [fp, #-144]	@, %sfp
	mov	ip, r6, lsr #16	@, temp.5004,
	mov	r2, r9, lsr #24	@,,
	ldr	r9, [fp, #-68]	@, %sfp
	ldr	r3, [r4, r3]	@ D.43002, <variable>.CurrSPS.qmatrix8x8
	str	ip, [fp, #-116]	@, %sfp
	mov	ip, r9, lsr #24	@,,
	str	ip, [fp, #-156]	@, %sfp
	ldr	ip, [fp, #-64]	@, %sfp
	mov	r9, r5, lsr #16	@, temp.5030,
	str	r2, [fp, #-112]	@, %sfp
	and	r2, r0, #255	@ tmp1894, D.42996,
	str	r9, [fp, #-160]	@, %sfp
	mov	r9, ip, lsr #24	@,,
	mov	ip, lr, lsr #16	@, temp.5056,
	str	r9, [fp, #-164]	@, %sfp
	str	ip, [fp, #-152]	@, %sfp
	ldr	r9, [fp, #-60]	@, %sfp
	mov	ip, r9, lsr #24	@,,
	mov	r9, r0, lsr #16	@, D.42996,
	str	r9, [fp, #-192]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	str	ip, [fp, #-180]	@, %sfp
	mov	ip, r3, lsr #24	@, D.43002,
	str	ip, [fp, #-188]	@, %sfp
	mov	ip, r9, asl #16	@,,
	ldr	r9, [fp, #-76]	@, %sfp
	str	ip, [fp, #-48]	@, %sfp
	mov	ip, r9, asl #16	@,,
	ldr	r9, [fp, #-108]	@, %sfp
	str	ip, [fp, #-124]	@, %sfp
	mov	ip, r9, asl #16	@,,
	ldr	r9, [fp, #-128]	@, %sfp
	str	ip, [fp, #-132]	@, %sfp
	mov	ip, r9, asl #16	@,,
	ldr	r9, [fp, #-92]	@, %sfp
	str	ip, [fp, #-136]	@, %sfp
	mov	ip, r9, asl #16	@,,
	ldr	r9, [fp, #-144]	@, %sfp
	str	ip, [fp, #-120]	@, %sfp
	mov	ip, r9, asl #16	@,,
	mov	r9, r2, asl #16	@, tmp1894,
	and	r2, r8, #-16777216	@, temp.4952,
	str	r2, [fp, #-108]	@, %sfp
	and	r2, r5, #-16777216	@, temp.5030,
	str	r2, [fp, #-144]	@, %sfp
	ldr	r2, [fp, #-72]	@, %sfp
	str	r9, [fp, #-168]	@, %sfp
	and	r9, r7, #-16777216	@, temp.4978,
	str	r9, [fp, #-128]	@, %sfp
	and	r9, lr, #-16777216	@, temp.5056,
	str	r9, [fp, #-184]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	str	ip, [fp, #-176]	@, %sfp
	and	ip, sl, #-16777216	@, temp.4926,
	str	ip, [fp, #-76]	@, %sfp
	and	ip, r6, #-16777216	@, temp.5004,
	str	ip, [fp, #-92]	@, %sfp
	and	ip, r0, #-16777216	@, D.42996,
	str	ip, [fp, #-172]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-96]	@, %sfp
	ldr	r9, [fp, #-76]	@, %sfp
	str	ip, [fp, #-72]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-104]	@, %sfp
	ldr	r9, [fp, #-124]	@, %sfp
	str	ip, [fp, #-48]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-84]	@, %sfp
	ldr	r9, [fp, #-108]	@, %sfp
	str	ip, [fp, #-104]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	str	ip, [fp, #-124]	@, %sfp
	ldr	r2, [fp, #-88]	@, %sfp
	ldr	r9, [fp, #-132]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-112]	@, %sfp
	ldr	r9, [fp, #-128]	@, %sfp
	str	ip, [fp, #-88]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-116]	@, %sfp
	ldr	r9, [fp, #-136]	@, %sfp
	str	ip, [fp, #-132]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-156]	@, %sfp
	ldr	r9, [fp, #-92]	@, %sfp
	str	ip, [fp, #-116]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-160]	@, %sfp
	ldr	r9, [fp, #-120]	@, %sfp
	str	ip, [fp, #-156]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-164]	@, %sfp
	ldr	r9, [fp, #-144]	@, %sfp
	str	ip, [fp, #-120]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-152]	@, %sfp
	ldr	r9, [fp, #-176]	@, %sfp
	str	ip, [fp, #-144]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-180]	@, %sfp
	ldr	r9, [fp, #-184]	@, %sfp
	str	ip, [fp, #-148]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-192]	@, %sfp
	ldr	r9, [fp, #-168]	@, %sfp
	str	ip, [fp, #-184]	@, %sfp
	orr	ip, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-188]	@, %sfp
	ldr	r9, [fp, #-172]	@, %sfp
	str	ip, [fp, #-196]	@, %sfp
	orr	ip, r9, r2, asl #8	@,,,,
	ldr	r9, [fp, #-100]	@, %sfp
	str	ip, [fp, #-188]	@, %sfp
	ldr	ip, [fp, #-140]	@, %sfp
	ubfx	r2, r9, #8, #8	@,,,
	str	r2, [fp, #-100]	@, %sfp
	ubfx	r2, r1, #8, #8	@, temp.4931,,
	ubfx	r9, ip, #8, #8	@,,,
	ubfx	ip, sl, #8, #8	@, temp.4926,,
	str	r9, [fp, #-140]	@, %sfp
	ubfx	sl, r8, #8, #8	@, temp.4952,,
	ldr	r9, [fp, #-208]	@, %sfp
	ubfx	r8, r7, #8, #8	@, temp.4978,,
	str	ip, [fp, #-76]	@, %sfp
	ubfx	r7, r5, #8, #8	@, temp.5030,,
	ldr	ip, [fp, #-204]	@, %sfp
	ubfx	r5, r3, #8, #8	@, D.43002,,
	str	r2, [fp, #-96]	@, %sfp
	ubfx	r2, r9, #8, #8	@,,,
	str	r8, [fp, #-128]	@, %sfp
	ubfx	r9, ip, #8, #8	@,,,
	ldr	r8, [fp, #-60]	@, %sfp
	ubfx	ip, r6, #8, #8	@, temp.5004,,
	str	r2, [fp, #-84]	@, %sfp
	ldr	r6, [fp, #-64]	@, %sfp
	ldr	r2, [fp, #-68]	@, %sfp
	str	sl, [fp, #-108]	@, %sfp
	str	r9, [fp, #-112]	@, %sfp
	ubfx	sl, r2, #8, #8	@,,,
	ubfx	r9, r6, #8, #8	@,,,
	ubfx	r2, r8, #8, #8	@,,,
	mov	r6, r1, lsr #8	@, temp.4931,
	ldr	r8, [fp, #-68]	@, %sfp
	str	sl, [fp, #-92]	@, %sfp
	ubfx	sl, lr, #8, #8	@, temp.5056,,
	str	ip, [fp, #-160]	@, %sfp
	ubfx	ip, r0, #8, #8	@, D.42996,,
	ldr	lr, [fp, #-208]	@, %sfp
	str	r7, [fp, #-176]	@, %sfp
	str	ip, [fp, #-200]	@, %sfp
	and	ip, r1, #255	@ tmp1723, temp.4931,
	ldr	r7, [fp, #-204]	@, %sfp
	ldr	r1, [fp, #-64]	@, %sfp
	str	r5, [fp, #-172]	@, %sfp
	ldr	r5, [fp, #-60]	@, %sfp
	str	r9, [fp, #-152]	@, %sfp
	mov	r9, lr, lsr #8	@,,
	str	r2, [fp, #-192]	@, %sfp
	mov	r2, r8, lsr #8	@,,
	str	sl, [fp, #-168]	@, %sfp
	mov	sl, r1, lsr #8	@,,
	str	r6, [fp, #-212]	@, %sfp
	and	r6, lr, #255	@ tmp1752,,
	str	r9, [fp, #-208]	@, %sfp
	and	lr, r7, #255	@ tmp1781,,
	mov	r9, r7, lsr #8	@ tmp1786,,
	str	r2, [fp, #-136]	@, %sfp
	and	r7, r8, #255	@ tmp1810,,
	ldr	r2, [fp, #-100]	@, %sfp
	and	r8, r1, #255	@ tmp1839,,
	ldr	r1, [fp, #-80]	@, %sfp
	mov	r0, r5, lsr #8	@,,
	str	sl, [fp, #-164]	@, %sfp
	and	sl, r5, #255	@ tmp1868,,
	orr	r5, r1, r2	@,,
	ldr	r1, [fp, #-72]	@, %sfp
	and	r9, r9, #65280	@ tmp1785, tmp1786,
	str	r0, [fp, #-180]	@, %sfp
	and	r0, r3, #255	@ tmp1897, D.43002,
	str	r5, [fp, #-60]	@, %sfp
	orr	r5, r1, ip	@,, tmp1723
	str	r5, [fp, #-64]	@, %sfp
	mov	r3, r3, lsr #8	@ tmp1902, D.43002,
	ldr	r2, [fp, #-48]	@, %sfp
	ldr	ip, [fp, #-96]	@, %sfp
	ldr	r1, [fp, #-104]	@, %sfp
	orr	r5, r2, ip	@,,
	str	r5, [fp, #-68]	@, %sfp
	orr	r2, r1, r6	@,, tmp1752
	ldr	r5, [fp, #-84]	@, %sfp
	ldr	r6, [fp, #-124]	@, %sfp
	ldr	r1, [fp, #-88]	@, %sfp
	orr	ip, r6, r5	@,,
	ldr	r5, [fp, #-132]	@, %sfp
	ldr	r6, [fp, #-112]	@, %sfp
	str	r2, [fp, #-100]	@, %sfp
	orr	r2, r1, lr	@,, tmp1781
	str	ip, [fp, #-80]	@, %sfp
	orr	ip, r5, r6	@,,
	ldr	lr, [fp, #-116]	@, %sfp
	str	ip, [fp, #-48]	@, %sfp
	ldr	ip, [fp, #-120]	@, %sfp
	orr	r1, lr, r7	@,, tmp1810
	ldr	r6, [fp, #-156]	@, %sfp
	orr	lr, ip, r8	@,, tmp1839
	ldr	r7, [fp, #-152]	@, %sfp
	ldr	r8, [fp, #-144]	@, %sfp
	str	r2, [fp, #-72]	@, %sfp
	ldr	r2, [fp, #-92]	@, %sfp
	str	r1, [fp, #-96]	@, %sfp
	orr	r1, r8, r7	@,,
	orr	r5, r6, r2	@,,
	ldr	r7, [fp, #-196]	@, %sfp
	ldr	r2, [fp, #-148]	@, %sfp
	ldr	r8, [fp, #-188]	@, %sfp
	orr	r6, r2, sl	@,, tmp1868
	orr	sl, r7, r0	@,, tmp1897
	ldr	r0, [fp, #-140]	@, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	str	r1, [fp, #-84]	@, %sfp
	ldr	r1, [fp, #-172]	@, %sfp
	ldr	ip, [fp, #-184]	@, %sfp
	str	r5, [fp, #-104]	@, %sfp
	ldr	r5, [fp, #-192]	@, %sfp
	ldr	r2, [fp, #-212]	@, %sfp
	str	sl, [fp, #-92]	@, %sfp
	orr	sl, r8, r1	@ tmp1913,,
	orr	r8, r7, r0, asl #16	@, tmp1714,,,
	movw	r7, #57976	@ tmp1703,
	str	lr, [fp, #-124]	@, %sfp
	orr	lr, ip, r5	@,,
	str	r6, [fp, #-88]	@, %sfp
	and	r1, r2, #65280	@ tmp1727,,
	ldr	r6, [fp, #-208]	@, %sfp
	ldr	r5, [fp, #-136]	@, %sfp
	ldr	ip, [fp, #-164]	@, %sfp
	and	r2, r6, #65280	@ tmp1756,,
	str	lr, [fp, #-132]	@, %sfp
	and	r6, r5, #65280	@ tmp1814,,
	ldr	lr, [fp, #-180]	@, %sfp
	and	r5, ip, #65280	@ tmp1843,,
	str	r8, [r4, r7]	@ tmp1714, <variable>.DecPicPara.Qmatrix
	movw	r7, #57980	@ tmp1717,
	ldr	r0, [fp, #-64]	@, %sfp
	and	ip, lr, #65280	@ tmp1872,,
	and	lr, r3, #65280	@ tmp1901, tmp1902,
	orr	r8, r0, r1	@ tmp1729,, tmp1727
	str	r8, [r4, r7]	@ tmp1729, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-76]	@, %sfp
	movw	r8, #57984	@ tmp1732,
	ldr	r1, [fp, #-68]	@, %sfp
	orr	r7, r1, r0, asl #16	@, tmp1743,,,
	str	r7, [r4, r8]	@ tmp1743, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-100]	@, %sfp
	movw	r8, #57988	@ tmp1746,
	orr	r0, r1, r2	@ tmp1758,, tmp1756
	str	r0, [r4, r8]	@ tmp1758, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-108]	@, %sfp
	movw	r1, #57992	@ tmp1761,
	ldr	r2, [fp, #-80]	@, %sfp
	orr	r0, r2, r7, asl #16	@, tmp1772,,,
	str	r0, [r4, r1]	@ tmp1772, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-72]	@, %sfp
	movw	r7, #57996	@ tmp1775,
	orr	r2, r8, r9	@ tmp1787,, tmp1785
	str	r2, [r4, r7]	@ tmp1787, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-128]	@, %sfp
	movw	r2, #58000	@ tmp1790,
	ldr	r9, [fp, #-48]	@, %sfp
	orr	r1, r9, r0, asl #16	@, tmp1801,,,
	str	r1, [r4, r2]	@ tmp1801, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-96]	@, %sfp
	movw	r9, #58004	@ tmp1804,
	movw	r2, #58008	@ tmp1819,
	orr	r7, r8, r6	@ tmp1816,, tmp1814
	str	r7, [r4, r9]	@ tmp1816, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-160]	@, %sfp
	movw	r9, #58012	@ tmp1833,
	ldr	r6, [fp, #-104]	@, %sfp
	orr	r0, r6, r1, asl #16	@, tmp1830,,,
	str	r0, [r4, r2]	@ tmp1830, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-124]	@, %sfp
	movw	r0, #58016	@ tmp1848,
	orr	r7, r8, r5	@ tmp1845,, tmp1843
	str	r7, [r4, r9]	@ tmp1845, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-176]	@, %sfp
	movw	r5, #58020	@ tmp1862,
	ldr	r9, [fp, #-84]	@, %sfp
	orr	r6, r9, r1, asl #16	@, tmp1859,,,
	str	r6, [r4, r0]	@ tmp1859, <variable>.DecPicPara.Qmatrix
	ldr	r2, [fp, #-88]	@, %sfp
	movw	r6, #58024	@ tmp1877,
	orr	r8, r2, ip	@ tmp1874,, tmp1872
	str	r8, [r4, r5]	@ tmp1874, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-168]	@, %sfp
	movw	ip, #58028	@ tmp1891,
	ldr	r7, [fp, #-132]	@, %sfp
	movw	r2, #58032	@ tmp1906,
	orr	r1, r7, r5, asl #16	@, tmp1888,,,
	str	r1, [r4, r6]	@ tmp1888, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-92]	@, %sfp
	orr	r0, r6, lr	@ tmp1903,, tmp1901
	str	r0, [r4, ip]	@ tmp1903, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-200]	@, %sfp
	orr	sl, sl, r7, asl #16	@, tmp1917, tmp1913,,
	str	sl, [r4, r2]	@ tmp1917, <variable>.DecPicPara.Qmatrix
.L1338:
	movw	r8, #26908	@ tmp1918,
	ldr	ip, [r4, r8]	@ <variable>.APC.size, <variable>.APC.size
	cmp	ip, #0	@ <variable>.APC.size,
	beq	.L1342	@,
	add	r6, r4, #26624	@ ivtmp.4625, pH264Ctx,
	add	r2, r4, #58880	@ ivtmp.4628, pH264Ctx,
	add	r6, r6, #92	@ ivtmp.4625, ivtmp.4625,
	add	r5, r2, #128	@ ivtmp.4628, ivtmp.4628,
	mov	r7, #0	@ i.4684,
	movw	sl, #59224	@ tmp1931,
.L1343:
	ldr	r2, [r6, #0]	@, <variable>.APC.idc
	mov	r1, #0	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	add	r7, r7, #1	@ i.4684, i.4684,
	bl	FSP_GetStoreType	@
	ldr	r1, [r4, r8]	@ <variable>.APC.size, <variable>.APC.size
	ldr	r3, [r6], #4	@ tmp1926, <variable>.APC.idc
	str	r3, [r5, #64]	@ tmp1926, <variable>.DecPicPara.RefPicFsId
	subs	r0, r0, #0	@ tmp1925,,
	movne	r0, #1	@ tmp1925
	cmp	r1, r7	@ <variable>.APC.size, i.4684
	str	r0, [r5, #0]	@ tmp1925, <variable>.DecPicPara.RefPicType
	add	r5, r5, #4	@ ivtmp.4628, ivtmp.4628,
	bhi	.L1343	@,
.L1342:
	mov	r0, #0	@ D.42864,
.L1329:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1361:
	add	r9, r4, #57600	@ ivtmp.4643, pH264Ctx,
	mov	r3, #0	@ i.4677,
	add	r6, r9, #212	@ ivtmp.4643, ivtmp.4643,
.L1340:
	add	r0, r3, #1	@ tmp1937, i.4677,
	add	r2, r3, #4864	@ tmp949, i.4677,
	add	r3, r0, #4864	@ tmp1982, tmp1937,
	add	r7, r2, #30	@ tmp949, tmp949,
	add	sl, r3, #30	@ tmp1982, tmp1982,
	add	r3, r0, #1	@ i.4677, tmp1937,
	add	r1, r4, r7, asl #2	@, tmp953, pH264Ctx, tmp949,
	cmp	r3, #24	@ i.4677,
	add	r5, r4, sl, asl #2	@, tmp1984, pH264Ctx, tmp1982,
	mov	sl, r6	@ tmp1938, ivtmp.4643
	ldr	r9, [r1, #4]	@ D.42946, <variable>.CurrPPS.qmatrix4x4
	ldr	r8, [r5, #4]	@ D.42946, <variable>.CurrPPS.qmatrix4x4
	bic	ip, r9, #16711680	@ tmp957, D.42946,
	ubfx	r2, r9, #8, #8	@ tmp959, D.42946,,
	bic	lr, r8, #16711680	@ tmp1989, D.42946,
	ubfx	r7, r8, #8, #8	@ tmp1991, D.42946,,
	bic	r0, ip, #65280	@ tmp957, tmp957,
	mov	r5, r9, lsr #8	@ tmp965, D.42946,
	bic	r1, lr, #65280	@ tmp1989, tmp1989,
	mov	ip, r8, lsr #8	@ tmp1995, D.42946,
	orr	lr, r0, r2, asl #16	@, tmp961, tmp957, tmp959,
	and	r9, r5, #65280	@ tmp964, tmp965,
	orr	r2, r1, r7, asl #16	@, tmp1993, tmp1989, tmp1991,
	and	r8, ip, #65280	@ tmp1996, tmp1995,
	orr	r7, lr, r9	@ tmp966, tmp961, tmp964
	orr	r5, r2, r8	@ tmp1997, tmp1993, tmp1996
	str	r7, [sl], #4	@ tmp966, <variable>.DecPicPara.Qmatrix
	str	r5, [r6, #4]	@ tmp1997, <variable>.DecPicPara.Qmatrix
	add	r6, sl, #4	@ ivtmp.4643, tmp1938,
	bne	.L1340	@,
	movw	r7, #19676	@ tmp968,
	movw	r3, #19680	@ tmp967,
	ldr	lr, [r4, r7]	@, <variable>.CurrPPS.qmatrix8x8
	movw	ip, #19688	@ tmp996,
	ldr	r8, [r4, r3]	@ temp.5082, <variable>.CurrPPS.qmatrix8x8
	movw	r1, #19684	@ tmp997,
	movw	r2, #19696	@ tmp1025,
	movw	sl, #19692	@ tmp1026,
	str	lr, [fp, #-248]	@, %sfp
	and	r5, r8, #255	@, temp.5082,
	ldr	r7, [r4, ip]	@ temp.5108, <variable>.CurrPPS.qmatrix8x8
	mov	r6, r8, lsr #16	@, temp.5082,
	str	r5, [fp, #-76]	@, %sfp
	mov	r5, lr, lsr #24	@,,
	ldr	r0, [r4, r1]	@, <variable>.CurrPPS.qmatrix8x8
	and	r9, r7, #255	@, temp.5108,
	str	r6, [fp, #-96]	@, %sfp
	movw	r1, #19704	@ tmp1054,
	mov	lr, r7, lsr #16	@, temp.5108,
	str	r0, [fp, #-48]	@, %sfp
	movw	r0, #19700	@ tmp1055,
	ldr	r6, [r4, r2]	@ temp.5134, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-124]	@, %sfp
	mov	r9, #19712	@ tmp1083,
	ldr	ip, [r4, sl]	@, <variable>.CurrPPS.qmatrix8x8
	and	r3, r6, #255	@, temp.5134,
	str	r5, [fp, #-104]	@, %sfp
	str	ip, [fp, #-72]	@, %sfp
	movw	ip, #19708	@ tmp1084,
	ldr	r5, [r4, r1]	@ temp.5160, <variable>.CurrPPS.qmatrix8x8
	str	r3, [fp, #-88]	@, %sfp
	ldr	r2, [r4, r0]	@, <variable>.CurrPPS.qmatrix8x8
	and	sl, r5, #255	@, temp.5160,
	str	lr, [fp, #-84]	@, %sfp
	ldr	r3, [fp, #-48]	@, %sfp
	str	r2, [fp, #-80]	@, %sfp
	movw	r2, #19720	@ tmp1112,
	ldr	lr, [r4, r9]	@ temp.5186, <variable>.CurrPPS.qmatrix8x8
	str	sl, [fp, #-112]	@, %sfp
	movw	sl, #19716	@ tmp1113,
	ldr	r1, [r4, ip]	@, <variable>.CurrPPS.qmatrix8x8
	mov	r0, r3, lsr #24	@,,
	and	r9, lr, #255	@, temp.5186,
	str	r0, [fp, #-132]	@, %sfp
	movw	r3, #19728	@ tmp1141,
	str	r1, [fp, #-68]	@, %sfp
	mov	r1, r6, lsr #16	@, temp.5134,
	ldr	r0, [r4, r2]	@ temp.5212, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-136]	@, %sfp
	movw	r9, #19724	@ tmp1142,
	ldr	ip, [r4, sl]	@, <variable>.CurrPPS.qmatrix8x8
	and	r2, r0, #255	@, temp.5212,
	str	r1, [fp, #-128]	@, %sfp
	str	ip, [fp, #-64]	@, %sfp
	ldr	ip, [fp, #-72]	@, %sfp
	ldr	r1, [r4, r3]	@ temp.5238, <variable>.CurrPPS.qmatrix8x8
	str	r2, [fp, #-92]	@, %sfp
	movw	r2, #19736	@ tmp1170,
	ldr	sl, [r4, r9]	@, <variable>.CurrPPS.qmatrix8x8
	mov	r3, ip, lsr #24	@,,
	and	r9, r1, #255	@, temp.5238,
	mov	ip, r5, lsr #16	@, temp.5160,
	str	sl, [fp, #-60]	@, %sfp
	movw	sl, #19732	@ tmp1171,
	str	r3, [fp, #-156]	@, %sfp
	movw	r3, #19744	@ tmp1199,
	ldr	r2, [r4, r2]	@ temp.5264, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-164]	@, %sfp
	ldr	r9, [r4, sl]	@ temp.5269, <variable>.CurrPPS.qmatrix8x8
	str	ip, [fp, #-160]	@, %sfp
	and	ip, r2, #255	@, temp.5264,
	ldr	sl, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	movw	r3, #19740	@ tmp1200,
	str	ip, [fp, #-152]	@, %sfp
	ldr	ip, [fp, #-80]	@, %sfp
	str	sl, [fp, #-140]	@, %sfp
	ldr	sl, [r4, r3]	@, <variable>.CurrPPS.qmatrix8x8
	mov	r3, ip, lsr #24	@,,
	str	r3, [fp, #-144]	@, %sfp
	mov	ip, lr, lsr #16	@, temp.5186,
	str	ip, [fp, #-148]	@, %sfp
	str	sl, [fp, #-100]	@, %sfp
	ldr	sl, [fp, #-140]	@, %sfp
	and	r3, sl, #255	@ tmp1204,,
	ldr	sl, [fp, #-68]	@, %sfp
	mov	ip, sl, lsr #24	@,,
	str	ip, [fp, #-192]	@, %sfp
	ldr	ip, [fp, #-64]	@, %sfp
	mov	sl, r0, lsr #16	@, temp.5212,
	str	sl, [fp, #-196]	@, %sfp
	mov	sl, ip, lsr #24	@,,
	str	sl, [fp, #-172]	@, %sfp
	ldr	sl, [fp, #-60]	@, %sfp
	mov	ip, r1, lsr #16	@, temp.5238,
	str	ip, [fp, #-204]	@, %sfp
	mov	ip, sl, lsr #24	@,,
	mov	sl, r2, lsr #16	@, temp.5264,
	str	sl, [fp, #-236]	@, %sfp
	ldr	sl, [fp, #-140]	@, %sfp
	str	ip, [fp, #-212]	@, %sfp
	mov	ip, r9, lsr #24	@, temp.5269,
	str	ip, [fp, #-224]	@, %sfp
	mov	ip, sl, lsr #16	@,,
	ldr	sl, [fp, #-76]	@, %sfp
	str	ip, [fp, #-232]	@, %sfp
	mov	ip, sl, asl #16	@,,
	ldr	sl, [fp, #-124]	@, %sfp
	str	ip, [fp, #-76]	@, %sfp
	mov	ip, sl, asl #16	@,,
	ldr	sl, [fp, #-88]	@, %sfp
	str	ip, [fp, #-108]	@, %sfp
	mov	ip, sl, asl #16	@,,
	ldr	sl, [fp, #-112]	@, %sfp
	str	ip, [fp, #-116]	@, %sfp
	mov	ip, sl, asl #16	@,,
	ldr	sl, [fp, #-136]	@, %sfp
	str	ip, [fp, #-120]	@, %sfp
	mov	ip, sl, asl #16	@,,
	str	ip, [fp, #-180]	@, %sfp
	ldr	sl, [fp, #-92]	@, %sfp
	mov	ip, sl, asl #16	@,,
	ldr	sl, [fp, #-164]	@, %sfp
	str	ip, [fp, #-188]	@, %sfp
	mov	ip, sl, asl #16	@,,
	ldr	sl, [fp, #-152]	@, %sfp
	str	ip, [fp, #-208]	@, %sfp
	mov	ip, sl, asl #16	@,,
	mov	sl, r3, asl #16	@, tmp1204,
	str	sl, [fp, #-240]	@, %sfp
	and	sl, r6, #-16777216	@, temp.5134,
	str	sl, [fp, #-92]	@, %sfp
	and	sl, r0, #-16777216	@, temp.5212,
	str	sl, [fp, #-200]	@, %sfp
	and	r3, r7, #-16777216	@, temp.5108,
	ldr	sl, [fp, #-96]	@, %sfp
	ubfx	r7, r7, #8, #8	@, temp.5108,,
	str	ip, [fp, #-220]	@, %sfp
	and	ip, r8, #-16777216	@, temp.5082,
	str	ip, [fp, #-88]	@, %sfp
	and	ip, r5, #-16777216	@, temp.5160,
	str	ip, [fp, #-152]	@, %sfp
	and	ip, r1, #-16777216	@, temp.5238,
	str	ip, [fp, #-216]	@, %sfp
	ldr	ip, [fp, #-76]	@, %sfp
	str	r3, [fp, #-112]	@, %sfp
	and	r3, lr, #-16777216	@, temp.5186,
	str	r3, [fp, #-168]	@, %sfp
	and	r3, r2, #-16777216	@, temp.5264,
	str	r3, [fp, #-228]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-104]	@, %sfp
	ldr	ip, [fp, #-88]	@, %sfp
	str	r3, [fp, #-96]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-84]	@, %sfp
	ldr	ip, [fp, #-108]	@, %sfp
	str	r3, [fp, #-124]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-132]	@, %sfp
	ldr	ip, [fp, #-112]	@, %sfp
	str	r3, [fp, #-88]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-128]	@, %sfp
	ldr	ip, [fp, #-116]	@, %sfp
	str	r3, [fp, #-112]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-156]	@, %sfp
	ldr	ip, [fp, #-92]	@, %sfp
	str	r3, [fp, #-136]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-160]	@, %sfp
	ldr	ip, [fp, #-120]	@, %sfp
	str	r3, [fp, #-92]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	str	r3, [fp, #-164]	@, %sfp
	ldr	sl, [fp, #-144]	@, %sfp
	ldr	ip, [fp, #-152]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-148]	@, %sfp
	ldr	ip, [fp, #-180]	@, %sfp
	str	r3, [fp, #-176]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-192]	@, %sfp
	ldr	ip, [fp, #-168]	@, %sfp
	str	r3, [fp, #-184]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-196]	@, %sfp
	ldr	ip, [fp, #-188]	@, %sfp
	str	r3, [fp, #-192]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-172]	@, %sfp
	ldr	ip, [fp, #-200]	@, %sfp
	str	r3, [fp, #-188]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-204]	@, %sfp
	ldr	ip, [fp, #-208]	@, %sfp
	str	r3, [fp, #-172]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-212]	@, %sfp
	ldr	ip, [fp, #-216]	@, %sfp
	str	r3, [fp, #-208]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-236]	@, %sfp
	ldr	ip, [fp, #-220]	@, %sfp
	str	r3, [fp, #-212]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	sl, [fp, #-224]	@, %sfp
	ldr	ip, [fp, #-228]	@, %sfp
	str	r3, [fp, #-220]	@, %sfp
	orr	r3, ip, sl, asl #8	@,,,,
	ldr	sl, [fp, #-232]	@, %sfp
	ldr	ip, [fp, #-240]	@, %sfp
	str	r3, [fp, #-224]	@, %sfp
	orr	r3, ip, sl, asl #24	@,,,,
	ldr	ip, [fp, #-248]	@, %sfp
	str	r3, [fp, #-240]	@, %sfp
	ubfx	r3, r8, #8, #8	@, temp.5082,,
	ubfx	sl, ip, #8, #8	@,,,
	ldr	ip, [fp, #-48]	@, %sfp
	str	sl, [fp, #-84]	@, %sfp
	str	r3, [fp, #-108]	@, %sfp
	ubfx	sl, ip, #8, #8	@,,,
	str	sl, [fp, #-128]	@, %sfp
	ubfx	ip, r6, #8, #8	@, temp.5134,,
	ldr	r8, [fp, #-72]	@, %sfp
	ldr	sl, [fp, #-80]	@, %sfp
	str	r7, [fp, #-116]	@, %sfp
	ubfx	r7, r5, #8, #8	@, temp.5160,,
	ubfx	r5, r0, #8, #8	@, temp.5212,,
	ldr	r0, [fp, #-248]	@, %sfp
	ubfx	r3, r8, #8, #8	@,,,
	ubfx	r6, sl, #8, #8	@,,,
	ldr	r8, [fp, #-68]	@, %sfp
	ldr	sl, [fp, #-64]	@, %sfp
	str	r7, [fp, #-180]	@, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	str	ip, [fp, #-120]	@, %sfp
	ubfx	ip, lr, #8, #8	@, temp.5186,,
	str	ip, [fp, #-196]	@, %sfp
	ubfx	lr, r1, #8, #8	@, temp.5238,,
	ldr	ip, [fp, #-248]	@, %sfp
	ubfx	r1, r9, #8, #8	@, temp.5269,,
	str	r3, [fp, #-160]	@, %sfp
	ubfx	r3, r8, #8, #8	@,,,
	str	r6, [fp, #-148]	@, %sfp
	ubfx	r8, r7, #8, #8	@,,,
	ubfx	r6, sl, #8, #8	@,,,
	str	r3, [fp, #-168]	@, %sfp
	str	r6, [fp, #-200]	@, %sfp
	ubfx	r3, r2, #8, #8	@, temp.5264,,
	mov	r6, r0, lsr #8	@,,
	str	r8, [fp, #-216]	@, %sfp
	str	r3, [fp, #-232]	@, %sfp
	and	sl, ip, #255	@,,
	ldr	r8, [fp, #-48]	@, %sfp
	ldr	r3, [fp, #-72]	@, %sfp
	str	r6, [fp, #-104]	@, %sfp
	ldr	r6, [fp, #-80]	@, %sfp
	str	r5, [fp, #-204]	@, %sfp
	mov	ip, r3, lsr #8	@,,
	ldr	r5, [fp, #-48]	@, %sfp
	str	r1, [fp, #-228]	@, %sfp
	str	sl, [fp, #-76]	@, %sfp
	and	r7, r5, #255	@,,
	ldr	r1, [fp, #-72]	@, %sfp
	mov	r5, r6, lsr #8	@,,
	ldr	sl, [fp, #-80]	@, %sfp
	and	r2, r1, #255	@,,
	str	lr, [fp, #-236]	@, %sfp
	and	r0, sl, #255	@,,
	mov	lr, r8, lsr #8	@,,
	str	r7, [fp, #-132]	@, %sfp
	str	lr, [fp, #-48]	@, %sfp
	str	r2, [fp, #-156]	@, %sfp
	str	ip, [fp, #-72]	@, %sfp
	str	r0, [fp, #-144]	@, %sfp
	str	r5, [fp, #-152]	@, %sfp
	ldr	r7, [fp, #-68]	@, %sfp
	ldr	lr, [fp, #-64]	@, %sfp
	ldr	r2, [fp, #-60]	@, %sfp
	and	r6, r7, #255	@ tmp1091,,
	ldr	r3, [fp, #-100]	@, %sfp
	mov	r8, r7, lsr #8	@,,
	ldr	ip, [fp, #-96]	@, %sfp
	and	r5, lr, #255	@ tmp1120,,
	ldr	sl, [fp, #-76]	@, %sfp
	mov	r1, lr, lsr #8	@,,
	ldr	r0, [fp, #-84]	@, %sfp
	and	r7, r2, #255	@ tmp1149,,
	and	lr, r3, #255	@ tmp1207,,
	str	r1, [fp, #-252]	@, %sfp
	mov	r1, r2, lsr #8	@ tmp1154,,
	mov	r2, r3, lsr #8	@ tmp1212,,
	orr	r3, ip, sl	@ tmp976,,
	ldr	ip, [fp, #-124]	@, %sfp
	str	r8, [fp, #-248]	@, %sfp
	and	r8, r9, #255	@ tmp1178, temp.5269,
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-88]	@, %sfp
	ldr	r0, [fp, #-132]	@, %sfp
	and	r1, r1, #65280	@ tmp1153, tmp1154,
	str	sl, [fp, #-60]	@, %sfp
	mov	r9, r9, lsr #8	@ tmp1183, temp.5269,
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-112]	@, %sfp
	ldr	r0, [fp, #-128]	@, %sfp
	and	r9, r9, #65280	@ tmp1182, tmp1183,
	str	sl, [fp, #-64]	@, %sfp
	and	r2, r2, #65280	@ tmp1211, tmp1212,
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-136]	@, %sfp
	ldr	r0, [fp, #-156]	@, %sfp
	str	sl, [fp, #-68]	@, %sfp
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-92]	@, %sfp
	ldr	r0, [fp, #-160]	@, %sfp
	str	sl, [fp, #-80]	@, %sfp
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-164]	@, %sfp
	ldr	r0, [fp, #-144]	@, %sfp
	str	sl, [fp, #-96]	@, %sfp
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-176]	@, %sfp
	ldr	r0, [fp, #-148]	@, %sfp
	str	sl, [fp, #-76]	@, %sfp
	orr	sl, ip, r0	@,,
	ldr	ip, [fp, #-184]	@, %sfp
	str	sl, [fp, #-124]	@, %sfp
	orr	r0, ip, r6	@,, tmp1091
	ldr	sl, [fp, #-168]	@, %sfp
	ldr	r6, [fp, #-192]	@, %sfp
	str	r0, [fp, #-84]	@, %sfp
	orr	r0, r6, sl	@,,
	str	r0, [fp, #-88]	@, %sfp
	ldr	ip, [fp, #-188]	@, %sfp
	ldr	r0, [fp, #-172]	@, %sfp
	orr	r6, ip, r5	@,, tmp1120
	ldr	r5, [fp, #-200]	@, %sfp
	str	r6, [fp, #-132]	@, %sfp
	ldr	r6, [fp, #-208]	@, %sfp
	orr	sl, r0, r5	@,,
	ldr	r0, [fp, #-216]	@, %sfp
	str	sl, [fp, #-112]	@, %sfp
	orr	ip, r6, r7	@,, tmp1149
	ldr	sl, [fp, #-212]	@, %sfp
	ldr	r6, [fp, #-220]	@, %sfp
	orr	r5, sl, r0	@,,
	str	r5, [fp, #-136]	@, %sfp
	orr	r7, r6, r8	@,, tmp1178
	ldr	r5, [fp, #-240]	@, %sfp
	ldr	r6, [fp, #-104]	@, %sfp
	ldr	r8, [fp, #-228]	@, %sfp
	orr	r0, r5, lr	@,, tmp1207
	str	ip, [fp, #-128]	@, %sfp
	and	r5, r6, #65280	@ tmp979,,
	ldr	ip, [fp, #-224]	@, %sfp
	ldr	lr, [fp, #-248]	@, %sfp
	str	r7, [fp, #-156]	@, %sfp
	orr	sl, ip, r8	@,,
	ldr	r7, [fp, #-48]	@, %sfp
	ldr	r8, [fp, #-72]	@, %sfp
	ldr	ip, [fp, #-152]	@, %sfp
	and	r6, r7, #65280	@ tmp1008,,
	str	sl, [fp, #-92]	@, %sfp
	and	r7, r8, #65280	@ tmp1037,,
	ldr	sl, [fp, #-252]	@, %sfp
	and	r8, ip, #65280	@ tmp1066,,
	str	r0, [fp, #-160]	@, %sfp
	orr	r0, r3, r5	@ tmp981, tmp976, tmp979
	movw	r5, #57908	@ tmp969,
	and	ip, lr, #65280	@ tmp1095,,
	str	r0, [r4, r5]	@ tmp981, <variable>.DecPicPara.Qmatrix
	and	lr, sl, #65280	@ tmp1124,,
	ldr	sl, [fp, #-108]	@, %sfp
	movw	r0, #57912	@ tmp984,
	ldr	r3, [fp, #-60]	@, %sfp
	orr	r5, r3, sl, asl #16	@, tmp995,,,
	str	r5, [r4, r0]	@ tmp995, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-64]	@, %sfp
	movw	r3, #57916	@ tmp998,
	orr	sl, r5, r6	@ tmp1010,, tmp1008
	str	sl, [r4, r3]	@ tmp1010, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-116]	@, %sfp
	movw	sl, #57920	@ tmp1013,
	ldr	r0, [fp, #-68]	@, %sfp
	orr	r5, r0, r6, asl #16	@, tmp1024,,,
	str	r5, [r4, sl]	@ tmp1024, <variable>.DecPicPara.Qmatrix
	ldr	r3, [fp, #-80]	@, %sfp
	movw	r0, #57924	@ tmp1027,
	orr	r6, r3, r7	@ tmp1039,, tmp1037
	str	r6, [r4, r0]	@ tmp1039, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-120]	@, %sfp
	movw	r3, #57928	@ tmp1042,
	ldr	sl, [fp, #-96]	@, %sfp
	orr	r5, sl, r7, asl #16	@, tmp1053,,,
	str	r5, [r4, r3]	@ tmp1053, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-76]	@, %sfp
	movw	r7, #57932	@ tmp1056,
	orr	r0, r6, r8	@ tmp1068,, tmp1066
	str	r0, [r4, r7]	@ tmp1068, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-180]	@, %sfp
	movw	r8, #57936	@ tmp1071,
	ldr	r3, [fp, #-124]	@, %sfp
	movw	r7, #57940	@ tmp1085,
	orr	r5, r3, sl, asl #16	@, tmp1082,,,
	str	r5, [r4, r8]	@ tmp1082, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-84]	@, %sfp
	movw	r8, #57944	@ tmp1100,
	orr	r0, r6, ip	@ tmp1097,, tmp1095
	str	r0, [r4, r7]	@ tmp1097, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-196]	@, %sfp
	movw	r6, #57948	@ tmp1114,
	ldr	r5, [fp, #-88]	@, %sfp
	orr	r3, r5, sl, asl #16	@, tmp1111,,,
	str	r3, [r4, r8]	@ tmp1111, <variable>.DecPicPara.Qmatrix
	ldr	ip, [fp, #-132]	@, %sfp
	movw	r5, #57952	@ tmp1129,
	movw	r8, #57956	@ tmp1143,
	orr	r0, ip, lr	@ tmp1126,, tmp1124
	str	r0, [r4, r6]	@ tmp1126, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-204]	@, %sfp
	ldr	sl, [fp, #-112]	@, %sfp
	orr	lr, sl, r7, asl #16	@, tmp1140,,,
	str	lr, [r4, r5]	@ tmp1140, <variable>.DecPicPara.Qmatrix
	ldr	r3, [fp, #-128]	@, %sfp
	movw	r7, #57960	@ tmp1158,
	orr	ip, r3, r1	@ tmp1155,, tmp1153
	str	ip, [r4, r8]	@ tmp1155, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-236]	@, %sfp
	movw	r1, #57964	@ tmp1172,
	ldr	r0, [fp, #-136]	@, %sfp
	movw	ip, #57968	@ tmp1187,
	orr	sl, r0, r6, asl #16	@, tmp1169,,,
	str	sl, [r4, r7]	@ tmp1169, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-156]	@, %sfp
	orr	lr, r5, r9	@ tmp1184,, tmp1182
	str	lr, [r4, r1]	@ tmp1184, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-232]	@, %sfp
	movw	r9, #57972	@ tmp1201,
	ldr	r3, [fp, #-92]	@, %sfp
	movw	r5, #19752	@ tmp1228,
	movw	r1, #19748	@ tmp1229,
	orr	r6, r3, r8, asl #16	@, tmp1198,,,
	str	r6, [r4, ip]	@ tmp1198, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-160]	@, %sfp
	movw	ip, #19760	@ tmp1257,
	orr	r7, r0, r2	@ tmp1213,, tmp1211
	str	r7, [r4, r9]	@ tmp1213, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-100]	@, %sfp
	movw	r0, #19756	@ tmp1258,
	ldr	lr, [fp, #-140]	@, %sfp
	mov	r2, sl, lsr #24	@ tmp1217,,
	ldr	sl, [r4, r5]	@ temp.5316, <variable>.CurrPPS.qmatrix8x8
	and	r3, lr, #-16777216	@ tmp1219,,
	ldr	lr, [r4, r1]	@ temp.5321, <variable>.CurrPPS.qmatrix8x8
	orr	r8, r3, r2, asl #8	@,, tmp1219, tmp1217,
	and	r6, sl, #255	@, temp.5316,
	str	r8, [fp, #-80]	@, %sfp
	movw	r2, #19768	@ tmp1286,
	ldr	r8, [r4, ip]	@ temp.5342, <variable>.CurrPPS.qmatrix8x8
	movw	r5, #19764	@ tmp1287,
	str	r6, [fp, #-48]	@, %sfp
	mov	r7, sl, lsr #16	@, temp.5316,
	ldr	r9, [r4, r0]	@, <variable>.CurrPPS.qmatrix8x8
	and	r3, r8, #255	@, temp.5342,
	str	r7, [fp, #-72]	@, %sfp
	movw	r0, #19776	@ tmp1315,
	mov	r6, lr, lsr #24	@, temp.5321,
	str	r9, [fp, #-212]	@, %sfp
	ldr	r7, [r4, r2]	@ temp.5368, <variable>.CurrPPS.qmatrix8x8
	movw	r2, #19772	@ tmp1316,
	str	r3, [fp, #-76]	@, %sfp
	ldr	ip, [r4, r5]	@, <variable>.CurrPPS.qmatrix8x8
	and	r9, r7, #255	@, temp.5368,
	str	r6, [fp, #-96]	@, %sfp
	mov	r5, r8, lsr #16	@, temp.5342,
	str	ip, [fp, #-208]	@, %sfp
	movw	ip, #19784	@ tmp1344,
	ldr	r6, [r4, r0]	@ temp.5394, <variable>.CurrPPS.qmatrix8x8
	str	r9, [fp, #-108]	@, %sfp
	movw	r9, #19780	@ tmp1345,
	ldr	r3, [r4, r2]	@, <variable>.CurrPPS.qmatrix8x8
	and	r0, r6, #255	@, temp.5394,
	str	r5, [fp, #-104]	@, %sfp
	str	r3, [fp, #-68]	@, %sfp
	ldr	r5, [r4, ip]	@ temp.5420, <variable>.CurrPPS.qmatrix8x8
	str	r0, [fp, #-128]	@, %sfp
	movw	r0, #19792	@ tmp1373,
	ldr	r2, [r4, r9]	@, <variable>.CurrPPS.qmatrix8x8
	and	r9, r5, #255	@, temp.5420,
	ldr	r3, [fp, #-212]	@, %sfp
	str	r2, [fp, #-64]	@, %sfp
	movw	r2, #19788	@ tmp1374,
	mov	ip, r3, lsr #24	@,,
	str	ip, [fp, #-84]	@, %sfp
	ldr	ip, [r4, r0]	@ temp.5446, <variable>.CurrPPS.qmatrix8x8
	mov	r0, r7, lsr #16	@, temp.5368,
	str	r9, [fp, #-92]	@, %sfp
	movw	r9, #19800	@ tmp1402,
	ldr	r3, [r4, r2]	@, <variable>.CurrPPS.qmatrix8x8
	and	r2, ip, #255	@, temp.5446,
	str	r0, [fp, #-88]	@, %sfp
	str	r3, [fp, #-60]	@, %sfp
	movw	r3, #19796	@ tmp1403,
	ldr	r0, [r4, r9]	@ D.42959, <variable>.CurrPPS.qmatrix8x8
	ldr	r9, [fp, #-208]	@, %sfp
	str	r2, [fp, #-164]	@, %sfp
	ldr	r3, [r4, r3]	@ D.42965, <variable>.CurrPPS.qmatrix8x8
	mov	r2, r9, lsr #24	@,,
	mov	r9, r6, lsr #16	@, temp.5394,
	str	r9, [fp, #-116]	@, %sfp
	ldr	r9, [fp, #-68]	@, %sfp
	str	r2, [fp, #-112]	@, %sfp
	and	r2, r0, #255	@ tmp1407, D.42959,
	mov	r9, r9, lsr #24	@,,
	str	r9, [fp, #-156]	@, %sfp
	mov	r9, r5, lsr #16	@, temp.5420,
	str	r9, [fp, #-160]	@, %sfp
	ldr	r9, [fp, #-64]	@, %sfp
	mov	r2, r2, asl #16	@, tmp1407,
	str	r2, [fp, #-196]	@, %sfp
	and	r2, r8, #-16777216	@, temp.5342,
	mov	r9, r9, lsr #24	@,,
	str	r9, [fp, #-144]	@, %sfp
	mov	r9, ip, lsr #16	@, temp.5446,
	str	r9, [fp, #-176]	@, %sfp
	ldr	r9, [fp, #-60]	@, %sfp
	mov	r9, r9, lsr #24	@,,
	str	r9, [fp, #-184]	@, %sfp
	mov	r9, r0, lsr #16	@, D.42959,
	str	r9, [fp, #-168]	@, %sfp
	mov	r9, r3, lsr #24	@, D.42965,
	str	r9, [fp, #-172]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	mov	r9, r9, asl #16	@,,
	str	r9, [fp, #-48]	@, %sfp
	ldr	r9, [fp, #-76]	@, %sfp
	mov	r9, r9, asl #16	@,,
	str	r9, [fp, #-124]	@, %sfp
	ldr	r9, [fp, #-108]	@, %sfp
	str	r2, [fp, #-108]	@, %sfp
	and	r2, r6, #-16777216	@, temp.5394,
	mov	r9, r9, asl #16	@,,
	str	r9, [fp, #-132]	@, %sfp
	ldr	r9, [fp, #-128]	@, %sfp
	mov	r9, r9, asl #16	@,,
	str	r9, [fp, #-136]	@, %sfp
	ldr	r9, [fp, #-92]	@, %sfp
	str	r2, [fp, #-92]	@, %sfp
	and	r2, ip, #-16777216	@, temp.5446,
	str	r2, [fp, #-192]	@, %sfp
	mov	r9, r9, asl #16	@,,
	str	r9, [fp, #-120]	@, %sfp
	ldr	r9, [fp, #-164]	@, %sfp
	ldr	r2, [fp, #-72]	@, %sfp
	mov	r9, r9, asl #16	@,,
	str	r9, [fp, #-148]	@, %sfp
	and	r9, sl, #-16777216	@, temp.5316,
	str	r9, [fp, #-76]	@, %sfp
	and	r9, r7, #-16777216	@, temp.5368,
	str	r9, [fp, #-128]	@, %sfp
	and	r9, r5, #-16777216	@, temp.5420,
	str	r9, [fp, #-152]	@, %sfp
	and	r9, r0, #-16777216	@, D.42959,
	str	r9, [fp, #-200]	@, %sfp
	ldr	r9, [fp, #-48]	@, %sfp
	ubfx	r7, r7, #8, #8	@, temp.5368,,
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-96]	@, %sfp
	str	r9, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-76]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	str	r9, [fp, #-48]	@, %sfp
	ldr	r2, [fp, #-104]	@, %sfp
	ldr	r9, [fp, #-124]	@, %sfp
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-84]	@, %sfp
	str	r9, [fp, #-104]	@, %sfp
	ldr	r9, [fp, #-108]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-88]	@, %sfp
	str	r9, [fp, #-124]	@, %sfp
	ldr	r9, [fp, #-132]	@, %sfp
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-112]	@, %sfp
	str	r9, [fp, #-88]	@, %sfp
	ldr	r9, [fp, #-128]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-116]	@, %sfp
	str	r9, [fp, #-112]	@, %sfp
	ldr	r9, [fp, #-136]	@, %sfp
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-156]	@, %sfp
	str	r9, [fp, #-136]	@, %sfp
	ldr	r9, [fp, #-92]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-160]	@, %sfp
	str	r9, [fp, #-92]	@, %sfp
	ldr	r9, [fp, #-120]	@, %sfp
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-144]	@, %sfp
	str	r9, [fp, #-164]	@, %sfp
	ldr	r9, [fp, #-152]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-176]	@, %sfp
	str	r9, [fp, #-152]	@, %sfp
	ldr	r9, [fp, #-148]	@, %sfp
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-184]	@, %sfp
	str	r9, [fp, #-180]	@, %sfp
	ldr	r9, [fp, #-192]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	ldr	r2, [fp, #-168]	@, %sfp
	str	r9, [fp, #-192]	@, %sfp
	ldr	r9, [fp, #-196]	@, %sfp
	orr	r9, r9, r2, asl #24	@,,,,
	ldr	r2, [fp, #-172]	@, %sfp
	str	r9, [fp, #-188]	@, %sfp
	ldr	r9, [fp, #-200]	@, %sfp
	orr	r9, r9, r2, asl #8	@,,,,
	str	r9, [fp, #-172]	@, %sfp
	ldr	r2, [fp, #-100]	@, %sfp
	ldr	r1, [fp, #-64]	@, %sfp
	ubfx	r9, r2, #8, #8	@,,,
	ldr	r2, [fp, #-140]	@, %sfp
	str	r9, [fp, #-100]	@, %sfp
	ubfx	r9, r2, #8, #8	@,,,
	str	r9, [fp, #-140]	@, %sfp
	ubfx	r9, sl, #8, #8	@, temp.5316,,
	ldr	sl, [fp, #-212]	@, %sfp
	str	r9, [fp, #-76]	@, %sfp
	ubfx	r9, r8, #8, #8	@, temp.5342,,
	ldr	r8, [fp, #-68]	@, %sfp
	ubfx	r2, lr, #8, #8	@, temp.5321,,
	str	r9, [fp, #-108]	@, %sfp
	str	r2, [fp, #-96]	@, %sfp
	ubfx	r9, r8, #8, #8	@,,,
	ubfx	r2, sl, #8, #8	@,,,
	ldr	r8, [fp, #-60]	@, %sfp
	ldr	sl, [fp, #-208]	@, %sfp
	str	r2, [fp, #-84]	@, %sfp
	str	r7, [fp, #-116]	@, %sfp
	ubfx	r2, sl, #8, #8	@,,,
	ubfx	r7, r5, #8, #8	@, temp.5420,,
	str	r2, [fp, #-128]	@, %sfp
	ubfx	r5, r0, #8, #8	@, D.42959,,
	ldr	r2, [fp, #-64]	@, %sfp
	ldr	r0, [fp, #-208]	@, %sfp
	ubfx	sl, r6, #8, #8	@, temp.5394,,
	str	r9, [fp, #-160]	@, %sfp
	ubfx	r9, r8, #8, #8	@,,,
	ldr	r8, [fp, #-68]	@, %sfp
	ubfx	r6, r2, #8, #8	@,,,
	str	sl, [fp, #-120]	@, %sfp
	ubfx	sl, ip, #8, #8	@, temp.5446,,
	str	r6, [fp, #-176]	@, %sfp
	ubfx	ip, r3, #8, #8	@, D.42965,,
	ldr	r6, [fp, #-212]	@, %sfp
	mov	r2, lr, lsr #8	@, temp.5321,
	str	sl, [fp, #-196]	@, %sfp
	ldr	sl, [fp, #-60]	@, %sfp
	str	r7, [fp, #-148]	@, %sfp
	mov	r7, r0, lsr #8	@,,
	str	r9, [fp, #-168]	@, %sfp
	mov	r9, r8, lsr #8	@,,
	str	ip, [fp, #-200]	@, %sfp
	and	ip, lr, #255	@ tmp1236, temp.5321,
	str	r7, [fp, #-132]	@, %sfp
	mov	lr, r1, lsr #8	@,,
	and	r7, r8, #255	@ tmp1323,,
	str	r9, [fp, #-156]	@, %sfp
	and	r8, r1, #255	@ tmp1352,,
	ldr	r9, [fp, #-100]	@, %sfp
	ldr	r1, [fp, #-80]	@, %sfp
	str	r5, [fp, #-204]	@, %sfp
	and	r5, r6, #255	@ tmp1265,,
	str	r2, [fp, #-216]	@, %sfp
	mov	r2, r6, lsr #8	@ tmp1270,,
	str	lr, [fp, #-144]	@, %sfp
	and	r6, r0, #255	@ tmp1294,,
	and	lr, sl, #255	@ tmp1381,,
	mov	r0, sl, lsr #8	@,,
	orr	sl, r1, r9	@,,
	str	r0, [fp, #-184]	@, %sfp
	str	sl, [fp, #-60]	@, %sfp
	and	r0, r3, #255	@ tmp1410, D.42965,
	ldr	r1, [fp, #-72]	@, %sfp
	mov	r3, r3, lsr #8	@ tmp1415, D.42965,
	ldr	r9, [fp, #-48]	@, %sfp
	and	r3, r3, #65280	@ tmp1414, tmp1415,
	orr	sl, r1, ip	@,, tmp1236
	ldr	ip, [fp, #-96]	@, %sfp
	str	sl, [fp, #-64]	@, %sfp
	ldr	sl, [fp, #-104]	@, %sfp
	orr	r1, r9, ip	@,,
	ldr	ip, [fp, #-124]	@, %sfp
	ldr	r9, [fp, #-84]	@, %sfp
	orr	r5, sl, r5	@,, tmp1265
	ldr	sl, [fp, #-88]	@, %sfp
	str	r1, [fp, #-68]	@, %sfp
	orr	r1, ip, r9	@,,
	str	r5, [fp, #-100]	@, %sfp
	orr	r5, sl, r6	@,, tmp1294
	ldr	r9, [fp, #-112]	@, %sfp
	ldr	ip, [fp, #-128]	@, %sfp
	ldr	sl, [fp, #-136]	@, %sfp
	ldr	r6, [fp, #-160]	@, %sfp
	orr	r7, sl, r7	@,, tmp1323
	str	r1, [fp, #-80]	@, %sfp
	ldr	sl, [fp, #-176]	@, %sfp
	orr	r1, r9, ip	@,,
	str	r5, [fp, #-72]	@, %sfp
	ldr	r9, [fp, #-164]	@, %sfp
	ldr	r5, [fp, #-92]	@, %sfp
	str	r7, [fp, #-96]	@, %sfp
	ldr	r7, [fp, #-152]	@, %sfp
	orr	ip, r5, r6	@,,
	str	r1, [fp, #-48]	@, %sfp
	orr	r1, r9, r8	@,, tmp1352
	orr	r6, r7, sl	@,,
	ldr	r5, [fp, #-180]	@, %sfp
	ldr	r9, [fp, #-192]	@, %sfp
	ldr	r8, [fp, #-168]	@, %sfp
	ldr	sl, [fp, #-188]	@, %sfp
	ldr	r7, [fp, #-200]	@, %sfp
	str	r6, [fp, #-84]	@, %sfp
	ldr	r6, [fp, #-172]	@, %sfp
	str	ip, [fp, #-104]	@, %sfp
	orr	ip, r5, lr	@,, tmp1381
	str	r1, [fp, #-124]	@, %sfp
	orr	lr, sl, r0	@,, tmp1410
	orr	r1, r9, r8	@,,
	ldr	r5, [fp, #-216]	@, %sfp
	ldr	r9, [fp, #-156]	@, %sfp
	ldr	r0, [fp, #-184]	@, %sfp
	ldr	r8, [fp, #-140]	@, %sfp
	str	ip, [fp, #-88]	@, %sfp
	str	lr, [fp, #-92]	@, %sfp
	orr	lr, r6, r7	@ tmp1426,,
	ldr	ip, [fp, #-132]	@, %sfp
	and	r6, r2, #65280	@ tmp1269, tmp1270,
	ldr	r2, [fp, #-144]	@, %sfp
	and	r7, r5, #65280	@ tmp1240,,
	str	r1, [fp, #-112]	@, %sfp
	and	r5, ip, #65280	@ tmp1298,,
	ldr	r1, [fp, #-60]	@, %sfp
	and	ip, r9, #65280	@ tmp1327,,
	and	r9, r2, #65280	@ tmp1356,,
	and	r2, r0, #65280	@ tmp1385,,
	movw	r0, #57976	@ tmp1216,
	orr	sl, r1, r8, asl #16	@, tmp1227,,,
	str	sl, [r4, r0]	@ tmp1227, <variable>.DecPicPara.Qmatrix
	movw	sl, #57980	@ tmp1230,
	ldr	r1, [fp, #-64]	@, %sfp
	orr	r7, r1, r7	@ tmp1242,, tmp1240
	str	r7, [r4, sl]	@ tmp1242, <variable>.DecPicPara.Qmatrix
	ldr	r8, [fp, #-76]	@, %sfp
	movw	r7, #57984	@ tmp1245,
	ldr	r0, [fp, #-68]	@, %sfp
	orr	r1, r0, r8, asl #16	@, tmp1256,,,
	str	r1, [r4, r7]	@ tmp1256, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-100]	@, %sfp
	movw	r8, #57988	@ tmp1259,
	orr	r6, sl, r6	@ tmp1271,, tmp1269
	str	r6, [r4, r8]	@ tmp1271, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-108]	@, %sfp
	movw	sl, #57992	@ tmp1274,
	ldr	r0, [fp, #-80]	@, %sfp
	movw	r8, #57996	@ tmp1288,
	orr	r7, r0, r1, asl #16	@, tmp1285,,,
	str	r7, [r4, sl]	@ tmp1285, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-72]	@, %sfp
	movw	r7, #58000	@ tmp1303,
	orr	r0, r6, r5	@ tmp1300,, tmp1298
	str	r0, [r4, r8]	@ tmp1300, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-116]	@, %sfp
	movw	r0, #58004	@ tmp1317,
	ldr	sl, [fp, #-48]	@, %sfp
	orr	r5, sl, r1, asl #16	@, tmp1314,,,
	str	r5, [r4, r7]	@ tmp1314, <variable>.DecPicPara.Qmatrix
	ldr	r6, [fp, #-96]	@, %sfp
	movw	r7, #58012	@ tmp1346,
	orr	r8, r6, ip	@ tmp1329,, tmp1327
	str	r8, [r4, r0]	@ tmp1329, <variable>.DecPicPara.Qmatrix
	ldr	sl, [fp, #-120]	@, %sfp
	movw	ip, #58008	@ tmp1332,
	ldr	r1, [fp, #-104]	@, %sfp
	movw	r0, #58016	@ tmp1361,
	orr	r5, r1, sl, asl #16	@, tmp1343,,,
	str	r5, [r4, ip]	@ tmp1343, <variable>.DecPicPara.Qmatrix
	ldr	r5, [fp, #-124]	@, %sfp
	movw	sl, #58020	@ tmp1375,
	orr	r6, r5, r9	@ tmp1358,, tmp1356
	str	r6, [r4, r7]	@ tmp1358, <variable>.DecPicPara.Qmatrix
	ldr	r7, [fp, #-148]	@, %sfp
	ldr	r6, [fp, #-84]	@, %sfp
	orr	r8, r6, r7, asl #16	@, tmp1372,,,
	str	r8, [r4, r0]	@ tmp1372, <variable>.DecPicPara.Qmatrix
	ldr	r1, [fp, #-88]	@, %sfp
	orr	r9, r1, r2	@ tmp1387,, tmp1385
	str	r9, [r4, sl]	@ tmp1387, <variable>.DecPicPara.Qmatrix
	ldr	ip, [fp, #-196]	@, %sfp
	movw	r2, #58024	@ tmp1390,
	ldr	sl, [fp, #-112]	@, %sfp
	movw	r9, #58028	@ tmp1404,
	orr	r8, sl, ip, asl #16	@, tmp1401,,,
	str	r8, [r4, r2]	@ tmp1401, <variable>.DecPicPara.Qmatrix
	ldr	r0, [fp, #-92]	@, %sfp
	movw	r8, #58032	@ tmp1419,
	orr	r1, r0, r3	@ tmp1416,, tmp1414
	str	r1, [r4, r9]	@ tmp1416, <variable>.DecPicPara.Qmatrix
	ldr	ip, [fp, #-204]	@, %sfp
	orr	r9, lr, ip, asl #16	@, tmp1430, tmp1426,,
	str	r9, [r4, r8]	@ tmp1430, <variable>.DecPicPara.Qmatrix
	b	.L1338	@
.L1331:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC69	@,
	movt	r1, #:upper16:.LC69	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42864,
	b	.L1329	@
.L1360:
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r1, #:lower16:.LC68	@,
	movt	r1, #:upper16:.LC68	@,
	ldr	r2, [r3, #656]	@, <variable>.logic_fs_id
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42864,
	b	.L1329	@
	.fnend
	.size	WritePicMsg, .-WritePicMsg
	.align	2
	.global	InitListX
	.type	InitListX, %function
InitListX:
	.fnstart
.LFB1599:
	@ args = 0, pretend = 0, frame = 208
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #220
	sub	sp, sp, #220	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20688	@ tmp220,
	ldrb	r2, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r2, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1363	@,
	movw	r0, #55795	@ tmp222,
	ldrb	r5, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r5, #0	@ <variable>.CurrPic.structure,
	beq	.L1364	@,
	movw	lr, #26640	@ tmp224,
	ldr	r5, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1366	@,
	add	r7, r4, #26368	@ ivtmp.5940, pH264Ctx,
	mov	r5, r2	@ list0idx.6010, <variable>.CurrSlice.slice_type
	add	r3, r7, #136	@ ivtmp.5940, ivtmp.5940,
.L1377:
	ldr	r1, [r3, #0]	@ temp.6015, <variable>.DPB.fs_ref
	sub	r6, fp, #44	@,,
	add	ip, r6, r5, asl #2	@, tmp264,, list0idx.6010,
	add	r2, r2, #1	@ i.6017, i.6017,
	add	r3, r3, #4	@ ivtmp.5940, ivtmp.5940,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	strne	r1, [ip, #-64]	@ temp.6015, fs_list0
	ldr	r8, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	addne	r5, r5, #1	@ list0idx.6010, list0idx.6010,
	cmp	r8, r2	@ <variable>.DPB.ref_frames_in_buffer, i.6017
	bhi	.L1377	@,
.L1366:
	sub	r8, fp, #108	@ tmp268,,
	mov	r1, r5	@, list0idx.6010
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_fs_by_frame_num_desc	@,
	mov	r0, r8	@, tmp268
	movt	r3, #:upper16:compare_fs_by_frame_num_desc	@,
	bl	qsort	@
	movw	r7, #55795	@ tmp274,
	add	r2, r4, #26880	@ D.41496, pH264Ctx,
	ldrb	r0, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r7, r2, #164	@ D.41496, D.41496,
	movw	r3, #20732	@ tmp270,
	mov	r6, #0	@ tmp271,
	mov	r1, r8	@, tmp268
	str	r6, [r4, r3]	@ tmp271, <variable>.CurrSlice.listXsize
	mov	r2, r5	@, list0idx.6010
	mov	r3, r7	@, D.41496
	add	r5, r4, #20480	@ D.41497, pH264Ctx,
	add	r8, r5, #252	@ D.41497, D.41497,
	str	r6, [sp, #4]	@ tmp271,
	str	r8, [sp, #0]	@ D.41497,
	bl	GenPiclistfromFrmlist	@
	movw	r0, #26644	@ tmp278,
	ldr	r5, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	subeq	r6, fp, #236	@ tmp519,,
	beq	.L1379	@,
	mov	r3, r6	@ ivtmp.5934, tmp271
	sub	r6, fp, #236	@ tmp519,,
	mov	r5, r3	@ listltidx, ivtmp.5934
.L1380:
	add	r2, r4, r3	@ tmp281, pH264Ctx, ivtmp.5934
	ldr	r1, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	ip, r2, #26368	@ tmp283, tmp281,
	add	r5, r5, #1	@ listltidx, listltidx,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx
	ldr	lr, [ip, #200]	@ tmp284, <variable>.DPB.fs_ltref
	str	lr, [r6, r3]	@ tmp284, fs_listlt
	add	r3, r3, #4	@ ivtmp.5934, ivtmp.5934,
	bhi	.L1380	@,
.L1379:
	mov	r0, r6	@, tmp519
	mov	r1, r5	@, listltidx
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	movw	r3, #55795	@ tmp289,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp519
	mov	r2, r5	@, listltidx
	mov	r3, r7	@, D.41496
	mov	r6, #1	@ tmp292,
	str	r8, [sp, #0]	@ D.41497,
	str	r6, [sp, #4]	@ tmp292,
	bl	GenPiclistfromFrmlist	@
.L1375:
	movw	lr, #20732	@ tmp295,
	mov	r2, #0	@ tmp294,
	ldr	r6, [r4, lr]	@ list0idx.6009, <variable>.CurrSlice.listXsize
	mov	r0, #20736	@ tmp293,
	str	r2, [r4, r0]	@ tmp294, <variable>.CurrSlice.listXsize
	cmp	r6, r2	@ list0idx.6009,
	bne	.L1381	@,
	ldr	r1, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1382	@,
	movw	r6, #55795	@ tmp298,
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ temp.6024, <variable>.CurrPic.structure
	cmp	r3, r2	@ temp.6024,
	beq	.L1547	@,
	movw	r6, #56336	@ tmp304,
	cmp	r3, #1	@ temp.6024,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r1, #27044	@ tmp307,
	addeq	ip, ip, #576	@ tmp306, <variable>.CurrPic.frame_store,
	addne	ip, ip, #616	@ tmp310, <variable>.CurrPic.frame_store,
	str	ip, [r4, r1]	@ tmp310, <variable>.pListX
.L1384:
	movw	r2, #20732	@ tmp311,
	mov	r6, #1	@ tmp312,
	str	r6, [r4, r2]	@ tmp312, <variable>.CurrSlice.listXsize
.L1381:
	movw	ip, #20744	@ tmp481,
	movw	r0, #20748	@ tmp485,
	ldr	r3, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	mov	ip, #20736	@ tmp487,
	ldr	r2, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	movw	r0, #20732	@ tmp484,
	ldr	r1, [r4, ip]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r3, r3, #1	@ tmp482, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	cmp	r6, r3	@ list0idx.6009, tmp482
	movcc	r3, r6	@ i.6033, list0idx.6009
	add	r2, r2, #1	@ prephitmp.5887, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r2, r1	@ prephitmp.5887, <variable>.CurrSlice.listXsize
	movcs	r2, r1	@ prephitmp.5887, <variable>.CurrSlice.listXsize
	cmp	r3, #32	@ i.6033,
	str	r3, [r4, r0]	@ i.6033, <variable>.CurrSlice.listXsize
	str	r2, [r4, ip]	@ prephitmp.5887, <variable>.CurrSlice.listXsize
	bls	.L1427	@,
	b	.L1428	@
.L1363:
	movw	sl, #55795	@ tmp314,
	ldrb	r7, [r0, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r7, #0	@ <variable>.CurrPic.structure,
	beq	.L1387	@,
	movw	ip, #26640	@ tmp316,
	ldr	r5, [r0, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1389	@,
	add	r7, r0, #26368	@ ivtmp.6006, pH264Ctx,
	mov	r5, #0	@ list0idx.6012,
	add	r3, r7, #136	@ ivtmp.6006, ivtmp.6006,
	mov	r2, r5	@ i.6051, list0idx.6012
	movw	r7, #56356	@ tmp533,
.L1410:
	ldr	r1, [r3, #0]	@ temp.6050, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.6051, i.6051,
	add	r3, r3, #4	@ ivtmp.6006, ivtmp.6006,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #0	@ <variable>.is_used,
	beq	.L1409	@,
	ldr	r6, [r1, #672]	@ <variable>.poc, <variable>.poc
	sub	r0, fp, #44	@,,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r9, r0, r5, asl #2	@, tmp408,, list0idx.6012,
	cmp	lr, r6	@ <variable>.CurrPic.thispoc, <variable>.poc
	strge	r1, [r9, #-64]	@ temp.6050, fs_list0
	addge	r5, r5, #1	@ list0idx.6012, list0idx.6012,
.L1409:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.6051
	bhi	.L1410	@,
.L1389:
	sub	r6, fp, #108	@ tmp518,,
	mov	r1, r5	@, list0idx.6012
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_fs_by_poc_desc	@,
	mov	r0, r6	@, tmp518
	movt	r3, #:upper16:compare_fs_by_poc_desc	@,
	bl	qsort	@
	movw	ip, #26640	@ tmp414,
	ldr	r9, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r9, #0	@ <variable>.DPB.ref_frames_in_buffer,
	moveq	r7, r5	@ list0idx.6013, list0idx.6012
	beq	.L1412	@,
	add	r8, r4, #26368	@ ivtmp.6001, pH264Ctx,
	mov	r7, r5	@ list0idx.6013, list0idx.6012
	add	r3, r8, #136	@ ivtmp.6001, ivtmp.6001,
	mov	r2, #0	@ i.6058,
	movw	r8, #56356	@ tmp531,
.L1414:
	ldr	r1, [r3, #0]	@ temp.6053, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.6058, i.6058,
	add	r3, r3, #4	@ ivtmp.6001, ivtmp.6001,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #0	@ <variable>.is_used,
	beq	.L1413	@,
	ldr	r0, [r1, #672]	@ <variable>.poc, <variable>.poc
	sub	sl, fp, #44	@,,
	ldr	lr, [r4, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r9, sl, r7, asl #2	@, tmp423,, list0idx.6013,
	cmp	lr, r0	@ <variable>.CurrPic.thispoc, <variable>.poc
	strlt	r1, [r9, #-64]	@ temp.6053, fs_list0
	addlt	r7, r7, #1	@ list0idx.6013, list0idx.6013,
.L1413:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.6058
	bhi	.L1414	@,
	rsb	r9, r5, r7	@ prephitmp.6084, list0idx.6012, list0idx.6013
.L1412:
	mov	sl, r5, asl #2	@ tmp520, list0idx.6012,
	mov	r1, r9	@, prephitmp.6084
	add	r0, r6, sl	@, tmp518, tmp520
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_fs_by_poc_asc	@,
	movt	r3, #:upper16:compare_fs_by_poc_asc	@,
	bl	qsort	@
	cmp	r5, #0	@ list0idx.6012,
	subeq	r8, fp, #172	@ tmp523,,
	beq	.L1415	@,
	sub	r8, fp, #172	@ tmp523,,
	ldr	ip, [r6, #0]	@ tmp433, fs_list0
	add	r9, r8, r9, asl #2	@, ivtmp.5998, tmp523, prephitmp.6084,
	cmp	sl, #4	@ tmp520,
	sub	r2, sl, #4	@ tmp594, tmp520,
	mov	r3, #4	@ ivtmp.5996,
	str	ip, [r9], #4	@ tmp433, fs_list1
	ubfx	r2, r2, #2, #1	@ tmp595, tmp594,,
	beq	.L1415	@,
	cmp	r2, #0	@ tmp595,
	beq	.L1416	@,
	ldr	r2, [r6, #4]	@ tmp843, fs_list0
	mov	r3, #8	@ ivtmp.5996,
	cmp	sl, r3	@ tmp520, ivtmp.5996
	str	r2, [r9], #4	@ tmp843, fs_list1
	beq	.L1415	@,
.L1416:
	add	r2, r3, #4	@ tmp596, ivtmp.5996,
	ldr	r0, [r6, r3]	@ tmp661, fs_list0
	add	r3, r2, #4	@ ivtmp.5996, tmp596,
	mov	lr, r9	@ tmp597, ivtmp.5998
	ldr	r1, [r6, r2]	@ tmp664, fs_list0
	cmp	sl, r3	@ tmp520, ivtmp.5996
	str	r0, [lr], #4	@ tmp661, fs_list1
	str	r1, [r9, #4]	@ tmp664, fs_list1
	add	r9, lr, #4	@ ivtmp.5998, tmp597,
	bne	.L1416	@,
.L1415:
	cmp	r5, r7	@ list0idx.6012, list0idx.6013
	bcs	.L1417	@,
	add	sl, r6, sl	@ ivtmp.5988, tmp518, tmp520
	add	lr, r6, r7, asl #2	@, D.53026, tmp518, list0idx.6013,
	rsb	r9, sl, lr	@ tmp587, ivtmp.5988, D.53026
	mov	r2, #4	@ ivtmp.5989,
	ldr	r5, [sl], #4	@ tmp439, fs_list0
	sub	r3, r9, #4	@ tmp588, tmp587,
	ubfx	r1, r3, #2, #1	@ tmp589, tmp588,,
	cmp	sl, lr	@ ivtmp.5988, D.53026
	str	r5, [r8, #0]	@ tmp439, fs_list1
	beq	.L1417	@,
	cmp	r1, #0	@ tmp589,
	beq	.L1418	@,
	ldr	r9, [sl], #4	@ tmp842, fs_list0
	mov	r2, #8	@ ivtmp.5989,
	cmp	sl, lr	@ ivtmp.5988, D.53026
	str	r9, [r8, #4]	@ tmp842, fs_list1
	beq	.L1417	@,
.L1418:
	mov	r5, sl	@ tmp590, ivtmp.5988
	ldr	r0, [sl, #4]	@ tmp670, fs_list0
	ldr	ip, [r5], #4	@ tmp667, fs_list0
	add	r1, r2, #4	@ tmp591, ivtmp.5989,
	add	sl, r5, #4	@ ivtmp.5988, tmp590,
	cmp	sl, lr	@ ivtmp.5988, D.53026
	str	ip, [r8, r2]	@ tmp667, fs_list1
	str	r0, [r8, r1]	@ tmp670, fs_list1
	add	r2, r1, #4	@ ivtmp.5989, tmp591,
	bne	.L1418	@,
.L1417:
	add	lr, r4, #26880	@ tmp671, pH264Ctx,
	movw	r5, #55795	@ tmp446,
	add	sl, lr, #164	@ ivtmp.5945, tmp671,
	movw	ip, #20732	@ tmp440,
	mov	r3, #20736	@ tmp442,
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp518
	mov	r2, r7	@, list0idx.6013
	mov	r6, #0	@ tmp441,
	add	r9, r4, #20480	@ temp.6065, pH264Ctx,
	str	r6, [r4, ip]	@ tmp441, <variable>.CurrSlice.listXsize
	add	r9, r9, #252	@ temp.6065, temp.6065,
	str	r6, [r4, r3]	@ tmp441, <variable>.CurrSlice.listXsize
	mov	r3, sl	@, ivtmp.5945
	str	r6, [sp, #4]	@ tmp441,
	str	lr, [fp, #-248]	@,
	str	r9, [sp, #0]	@ temp.6065,
	bl	GenPiclistfromFrmlist	@
	ldr	r2, [fp, #-248]	@,
	mov	r1, r8	@, tmp523
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	ip, r2, #296	@, tmp671,
	mov	r2, r7	@, list0idx.6013
	str	r6, [sp, #4]	@ tmp441,
	add	r7, r4, #20736	@, pH264Ctx,
	mov	r3, ip	@,
	str	ip, [fp, #-244]	@, %sfp
	str	r7, [fp, #-240]	@, %sfp
	str	r7, [sp, #0]	@,
	bl	GenPiclistfromFrmlist	@
	movw	r0, #26644	@ tmp454,
	ldr	r5, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	subeq	r6, fp, #236	@ tmp672,,
	beq	.L1420	@,
	mov	r3, r6	@ ivtmp.5981, tmp441
	sub	r6, fp, #236	@ tmp672,,
	mov	r5, r3	@ listltidx.6068, ivtmp.5981
.L1421:
	add	r2, r4, r3	@ tmp457, pH264Ctx, ivtmp.5981
	ldr	r1, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r7, r2, #26368	@ tmp459, tmp457,
	add	r5, r5, #1	@ listltidx.6068, listltidx.6068,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx.6068
	ldr	r8, [r7, #200]	@ tmp460, <variable>.DPB.fs_ltref
	str	r8, [r6, r3]	@ tmp460, fs_listlt
	add	r3, r3, #4	@ ivtmp.5981, ivtmp.5981,
	bhi	.L1421	@,
.L1420:
	mov	r0, r6	@, tmp672
	mov	r1, r5	@, listltidx.6068
	mov	r2, #4	@,
	movw	r8, #55795	@ tmp465,
	movw	r3, #:lower16:compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp672
	mov	r2, r5	@, listltidx.6068
	mov	r3, sl	@, ivtmp.5945
	mov	r7, #1	@ tmp468,
	str	r9, [sp, #0]	@ temp.6065,
	str	r7, [sp, #4]	@ tmp468,
	bl	GenPiclistfromFrmlist	@
	ldr	lr, [fp, #-240]	@, %sfp
	mov	r1, r6	@, tmp672
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r2, r5	@, listltidx.6068
	ldr	r3, [fp, #-244]	@, %sfp
	movw	r6, #20732	@ tmp473,
	str	lr, [sp, #0]	@,
	str	r7, [sp, #4]	@ tmp468,
	bl	GenPiclistfromFrmlist	@
	mov	ip, #20736	@ tmp474,
	ldr	r0, [r4, r6]	@ list0idx.6088, <variable>.CurrSlice.listXsize
	ldr	r6, [r4, ip]	@ list0idx.6009, <variable>.CurrSlice.listXsize
	cmp	r6, r0	@ list0idx.6009, list0idx.6088
	movne	r6, r0	@ list0idx.6009, list0idx.6088
	beq	.L1408	@,
.L1423:
	cmp	r6, #0	@ list0idx.6009,
	bne	.L1381	@,
	mov	r2, #20736	@ tmp478,
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1548	@,
	movw	r0, #20748	@ tmp508,
	movw	ip, #20732	@ tmp505,
	ldr	r0, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	mov	r3, r6	@ i.6033, list0idx.6009
	str	r6, [r4, ip]	@ list0idx.6009, <variable>.CurrSlice.listXsize
	add	r0, r0, #1	@ tmp509, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r0, r1	@ tmp509, <variable>.CurrSlice.listXsize
	strls	r0, [r4, r2]	@, tmp509, <variable>.CurrSlice.listXsize
	strhi	r1, [r4, r2]	@, <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
.L1427:
	add	r0, r3, #6720	@ tmp514, i.6033,
	add	r1, r3, #1	@ i.6033, i.6033,
	add	ip, r0, #40	@ tmp514, tmp514,
	cmp	r1, #32	@ i.6033,
	mov	r0, #0	@ tmp525,
	and	r3, r3, #1	@ tmp541, i.6033,
	add	r2, r4, ip, asl #2	@, tmp517, pH264Ctx, tmp514,
	add	r2, r2, #4	@ ivtmp.5919, tmp517,
	str	r0, [r2], #4	@ tmp525, <variable>.pListX
	bhi	.L1536	@,
	cmp	r3, #0	@ tmp541,
	beq	.L1429	@,
	add	r1, r1, #1	@ i.6033, i.6033,
	str	r0, [r2], #4	@ tmp525, <variable>.pListX
	cmp	r1, #32	@ i.6033,
	bhi	.L1536	@,
.L1429:
	add	r1, r1, #2	@ i.6033, i.6033,
	mov	r3, r2	@ tmp543, ivtmp.5919
	cmp	r1, #32	@ i.6033,
	str	r0, [r3], #4	@ tmp525, <variable>.pListX
	str	r0, [r2, #4]	@ tmp525, <variable>.pListX
	add	r2, r3, #4	@ ivtmp.5919, tmp543,
	bls	.L1429	@,
.L1536:
	mov	r1, #20736	@ tmp491,
	ldr	r2, [r4, r1]	@ prephitmp.5887, <variable>.CurrSlice.listXsize
.L1428:
	cmp	r2, #32	@ prephitmp.5887,
	bhi	.L1430	@,
	add	r1, r2, #6720	@ tmp492, prephitmp.5887,
	add	r0, r4, #27136	@ D.52924, pH264Ctx,
	add	r3, r1, #40	@ tmp492, tmp492,
	add	r0, r0, #40	@ D.52924, D.52924,
	mov	r1, #0	@ tmp524,
	add	r4, r4, r3, asl #2	@, tmp495, pH264Ctx, tmp492,
	add	r4, r4, #4	@ ivtmp.5915, tmp495,
	add	r3, r4, #4	@ ivtmp.5915, ivtmp.5915,
	rsb	ip, r4, r0	@ tmp536, ivtmp.5915, D.52924
	cmp	r3, r0	@ ivtmp.5915, D.52924
	sub	r2, ip, #4	@ tmp537, tmp536,
	ubfx	r2, r2, #2, #1	@ tmp538, tmp537,,
	str	r1, [r4, #132]	@ tmp524, <variable>.pListX
	beq	.L1430	@,
	cmp	r2, #0	@ tmp538,
	beq	.L1431	@,
	str	r1, [r3, #132]	@ tmp524, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.5915, ivtmp.5915,
	cmp	r3, r0	@ ivtmp.5915, D.52924
	beq	.L1430	@,
.L1431:
	add	r2, r3, #4	@ tmp539, ivtmp.5915,
	str	r1, [r3, #132]	@ tmp524, <variable>.pListX
	add	r3, r2, #4	@ ivtmp.5915, tmp539,
	cmp	r3, r0	@ ivtmp.5915, D.52924
	str	r1, [r2, #132]	@ tmp524, <variable>.pListX
	bne	.L1431	@,
.L1430:
	mov	r0, #0	@ D.41517,
.L1386:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1387:
	movw	r8, #26640	@ tmp318,
	ldr	lr, [r0, r8]	@ temp.6086, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.6086,
	moveq	r7, lr	@ list0idx.6011, temp.6086
	beq	.L1391	@,
	add	r3, r0, #26368	@ ivtmp.5975, pH264Ctx,
	sub	r5, lr, #1	@ tmp581, temp.6086,
	and	r0, r5, #1	@ tmp583, tmp581,
	movw	r5, #56360	@ tmp529,
	ldr	r2, [r3, #136]!	@ temp.6028, <variable>.DPB.fs_ref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1549	@,
.L1497:
	mov	r2, #1	@ i.6031,
	cmp	r2, lr	@ i.6031, temp.6086
	add	r3, r3, #4	@ ivtmp.5975, ivtmp.5975,
	bcs	.L1391	@,
	cmp	r0, #0	@ tmp583,
	beq	.L1393	@,
	ldr	r1, [r3, #0]	@ temp.6028, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1550	@,
.L1499:
	add	r2, r2, #1	@ i.6031, i.6031,
	add	r3, r3, #4	@ ivtmp.5975, ivtmp.5975,
	cmp	r2, lr	@ i.6031, temp.6086
	bcc	.L1393	@,
.L1391:
	add	r0, r4, #26880	@ ivtmp.5945, pH264Ctx,
	mov	r1, r7	@, list0idx.6011
	add	sl, r0, #164	@ ivtmp.5945, ivtmp.5945,
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_pic_by_poc_desc	@,
	movt	r3, #:upper16:compare_pic_by_poc_desc	@,
	mov	r0, sl	@, ivtmp.5945
	bl	qsort	@
	movw	r3, #26640	@ tmp333,
	ldr	r8, [r4, r3]	@ temp.6085, <variable>.DPB.ref_frames_in_buffer
	cmp	r8, #0	@ temp.6085,
	moveq	r5, r7	@ list0idx, list0idx.6011
	beq	.L1395	@,
	add	r3, r4, #26368	@ ivtmp.5970, pH264Ctx,
	sub	r2, r8, #1	@ tmp576, temp.6085,
	and	r0, r2, #1	@ tmp578, tmp576,
	mov	r5, r7	@ list0idx, list0idx.6011
	ldr	r2, [r3, #136]!	@ temp.6034, <variable>.DPB.fs_ref
	movw	ip, #56360	@ tmp528,
	ldrb	lr, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1551	@,
.L1490:
	mov	r2, #1	@ i.6039,
	cmp	r2, r8	@ i.6039, temp.6085
	add	r3, r3, #4	@ ivtmp.5970, ivtmp.5970,
	bcs	.L1542	@,
	cmp	r0, #0	@ tmp578,
	beq	.L1397	@,
	ldr	r1, [r3, #0]	@ temp.6034, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1552	@,
.L1492:
	add	r2, r2, #1	@ i.6039, i.6039,
	add	r3, r3, #4	@ ivtmp.5970, ivtmp.5970,
	cmp	r2, r8	@ i.6039, temp.6085
	bcc	.L1397	@,
.L1542:
	rsb	r8, r7, r5	@ prephitmp.5889, list0idx.6011, list0idx
.L1395:
	mov	r6, r7, asl #2	@ D.41531, list0idx.6011,
	mov	r1, r8	@, prephitmp.5889
	add	r0, sl, r6	@, ivtmp.5945, D.41531
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_pic_by_poc_asc	@,
	movt	r3, #:upper16:compare_pic_by_poc_asc	@,
	bl	qsort	@
	cmp	r7, #0	@ list0idx.6011,
	beq	.L1398	@,
	add	r8, r8, #6720	@ tmp348, prephitmp.5889,
	add	r1, r4, #26880	@ tmp353, pH264Ctx,
	add	r3, r1, #164	@ tmp353, tmp353,
	add	r8, r8, #40	@ tmp348, tmp348,
	cmp	r6, #4	@ D.41531,
	sub	r2, r6, #4	@ tmp572, D.41531,
	add	ip, r4, r8, asl #2	@, tmp351, pH264Ctx, tmp348,
	ldr	r0, [r3, #0]	@ tmp355, <variable>.pListX
	add	lr, ip, #4	@ ivtmp.5967, tmp351,
	mov	r3, #4	@ ivtmp.5964,
	ubfx	ip, r2, #2, #1	@ tmp573, tmp572,,
	add	r2, lr, #4	@ ivtmp.5967, ivtmp.5967,
	str	r0, [lr, #132]	@ tmp355, <variable>.pListX
	beq	.L1398	@,
	cmp	ip, #0	@ tmp573,
	beq	.L1399	@,
	add	ip, r4, #26880	@ tmp782, pH264Ctx,
	mov	r3, #8	@ ivtmp.5964,
	add	lr, ip, #168	@ tmp782, tmp782,
	cmp	r6, r3	@ D.41531, ivtmp.5964
	ldr	r1, [lr, #0]	@ tmp783, <variable>.pListX
	str	r1, [r2, #132]	@ tmp783, <variable>.pListX
	add	r2, r2, #4	@ ivtmp.5967, ivtmp.5967,
	beq	.L1398	@,
.L1399:
	add	r0, r4, r3	@ tmp632, pH264Ctx, ivtmp.5964
	add	r3, r3, #4	@ tmp574, ivtmp.5964,
	add	r1, r0, #26880	@ tmp633, tmp632,
	add	lr, r4, r3	@ tmp638, pH264Ctx, tmp574
	add	r0, lr, #26880	@ tmp639, tmp638,
	add	r3, r3, #4	@ ivtmp.5964, tmp574,
	ldr	ip, [r1, #164]	@ tmp635, <variable>.pListX
	add	lr, r2, #4	@ tmp575, ivtmp.5967,
	cmp	r6, r3	@ D.41531, ivtmp.5964
	str	ip, [r2, #132]	@ tmp635, <variable>.pListX
	add	r2, lr, #4	@ ivtmp.5967, tmp575,
	ldr	r0, [r0, #164]	@ tmp641, <variable>.pListX
	str	r0, [lr, #132]	@ tmp641, <variable>.pListX
	bne	.L1399	@,
.L1398:
	cmp	r5, r7	@ list0idx, list0idx.6011
	bls	.L1400	@,
	add	lr, r7, #6720	@ tmp356, list0idx.6011,
	rsb	r6, r7, r5	@ tmp363, list0idx.6011, list0idx
	add	r3, lr, #40	@ tmp356, tmp356,
	add	r0, r4, #27136	@ tmp365, pH264Ctx,
	mov	r6, r6, asl #2	@ D.52983, tmp363,
	add	r2, r0, #40	@ tmp365, tmp365,
	add	r1, r4, r3, asl #2	@, tmp359, pH264Ctx, tmp356,
	mov	r3, #4	@ ivtmp.5958,
	add	r1, r1, r3	@ ivtmp.5957, tmp359,
	cmp	r3, r6	@ ivtmp.5958, D.52983
	sub	ip, r6, #4	@ tmp566, D.52983,
	ldr	lr, [r1], #4	@ tmp367, <variable>.pListX
	ubfx	ip, ip, #2, #1	@ tmp567, tmp566,,
	str	lr, [r2, #0]	@ tmp367, <variable>.pListX
	beq	.L1400	@,
	cmp	ip, #0	@ tmp567,
	beq	.L1401	@,
	add	r3, r4, #27136	@ tmp778, pH264Ctx,
	ldr	r0, [r1], #4	@ tmp779, <variable>.pListX
	add	r2, r3, #44	@ tmp778, tmp778,
	mov	r3, #8	@ ivtmp.5958,
	cmp	r3, r6	@ ivtmp.5958, D.52983
	str	r0, [r2, #0]	@ tmp779, <variable>.pListX
	beq	.L1400	@,
.L1401:
	mov	r2, r1	@ tmp568, ivtmp.5957
	add	ip, r4, r3	@ tmp644, pH264Ctx, ivtmp.5958
	ldr	lr, [r2], #4	@ tmp647, <variable>.pListX
	add	ip, ip, #27136	@ tmp645, tmp644,
	add	r0, r3, #4	@ tmp569, ivtmp.5958,
	add	r3, r0, #4	@ ivtmp.5958, tmp569,
	add	r0, r4, r0	@ tmp650, pH264Ctx, tmp569
	str	lr, [ip, #40]	@ tmp647, <variable>.pListX
	add	r0, r0, #27136	@ tmp651, tmp650,
	ldr	ip, [r1, #4]	@ tmp653, <variable>.pListX
	cmp	r3, r6	@ ivtmp.5958, D.52983
	add	r1, r2, #4	@ ivtmp.5957, tmp568,
	str	ip, [r0, #40]	@ tmp653, <variable>.pListX
	bne	.L1401	@,
.L1400:
	movw	lr, #26644	@ tmp370,
	mov	r2, #20736	@ tmp368,
	ldr	r1, [r4, lr]	@ temp.6083, <variable>.DPB.ltref_frames_in_buffer
	movw	r3, #20732	@ tmp369,
	str	r5, [r4, r2]	@ list0idx, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ temp.6083,
	str	r5, [r4, r3]	@ list0idx, <variable>.CurrSlice.listXsize
	moveq	r6, r5	@ list0idx.6009, list0idx
	beq	.L1403	@,
	tst	r1, #1	@ temp.6083,
	add	r6, r4, #26368	@ ivtmp.5951, pH264Ctx,
	add	r3, r6, #200	@ ivtmp.5951, ivtmp.5951,
	mov	r2, #0	@ i.6046,
	bne	.L1407	@,
	ldr	r2, [r3, #0]	@ temp.6042, <variable>.DPB.fs_ltref
	ldrb	lr, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	lr, #3	@ <variable>.is_used,
	beq	.L1553	@,
.L1540:
	add	r3, r3, #4	@ ivtmp.5951, ivtmp.5951,
	mov	r2, #1	@ i.6046,
.L1407:
	ldr	r0, [r3, #0]	@ temp.6042, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #3	@ <variable>.is_used,
	beq	.L1554	@,
.L1404:
	add	r2, r2, #1	@ tmp562, i.6046,
	mov	r6, r5	@ list0idx.6009, list0idx
	cmp	r2, r1	@ tmp562, temp.6083
	add	r0, r3, #4	@ tmp563, ivtmp.5951,
	bcs	.L1406	@,
.L1568:
	ldr	r3, [r3, #4]	@ temp.6042, <variable>.DPB.fs_ltref
	ldrb	r5, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r5, #3	@ <variable>.is_used,
	beq	.L1555	@,
.L1479:
	mov	r5, r6	@ list0idx.6009, list0idx.6009
.L1541:
	add	r3, r0, #4	@ ivtmp.5951, tmp563,
	add	r2, r2, #1	@ i.6046, tmp562,
	ldr	r0, [r3, #0]	@ temp.6042, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #3	@ <variable>.is_used,
	bne	.L1404	@,
	b	.L1554	@
.L1364:
	movw	r1, #26640	@ tmp226,
	ldr	lr, [r4, r1]	@ temp.6040, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.6040,
	moveq	r5, lr	@ list0idx.6057, temp.6040
	beq	.L1368	@,
	add	r3, r4, #26368	@ ivtmp.5928, pH264Ctx,
	sub	r2, lr, #1	@ tmp549, temp.6040,
	and	r0, r2, #1	@ tmp551, tmp549,
	ldr	r2, [r3, #136]!	@ D.41466, <variable>.DPB.fs_ref
	ldrb	r6, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1556	@,
.L1465:
	mov	r2, #1	@ i,
	cmp	r2, lr	@ i, temp.6040
	add	r3, r3, #4	@ ivtmp.5928, ivtmp.5928,
	bcs	.L1368	@,
	cmp	r0, #0	@ tmp551,
	beq	.L1370	@,
	ldr	r1, [r3, #0]	@ D.41466, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1557	@,
.L1467:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.5928, ivtmp.5928,
	cmp	r2, lr	@ i, temp.6040
	bcc	.L1370	@,
.L1368:
	add	lr, r4, #26880	@ D.41477, pH264Ctx,
	mov	r1, r5	@, list0idx.6057
	add	r6, lr, #164	@ D.41477, D.41477,
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_pic_by_pic_num_desc	@,
	movt	r3, #:upper16:compare_pic_by_pic_num_desc	@,
	mov	r0, r6	@, D.41477
	bl	qsort	@
	movw	r0, #26644	@ tmp242,
	ldr	r1, [r4, r0]	@ D.41487, <variable>.DPB.ltref_frames_in_buffer
	movw	r3, #20732	@ tmp241,
	str	r5, [r4, r3]	@ list0idx.6057, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ D.41487,
	moveq	r0, r5	@ list0idx.6080, list0idx.6057
	beq	.L1372	@,
	add	r3, r4, #26368	@ ivtmp.5923, pH264Ctx,
	sub	r2, r1, #1	@ tmp544, D.41487,
	and	ip, r2, #1	@ tmp546, tmp544,
	ldr	r2, [r3, #200]!	@ D.41478, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1558	@,
.L1458:
	mov	r2, #1	@ i.6014,
	cmp	r2, r1	@ i.6014, D.41487
	add	r3, r3, #4	@ ivtmp.5923, ivtmp.5923,
	bcs	.L1537	@,
	cmp	ip, #0	@ tmp546,
	beq	.L1374	@,
	ldr	r0, [r3, #0]	@ D.41478, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1559	@,
.L1460:
	add	r2, r2, #1	@ i.6014, i.6014,
	add	r3, r3, #4	@ ivtmp.5923, ivtmp.5923,
	cmp	r2, r1	@ i.6014, D.41487
	bcc	.L1374	@,
.L1537:
	movw	ip, #20732	@ tmp255,
	ldr	r0, [r4, ip]	@ list0idx.6080, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r5	@ prephitmp.5897, list0idx.6080, list0idx.6057
.L1372:
	add	r0, r6, r0, asl #2	@,, D.41477, list0idx.6080,
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_pic_by_lt_pic_num_asc	@,
	movw	r6, #20732	@ tmp259,
	movt	r3, #:upper16:compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	str	r5, [r4, r6]	@ list0idx.6057, <variable>.CurrSlice.listXsize
	b	.L1375	@
.L1561:
	add	sl, r7, #6720	@ tmp324, list0idx.6011,
	ldr	r3, [r3, #4]	@ temp.6028, <variable>.DPB.fs_ref
	add	ip, sl, #40	@ tmp324, tmp324,
	ldr	r6, [r1, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #536	@ tmp330, temp.6028,
	add	sl, r4, ip, asl #2	@, tmp328, pH264Ctx, tmp324,
	cmp	r8, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	r1, [sl, #4]	@ tmp330, <variable>.pListX
	addge	r7, r7, #1	@ list0idx.6011, list0idx.6011,
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1560	@,
.L1502:
	add	r2, r2, #1	@ i.6031, tmp584,
	add	r3, r0, #4	@ ivtmp.5975, tmp585,
	cmp	r2, lr	@ i.6031, temp.6086
	bcs	.L1391	@,
.L1393:
	ldr	r1, [r3, #0]	@ temp.6028, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp584, i.6031,
	add	r0, r3, #4	@ tmp585, ivtmp.5975,
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1561	@,
	ldr	r3, [r3, #4]	@ temp.6028, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1502	@,
.L1560:
	add	r6, r7, #6720	@ tmp837, list0idx.6011,
	add	sl, r3, #536	@ tmp841, temp.6028,
	add	ip, r6, #40	@ tmp837, tmp837,
	ldr	r3, [r3, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r4, ip, asl #2	@, tmp839, pH264Ctx, tmp837,
	cmp	r8, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r7, r7, #1	@ list0idx.6011, list0idx.6011,
	strge	sl, [r1, #4]	@ tmp841, <variable>.pListX
	b	.L1502	@
.L1563:
	ldr	r6, [r1, #536]	@ tmp231,
	bic	ip, r6, #-16777216	@ tmp229, tmp231,
	bic	r6, ip, #255	@ tmp229, tmp229,
	cmp	r6, #65536	@ tmp229,
	bne	.L1369	@,
	add	ip, r5, #6720	@ tmp232, list0idx.6057,
	add	r5, r5, #1	@ list0idx.6057, list0idx.6057,
	add	r6, ip, #40	@ tmp232, tmp232,
	add	r1, r1, #536	@ tmp238, D.41466,
	add	ip, r4, r6, asl #2	@, tmp236, pH264Ctx, tmp232,
	str	r1, [ip, #4]	@ tmp238, <variable>.pListX
.L1369:
	ldr	r3, [r3, #4]	@ D.41466, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1562	@,
.L1470:
	add	r2, r2, #1	@ i, tmp552,
	add	r3, r0, #4	@ ivtmp.5928, tmp553,
	cmp	r2, lr	@ i, temp.6040
	bcs	.L1368	@,
.L1370:
	ldr	r1, [r3, #0]	@ D.41466, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp552, i,
	add	r0, r3, #4	@ tmp553, ivtmp.5928,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1563	@,
	ldr	r3, [r3, #4]	@ D.41466, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1470	@,
.L1562:
	ldr	ip, [r3, #536]	@ tmp738,
	bic	r6, ip, #-16777216	@ tmp739, tmp738,
	bic	r1, r6, #255	@ tmp739, tmp739,
	cmp	r1, #65536	@ tmp739,
	bne	.L1470	@,
	add	ip, r5, #6720	@ tmp741, list0idx.6057,
	add	r3, r3, #536	@ tmp745, D.41466,
	add	r6, ip, #40	@ tmp741, tmp741,
	add	r5, r5, #1	@ list0idx.6057, list0idx.6057,
	add	r1, r4, r6, asl #2	@, tmp743, pH264Ctx, tmp741,
	str	r3, [r1, #4]	@ tmp745, <variable>.pListX
	b	.L1470	@
.L1565:
	add	r9, r5, #6720	@ tmp339, list0idx,
	ldr	r3, [r3, #4]	@ temp.6034, <variable>.DPB.fs_ref
	add	lr, r9, #40	@ tmp339, tmp339,
	ldr	r6, [r1, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r9, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #536	@ tmp345, temp.6034,
	add	lr, r4, lr, asl #2	@, tmp343, pH264Ctx, tmp339,
	cmp	r9, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r1, [lr, #4]	@ tmp345, <variable>.pListX
	addlt	r5, r5, #1	@ list0idx, list0idx,
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1564	@,
.L1495:
	add	r2, r2, #1	@ i.6039, tmp579,
	add	r3, r0, #4	@ ivtmp.5970, tmp580,
	cmp	r2, r8	@ i.6039, temp.6085
	bcs	.L1542	@,
.L1397:
	ldr	r1, [r3, #0]	@ temp.6034, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp579, i.6039,
	add	r0, r3, #4	@ tmp580, ivtmp.5970,
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1565	@,
	ldr	r3, [r3, #4]	@ temp.6034, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1495	@,
.L1564:
	add	lr, r5, #6720	@ tmp808, list0idx,
	add	r6, r3, #536	@ tmp812, temp.6034,
	add	r1, lr, #40	@ tmp808, tmp808,
	ldr	r3, [r3, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r4, r1, asl #2	@, tmp810, pH264Ctx, tmp808,
	cmp	lr, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r5, r5, #1	@ list0idx, list0idx,
	strlt	r6, [r1, #4]	@ tmp812, <variable>.pListX
	b	.L1495	@
.L1567:
	ldr	lr, [r0, #536]	@ tmp247,
	bic	lr, lr, #-16777216	@ tmp245, tmp247,
	bic	lr, lr, #255	@ tmp245, tmp245,
	cmp	lr, #256	@ tmp245,
	bne	.L1373	@,
	add	lr, r5, #6720	@ tmp248, list0idx.6057,
	add	r5, r5, #1	@ list0idx.6057, list0idx.6057,
	add	lr, lr, #40	@ tmp248, tmp248,
	add	r0, r0, #536	@ tmp254, D.41478,
	add	lr, r4, lr, asl #2	@, tmp252, pH264Ctx, tmp248,
	str	r0, [lr, #4]	@ tmp254, <variable>.pListX
.L1373:
	ldr	r3, [r3, #4]	@ D.41478, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1566	@,
.L1463:
	add	r2, r2, #1	@ i.6014, tmp547,
	add	r3, ip, #4	@ ivtmp.5923, tmp548,
	cmp	r2, r1	@ i.6014, D.41487
	bcs	.L1537	@,
.L1374:
	ldr	r0, [r3, #0]	@ D.41478, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp547, i.6014,
	add	ip, r3, #4	@ tmp548, ivtmp.5923,
	ldrb	lr, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1567	@,
	ldr	r3, [r3, #4]	@ D.41478, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L1463	@,
.L1566:
	ldr	r0, [r3, #536]	@ tmp712,
	bic	lr, r0, #-16777216	@ tmp713, tmp712,
	bic	r0, lr, #255	@ tmp713, tmp713,
	cmp	r0, #256	@ tmp713,
	bne	.L1463	@,
	add	lr, r5, #6720	@ tmp715, list0idx.6057,
	add	r3, r3, #536	@ tmp719, D.41478,
	add	r0, lr, #40	@ tmp715, tmp715,
	add	r5, r5, #1	@ list0idx.6057, list0idx.6057,
	add	lr, r4, r0, asl #2	@, tmp717, pH264Ctx, tmp715,
	str	r3, [lr, #4]	@ tmp719, <variable>.pListX
	b	.L1463	@
.L1554:
	ldrb	lr, [r0, #537]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, #1	@ <variable>.frame.is_long_term,
	bne	.L1404	@,
	add	ip, r5, #6720	@ tmp374, list0idx,
	add	r6, r5, #6784	@ tmp381, list0idx,
	add	lr, ip, #40	@ tmp374, tmp374,
	add	ip, r6, #9	@ tmp381, tmp381,
	add	r2, r2, #1	@ tmp562, i.6046,
	add	r6, r5, #1	@ list0idx.6009, list0idx,
	add	lr, r4, lr, asl #2	@, tmp378, pH264Ctx, tmp374,
	add	r5, r4, ip, asl #2	@, tmp385, pH264Ctx, tmp381,
	cmp	r2, r1	@ tmp562, temp.6083
	add	r0, r0, #536	@ tmp380, temp.6042,
	str	r0, [lr, #4]	@ tmp380, <variable>.pListX
	str	r0, [r5, #4]	@ tmp380, <variable>.pListX
	add	r0, r3, #4	@ tmp563, ivtmp.5951,
	bcc	.L1568	@,
.L1406:
	movw	r1, #20732	@ tmp389,
	ldr	r5, [r4, r1]	@ list0idx, <variable>.CurrSlice.listXsize
	rsb	r1, r5, r6	@ prephitmp.5893, list0idx, list0idx.6009
.L1403:
	add	r0, sl, r5, asl #2	@,, ivtmp.5945, list0idx,
	mov	r2, #4	@,
	movw	r5, #20732	@ tmp393,
	movw	r3, #:lower16:compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	ldr	ip, [r4, r5]	@ D.41488, <variable>.CurrSlice.listXsize
	mov	r2, #4	@,
	movw	r3, #:lower16:compare_pic_by_lt_pic_num_asc	@,
	add	r0, ip, #33	@ tmp394, D.41488,
	movt	r3, #:upper16:compare_pic_by_lt_pic_num_asc	@,
	rsb	r1, ip, r6	@, D.41488, list0idx.6009
	mla	r0, r0, r2, sl	@, tmp394,, ivtmp.5945
	bl	qsort	@
	mov	r3, #20736	@ tmp399,
	str	r6, [r4, r3]	@ list0idx.6009, <variable>.CurrSlice.listXsize
	str	r6, [r4, r5]	@ list0idx.6009, <variable>.CurrSlice.listXsize
.L1408:
	cmp	r6, #1	@ list0idx.6009,
	bls	.L1423	@,
	ldr	r2, [sl, #0]	@ tmp476, <variable>.pListX
	sub	r1, r6, #1	@ tmp554, list0idx.6009,
	ldr	r3, [sl, #132]	@ tmp477, <variable>.pListX
	and	r1, r1, #1	@ tmp556, tmp554,
	cmp	r2, r3	@ tmp476, tmp477
	bne	.L1381	@,
	mov	r3, #1	@ j,
	cmp	r3, r6	@ j, list0idx.6009
	add	sl, sl, #4	@ ivtmp.5945, ivtmp.5945,
	bcs	.L1538	@,
	cmp	r1, #0	@ tmp556,
	beq	.L1424	@,
	ldr	r2, [sl, #0]	@ tmp746, <variable>.pListX
	ldr	r0, [sl, #132]	@ tmp747, <variable>.pListX
	cmp	r2, r0	@ tmp746, tmp747
	bne	.L1381	@,
	mov	r3, #2	@ j,
	cmp	r3, r6	@ j, list0idx.6009
	add	sl, sl, #4	@ ivtmp.5945, ivtmp.5945,
	bcc	.L1424	@,
	b	.L1538	@
.L1569:
	ldr	r1, [sl, #4]	@ tmp679, <variable>.pListX
	add	sl, r2, #4	@ ivtmp.5945, tmp558,
	ldr	r2, [r2, #132]	@ tmp680, <variable>.pListX
	cmp	r1, r2	@ tmp679, tmp680
	bne	.L1381	@,
	cmp	r3, r6	@ j, list0idx.6009
	bcs	.L1538	@,
.L1424:
	ldr	r0, [sl, #0]	@ tmp674, <variable>.pListX
	add	r3, r3, #1	@ tmp557, j,
	ldr	ip, [sl, #132]	@ tmp675, <variable>.pListX
	add	r2, sl, #4	@ tmp558, ivtmp.5945,
	add	r3, r3, #1	@ j, tmp557,
	cmp	r0, ip	@ tmp674, tmp675
	beq	.L1569	@,
	b	.L1381	@
.L1555:
	ldrb	r5, [r3, #537]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r5, #1	@ <variable>.frame.is_long_term,
	bne	.L1479	@,
	add	ip, r6, #6720	@ tmp766, list0idx.6009,
	add	r5, r6, #6784	@ tmp772, list0idx.6009,
	add	lr, ip, #40	@ tmp766, tmp766,
	add	ip, r5, #9	@ tmp772, tmp772,
	add	r3, r3, #536	@ tmp770, temp.6042,
	add	r5, r6, #1	@ list0idx.6009, list0idx.6009,
	add	lr, r4, lr, asl #2	@, tmp768, pH264Ctx, tmp766,
	add	ip, r4, ip, asl #2	@, tmp774, pH264Ctx, tmp772,
	str	r3, [lr, #4]	@ tmp770, <variable>.pListX
	str	r3, [ip, #4]	@ tmp770, <variable>.pListX
	b	.L1541	@
.L1547:
	movw	lr, #56336	@ tmp300,
	movw	r3, #27044	@ tmp299,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r2, r0, #536	@ tmp302, <variable>.CurrPic.frame_store,
	str	r2, [r4, r3]	@ tmp302, <variable>.pListX
	b	.L1384	@
.L1549:
	ldr	sl, [r2, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r8, sl	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	sl, r4, #26880	@ tmp820, pH264Ctx,
	addge	r2, r2, #536	@ tmp821, temp.6028,
	addge	sl, sl, #164	@ tmp820, tmp820,
	movge	r7, #1	@ list0idx.6011,
	strge	r2, [sl, #0]	@ tmp821, <variable>.pListX
	b	.L1497	@
.L1553:
	ldrb	r6, [r2, #537]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r6, #1	@ <variable>.frame.is_long_term,
	bne	.L1540	@,
	add	r6, r5, #6720	@ tmp752, list0idx,
	add	lr, r5, #6784	@ tmp758, list0idx,
	add	r2, r2, #536	@ tmp757, temp.6042,
	add	r5, r5, #1	@ list0idx.6009, list0idx,
	add	ip, r4, r6, asl #2	@, tmp755, pH264Ctx, tmp752,
	add	r0, r4, lr, asl #2	@, tmp761, pH264Ctx, tmp758,
	str	r2, [ip, #164]	@ tmp757, <variable>.pListX
	str	r2, [r0, #40]	@ tmp757, <variable>.pListX
	b	.L1540	@
.L1556:
	ldr	ip, [r2, #536]	@ tmp720,
	bic	r1, ip, #-16777216	@ tmp721, tmp720,
	bic	r6, r1, #255	@ tmp721, tmp721,
	cmp	r6, #65536	@ tmp721,
	addeq	r6, r4, #26880	@ tmp726, pH264Ctx,
	addeq	r2, r2, #536	@ tmp727, D.41466,
	addeq	r6, r6, #164	@ tmp726, tmp726,
	moveq	r5, #1	@ list0idx.6057,
	streq	r2, [r6, #0]	@ tmp727, <variable>.pListX
	b	.L1465	@
.L1558:
	ldr	lr, [r2, #536]	@ tmp694,
	bic	r0, lr, #-16777216	@ tmp695, tmp694,
	bic	lr, r0, #255	@ tmp695, tmp695,
	cmp	lr, #256	@ tmp695,
	addeq	lr, r5, #6720	@ tmp696, list0idx.6057,
	addeq	r2, r2, #536	@ tmp701, D.41478,
	addeq	r5, r5, #1	@ list0idx.6057, list0idx.6057,
	addeq	lr, r4, lr, asl #2	@, tmp699, pH264Ctx, tmp696,
	streq	r2, [lr, #164]	@ tmp701, <variable>.pListX
	b	.L1458	@
.L1551:
	ldr	r1, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	ldr	r6, [r2, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	cmp	r1, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	bge	.L1490	@,
	add	r1, r7, #6720	@ tmp788, list0idx.6011,
	add	r2, r2, #536	@ tmp792, temp.6034,
	add	r6, r1, #40	@ tmp788, tmp788,
	add	r5, r7, #1	@ list0idx, list0idx.6011,
	add	lr, r4, r6, asl #2	@, tmp790, pH264Ctx, tmp788,
	str	r2, [lr, #4]	@ tmp792, <variable>.pListX
	b	.L1490	@
.L1552:
	ldr	r6, [r1, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	lr, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r6, r5, #6720	@ tmp798, list0idx,
	addlt	r1, r1, #536	@ tmp803, temp.6034,
	addlt	r5, r5, r2	@ list0idx, list0idx,
	addlt	r6, r4, r6, asl #2	@, tmp801, pH264Ctx, tmp798,
	strlt	r1, [r6, #164]	@ tmp803, <variable>.pListX
	b	.L1492	@
.L1559:
	ldr	lr, [r0, #536]	@ tmp704,
	bic	ip, lr, #-16777216	@ tmp705, tmp704,
	bic	lr, ip, #255	@ tmp705, tmp705,
	cmp	lr, #256	@ tmp705,
	addeq	lr, r5, #6720	@ tmp706, list0idx.6057,
	addeq	r0, r0, #536	@ tmp711, D.41478,
	addeq	r5, r5, r2	@ list0idx.6057, list0idx.6057,
	addeq	lr, r4, lr, asl #2	@, tmp709, pH264Ctx, tmp706,
	streq	r0, [lr, #164]	@ tmp711, <variable>.pListX
	b	.L1460	@
.L1557:
	ldr	r0, [r1, #536]	@ tmp730,
	bic	ip, r0, #-16777216	@ tmp731, tmp730,
	bic	r6, ip, #255	@ tmp731, tmp731,
	cmp	r6, #65536	@ tmp731,
	addeq	r6, r5, #6720	@ tmp732, list0idx.6057,
	addeq	r1, r1, #536	@ tmp737, D.41466,
	addeq	r5, r5, r2	@ list0idx.6057, list0idx.6057,
	addeq	r6, r4, r6, asl #2	@, tmp735, pH264Ctx, tmp732,
	streq	r1, [r6, #164]	@ tmp737, <variable>.pListX
	b	.L1467	@
.L1550:
	ldr	r0, [r1, #552]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r6, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r6, r0	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r0, r7, #6720	@ tmp827, list0idx.6011,
	addge	r1, r1, #536	@ tmp832, temp.6028,
	addge	r7, r7, r2	@ list0idx.6011, list0idx.6011,
	addge	r0, r4, r0, asl #2	@, tmp830, pH264Ctx, tmp827,
	strge	r1, [r0, #164]	@ tmp832, <variable>.pListX
	b	.L1499	@
.L1538:
	movw	r3, #27176	@ tmp499,
	movw	r2, #27180	@ tmp501,
	ldr	r0, [r4, r3]	@ tmp_s, <variable>.pListX
	movw	ip, #20732	@ tmp504,
	ldr	r1, [r4, r2]	@ <variable>.pListX, <variable>.pListX
	ldr	r6, [r4, ip]	@ list0idx.6009, <variable>.CurrSlice.listXsize
	str	r0, [r4, r2]	@ tmp_s, <variable>.pListX
	str	r1, [r4, r3]	@ <variable>.pListX, <variable>.pListX
	b	.L1423	@
.L1382:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC70	@,
	movt	r1, #:upper16:.LC70	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	mvn	r0, #0	@ D.41517,
	b	.L1386	@
.L1548:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC71	@,
	movt	r1, #:upper16:.LC71	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	mvn	r0, #0	@ D.41517,
	b	.L1386	@
	.fnend
	.size	InitListX, .-InitListX
	.align	2
	.global	DecList
	.type	DecList, %function
DecList:
	.fnstart
.LFB1603:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #26636	@ tmp149,
	ldr	r6, [r0, r3]	@ D.47590, <variable>.DPB.used_size
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r6, #0	@ D.47590,
	mvneq	r5, #0	@ nearest_pic_id,
	beq	.L1573	@,
	movw	r1, #26440	@ tmp152,
	cmp	r6, #1	@ D.47590,
	ldr	r0, [r0, r1]	@ <variable>.DPB.fs, <variable>.DPB.fs
	movw	r2, #56356	@ tmp150,
	ldr	ip, [r4, r2]	@ curr_poc, <variable>.CurrPic.thispoc
	movls	r5, #0	@ nearest_pic_id,
	ldr	r1, [r0, #672]	@ nearest_poc, <variable>.poc
	bls	.L1573	@,
	sub	r6, r6, #1	@ tmp154, D.47590,
	rsb	r1, r1, ip	@ tmp153, nearest_poc, curr_poc
	cmp	r1, #0	@ tmp153,
	mov	r5, #0	@ nearest_pic_id,
	mov	r6, r6, asl #2	@ D.53171, tmp154,
	rsblt	r1, r1, #0	@ nearest_poc_diff, tmp153
	tst	r6, #4	@ D.53171,
	mov	r3, r5	@ ivtmp.6128, nearest_pic_id
	bne	.L1576	@,
	add	r2, r4, #26368	@ tmp192, pH264Ctx,
	add	r3, r2, #76	@ tmp192, tmp192,
	ldr	r2, [r3, #0]	@ D.47587, <variable>.DPB.fs
	ldr	r0, [r2, #672]	@ <variable>.poc, <variable>.poc
	rsb	r3, r0, ip	@ tmp195, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp195,
	rsblt	r3, r3, #0	@ nearest_poc_diff.6131, tmp195
	cmp	r3, r1	@ nearest_poc_diff.6131, nearest_poc_diff
	ldrlt	r5, [r2, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	movge	r3, r1	@ nearest_poc_diff.6131, nearest_poc_diff
	mov	r1, r3	@ nearest_poc_diff, nearest_poc_diff.6131
	mov	r3, #4	@ ivtmp.6128,
.L1576:
	add	r0, r4, r3	@ tmp155, pH264Ctx, ivtmp.6128
	add	r3, r3, #4	@ tmp180, ivtmp.6128,
	add	r2, r0, #26368	@ tmp157, tmp155,
	ldr	r0, [r2, #76]	@ D.47587, <variable>.DPB.fs
	ldr	r2, [r0, #672]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, ip	@ tmp158, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp158,
	rsblt	r2, r2, #0	@ nearest_poc_diff.6131, tmp158
	cmp	r2, r1	@ nearest_poc_diff.6131, nearest_poc_diff
	movge	r2, r1	@ nearest_poc_diff.6131, nearest_poc_diff
	ldrlt	r5, [r0, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	cmp	r3, r6	@ tmp180, D.53171
	add	r0, r4, r3	@ tmp183, pH264Ctx, tmp180
	add	r1, r0, #26368	@ tmp184, tmp183,
	beq	.L1573	@,
	ldr	r0, [r1, #76]	@ D.47587, <variable>.DPB.fs
	ldr	r1, [r0, #672]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, ip	@ tmp188, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp188,
	rsblt	r1, r1, #0	@ nearest_poc_diff.6131, tmp188
	cmp	r1, r2	@ nearest_poc_diff.6131, nearest_poc_diff.6131
	ldrlt	r5, [r0, #204]	@ nearest_pic_id, <variable>.fs_image.image_id
	movge	r1, r2	@ nearest_poc_diff.6131, nearest_poc_diff.6131
.L1594:
	add	r3, r3, #4	@ ivtmp.6128, tmp180,
	b	.L1576	@
.L1573:
	movw	r0, #20688	@ tmp163,
	movw	r2, #22320	@ tmp160,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	ip, #22316	@ tmp161,
	str	r5, [r4, r2]	@ nearest_pic_id, <variable>.CurrSlice.picid_nearpoc
	mvn	r5, #0	@ tmp162,
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	str	r5, [r4, ip]	@ tmp162, <variable>.CurrSlice.picid_refidx0
	beq	.L1595	@,
	mov	r0, r4	@, pH264Ctx
	bl	InitListX	@
	cmp	r0, #0	@,
	beq	.L1579	@,
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC72	@,
	movt	r1, #:upper16:.LC72	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.41725, tmp162
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1579:
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC73	@,
	movt	r1, #:upper16:.LC73	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	DumpList	@
	mov	r0, r4	@, pH264Ctx
	bl	ReorderListX	@
	mov	r0, r4	@, pH264Ctx
	bl	RepairList	@
	cmp	r0, #0	@,
	movne	r0, r5	@ D.41725, tmp162
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	mov	r0, r4	@, pH264Ctx
	bl	FindMinRefIdx	@
	movw	r0, #27044	@ tmp171,
	ldr	r2, [r4, r0]	@ D.41735, <variable>.pListX
	movw	r3, #22316	@ tmp173,
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC74	@,
	cmp	r2, #0	@ D.41735,
	movt	r1, #:upper16:.LC74	@,
	ldrne	r2, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrne	r5, [r2, #204]	@ iftmp.622, <variable>.fs_image.image_id
	str	r5, [r4, r3]	@ iftmp.622, <variable>.CurrSlice.picid_refidx0
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	DumpList	@
	mov	r0, #0	@ D.41725,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1595:
	movw	ip, #20732	@ tmp165,
	mov	r1, #20736	@ tmp167,
	mov	r0, #0	@ tmp166,
	str	r0, [r4, ip]	@ tmp166, <variable>.CurrSlice.listXsize
	str	r0, [r4, r1]	@ tmp166, <variable>.CurrSlice.listXsize
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	DecList, .-DecList
	.align	2
	.global	H264_ArrangeVahbMem
	.type	H264_ArrangeVahbMem, %function
H264_ArrangeVahbMem:
	.fnstart
.LFB1580:
	@ args = 4, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #44
	sub	sp, sp, #44	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r6, fp, #76	@ tmp185,,
	mov	r5, r1	@ ImgWidth, ImgWidth
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r1, #36	@,
	mov	r0, r6	@, tmp185
	mov	r7, r2	@ ImgHeight, ImgHeight
	bl	__memzero	@
	ldr	r0, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r8, #0	@ tmp151,
	mov	r1, #0	@ tmp162,
	mov	r2, #5	@ tmp164,
	ldr	ip, [r0, #20]	@ <variable>.s32DnrDispOutEnable, <variable>.s32DnrDispOutEnable
	strb	r8, [fp, #-75]	@ tmp151, FspInstCfg.s32TfEnable
	strb	r8, [fp, #-74]	@ tmp151, FspInstCfg.s32RprEnable
	str	r7, [fp, #-44]	@ ImgHeight, FspInstCfg.s32DispFsHeight
	str	r7, [fp, #-60]	@ ImgHeight, FspInstCfg.s32DecFsHeight
	str	r7, [fp, #-52]	@ ImgHeight, FspInstCfg.s32TfFsHeight
	movw	r7, #59224	@ tmp173,
	str	r5, [fp, #-48]	@ ImgWidth, FspInstCfg.s32DispFsWidth
	strb	ip, [fp, #-76]	@ <variable>.s32DnrDispOutEnable, FspInstCfg.s32DispLoopEnable
	str	r5, [fp, #-64]	@ ImgWidth, FspInstCfg.s32DecFsWidth
	str	r5, [fp, #-56]	@ ImgWidth, FspInstCfg.s32TfFsWidth
	ldr	r5, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r5, #24	@ <variable>.eCapLevel,
	mov	r5, #1	@ tmp171,
	movwne	r8, #26632	@ tmp157,
	ldrne	r8, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	strb	r1, [fp, #-70]	@ tmp162, FspInstCfg.s32ExpectedTfFsNum
	mov	r1, r6	@, tmp185
	addne	r8, r8, #1	@ tmp160, <variable>.DPB.size,
	strb	r2, [fp, #-69]	@ tmp164, FspInstCfg.s32ExpectedDispFsNum
	uxtbne	r8, r8	@ iftmp.572, tmp160
	strb	r8, [fp, #-71]	@ iftmp.572, FspInstCfg.s32ExpectedDecFsNum
	ldr	r3, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	mov	r8, #0	@ tmp169,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	cmp	r3, #24	@ <variable>.eCapLevel,
	strb	r8, [fp, #-72]	@ tmp169, FspInstCfg.s32UserDec
	strb	r5, [fp, #-73]	@ tmp171, FspInstCfg.s8SubLevelEnable
	ldrneb	r3, [fp, #4]	@ zero_extendqisi2	@ iftmp.573, PmvBlkNum
	moveq	r3, #1	@ iftmp.573,
	strb	r3, [fp, #-68]	@ iftmp.573, FspInstCfg.s32ExpectedPmvNum
	bl	FSP_ConfigInstance	@
	subs	r6, r0, #0	@ D.40808,
	bne	.L1601	@,
	ldr	lr, [r4, #0]	@ temp.6159, <variable>.pstExtraData
	sub	r3, fp, #40	@,,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r2, [lr, #28]	@, <variable>.s32SyntaxMemSize
	ldr	r1, [lr, #24]	@, <variable>.s32SyntaxMemAddr
	bl	FSP_PartitionFsMemory	@
	cmp	r0, r8	@,
	moveq	r0, r5	@ D.40817, tmp171
	bne	.L1605	@,
.L1603:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L1601:
	mov	r0, r8	@, tmp169
	movw	r1, #:lower16:.LC76	@,
	movt	r1, #:upper16:.LC76	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.40817,
	b	.L1603	@
.L1605:
	mov	r0, r6	@, D.40808
	movw	r1, #:lower16:.LC75	@,
	movt	r1, #:upper16:.LC75	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.40817,
	b	.L1603	@
	.fnend
	.size	H264_ArrangeVahbMem, .-H264_ArrangeVahbMem
	.align	2
	.global	GetImagePara
	.type	GetImagePara, %function
GetImagePara:
	.fnstart
.LFB1560:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20700	@ tmp161,
	movw	r4, #13592	@ tmp163,
	ldr	r2, [r0, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	lr, [r0, r4]	@ <variable>.PPS, <variable>.PPS
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	ip, [r1, #168]	@ prephitmp.6200, <variable>.fs_image.format
	mov	r1, #2208	@ tmp165,
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #13588	@ tmp159,
	mla	r3, r1, r2, lr	@ tmp166, tmp165, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	bic	r1, ip, #768	@ prephitmp.6200, prephitmp.6200,
	movw	r2, #57728	@ tmp173,
	ldr	ip, [r5, r0]	@ <variable>.SPS, <variable>.SPS
	bic	r1, r1, #3	@ prephitmp.6200, prephitmp.6200,
	ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	mov	lr, #4000	@ tmp169,
	ldr	r3, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	str	r1, [r4, #168]	@ prephitmp.6200, <variable>.fs_image.format
	ldr	r2, [r5, r2]	@ <variable>.frame_rate, <variable>.frame_rate
	mla	r3, lr, r3, ip	@ sps, tmp169, <variable>.seq_parameter_set_id, <variable>.SPS
	mov	r2, r2, asl #10	@ tmp175, <variable>.frame_rate,
	str	r2, [r4, #196]	@ tmp175, <variable>.fs_image.frame_rate
	cmp	r0, #3	@ <variable>.is_used,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.is_used
	b	.L1607	@
.L1611:
	.word	.L1608
	.word	.L1609
	.word	.L1610
	.word	.L1608
.L1608:
	ldrb	r6, [r4, #536]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r6, #0	@ <variable>.frame.structure,
	bne	.L1612	@,
	ldr	r7, [r4, #688]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	mov	lr, #3072	@ prephitmp.6178,
	ldr	r2, [r4, #696]	@ <variable>.err_level, <variable>.err_level
	cmp	r7, #0	@ <variable>.MbaffFrameFlag,
	ldr	ip, [r4, #692]	@ pic_type, <variable>.pic_type
	moveq	r7, #512	@ prephitmp.6214,
	movne	r7, #768	@ prephitmp.6214,
	str	r2, [r4, #208]	@ <variable>.err_level, <variable>.fs_image.error_level
.L1614:
	ldr	r6, [r4, #592]	@ D.39531, <variable>.top_field.poc
	ldr	r2, [r4, #632]	@ D.39532, <variable>.bottom_field.poc
	cmp	r6, r2	@ D.39531, D.39532
	beq	.L1641	@,
	movgt	r6, #0	@, top_field_first
	movle	r6, #1	@, top_field_first
.L1625:
	movw	r2, #26428	@ tmp197,
	ldrb	r2, [r5, r2]	@ zero_extendqisi2	@ D.39546, <variable>.PicTimingSEI.pic_struct
	cmp	r2, #3	@ D.39546,
	moveq	r6, #4096	@ prephitmp.6182,
	beq	.L1627	@,
	cmp	r2, #4	@ D.39546,
	movne	r6, r6, asl #12	@ prephitmp.6182, top_field_first,
	moveq	r6, #0	@ prephitmp.6182,
.L1627:
	orr	r2, r7, lr	@ tmp198, prephitmp.6214, prephitmp.6178
	bic	lr, r1, #12288	@ tmp199, prephitmp.6200,
	orr	r1, r2, lr	@ tmp200, tmp198, tmp199
	and	r2, ip, #3	@ tmp201, pic_type,
	orr	lr, r1, r2	@ tmp202, tmp200, tmp201
	orr	ip, lr, r6	@ tmp203, tmp202, prephitmp.6182
	str	ip, [r4, #168]	@ tmp203, <variable>.fs_image.format
.L1607:
	ldrb	r2, [r3, #18]	@ zero_extendqisi2	@ D.39575, <variable>.frame_mbs_only_flag
	mov	ip, #1	@ tmp219,
	str	r2, [r4, #520]	@ D.39575, <variable>.fs_image.optm_inf.IsProgressiveFrm
	str	r2, [r4, #516]	@ D.39575, <variable>.fs_image.optm_inf.IsProgressiveSeq
	ldrb	lr, [r3, #22]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	lr, #0	@ <variable>.vui_parameters_present_flag,
	ldrne	lr, [r3, #68]	@ iftmp.487, <variable>.vui_seq_parameters.matrix_coefficients
	str	ip, [r4, #524]	@ tmp219, <variable>.fs_image.optm_inf.RealFrmRate
	str	lr, [r4, #528]	@ iftmp.487, <variable>.fs_image.optm_inf.MatrixCoef
	ldr	r1, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #0	@ <variable>.s32DecOrderOutput,
	ble	.L1631	@,
	ldrb	r3, [r4, #536]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r3, #0	@ <variable>.frame.structure,
	beq	.L1642	@,
.L1631:
	mov	r0, r5	@, pH264Ctx
	mov	r1, r4	@, pFrameStore
	bl	ExchangePts	@
	movw	r3, #26392	@ tmp226,
	ldrsb	r0, [r5, r3]	@ <variable>.FramePackSEI.frame_packing_dec_ok, <variable>.FramePackSEI.frame_packing_dec_ok
	cmp	r0, #0	@ <variable>.FramePackSEI.frame_packing_dec_ok,
	beq	.L1632	@,
	movw	r3, #26408	@ tmp228,
	ldr	r2, [r5, r3]	@ D.39594, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	r2, #3	@ D.39594,
	moveq	r3, #1	@ tmp229,
	streq	r3, [r4, #396]	@ tmp229, <variable>.fs_image.eFramePackingType
	beq	.L1632	@,
	cmp	r2, #4	@ D.39594,
	moveq	r3, #2	@ tmp230,
	streq	r3, [r4, #396]	@ tmp230, <variable>.fs_image.eFramePackingType
	beq	.L1632	@,
	cmp	r2, #5	@ D.39594,
	moveq	r3, #3	@ tmp231,
	streq	r3, [r4, #396]	@ tmp231, <variable>.fs_image.eFramePackingType
	beq	.L1632	@,
	mov	r0, #0	@ tmp232,
	movw	r1, #:lower16:.LC77	@,
	str	r0, [r4, #396]	@ tmp232, <variable>.fs_image.eFramePackingType
	movt	r1, #:upper16:.LC77	@,
	ldr	r2, [r5, r3]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	bl	dprint_vfmw	@
.L1632:
	movw	ip, #59224	@ tmp236,
	ldr	r1, [r4, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r5, ip]	@, <variable>.ChanID
	bl	FSP_GetFsImagePtr	@
	subs	r5, r0, #0	@ pstLogicFsImage,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	add	r1, r4, #8	@, pFrameStore,
	mov	r2, #528	@,
	bl	memcpy	@
	mov	ip, #0	@ tmp244,
	str	ip, [r5, #408]	@ tmp244, <variable>.ImageDnr.video_standard
	mov	r2, #1	@ tmp247,
	ldrb	r3, [r4, #536]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r2, [r5, #403]	@ tmp247, <variable>.ImageDnr.use_pic_qp_en
	cmp	r3, #0	@ <variable>.frame.structure,
	movne	r3, #4	@, iftmp.489,
	strb	r3, [r5, #396]	@ iftmp.489, <variable>.ImageDnr.pic_structure
	ldr	r0, [r4, #564]	@ D.39615, <variable>.frame.MaxQp
	str	r0, [r5, #412]	@ D.39615, <variable>.ImageDnr.QP_Y
	ldr	r1, [r4, #572]	@ <variable>.frame.AvgQp, <variable>.frame.AvgQp
	strb	r2, [r5, #401]	@ tmp247, <variable>.ImageDnr.chroma_format_idc
	str	r0, [r5, #416]	@ D.39615, <variable>.ImageDnr.QP_U
	str	r1, [r5, #228]	@ <variable>.frame.AvgQp, <variable>.AvgQp
	str	r0, [r5, #420]	@ D.39615, <variable>.ImageDnr.QP_V
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1642:
	cmp	r0, #3	@ <variable>.is_used,
	ldreq	r3, [r4, #168]	@ <variable>.fs_image.format, <variable>.fs_image.format
	biceq	r3, r3, #768	@ tmp225, <variable>.fs_image.format,
	streq	r3, [r4, #168]	@ tmp225, <variable>.fs_image.format
	b	.L1631	@
.L1610:
	ldr	r2, [r4, #620]	@ <variable>.bottom_field.frame_store, <variable>.bottom_field.frame_store
	ldr	lr, [r4, #692]	@ <variable>.pic_type, <variable>.pic_type
	ldr	ip, [r4, #696]	@ <variable>.err_level, <variable>.err_level
	ldr	r2, [r2, #680]	@ <variable>.AvgQp, <variable>.AvgQp
	and	lr, lr, #3	@ tmp204, <variable>.pic_type,
	orr	r1, r1, lr	@ tmp206, prephitmp.6200, tmp204
	str	ip, [r4, #208]	@ <variable>.err_level, <variable>.fs_image.error_level
	orr	ip, r1, #2816	@ tmp207, tmp206,
	str	r2, [r4, #572]	@ <variable>.AvgQp, <variable>.frame.AvgQp
	str	ip, [r4, #168]	@ tmp207, <variable>.fs_image.format
	b	.L1607	@
.L1609:
	ldr	r2, [r4, #580]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	ldr	lr, [r4, #692]	@ <variable>.pic_type, <variable>.pic_type
	ldr	ip, [r4, #696]	@ <variable>.err_level, <variable>.err_level
	ldr	r2, [r2, #680]	@ <variable>.AvgQp, <variable>.AvgQp
	and	lr, lr, #3	@ tmp211, <variable>.pic_type,
	orr	r1, r1, lr	@ tmp213, prephitmp.6200, tmp211
	orr	r1, r1, #1792	@ tmp214, tmp213,
	str	ip, [r4, #208]	@ <variable>.err_level, <variable>.fs_image.error_level
	str	r2, [r4, #572]	@ <variable>.AvgQp, <variable>.frame.AvgQp
	str	r1, [r4, #168]	@ tmp214, <variable>.fs_image.format
	b	.L1607	@
.L1612:
	movw	r7, #59220	@ tmp180,
	ldr	sl, [r4, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldr	r2, [r5, r7]	@ D.39511, <variable>.out_error_thr
	cmp	sl, r2	@ <variable>.top_field.err_level, D.39511
	bhi	.L1643	@,
	ldr	r9, [r4, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r2, r9	@ D.39511, <variable>.bottom_field.err_level
	bcc	.L1618	@,
.L1616:
	ldr	r6, [r4, #696]	@ <variable>.err_level, <variable>.err_level
	mov	lr, #3	@ valid_field,
	ldr	ip, [r4, #692]	@ pic_type, <variable>.pic_type
	ldr	r8, [r4, #640]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	str	r6, [r4, #208]	@ <variable>.err_level, <variable>.fs_image.error_level
	ldr	r6, [r4, #600]	@ pic_type, <variable>.top_field.pic_type
.L1619:
	ldrb	r7, [r4, #3]	@ zero_extendqisi2	@ D.39519, <variable>.mode_skip_flag
	cmp	r7, #1	@ D.39519,
	streq	r9, [r4, #208]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	moveq	ip, r8	@ pic_type, <variable>.bottom_field.pic_type
	moveq	lr, #2	@ valid_field,
	beq	.L1621	@,
	cmp	r7, #2	@ D.39519,
	streq	sl, [r4, #208]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	moveq	ip, r6	@ pic_type, pic_type
	moveq	lr, #1	@ valid_field,
.L1621:
	ldr	sl, [r4, #652]	@ <variable>.bottom_field.AvgQp, <variable>.bottom_field.AvgQp
	mov	lr, lr, asl #10	@ prephitmp.6178, valid_field,
	ldr	r2, [r4, #612]	@ <variable>.top_field.AvgQp, <variable>.top_field.AvgQp
	mov	r7, #768	@ prephitmp.6214,
	str	r6, [r4, #160]	@ pic_type, <variable>.fs_image.top_fld_type
	add	r2, sl, r2	@ tmp186, <variable>.bottom_field.AvgQp, <variable>.top_field.AvgQp
	str	r8, [r4, #164]	@ <variable>.bottom_field.pic_type, <variable>.fs_image.bottom_fld_type
	add	r6, r2, r2, lsr #31	@, tmp190, tmp186, tmp186,
	mov	r2, r6, asr #1	@ tmp191, tmp190,
	str	r2, [r4, #572]	@ tmp191, <variable>.frame.AvgQp
	b	.L1614	@
.L1618:
	ldr	r6, [r4, #600]	@ pic_type, <variable>.top_field.pic_type
	mov	lr, #1	@ valid_field,
	ldr	r8, [r4, #640]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	str	sl, [r4, #208]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	mov	ip, r6	@ pic_type, pic_type
	b	.L1619	@
.L1641:
	ldr	r2, [r4, #172]	@ <variable>.fs_image.image_width, <variable>.fs_image.image_width
	cmp	r2, #720	@ <variable>.fs_image.image_width,
	movne	r6, #1	@ top_field_first,
	bne	.L1625	@,
	ldr	r6, [r4, #176]	@ <variable>.fs_image.image_height, <variable>.fs_image.image_height
	subs	r6, r6, #480	@ top_field_first, <variable>.fs_image.image_height,
	movne	r6, #1	@ top_field_first
	b	.L1625	@
.L1643:
	ldr	r9, [r4, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r2, r9	@ D.39511, <variable>.bottom_field.err_level
	bcc	.L1616	@,
	ldr	r8, [r4, #640]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	mov	lr, #2	@ valid_field,
	str	r9, [r4, #208]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	ldr	r6, [r4, #600]	@ pic_type, <variable>.top_field.pic_type
	mov	ip, r8	@ pic_type, <variable>.bottom_field.pic_type
	b	.L1619	@
	.fnend
	.size	GetImagePara, .-GetImagePara
	.align	2
	.global	RemoveFrameStoreOutDPB
	.type	RemoveFrameStoreOutDPB, %function
RemoveFrameStoreOutDPB:
	.fnstart
.LFB1556:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r7, r1, #6592	@ tmp202, pos,
	add	r5, r7, #18	@ tmp201, tmp202,
	mov	r6, r1	@ pos, pos
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r3, [r0, r5, asl #2]	@ D.39287, <variable>.DPB.fs
	cmp	r3, #0	@ D.39287,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	ldr	r3, [r3, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	movw	r1, #26912	@ tmp152,
	ldr	r2, [r0, r1]	@ D.39292, <variable>.APC.used_size
	movw	r1, #26912	@ tmp153,
	add	lr, r3, #6656	@ tmp144, <variable>.apc_idc,
	ldr	r3, [r4, r5, asl #2]	@ tmp158, <variable>.DPB.fs
	add	ip, lr, #6	@ tmp144, tmp144,
	cmp	r2, #0	@ D.39292,
	subne	r2, r2, #1	@ iftmp.476, D.39292,
	str	r2, [r4, r1]	@ iftmp.476, <variable>.APC.used_size
	add	r8, r0, ip, asl #2	@, tmp149, pH264Ctx, tmp144,
	mov	r0, #0	@ tmp151,
	str	r0, [r8, #4]	@ tmp151, <variable>.APC.is_used
	movw	r8, #59224	@ tmp154,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogic
	beq	.L1648	@,
	ldrsb	r2, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r2, #3	@ <variable>.s32DispState,
	beq	.L1649	@,
	ldr	ip, [r4, r5, asl #2]	@ tmp165, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L1649:
	ldr	lr, [r4, r5, asl #2]	@ tmp171, <variable>.DPB.fs
	movw	r3, #59224	@ tmp167,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
.L1648:
	ldr	r3, [r4, r5, asl #2]	@ tmp175, <variable>.DPB.fs
	mov	ip, #0	@ tmp176,
	movw	r1, #26636	@ tmp188,
	strb	ip, [r3, #1]	@ tmp176, <variable>.is_used
	ldr	lr, [r4, r5, asl #2]	@ tmp180, <variable>.DPB.fs
	strb	ip, [lr, #4]	@ tmp176, <variable>.is_in_dpb
	ldr	r2, [r4, r5, asl #2]	@ tmp185, <variable>.DPB.fs
	strb	ip, [r2, #2]	@ tmp176, <variable>.is_reference
	ldr	r0, [r4, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	sub	ip, r0, #1	@ D.39308, <variable>.DPB.used_size,
	cmp	r6, ip	@ pos, D.39308
	bcs	.L1650	@,
	add	r7, r7, #19	@ tmp190, tmp202,
	add	r1, r6, #1	@ i, pos,
	cmp	r1, ip	@ i, D.39308
	mvn	r2, r6	@ tmp204, pos
	add	r7, r4, r7, asl #2	@, ivtmp.6249, pH264Ctx, tmp190,
	add	r6, r2, ip	@ tmp203, tmp204, D.39308
	and	r6, r6, #1	@ tmp205, tmp203,
	add	r2, r7, #4	@ ivtmp.6249, ivtmp.6249,
	ldr	r0, [r7, #0]	@ tmp193, <variable>.DPB.fs
	str	r0, [r7, #-4]	@ tmp193, <variable>.DPB.fs
	bcs	.L1650	@,
	cmp	r6, #0	@ tmp205,
	beq	.L1651	@,
	ldr	lr, [r2, #0]	@ tmp214, <variable>.DPB.fs
	add	r1, r1, #1	@ i, i,
	cmp	r1, ip	@ i, D.39308
	str	lr, [r2, #-4]	@ tmp214, <variable>.DPB.fs
	add	r2, r2, #4	@ ivtmp.6249, ivtmp.6249,
	bcs	.L1650	@,
.L1651:
	ldr	r0, [r2, #0]	@ tmp211, <variable>.DPB.fs
	add	r1, r1, #2	@ i, i,
	ldr	r3, [r2, #4]	@ tmp213, <variable>.DPB.fs
	cmp	r1, ip	@ i, D.39308
	mov	lr, r2	@ tmp207, ivtmp.6249
	str	r0, [r2, #-4]	@ tmp211, <variable>.DPB.fs
	str	r3, [lr], #4	@ tmp213, <variable>.DPB.fs
	add	r2, lr, #4	@ ivtmp.6249, tmp207,
	bcc	.L1651	@,
.L1650:
	movw	lr, #26636	@ tmp197,
	add	r0, ip, #6592	@ tmp194, D.39308,
	ldr	r2, [r4, lr]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	ip, r0, #18	@ tmp194, tmp194,
	mov	r3, #0	@ tmp196,
	sub	r1, r2, #1	@ tmp200, <variable>.DPB.used_size,
	str	r3, [r4, ip, asl #2]	@ tmp196, <variable>.DPB.fs
	str	r1, [r4, lr]	@ tmp200, <variable>.DPB.used_size
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	RemoveFrameStoreOutDPB, .-RemoveFrameStoreOutDPB
	.align	2
	.global	RemoveUnUsedFrameStore
	.type	RemoveUnUsedFrameStore, %function
RemoveUnUsedFrameStore:
	.fnstart
.LFB1557:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pH264Ctx, pH264Ctx
	mvneq	r0, #0	@ D.39322,
	beq	.L1661	@,
	movw	r3, #26636	@ tmp144,
	ldr	sl, [r4, r3]	@ k, <variable>.DPB.used_size
	cmp	sl, #0	@ k,
	beq	.L1662	@,
	movw	r6, #6610	@ tmp185,
	sub	r1, sl, #1	@ tmp190, k,
	ldr	r7, [r4, r6, asl #2]	@ tmp149, <variable>.DPB.fs
	movw	r8, #59224	@ tmp187,
	and	r2, r1, #1	@, tmp190,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	str	r2, [fp, #-48]	@, %sfp
	mov	r5, #0	@ j,
	ldr	r1, [r7, #656]	@, <variable>.logic_fs_id
	mov	r9, r5	@ tmp189, j
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1700	@,
	ldrsh	r7, [r0, #0]	@ tmp213,* pstLogicFs
	cmp	r7, #0	@ tmp213,
	bne	.L1672	@,
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L1673	@,
	ldrsb	r7, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	r7, #0	@ <variable>.s32IsRef,
	beq	.L1673	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	mov	r2, r5	@, tmp189
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
.L1673:
	mvn	ip, #0	@,
	str	ip, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6, asl #2]	@ tmp217, <variable>.DPB.fs
	strb	r9, [r0, #2]	@ tmp189, <variable>.is_reference
.L1700:
	ldr	r3, [r4, r6, asl #2]	@ temp.6295, <variable>.DPB.fs
	ldr	lr, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	lr, #1	@ <variable>.eFoState,
	movne	r2, #0	@, tmp221
	moveq	r2, #1	@, tmp221
	strb	r2, [r3, #4]	@ tmp221, <variable>.is_in_dpb
.L1672:
	ldr	r3, [r4, r6, asl #2]	@ temp.6299, <variable>.DPB.fs
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L1691	@,
.L1674:
	mov	r5, #1	@ j,
.L1692:
	mov	r7, #1	@ i,
	cmp	sl, r7	@ k, i
	bls	.L1662	@,
	ldr	r6, [fp, #-48]	@, %sfp
	cmp	r6, #0	@,
	beq	.L1668	@,
	add	r2, r5, #6592	@ tmp232, j,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	add	r6, r2, #18	@ tmp232, tmp232,
	ldr	ip, [r4, r6, asl #2]	@ tmp233, <variable>.DPB.fs
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1707	@,
	ldrsh	ip, [r0, #0]	@ tmp239,* pstLogicFs
	cmp	ip, #0	@ tmp239,
	beq	.L1708	@,
.L1683:
	ldr	r3, [r4, r6, asl #2]	@ temp.6299, <variable>.DPB.fs
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L1685	@,
.L1698:
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1685	@,
	ldr	r1, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r1, #1	@ <variable>.eFoState,
	beq	.L1685	@,
	strb	r2, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, j
	add	r7, r7, #1	@ i, tmp193,
	bl	RemoveFrameStoreOutDPB	@
	cmp	sl, r7	@ k, i
	bls	.L1662	@,
.L1668:
	add	r6, r5, #6592	@ tmp197, j,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	add	r6, r6, #18	@ tmp197, tmp197,
	ldr	ip, [r4, r6, asl #2]	@ tmp198, <variable>.DPB.fs
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1663	@,
	ldrsh	lr, [r0, #0]	@ tmp151,* pstLogicFs
	cmp	lr, #0	@ tmp151,
	bne	.L1664	@,
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1665	@,
	ldrsb	r1, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	r1, #0	@ <variable>.s32IsRef,
	bne	.L1709	@,
.L1665:
	mvn	lr, #0	@,
	str	lr, [r3, #656]	@, <variable>.logic_fs_id
	ldr	ip, [r4, r6, asl #2]	@ tmp164, <variable>.DPB.fs
	strb	r9, [ip, #2]	@ tmp189, <variable>.is_reference
	ldr	r3, [r4, r6, asl #2]	@ temp.6295, <variable>.DPB.fs
	ldr	r2, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r2, #1	@ <variable>.eFoState,
	movne	r0, #0	@, tmp170
	moveq	r0, #1	@, tmp170
	strb	r0, [r3, #4]	@ tmp170, <variable>.is_in_dpb
.L1664:
	ldr	r3, [r4, r6, asl #2]	@ temp.6299, <variable>.DPB.fs
	ldrb	r6, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #0	@ <variable>.is_reference,
	bne	.L1666	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1666	@,
	ldr	ip, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	ip, #1	@ <variable>.eFoState,
	beq	.L1666	@,
	strb	r2, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, j
	bl	RemoveFrameStoreOutDPB	@
	b	.L1667	@
.L1666:
	add	r5, r5, #1	@ j, j,
.L1667:
	add	lr, r5, #6592	@ tmp206, j,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	add	r6, lr, #18	@ tmp206, tmp206,
	add	r7, r7, #1	@ tmp193, i,
	ldr	r2, [r4, r6, asl #2]	@ tmp207, <variable>.DPB.fs
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1701	@,
	ldrsh	lr, [r0, #0]	@ tmp258,* pstLogicFs
	cmp	lr, #0	@ tmp258,
	bne	.L1683	@,
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1684	@,
	ldrsb	lr, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	lr, #0	@ <variable>.s32IsRef,
	bne	.L1710	@,
.L1684:
	mvn	r2, #0	@,
	str	r2, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6, asl #2]	@ tmp262, <variable>.DPB.fs
	strb	r9, [r0, #2]	@ tmp189, <variable>.is_reference
.L1701:
	ldr	r3, [r4, r6, asl #2]	@ temp.6295, <variable>.DPB.fs
	ldr	ip, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	ip, #1	@ <variable>.eFoState,
	movne	r1, #0	@, tmp266
	moveq	r1, #1	@, tmp266
	strb	r1, [r3, #4]	@ tmp266, <variable>.is_in_dpb
	ldr	r3, [r4, r6, asl #2]	@ temp.6299, <variable>.DPB.fs
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L1698	@,
.L1685:
	add	r7, r7, #1	@ i, tmp193,
	add	r5, r5, #1	@ j, j,
	cmp	sl, r7	@ k, i
	bhi	.L1668	@,
.L1662:
	mov	r0, #0	@ D.39322,
.L1661:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1663:
	ldr	r0, [r4, r6, asl #2]	@ temp.6296, <variable>.DPB.fs
	ldr	r3, [r0, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r3, #1	@ <variable>.eFoState,
	movne	r1, #0	@, tmp175
	moveq	r1, #1	@, tmp175
	strb	r1, [r0, #4]	@ tmp175, <variable>.is_in_dpb
	b	.L1664	@
.L1691:
	ldrb	r1, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #0	@ <variable>.is_in_dpb,
	bne	.L1674	@,
	ldr	r0, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L1674	@,
	strb	r1, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r4	@, pH264Ctx
	bl	RemoveFrameStoreOutDPB	@
	b	.L1692	@
.L1708:
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1678	@,
	ldrsb	ip, [r0, #0]	@ <variable>.s32IsRef, <variable>.s32IsRef
	cmp	ip, #0	@ <variable>.s32IsRef,
	bne	.L1711	@,
.L1678:
	mvn	r1, #0	@,
	str	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r3, [r4, r6, asl #2]	@ tmp243, <variable>.DPB.fs
	strb	r9, [r3, #2]	@ tmp189, <variable>.is_reference
	ldr	lr, [r4, r6, asl #2]	@ temp.6295, <variable>.DPB.fs
	ldr	r2, [lr, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r2, #1	@ <variable>.eFoState,
	movne	r0, #0	@, tmp247
	moveq	r0, #1	@, tmp247
	strb	r0, [lr, #4]	@ tmp247, <variable>.is_in_dpb
	b	.L1683	@
.L1709:
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	b	.L1665	@
.L1710:
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	b	.L1684	@
.L1707:
	ldr	r3, [r4, r6, asl #2]	@ temp.6296, <variable>.DPB.fs
	ldr	r1, [r3, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r1, r7	@ <variable>.eFoState,
	movne	lr, #0	@, tmp238
	moveq	lr, #1	@, tmp238
	strb	lr, [r3, #4]	@ tmp238, <variable>.is_in_dpb
	b	.L1683	@
.L1711:
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldr	r3, [r4, r6, asl #2]	@ prephitmp.6279, <variable>.DPB.fs
	b	.L1678	@
	.fnend
	.size	RemoveUnUsedFrameStore, .-RemoveUnUsedFrameStore
	.align	2
	.global	UnMarkFrameStoreRef
	.type	UnMarkFrameStoreRef, %function
UnMarkFrameStoreRef:
	.fnstart
.LFB1546:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ prephitmp.6317, <variable>.is_used
	tst	r3, #1	@ prephitmp.6317,
	beq	.L1713	@,
	ldrb	lr, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r2, #0	@ tmp142,
	strb	r2, [r1, #578]	@ tmp142, <variable>.top_field.is_short_term
	and	ip, lr, #2	@ tmp140, <variable>.is_reference,
	strb	r2, [r1, #577]	@ tmp142, <variable>.top_field.is_long_term
	strb	ip, [r1, #2]	@ tmp140, <variable>.is_reference
.L1713:
	tst	r3, #2	@ prephitmp.6317,
	beq	.L1714	@,
	ldrb	lr, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r2, #0	@ tmp151,
	strb	r2, [r1, #618]	@ tmp151, <variable>.bottom_field.is_short_term
	and	ip, lr, #1	@ tmp149, <variable>.is_reference,
	strb	r2, [r1, #617]	@ tmp151, <variable>.bottom_field.is_long_term
	strb	ip, [r1, #2]	@ tmp149, <variable>.is_reference
.L1714:
	cmp	r3, #3	@ prephitmp.6317,
	mov	r2, #0	@ tmp161,
	moveq	r3, #0	@ tmp155,
	streqb	r3, [r1, #2]	@ tmp155, <variable>.is_reference
	streqb	r3, [r1, #538]	@ tmp155, <variable>.frame.is_short_term
	streqb	r3, [r1, #537]	@ tmp155, <variable>.frame.is_long_term
	movw	r3, #59224	@ tmp163,
	strb	r2, [r1, #2]	@ tmp161, <variable>.is_reference
	ldr	r1, [r1, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	UnMarkFrameStoreRef, .-UnMarkFrameStoreRef
	.align	2
	.global	SimpleSlideDPB
	.type	SimpleSlideDPB, %function
SimpleSlideDPB:
	.fnstart
.LFB1577:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #26636	@ tmp134,
	movw	r1, #26632	@ tmp135,
	ldr	r2, [r0, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	ldr	r3, [r0, r1]	@ <variable>.DPB.size, <variable>.DPB.size
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r2, r3	@ <variable>.DPB.used_size, <variable>.DPB.size
	bcs	.L1721	@,
.L1718:
	movw	r3, #56352	@ tmp143,
	mov	r1, #0	@ tmp141,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movw	r0, #55796	@ tmp140,
	strb	r1, [r4, r0]	@ tmp141, <variable>.CurrPic.is_long_term
	cmp	r2, r1	@ <variable>.CurrPic.nal_ref_idc,
	movwne	r2, #55797	@ tmp145,
	movne	r0, #1	@ tmp146,
	strneb	r0, [r4, r2]	@ tmp146, <variable>.CurrPic.is_short_term
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1721:
	movw	lr, #26440	@ tmp138,
	ldr	r1, [r0, lr]	@, <variable>.DPB.fs
	bl	UnMarkFrameStoreRef	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #0	@,
	bl	RemoveFrameStoreOutDPB	@
	b	.L1718	@
	.fnend
	.size	SimpleSlideDPB, .-SimpleSlideDPB
	.align	2
	.global	SlidingWinMark
	.type	SlidingWinMark, %function
SlidingWinMark:
	.fnstart
.LFB1571:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #17548	@ tmp140,
	movw	r2, #26644	@ tmp141,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r1, [r0, r3]	@ <variable>.CurrSPS.num_ref_frames, <variable>.CurrSPS.num_ref_frames
	movw	ip, #26640	@ tmp139,
	ldr	r0, [r0, r2]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	ldr	r2, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	rsb	r3, r0, r1	@ tmp142, <variable>.DPB.ltref_frames_in_buffer, <variable>.CurrSPS.num_ref_frames
	cmp	r2, r3	@ <variable>.DPB.ref_frames_in_buffer, tmp142
	ldmnefd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r0, #26636	@ tmp146,
	ldr	sl, [r4, r0]	@ D.40222, <variable>.DPB.used_size
	cmp	sl, #0	@ D.40222,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r6, r4, #26368	@ ivtmp.6382, pH264Ctx,
	sub	r8, sl, #1	@ tmp149, D.40222,
	and	r8, r8, #1	@ tmp151, tmp149,
	ldr	r5, [r6, #72]!	@ D.40215, <variable>.DPB.fs
	ldrb	r1, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L1739	@,
	mov	r7, #1	@ i,
	cmp	sl, r7	@ D.40222, i
	add	r6, r6, #4	@ ivtmp.6382, ivtmp.6382,
	ldmlsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1743:
	cmp	r8, #0	@ tmp151,
	beq	.L1725	@,
	ldr	r5, [r6, #0]	@ D.40215, <variable>.DPB.fs
	ldrb	r3, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L1740	@,
.L1730:
	add	r7, r7, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.6382, ivtmp.6382,
	cmp	sl, r7	@ D.40222, i
	bhi	.L1725	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1724:
	ldr	r5, [r6, #4]	@ D.40215, <variable>.DPB.fs
	ldrb	r2, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1741	@,
	add	r7, r7, #1	@ i, tmp152,
	add	r6, r8, #4	@ ivtmp.6382, tmp153,
	cmp	sl, r7	@ D.40222, i
	bls	.L1742	@,
.L1725:
	ldr	r5, [r6, #0]	@ D.40215, <variable>.DPB.fs
	add	r7, r7, #1	@ tmp152, i,
	add	r8, r6, #4	@ tmp153, ivtmp.6382,
	ldrb	ip, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	beq	.L1724	@,
	mov	r0, r5	@, D.40215
	bl	ShortTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L1724	@,
.L1738:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, D.40215
	bl	UnMarkFrameStoreRef	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateReflist	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1741:
	mov	r0, r5	@, D.40215
	bl	ShortTermRefFlg	@
	cmp	r0, #0	@,
	bne	.L1738	@,
	add	r7, r7, #1	@ i, tmp152,
	add	r6, r8, #4	@ ivtmp.6382, tmp153,
	cmp	sl, r7	@ D.40222, i
	bhi	.L1725	@,
.L1742:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1739:
	mov	r0, r5	@, D.40215
	bl	ShortTermRefFlg	@
	cmp	r0, #0	@,
	bne	.L1738	@,
	mov	r7, #1	@ i,
	cmp	sl, r7	@ D.40222, i
	add	r6, r6, #4	@ ivtmp.6382, ivtmp.6382,
	bhi	.L1743	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1740:
	mov	r0, r5	@, D.40215
	bl	ShortTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L1730	@,
	b	.L1738	@
	.fnend
	.size	SlidingWinMark, .-SlidingWinMark
	.align	2
	.global	UnMarkAllSTRef
	.type	UnMarkAllSTRef, %function
UnMarkAllSTRef:
	.fnstart
.LFB1554:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #26640	@ tmp136,
	ldr	r3, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	add	r6, r0, #26368	@ ivtmp.6411, pH264Ctx,
	mov	r4, #0	@ i,
	add	r6, r6, #136	@ ivtmp.6411, ivtmp.6411,
.L1746:
	mov	r0, r5	@, pH264Ctx
	ldr	r1, [r6], #4	@, <variable>.DPB.fs_ref
	bl	UnMarkFrameStoreRef	@
	ldr	r0, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r4, r4, #1	@ i, i,
	cmp	r0, r4	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L1746	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	UnMarkAllSTRef, .-UnMarkAllSTRef
	.align	2
	.global	UpdateMaxLTFrmIdx
	.type	UpdateMaxLTFrmIdx, %function
UpdateMaxLTFrmIdx:
	.fnstart
.LFB1553:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #26644	@ tmp139,
	ldr	r3, [r0, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	movw	r8, #26648	@ tmp138,
	mov	r2, r1	@ max_long_term_frame_idx_plus1, max_long_term_frame_idx_plus1
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	str	r1, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r4, r0, #26368	@ ivtmp.6445, pH264Ctx,
	mov	r5, #0	@ i,
	add	r4, r4, #200	@ ivtmp.6445, ivtmp.6445,
	b	.L1752	@
.L1751:
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1754:
	ldr	r2, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
.L1752:
	ldr	r1, [r4, #0]	@ D.39250, <variable>.DPB.fs_ltref
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.6445, ivtmp.6445,
	ldr	r0, [r1, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r0, r2	@ <variable>.long_term_frame_idx, max_long_term_frame_idx_plus1
	bcc	.L1751	@,
	mov	r0, r6	@, pH264Ctx
	bl	UnMarkFrameStoreRef	@
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	bhi	.L1754	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	UpdateMaxLTFrmIdx, .-UpdateMaxLTFrmIdx
	.align	2
	.global	UnMarkLTRef
	.type	UnMarkLTRef, %function
UnMarkLTRef:
	.fnstart
.LFB1550:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r3, #0	@ <variable>.structure,
	beq	.L1756	@,
	movw	r1, #26644	@ tmp153,
	ldr	r7, [r0, r1]	@ D.39066, <variable>.DPB.ltref_frames_in_buffer
	cmp	r7, #0	@ D.39066,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r4, r0, #26368	@ ivtmp.6490, pH264Ctx,
	sub	r5, r7, #1	@ tmp246, D.39066,
	and	r6, r5, #1	@ tmp248, tmp246,
	mov	ip, #0	@ i,
	ldr	r1, [r4, #200]!	@ temp.6494, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6495, <variable>.is_reference
	ands	r5, r3, #1	@ tmp240, temp.6495,
	beq	.L1776	@,
	ldr	r8, [r1, #576]	@ tmp269,
	bic	r8, r8, #-16777216	@ tmp270, tmp269,
	bic	r8, r8, #255	@ tmp270, tmp270,
	cmp	r8, #256	@ tmp270,
	beq	.L1799	@,
.L1776:
	tst	r3, #2	@ temp.6495,
	beq	.L1777	@,
	ldr	r3, [r1, #616]	@ tmp273,
	bic	r3, r3, #-16777216	@ tmp274, tmp273,
	bic	r3, r3, #255	@ tmp274, tmp274,
	cmp	r3, #256	@ tmp274,
	beq	.L1800	@,
.L1777:
	mov	ip, #1	@ i,
	cmp	r7, ip	@ D.39066, i
	add	r4, r4, #4	@ ivtmp.6490, ivtmp.6490,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r6, #0	@ tmp248,
	beq	.L1765	@,
	ldr	r1, [r4, #0]	@ temp.6494, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6495, <variable>.is_reference
	ands	r5, r3, ip	@ tmp240, temp.6495,
	beq	.L1779	@,
	ldr	r6, [r1, #576]	@ tmp276,
	bic	r6, r6, #-16777216	@ tmp277, tmp276,
	bic	r6, r6, #255	@ tmp277, tmp277,
	cmp	r6, #256	@ tmp277,
	beq	.L1801	@,
.L1779:
	tst	r3, #2	@ temp.6495,
	beq	.L1780	@,
	ldr	r3, [r1, #616]	@ tmp280,
	bic	r3, r3, #-16777216	@ tmp281, tmp280,
	bic	r3, r3, #255	@ tmp281, tmp281,
	cmp	r3, #256	@ tmp281,
	beq	.L1802	@,
.L1780:
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.6490, ivtmp.6490,
	cmp	r7, ip	@ D.39066, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	ldr	r1, [r4, #0]	@ temp.6494, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6495, <variable>.is_reference
	ands	r5, r3, #1	@ tmp240, temp.6495,
	bne	.L1803	@,
.L1761:
	tst	r3, #2	@ temp.6495,
	beq	.L1763	@,
	ldr	r3, [r1, #616]	@ tmp204,
	bic	r3, r3, #-16777216	@ tmp202, tmp204,
	bic	r3, r3, #255	@ tmp202, tmp202,
	cmp	r3, #256	@ tmp202,
	beq	.L1804	@,
.L1763:
	ldr	r1, [r4, #4]	@ temp.6494, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ tmp250, ivtmp.6490,
	mov	r8, ip	@ tmp249, i
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6495, <variable>.is_reference
	ands	r5, r3, #1	@ tmp240, temp.6495,
	beq	.L1783	@,
	ldr	r6, [r1, #576]	@ tmp283,
	bic	r6, r6, #-16777216	@ tmp284, tmp283,
	bic	r6, r6, #255	@ tmp284, tmp284,
	cmp	r6, #256	@ tmp284,
	beq	.L1805	@,
.L1783:
	tst	r3, #2	@ temp.6495,
	beq	.L1784	@,
	ldr	r3, [r1, #616]	@ tmp287,
	bic	r3, r3, #-16777216	@ tmp288, tmp287,
	bic	r3, r3, #255	@ tmp288, tmp288,
	cmp	r3, #256	@ tmp288,
	beq	.L1806	@,
.L1784:
	add	ip, r8, #1	@ i, tmp249,
	add	r4, r4, #4	@ ivtmp.6490, tmp250,
	cmp	r7, ip	@ D.39066, i
	bls	.L1807	@,
.L1765:
	ldr	r1, [r4, #0]	@ temp.6494, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6495, <variable>.is_reference
	ands	r5, r3, #1	@ tmp240, temp.6495,
	beq	.L1761	@,
.L1803:
	ldr	r6, [r1, #576]	@ tmp165,
	bic	r6, r6, #-16777216	@ tmp163, tmp165,
	bic	r6, r6, #255	@ tmp163, tmp163,
	cmp	r6, #256	@ tmp163,
	bne	.L1761	@,
	ldr	r6, [r1, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L1761	@,
.L1793:
	add	ip, ip, #6592	@ tmp169, i,
	and	r2, r3, #2	@ tmp167, temp.6495,
	add	ip, ip, #50	@ tmp169, tmp169,
	strb	r2, [r1, #2]	@ tmp167, <variable>.is_reference
	mov	r2, #0	@ tmp172,
	ldr	r3, [r0, ip, asl #2]	@ tmp171, <variable>.DPB.fs_ltref
	strb	r2, [r3, #577]	@ tmp172, <variable>.top_field.is_long_term
	ldr	r3, [r0, ip, asl #2]	@ prephitmp.6497, <variable>.DPB.fs_ltref
	ldrb	r1, [r3, #536]	@ zero_extendqisi2	@ D.39081, <variable>.frame.structure
	cmp	r1, #3	@ D.39081,
	cmpne	r1, r2	@, D.39081,
	bne	.L1764	@,
.L1797:
	strb	r2, [r3, #538]	@ tmp211, <variable>.frame.is_short_term
	ldr	r1, [r0, ip, asl #2]	@ tmp226, <variable>.DPB.fs_ltref
	strb	r2, [r1, #537]	@ tmp211, <variable>.frame.is_long_term
	ldr	r3, [r0, ip, asl #2]	@ prephitmp.6472, <variable>.DPB.fs_ltref
.L1764:
	ldrb	ip, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	ldreq	r3, [r3, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	addeq	r3, r3, #14400	@ tmp232, <variable>.pmv_address_idc,
	addeq	r3, r3, #8	@ tmp232, tmp232,
	addeq	r3, r0, r3, asl #2	@, tmp237, pH264Ctx, tmp232,
	streq	ip, [r3, #4]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1756:
	movw	ip, #26644	@ tmp154,
	ldr	r6, [r0, ip]	@ temp.6496, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ temp.6496,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r3, r0, #26368	@ ivtmp.6485, pH264Ctx,
	sub	r1, r6, #1	@ tmp241, temp.6496,
	and	r4, r1, #1	@ tmp243, tmp241,
	ldr	r1, [r3, #200]!	@ D.39055, <variable>.DPB.fs_ltref
	ldr	ip, [r1, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	ip, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L1808	@,
.L1769:
	mov	ip, #1	@ i.6493,
	cmp	ip, r6	@ i.6493, temp.6496
	add	r3, r3, #4	@ ivtmp.6485, ivtmp.6485,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r4, #0	@ tmp243,
	beq	.L1760	@,
	ldr	r1, [r3, #0]	@ D.39055, <variable>.DPB.fs_ltref
	ldr	r4, [r1, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L1809	@,
.L1771:
	add	ip, ip, #1	@ i.6493, i.6493,
	add	r3, r3, #4	@ ivtmp.6485, ivtmp.6485,
	cmp	ip, r6	@ i.6493, temp.6496
	bcc	.L1760	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1759:
	ldr	r1, [r3, #4]	@ D.39055, <variable>.DPB.fs_ltref
	ldr	r3, [r1, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r3, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L1810	@,
.L1774:
	add	ip, ip, #1	@ i.6493, tmp244,
	add	r3, r5, #4	@ ivtmp.6485, tmp245,
	cmp	ip, r6	@ i.6493, temp.6496
	bcs	.L1811	@,
.L1760:
	ldr	r1, [r3, #0]	@ D.39055, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp244, i.6493,
	add	r5, r3, #4	@ tmp245, ivtmp.6485,
	ldr	r4, [r1, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L1759	@,
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L1759	@,
	ldr	r4, [r1, #536]	@ tmp160,
	bic	r4, r4, #-16777216	@ tmp158, tmp160,
	bic	r4, r4, #255	@ tmp158, tmp158,
	cmp	r4, #256	@ tmp158,
	beq	.L1792	@,
	ldr	r1, [r3, #4]	@ D.39055, <variable>.DPB.fs_ltref
	ldr	r3, [r1, #544]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r3, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L1774	@,
.L1810:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #3	@ <variable>.is_reference,
	bne	.L1774	@,
	ldr	r3, [r1, #536]	@ tmp267,
	bic	r3, r3, #-16777216	@ tmp268, tmp267,
	bic	r3, r3, #255	@ tmp268, tmp268,
	cmp	r3, #256	@ tmp268,
	beq	.L1792	@,
	add	ip, ip, #1	@ i.6493, tmp244,
	add	r3, r5, #4	@ ivtmp.6485, tmp245,
	cmp	ip, r6	@ i.6493, temp.6496
	bcc	.L1760	@,
.L1811:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1804:
	ldr	r3, [r1, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L1763	@,
.L1794:
	add	r2, ip, #6592	@ tmp208, i,
	strb	r5, [r1, #2]	@ tmp240, <variable>.is_reference
	add	ip, r2, #50	@ tmp208, tmp208,
	mov	r2, #0	@ tmp211,
	ldr	r3, [r0, ip, asl #2]	@ tmp210, <variable>.DPB.fs_ltref
	strb	r2, [r3, #617]	@ tmp211, <variable>.bottom_field.is_long_term
	ldr	r3, [r0, ip, asl #2]	@ prephitmp.6472, <variable>.DPB.fs_ltref
	ldrb	r1, [r3, #536]	@ zero_extendqisi2	@ D.39101, <variable>.frame.structure
	cmp	r1, #3	@ D.39101,
	cmpne	r1, r2	@, D.39101,
	bne	.L1764	@,
	b	.L1797	@
.L1805:
	ldr	r6, [r1, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L1783	@,
	b	.L1793	@
.L1806:
	ldr	r3, [r1, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	beq	.L1794	@,
	add	ip, r8, #1	@ i, tmp249,
	add	r4, r4, #4	@ ivtmp.6490, tmp250,
	cmp	r7, ip	@ D.39066, i
	bhi	.L1765	@,
.L1807:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1799:
	ldr	r8, [r1, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r8, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L1776	@,
	b	.L1793	@
.L1800:
	ldr	r3, [r1, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L1777	@,
	b	.L1794	@
.L1801:
	ldr	r6, [r1, #584]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L1779	@,
	b	.L1793	@
.L1802:
	ldr	r3, [r1, #624]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L1780	@,
	b	.L1794	@
.L1808:
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L1769	@,
	ldr	ip, [r1, #536]	@ tmp260,
	bic	ip, ip, #-16777216	@ tmp261, tmp260,
	bic	ip, ip, #255	@ tmp261, tmp261,
	cmp	ip, #256	@ tmp261,
	bne	.L1769	@,
.L1792:
	bl	UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1809:
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L1771	@,
	ldr	r4, [r1, #536]	@ tmp264,
	bic	r4, r4, #-16777216	@ tmp265, tmp264,
	bic	r4, r4, #255	@ tmp265, tmp265,
	cmp	r4, #256	@ tmp265,
	bne	.L1771	@,
	b	.L1792	@
	.fnend
	.size	UnMarkLTRef, .-UnMarkLTRef
	.align	2
	.global	UnMarkLTFldByFrmIdx
	.type	UnMarkLTFldByFrmIdx, %function
UnMarkLTFldByFrmIdx:
	.fnstart
.LFB1548:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #26644	@ tmp141,
	ldr	ip, [r0, ip]	@ D.38963, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ D.38963,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	add	r5, r0, #26368	@ ivtmp.6533, pH264Ctx,
	sub	r4, ip, #1	@ tmp146, D.38963,
	and	r7, r4, #1	@ tmp148, tmp146,
	ldr	r4, [r5, #200]!	@ D.38947, <variable>.DPB.fs_ltref
	ldr	r6, [r4, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L1842	@,
.L1821:
	mov	r6, #1	@ i,
	cmp	r6, ip	@ i, D.38963
	add	r5, r5, #4	@ ivtmp.6533, ivtmp.6533,
	ldmcsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1847:
	cmp	r7, #0	@ tmp148,
	beq	.L1818	@,
	ldr	r4, [r5, #0]	@ D.38947, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L1843	@,
.L1824:
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.6533, ivtmp.6533,
	cmp	r6, ip	@ i, D.38963
	bcc	.L1818	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1814:
	ldr	r4, [r5, #4]	@ D.38947, <variable>.DPB.fs_ltref
	add	r6, r6, #1	@ tmp149, i,
	add	r5, r5, #4	@ tmp150, ivtmp.6533,
	ldr	r7, [r4, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L1844	@,
.L1828:
	add	r6, r6, #1	@ i, tmp149,
	add	r5, r5, #4	@ ivtmp.6533, tmp150,
	cmp	r6, ip	@ i, D.38963
	bcs	.L1845	@,
.L1818:
	ldr	r4, [r5, #0]	@ D.38947, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L1814	@,
	cmp	r2, #1	@ structure,
	beq	.L1846	@,
	cmp	r2, #2	@ structure,
	bne	.L1814	@,
	ldrb	r7, [r4, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L1817	@,
.L1841:
	cmp	r4, r1	@ D.38947, pFS
	beq	.L1814	@,
.L1817:
	mov	r1, r4	@, D.38947
	bl	UnMarkFrameStoreRef	@
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1844:
	cmp	r2, #1	@ structure,
	beq	.L1836	@,
	cmp	r2, #2	@ structure,
	bne	.L1828	@,
	ldrb	r7, [r4, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L1817	@,
.L1839:
	cmp	r4, r1	@ D.38947, pFS
	bne	.L1817	@,
	add	r6, r6, #1	@ i, tmp149,
	add	r5, r5, #4	@ ivtmp.6533, tmp150,
	cmp	r6, ip	@ i, D.38963
	bcc	.L1818	@,
.L1845:
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1846:
	ldrb	r7, [r4, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L1841	@,
	b	.L1817	@
.L1836:
	ldrb	r7, [r4, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L1839	@,
	b	.L1817	@
.L1842:
	cmp	r2, #1	@ structure,
	beq	.L1834	@,
	cmp	r2, #2	@ structure,
	bne	.L1821	@,
	ldrb	r6, [r4, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #0	@ <variable>.top_field.is_long_term,
	beq	.L1817	@,
.L1837:
	cmp	r4, r1	@ D.38947, pFS
	bne	.L1817	@,
	mov	r6, #1	@ i,
	cmp	r6, ip	@ i, D.38963
	add	r5, r5, #4	@ ivtmp.6533, ivtmp.6533,
	bcc	.L1847	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1843:
	cmp	r2, r6	@ structure,
	beq	.L1835	@,
	cmp	r2, #2	@ structure,
	bne	.L1824	@,
	ldrb	r7, [r4, #577]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L1817	@,
.L1838:
	cmp	r4, r1	@ D.38947, pFS
	bne	.L1817	@,
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.6533, ivtmp.6533,
	cmp	r6, ip	@ i, D.38963
	bcc	.L1818	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1834:
	ldrb	r6, [r4, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L1837	@,
	b	.L1817	@
.L1835:
	ldrb	r7, [r4, #617]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L1838	@,
	b	.L1817	@
	.fnend
	.size	UnMarkLTFldByFrmIdx, .-UnMarkLTFldByFrmIdx
	.align	2
	.global	UnMarkLTFrmByFrmIdx
	.type	UnMarkLTFrmByFrmIdx, %function
UnMarkLTFrmByFrmIdx:
	.fnstart
.LFB1547:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #26644	@ tmp139,
	ldr	r2, [r0, r3]	@ D.38935, <variable>.DPB.ltref_frames_in_buffer
	cmp	r2, #0	@ D.38935,
	ldmeqfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r3, #26568	@ tmp140,
	ldr	r3, [r0, r3]	@ D.38931, <variable>.DPB.fs_ltref
	ldr	ip, [r3, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	ip, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L1850	@,
	tst	r2, #1	@ D.38935,
	add	ip, r0, #26368	@ tmp143, pH264Ctx,
	add	r4, ip, #204	@ ivtmp.6562, tmp143,
	mov	r5, #0	@ i,
	bne	.L1852	@,
	ldr	r3, [r4, #0]	@ D.38931, <variable>.DPB.fs_ltref
	add	r4, ip, #208	@ ivtmp.6562, tmp143,
	mov	r5, #1	@ i,
	ldr	ip, [r3, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	ip, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L1852	@,
.L1850:
	mov	r1, r3	@, D.38931
	bl	UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1853:
	ldr	r3, [ip], #4	@ D.38931, <variable>.DPB.fs_ltref
	ldr	r6, [r3, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L1850	@,
	ldr	r3, [r4, #4]	@ D.38931, <variable>.DPB.fs_ltref
	add	r4, ip, #4	@ ivtmp.6562, tmp148,
	ldr	ip, [r3, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	ip, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L1850	@,
.L1852:
	add	r3, r5, #1	@ tmp147, i,
	mov	ip, r4	@ tmp148, ivtmp.6562
	cmp	r2, r3	@ D.38935, tmp147
	add	r5, r3, #1	@ i, tmp147,
	bhi	.L1853	@,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	UnMarkLTFrmByFrmIdx, .-UnMarkLTFrmByFrmIdx
	.align	2
	.global	MarkCurrPicLT
	.type	MarkCurrPicLT, %function
MarkCurrPicLT:
	.fnstart
.LFB1555:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r2	@ long_term_frame_idx, long_term_frame_idx
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ D.39271, <variable>.structure
	mov	r4, r1	@ pCurrPic, pCurrPic
	cmp	r2, #0	@ D.39271,
	beq	.L1868	@,
	mov	r3, r5	@, long_term_frame_idx
	ldr	r1, [r1, #544]	@, <variable>.frame_store
	bl	UnMarkLTFldByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #556]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1868:
	mov	r1, r5	@, long_term_frame_idx
	bl	UnMarkLTFrmByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #556]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MarkCurrPicLT, .-MarkCurrPicLT
	.align	2
	.global	MarkSTToLTRef
	.type	MarkSTToLTRef, %function
MarkSTToLTRef:
	.fnstart
.LFB1552:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pCurrPic, pCurrPic
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	mov	r7, r3	@ long_term_frame_idx, long_term_frame_idx
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	cmp	r1, #0	@ <variable>.structure,
	bne	.L1870	@,
	ldr	r3, [r5, #552]	@ <variable>.frame_num, <variable>.frame_num
	mov	r1, r7	@, long_term_frame_idx
	mvn	r4, r2	@ tmp144, difference_of_pic_nums_minus1
	add	r4, r4, r3	@ picNumX, tmp144, <variable>.frame_num
	bl	UnMarkLTFrmByFrmIdx	@
.L1871:
	mov	r0, r6	@, pH264Ctx
	mov	r1, r7	@, long_term_frame_idx
	mov	r2, r4	@, picNumX
	mov	r3, r5	@, pCurrPic
	bl	MarkPicLTRef	@
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1870:
	movw	ip, #26640	@ tmp150,
	ldr	r0, [r5, #552]	@ <variable>.frame_num, <variable>.frame_num
	ldr	lr, [r6, ip]	@ D.39240, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ D.39240,
	rsb	r4, r2, r0, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	beq	.L1871	@,
	add	r3, r6, #26368	@ ivtmp.6620, pH264Ctx,
	sub	r2, lr, #1	@ tmp162, D.39240,
	and	ip, r2, #1	@ tmp164, tmp162,
	ldr	r1, [r3, #136]!	@ D.39216, <variable>.DPB.fs_ref
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ D.39218, <variable>.is_reference
	tst	r2, #1	@ D.39218,
	beq	.L1877	@,
	ldr	r0, [r1, #576]	@ tmp175,
	bic	r0, r0, #-16777216	@ tmp176, tmp175,
	bic	r0, r0, #255	@ tmp176, tmp176,
	cmp	r0, #65536	@ tmp176,
	beq	.L1899	@,
.L1877:
	tst	r2, #2	@ D.39218,
	beq	.L1878	@,
	ldr	r2, [r1, #616]	@ tmp179,
	bic	r0, r2, #-16777216	@ tmp180, tmp179,
	bic	r2, r0, #255	@ tmp180, tmp180,
	cmp	r2, #65536	@ tmp180,
	beq	.L1900	@,
.L1878:
	mov	r2, #1	@ i,
	cmp	r2, lr	@ i, D.39240
	add	r3, r3, #4	@ ivtmp.6620, ivtmp.6620,
	bcs	.L1871	@,
	cmp	ip, #0	@ tmp164,
	beq	.L1874	@,
	ldr	r1, [r3, #0]	@ D.39216, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.39218, <variable>.is_reference
	tst	r0, #1	@ D.39218,
	bne	.L1889	@,
.L1884:
	tst	r0, #2	@ D.39218,
	beq	.L1885	@,
	ldr	r0, [r1, #616]	@ tmp195,
	bic	ip, r0, #-16777216	@ tmp196, tmp195,
	bic	r0, ip, #255	@ tmp196, tmp196,
	cmp	r0, #65536	@ tmp196,
	beq	.L1901	@,
.L1885:
	add	r2, r2, #1	@ i, tmp165,
	add	r3, r3, #4	@ ivtmp.6620, tmp166,
	cmp	r2, lr	@ i, D.39240
	bcs	.L1871	@,
.L1874:
	ldr	r1, [r3, #0]	@ D.39216, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.39218, <variable>.is_reference
	tst	r0, #1	@ D.39218,
	beq	.L1872	@,
	ldr	ip, [r1, #576]	@ tmp155,
	bic	ip, ip, #-16777216	@ tmp153, tmp155,
	bic	ip, ip, #255	@ tmp153, tmp153,
	cmp	ip, #65536	@ tmp153,
	beq	.L1902	@,
.L1872:
	tst	r0, #2	@ D.39218,
	beq	.L1873	@,
	ldr	r0, [r1, #616]	@ tmp160,
	bic	ip, r0, #-16777216	@ tmp158, tmp160,
	bic	r0, ip, #255	@ tmp158, tmp158,
	cmp	r0, #65536	@ tmp158,
	beq	.L1903	@,
.L1873:
	ldr	r1, [r3, #4]	@ D.39216, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp165, i,
	add	r3, r3, #4	@ tmp166, ivtmp.6620,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.39218, <variable>.is_reference
	tst	r0, #1	@ D.39218,
	beq	.L1884	@,
.L1889:
	ldr	ip, [r1, #576]	@ tmp191,
	bic	ip, ip, #-16777216	@ tmp192, tmp191,
	bic	ip, ip, #255	@ tmp192, tmp192,
	cmp	ip, #65536	@ tmp192,
	bne	.L1884	@,
	ldr	ip, [r1, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L1884	@,
.L1890:
	mov	r0, r6	@, pH264Ctx
	mov	r2, #1	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	UnMarkLTFldByFrmIdx	@
	b	.L1871	@
.L1901:
	ldr	ip, [r1, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L1885	@,
.L1891:
	mov	r0, r6	@, pH264Ctx
	mov	r2, #2	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	UnMarkLTFldByFrmIdx	@
	b	.L1871	@
.L1902:
	ldr	ip, [r1, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L1872	@,
	b	.L1890	@
.L1903:
	ldr	ip, [r1, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L1873	@,
	b	.L1891	@
.L1899:
	ldr	r0, [r1, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r0, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L1877	@,
	b	.L1890	@
.L1900:
	ldr	r0, [r1, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r0, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L1878	@,
	b	.L1891	@
	.fnend
	.size	MarkSTToLTRef, .-MarkSTToLTRef
	.align	2
	.global	UnMarkSTRef
	.type	UnMarkSTRef, %function
UnMarkSTRef:
	.fnstart
.LFB1549:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r3, r0	@ pH264Ctx, pH264Ctx
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r0, #0	@ <variable>.structure,
	bne	.L1905	@,
	movw	ip, #26640	@ tmp158,
	ldr	r1, [r1, #552]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r6, [r3, ip]	@ temp.6685, <variable>.DPB.ref_frames_in_buffer
	mvn	r2, r2	@ tmp156, difference_of_pic_nums_minus1
	add	ip, r2, r1	@ picNumX.6686, tmp156, <variable>.frame_num
	cmp	r6, #0	@ temp.6685,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r2, r3, #26368	@ ivtmp.6659, pH264Ctx,
	sub	r1, r6, #1	@ tmp264, temp.6685,
	and	r4, r1, #1	@ tmp266, tmp264,
	ldr	r1, [r2, #136]!	@ D.38983, <variable>.DPB.fs_ref
	ldr	r0, [r1, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, ip	@ <variable>.frame.pic_num, picNumX.6686
	beq	.L1949	@,
.L1919:
	mov	r0, #1	@ i.6667,
	cmp	r0, r6	@ i.6667, temp.6685
	add	r2, r2, #4	@ ivtmp.6659, ivtmp.6659,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r4, #0	@ tmp266,
	beq	.L1910	@,
	ldr	r1, [r2, #0]	@ D.38983, <variable>.DPB.fs_ref
	ldr	r4, [r1, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, ip	@ <variable>.frame.pic_num, picNumX.6686
	beq	.L1950	@,
.L1921:
	add	r0, r0, #1	@ i.6667, i.6667,
	add	r2, r2, #4	@ ivtmp.6659, ivtmp.6659,
	cmp	r0, r6	@ i.6667, temp.6685
	bcc	.L1910	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1909:
	ldr	r1, [r2, #4]	@ D.38983, <variable>.DPB.fs_ref
	ldr	r2, [r1, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r2, ip	@ <variable>.frame.pic_num, picNumX.6686
	beq	.L1951	@,
.L1924:
	add	r0, r0, #1	@ i.6667, tmp267,
	add	r2, r5, #4	@ ivtmp.6659, tmp268,
	cmp	r0, r6	@ i.6667, temp.6685
	bcs	.L1952	@,
.L1910:
	ldr	r1, [r2, #0]	@ D.38983, <variable>.DPB.fs_ref
	add	r0, r0, #1	@ tmp267, i.6667,
	add	r5, r2, #4	@ tmp268, ivtmp.6659,
	ldr	r4, [r1, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, ip	@ <variable>.frame.pic_num, picNumX.6686
	bne	.L1909	@,
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L1909	@,
	ldr	r4, [r1, #536]	@ tmp169,
	bic	r4, r4, #-16777216	@ tmp167, tmp169,
	bic	r4, r4, #255	@ tmp167, tmp167,
	cmp	r4, #65536	@ tmp167,
	beq	.L1942	@,
	ldr	r1, [r2, #4]	@ D.38983, <variable>.DPB.fs_ref
	ldr	r2, [r1, #548]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r2, ip	@ <variable>.frame.pic_num, picNumX.6686
	bne	.L1924	@,
.L1951:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #3	@ <variable>.is_reference,
	bne	.L1924	@,
	ldr	r2, [r1, #536]	@ tmp292,
	bic	r2, r2, #-16777216	@ tmp293, tmp292,
	bic	r2, r2, #255	@ tmp293, tmp293,
	cmp	r2, #65536	@ tmp293,
	beq	.L1942	@,
	add	r0, r0, #1	@ i.6667, tmp267,
	add	r2, r5, #4	@ ivtmp.6659, tmp268,
	cmp	r0, r6	@ i.6667, temp.6685
	bcc	.L1910	@,
.L1952:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1905:
	movw	r0, #26640	@ tmp163,
	ldr	r7, [r1, #552]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r6, [r3, r0]	@ D.38994, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.38994,
	rsb	r7, r2, r7, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	add	r2, r3, #26368	@ ivtmp.6664, pH264Ctx,
	sub	ip, r6, #1	@ tmp269, D.38994,
	and	r5, ip, #1	@ tmp271, tmp269,
	mov	ip, #0	@ i,
	ldr	r0, [r2, #136]!	@ temp.6668, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ temp.6669, <variable>.is_reference
	ands	r4, r1, #1	@ tmp261, temp.6669,
	beq	.L1926	@,
	ldr	r8, [r0, #576]	@ tmp294,
	bic	r8, r8, #-16777216	@ tmp295, tmp294,
	bic	r8, r8, #255	@ tmp295, tmp295,
	cmp	r8, #65536	@ tmp295,
	beq	.L1953	@,
.L1926:
	tst	r1, #2	@ temp.6669,
	beq	.L1927	@,
	ldr	r1, [r0, #616]	@ tmp298,
	bic	r1, r1, #-16777216	@ tmp299, tmp298,
	bic	r1, r1, #255	@ tmp299, tmp299,
	cmp	r1, #65536	@ tmp299,
	beq	.L1954	@,
.L1927:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.38994, i
	add	r2, r2, #4	@ ivtmp.6664, ivtmp.6664,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r5, #0	@ tmp271,
	beq	.L1915	@,
	ldr	r0, [r2, #0]	@ temp.6668, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ temp.6669, <variable>.is_reference
	ands	r4, r1, ip	@ tmp261, temp.6669,
	beq	.L1929	@,
	ldr	r5, [r0, #576]	@ tmp301,
	bic	r5, r5, #-16777216	@ tmp302, tmp301,
	bic	r5, r5, #255	@ tmp302, tmp302,
	cmp	r5, #65536	@ tmp302,
	beq	.L1955	@,
.L1929:
	tst	r1, #2	@ temp.6669,
	beq	.L1930	@,
	ldr	r1, [r0, #616]	@ tmp305,
	bic	r1, r1, #-16777216	@ tmp306, tmp305,
	bic	r1, r1, #255	@ tmp306, tmp306,
	cmp	r1, #65536	@ tmp306,
	beq	.L1956	@,
.L1930:
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.6664, ivtmp.6664,
	cmp	r6, ip	@ D.38994, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	ldr	r0, [r2, #0]	@ temp.6668, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ temp.6669, <variable>.is_reference
	ands	r4, r1, #1	@ tmp261, temp.6669,
	bne	.L1957	@,
.L1911:
	tst	r1, #2	@ temp.6669,
	beq	.L1913	@,
	ldr	r1, [r0, #616]	@ tmp219,
	bic	r1, r1, #-16777216	@ tmp217, tmp219,
	bic	r1, r1, #255	@ tmp217, tmp217,
	cmp	r1, #65536	@ tmp217,
	beq	.L1958	@,
.L1913:
	ldr	r0, [r2, #4]	@ temp.6668, <variable>.DPB.fs_ref
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ tmp273, ivtmp.6664,
	mov	r8, ip	@ tmp272, i
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ temp.6669, <variable>.is_reference
	ands	r4, r1, #1	@ tmp261, temp.6669,
	beq	.L1933	@,
	ldr	r5, [r0, #576]	@ tmp308,
	bic	r5, r5, #-16777216	@ tmp309, tmp308,
	bic	r5, r5, #255	@ tmp309, tmp309,
	cmp	r5, #65536	@ tmp309,
	beq	.L1959	@,
.L1933:
	tst	r1, #2	@ temp.6669,
	beq	.L1934	@,
	ldr	r1, [r0, #616]	@ tmp312,
	bic	r1, r1, #-16777216	@ tmp313, tmp312,
	bic	r1, r1, #255	@ tmp313, tmp313,
	cmp	r1, #65536	@ tmp313,
	beq	.L1960	@,
.L1934:
	add	ip, r8, #1	@ i, tmp272,
	add	r2, r2, #4	@ ivtmp.6664, tmp273,
	cmp	r6, ip	@ D.38994, i
	bls	.L1961	@,
.L1915:
	ldr	r0, [r2, #0]	@ temp.6668, <variable>.DPB.fs_ref
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ temp.6669, <variable>.is_reference
	ands	r4, r1, #1	@ tmp261, temp.6669,
	beq	.L1911	@,
.L1957:
	ldr	r5, [r0, #576]	@ tmp174,
	bic	r5, r5, #-16777216	@ tmp172, tmp174,
	bic	r5, r5, #255	@ tmp172, tmp172,
	cmp	r5, #65536	@ tmp172,
	bne	.L1911	@,
	ldr	r5, [r0, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r7	@ <variable>.top_field.pic_num, picNumX
	bne	.L1911	@,
.L1943:
	add	r2, ip, #6592	@ tmp262, i,
	and	r1, r1, #2	@ tmp176, temp.6669,
	add	r2, r2, #34	@ tmp262, tmp262,
	strb	r1, [r0, #2]	@ tmp176, <variable>.is_reference
	mov	r1, #0	@ tmp181,
	ldr	r0, [r3, r2, asl #2]	@ tmp180, <variable>.DPB.fs_ref
	strb	r1, [r0, #578]	@ tmp181, <variable>.top_field.is_short_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.6670, <variable>.DPB.fs_ref
	ldrb	ip, [r0, #536]	@ zero_extendqisi2	@ D.39009, <variable>.frame.structure
	cmp	ip, #3	@ D.39009,
	cmpne	ip, r1	@, D.39009,
	bne	.L1914	@,
.L1947:
	strb	r1, [r0, #538]	@ tmp226, <variable>.frame.is_short_term
	ldr	ip, [r3, r2, asl #2]	@ tmp241, <variable>.DPB.fs_ref
	strb	r1, [ip, #537]	@ tmp226, <variable>.frame.is_long_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.6646, <variable>.DPB.fs_ref
.L1914:
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	ldr	ip, [r0, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r0, #59224	@ tmp255,
	ldr	lr, [r3, r2, asl #2]	@ tmp259, <variable>.DPB.fs_ref
	mov	r2, r1	@, <variable>.is_reference
	add	ip, ip, #14400	@ tmp247, <variable>.pmv_address_idc,
	ldr	r0, [r3, r0]	@, <variable>.ChanID
	add	ip, ip, #8	@ tmp247, tmp247,
	add	r3, r3, ip, asl #2	@, tmp252, pH264Ctx, tmp247,
	str	r1, [r3, #4]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1958:
	ldr	r1, [r0, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, r7	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L1913	@,
.L1944:
	add	r2, ip, #6592	@ tmp282, i,
	strb	r4, [r0, #2]	@ tmp261, <variable>.is_reference
	add	r2, r2, #34	@ tmp282, tmp282,
	mov	r1, #0	@ tmp226,
	ldr	r0, [r3, r2, asl #2]	@ tmp225, <variable>.DPB.fs_ref
	strb	r1, [r0, #618]	@ tmp226, <variable>.bottom_field.is_short_term
	ldr	r0, [r3, r2, asl #2]	@ prephitmp.6646, <variable>.DPB.fs_ref
	ldrb	ip, [r0, #536]	@ zero_extendqisi2	@ D.39031, <variable>.frame.structure
	cmp	ip, #3	@ D.39031,
	cmpne	ip, r1	@, D.39031,
	bne	.L1914	@,
	b	.L1947	@
.L1959:
	ldr	r5, [r0, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r7	@ <variable>.top_field.pic_num, picNumX
	bne	.L1933	@,
	b	.L1943	@
.L1960:
	ldr	r1, [r0, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, r7	@ <variable>.bottom_field.pic_num, picNumX
	beq	.L1944	@,
	add	ip, r8, #1	@ i, tmp272,
	add	r2, r2, #4	@ ivtmp.6664, tmp273,
	cmp	r6, ip	@ D.38994, i
	bhi	.L1915	@,
.L1961:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1953:
	ldr	r8, [r0, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r8, r7	@ <variable>.top_field.pic_num, picNumX
	bne	.L1926	@,
	b	.L1943	@
.L1954:
	ldr	r1, [r0, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, r7	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L1927	@,
	b	.L1944	@
.L1955:
	ldr	r5, [r0, #588]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r7	@ <variable>.top_field.pic_num, picNumX
	bne	.L1929	@,
	b	.L1943	@
.L1956:
	ldr	r1, [r0, #628]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r1, r7	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L1930	@,
	b	.L1944	@
.L1949:
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L1919	@,
	ldr	r0, [r1, #536]	@ tmp285,
	bic	r0, r0, #-16777216	@ tmp286, tmp285,
	bic	r0, r0, #255	@ tmp286, tmp286,
	cmp	r0, #65536	@ tmp286,
	bne	.L1919	@,
.L1942:
	mov	r0, r3	@, pH264Ctx
	bl	UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1950:
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L1921	@,
	ldr	r4, [r1, #536]	@ tmp289,
	bic	r4, r4, #-16777216	@ tmp290, tmp289,
	bic	r4, r4, #255	@ tmp290, tmp290,
	cmp	r4, #65536	@ tmp290,
	bne	.L1921	@,
	b	.L1942	@
	.fnend
	.size	UnMarkSTRef, .-UnMarkSTRef
	.align	2
	.global	ClearAll
	.type	ClearAll, %function
ClearAll:
	.fnstart
.LFB1538:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	mov	r4, r1	@ flag, flag
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC78	@,
	movt	r1, #:upper16:.LC78	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	mov	r0, r5	@, pH264Ctx
	bl	ClearAllNal	@
	mov	r0, r5	@, pH264Ctx
	bl	InitDPB	@
	cmp	r4, #0	@ flag,
	beq	.L1963	@,
	movw	r3, #59224	@ tmp156,
	add	r1, r5, #8	@, pH264Ctx,
	ldr	r0, [r5, r3]	@, <variable>.ChanID
	bl	FSP_ClearNotInVoQueue	@
.L1964:
	add	r7, r5, #27392	@ tmp162, pH264Ctx,
	mov	r0, #0	@,
	add	r9, r7, #144	@ ivtmp.6757, tmp162,
	add	sl, r7, #140	@ ivtmp.6754, tmp162,
	add	r8, r7, #152	@ ivtmp.6755, tmp162,
	add	r7, r7, #148	@ ivtmp.6756, tmp162,
	mov	r6, r0	@ i,
	mov	r4, r0	@ tmp322, i
	str	r0, [fp, #-48]	@, %sfp
.L1969:
	mov	r3, #712	@,
	ldr	r0, [fp, #-48]	@, %sfp
	mul	lr, r3, r6	@ tmp205,, i
	ldr	r1, [sl, #0]	@ temp.6765, <variable>.fs_image.p_usrdat
	add	ip, r5, r0	@ D.53825, pH264Ctx,
	add	r2, r0, r3	@,,
	cmp	r1, #0	@ temp.6765,
	str	r2, [fp, #-48]	@, %sfp
	add	r3, ip, #27904	@ tmp179, D.53825,
	add	r0, ip, #27136	@ tmp167, D.53825,
	add	r2, ip, #27648	@ tmp212, D.53825,
	add	lr, lr, #27136	@ tmp207, tmp205,
	add	ip, ip, #27392	@ tmp204, D.53825,
	add	lr, lr, #176	@ tmp207, tmp207,
	add	lr, r5, lr	@ D.38746, pH264Ctx, tmp207
	strb	r4, [r0, #180]	@ tmp322, <variable>.is_in_dpb
	str	r6, [ip, #124]	@ i, <variable>.fs_image.image_id
	mov	ip, #1	@,
	strb	r4, [r0, #176]	@ tmp322, <variable>.non_existing
	add	r6, r6, #1	@ i, i,
	strb	ip, [r2, #240]	@, <variable>.top_field.structure
	mov	ip, #2	@,
	strb	r4, [r0, #177]	@ tmp322, <variable>.is_used
	strb	ip, [r3, #24]	@, <variable>.bottom_field.structure
	mov	ip, #1	@,
	strb	r4, [r0, #178]	@ tmp322, <variable>.is_reference
	mvn	r0, #0	@,
	str	ip, [r3, #92]	@, <variable>.is_displayed
	mov	ip, #16	@,
	str	r0, [r3, #72]	@, <variable>.frame_num_wrap
	mov	r0, #17	@,
	str	lr, [r2, #204]	@ D.38746, <variable>.frame.frame_store
	str	r4, [r3, #76]	@ tmp322, <variable>.long_term_frame_idx
	str	r4, [r3, #68]	@ tmp322, <variable>.frame_num
	str	r4, [r3, #80]	@ tmp322, <variable>.poc
	str	r0, [r3, #108]	@, <variable>.pmv_address_idc
	str	ip, [r3, #112]	@, <variable>.apc_idc
	str	lr, [r3, #28]	@ D.38746, <variable>.bottom_field.frame_store
	str	lr, [r2, #244]	@ D.38746, <variable>.top_field.frame_store
	strb	r4, [r2, #200]	@ tmp322, <variable>.frame.structure
	beq	.L1965	@,
	movw	ip, #59224	@,
	ldr	r0, [r5, ip]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r4, [sl, #0]	@ tmp322, <variable>.fs_image.p_usrdat
.L1965:
	ldr	r1, [r9, #0]	@ temp.6767, <variable>.fs_image.p_usrdat
	add	sl, sl, #712	@ ivtmp.6754, ivtmp.6754,
	cmp	r1, #0	@ temp.6767,
	beq	.L1966	@,
	movw	lr, #59224	@,
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r4, [r9, #0]	@ tmp322, <variable>.fs_image.p_usrdat
.L1966:
	ldr	r1, [r7, #0]	@ temp.6769, <variable>.fs_image.p_usrdat
	add	r9, r9, #712	@ ivtmp.6757, ivtmp.6757,
	cmp	r1, #0	@ temp.6769,
	beq	.L1967	@,
	movw	r2, #59224	@,
	ldr	r0, [r5, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r4, [r7, #0]	@ tmp322, <variable>.fs_image.p_usrdat
.L1967:
	ldr	r1, [r8, #0]	@ D.38750, <variable>.fs_image.p_usrdat
	add	r7, r7, #712	@ ivtmp.6756, ivtmp.6756,
	cmp	r1, #0	@ D.38750,
	beq	.L1968	@,
	movw	r3, #59224	@,
	ldr	r0, [r5, r3]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r4, [r8, #0]	@ tmp322, <variable>.fs_image.p_usrdat
.L1968:
	cmp	r6, #40	@ i,
	add	r8, r8, #712	@ ivtmp.6755, ivtmp.6755,
	bne	.L1969	@,
	movw	r4, #56020	@ tmp239,
	ldr	r1, [r5, r4]	@ temp.6771, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6771,
	beq	.L1970	@,
	movw	r7, #59224	@ tmp240,
	ldr	r0, [r5, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp243,
	str	r1, [r5, r4]	@ tmp243, <variable>.CurrPic.fs_image.p_usrdat
.L1970:
	movw	r4, #56024	@ tmp244,
	ldr	r1, [r5, r4]	@ temp.6773, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6773,
	beq	.L1971	@,
	movw	ip, #59224	@ tmp245,
	ldr	r0, [r5, ip]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp248,
	str	r0, [r5, r4]	@ tmp248, <variable>.CurrPic.fs_image.p_usrdat
.L1971:
	movw	r4, #56028	@ tmp249,
	ldr	r1, [r5, r4]	@ temp.6775, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6775,
	beq	.L1972	@,
	movw	lr, #59224	@ tmp250,
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r2, #0	@ tmp253,
	str	r2, [r5, r4]	@ tmp253, <variable>.CurrPic.fs_image.p_usrdat
.L1972:
	movw	r4, #56032	@ tmp254,
	ldr	r1, [r5, r4]	@ D.38753, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ D.38753,
	beq	.L1973	@,
	movw	r7, #59224	@ tmp255,
	ldr	r0, [r5, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r3, #0	@ tmp258,
	str	r3, [r5, r4]	@ tmp258, <variable>.CurrPic.fs_image.p_usrdat
.L1973:
	movw	r7, #57732	@ tmp259,
	ldr	r4, [r5, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r4, #0	@ <variable>.TotalUsrDatNum,
	beq	.L1974	@,
	add	r8, r5, #57600	@ ivtmp.6726, pH264Ctx,
	mov	r6, #0	@ i.6764,
	add	r4, r8, #136	@ ivtmp.6726, ivtmp.6726,
	movw	sl, #59224	@ tmp319,
	mov	r8, r6	@ tmp320, i.6764
.L1976:
	ldr	r1, [r4, #0]	@ D.38756, <variable>.pUsrDatArray
	add	r6, r6, #1	@ i.6764, i.6764,
	cmp	r1, #0	@ D.38756,
	beq	.L1975	@,
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #0]	@ tmp320, <variable>.pUsrDatArray
.L1975:
	ldr	r1, [r5, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r4, r4, #4	@ ivtmp.6726, ivtmp.6726,
	cmp	r1, r6	@ <variable>.TotalUsrDatNum, i.6764
	bhi	.L1976	@,
.L1974:
	movw	lr, #57732	@ tmp267,
	mov	r4, #0	@ tmp268,
	movw	r3, #57712	@ tmp271,
	str	r4, [r5, lr]	@ tmp268, <variable>.TotalUsrDatNum
	movw	r2, #59148	@ tmp273,
	movw	ip, #59208	@ tmp275,
	movw	lr, #59156	@ tmp277,
	str	r4, [r5, r3]	@ tmp268, <variable>.AllowStartDec
	str	r4, [r5, r2]	@ tmp268, <variable>.SliceParaNum
	movw	r3, #57720	@ tmp279,
	str	r4, [r5, ip]	@ tmp268, <variable>.MaxBytesReceived
	movw	r2, #59228	@ tmp281,
	str	r4, [r5, lr]	@ tmp268, <variable>.IModeOutFlag
	movw	ip, #57724	@ tmp283,
	movw	lr, #26388	@ tmp286,
	str	r4, [r5, r3]	@ tmp268, <variable>.IDRFound
	str	r4, [r5, r2]	@ tmp268, <variable>.FirstFrameDisplayed
	movw	r3, #24384	@ tmp288,
	str	r4, [r5, ip]	@ tmp268, <variable>.PPicFound
	movw	r2, #22380	@ tmp291,
	str	r4, [r5, lr]	@ tmp268, <variable>.CurrMarkIdx
	movw	ip, #24385	@ tmp294,
	movw	lr, #22381	@ tmp297,
	add	r0, r5, #20480	@, pH264Ctx,
	movw	r1, #59200	@ tmp269,
	add	r0, r0, #208	@,,
	str	r4, [r5, r1]	@ tmp268, <variable>.IDRPicOfCurrPic
	mov	r1, #1648	@,
	strb	r4, [r5, r3]	@ tmp268, <variable>.is_valid
	strb	r4, [r5, ip]	@ tmp268, <variable>.no_output_of_prior_pics_flag
	strb	r4, [r5, r2]	@ tmp268, <variable>.is_valid
	strb	r4, [r5, lr]	@ tmp268, <variable>.no_output_of_prior_pics_flag
	str	r4, [r5, #368]	@ tmp268, <variable>.pCurrNal
	bl	__memzero	@
	movw	r3, #55792	@ tmp308,
	movw	r2, #20688	@ tmp302,
	strb	r4, [r5, r3]	@ tmp268, <variable>.CurrPic.state
	movw	r0, #57044	@ tmp316,
	movw	r1, #57040	@ tmp311,
	mov	ip, #2	@ tmp303,
	movw	r3, #20693	@ tmp305,
	strb	ip, [r5, r2]	@ tmp303, <variable>.CurrSlice.slice_type
	movw	r2, #57048	@ tmp314,
	str	r4, [r5, r0]	@ tmp268, <variable>.PrevPic.nal_ref_idc
	mov	ip, #256	@ tmp315,
	strb	r4, [r5, r1]	@ tmp268, <variable>.PrevPic.structure
	mov	r0, r4	@, tmp268
	mov	r1, #1	@ tmp306,
	str	ip, [r5, r2]	@ tmp315, <variable>.PrevPic.frame_num
	strb	r1, [r5, r3]	@ tmp306, <variable>.CurrSlice.new_pic_flag
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1963:
	add	r0, r5, #8	@, pH264Ctx,
	bl	ResetVoQueue	@
	movw	r1, #59224	@ tmp160,
	ldr	r0, [r5, r1]	@, <variable>.ChanID
	bl	FSP_EmptyInstance	@
	b	.L1964	@
	.fnend
	.size	ClearAll, .-ClearAll
	.align	2
	.global	H264DEC_GetImageBuffer
	.type	H264DEC_GetImageBuffer, %function
H264DEC_GetImageBuffer:
	.fnstart
.LFB1669:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #57704	@ tmp156,
	ldr	r3, [r0, r3]	@ D.47364, <variable>.TotalFsNum
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #0	@ D.47364,
	beq	.L1981	@,
	add	r6, r0, #27136	@ ivtmp.6824, pH264Ctx,
	add	sl, r0, #26368	@ ivtmp.6816, pH264Ctx,
	add	r6, r6, #177	@ ivtmp.6824, ivtmp.6824,
	add	sl, sl, #76	@ ivtmp.6816, ivtmp.6816,
	mov	r7, #0	@ i,
	movw	r9, #26440	@ tmp212,
	mov	r8, r6	@ ivtmp.6821, ivtmp.6824
.L1988:
	ldrb	r0, [r8, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #0	@ <variable>.is_used,
	bne	.L1982	@,
	mov	r2, #712	@,
	mul	lr, r2, r7	@ tmp159,, i
	add	r1, lr, #27136	@ tmp161, tmp159,
	add	ip, r1, #176	@ tmp161, tmp161,
	adds	ip, r4, ip	@ D.47374, pH264Ctx, tmp161
	beq	.L1983	@,
	movw	r1, #26636	@,
	ldr	lr, [r4, r1]	@ D.47619, <variable>.DPB.used_size
	cmp	lr, #0	@ D.47619,
	beq	.L1983	@,
	ldr	r2, [r4, r9]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	ip, r2	@ D.47374, <variable>.DPB.fs
	beq	.L1982	@,
	tst	lr, #1	@ D.47619,
	mov	r1, sl	@ ivtmp.6816, ivtmp.6816
	bne	.L1984	@,
	mov	r0, #1	@ i,
	cmp	r0, lr	@ i, D.47619
	bcs	.L1983	@,
	mov	r1, sl	@ ivtmp.6816, ivtmp.6816
	ldr	r2, [r1], #4	@ D.47620, <variable>.DPB.fs
	cmp	ip, r2	@ D.47374, D.47620
	bne	.L1984	@,
	b	.L1982	@
.L1985:
	ldr	r5, [r2], #4	@ D.47620, <variable>.DPB.fs
	cmp	ip, r5	@ D.47374, D.47620
	beq	.L1982	@,
	ldr	r5, [r1, #4]	@ D.47620, <variable>.DPB.fs
	add	r1, r2, #4	@ ivtmp.6816, tmp224,
	cmp	ip, r5	@ D.47374, D.47620
	beq	.L1982	@,
.L1984:
	add	r0, r0, #1	@ tmp225, i,
	mov	r2, r1	@ tmp224, ivtmp.6816
	cmp	r0, lr	@ tmp225, D.47619
	add	r0, r0, #1	@ i, tmp225,
	bcc	.L1985	@,
.L1983:
	movw	r5, #59224	@ tmp167,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmp	r0, #1	@ ret,
	beq	.L1981	@,
	cmn	r0, #1	@ ret,
	beq	.L2016	@,
.L1986:
	mov	r0, #0	@ D.47367,
.L1987:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1982:
	add	r7, r7, #1	@ i, i,
	add	r8, r8, #712	@ ivtmp.6821, ivtmp.6821,
	cmp	r3, r7	@ D.47364, i
	bhi	.L1988	@,
	sub	r2, fp, #52	@,,
	add	r0, r4, #8	@, pH264Ctx,
	sub	r1, fp, #48	@,,
	movw	r7, #57704	@ tmp176,
	bl	GetQueueImgNum	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC79	@,
	movt	r1, #:upper16:.LC79	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC80	@,
	movt	r1, #:upper16:.LC80	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r7]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L1989	@,
	add	r8, r4, #26368	@, pH264Ctx,
	add	r5, r8, #76	@,,
	movw	r8, #26440	@ tmp205,
	str	r5, [fp, #-56]	@, %sfp
	mov	r5, #0	@ i.6830,
.L1995:
	mov	lr, #712	@,
	ldrb	r3, [r6, #0]	@ zero_extendqisi2	@ temp.6828, <variable>.is_used
	mul	r0, lr, r5	@ tmp178,, i.6830
	ldrb	lr, [r6, #3]	@ zero_extendqisi2	@ D.47389, <variable>.is_in_dpb
	add	r1, r0, #27136	@ tmp180, tmp178,
	add	ip, r1, #176	@ tmp180, tmp180,
	adds	ip, r4, ip	@ temp.6829, pH264Ctx, tmp180
	beq	.L1990	@,
	movw	r2, #26636	@,
	ldr	r9, [r4, r2]	@ D.47626, <variable>.DPB.used_size
	cmp	r9, #0	@ D.47626,
	beq	.L1990	@,
	ldr	r1, [r4, r8]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	ip, r1	@ temp.6829, <variable>.DPB.fs
	beq	.L1991	@,
	tst	r9, #1	@ D.47626,
	ldr	r1, [fp, #-56]	@ ivtmp.6805, %sfp
	mov	r0, #0	@ i,
	bne	.L1992	@,
	mov	r0, #1	@ i,
	cmp	r0, r9	@ i, D.47626
	bcs	.L1990	@,
	ldr	r1, [fp, #-56]	@ ivtmp.6805, %sfp
	ldr	r2, [r1], #4	@ D.47627, <variable>.DPB.fs
	cmp	ip, r2	@ temp.6829, D.47627
	bne	.L1992	@,
	b	.L1991	@
.L1993:
	ldr	sl, [r2], #4	@ D.47627, <variable>.DPB.fs
	cmp	ip, sl	@ temp.6829, D.47627
	beq	.L1991	@,
	ldr	sl, [r1, #4]	@ D.47627, <variable>.DPB.fs
	add	r1, r2, #4	@ ivtmp.6805, tmp219,
	cmp	ip, sl	@ temp.6829, D.47627
	beq	.L1991	@,
.L1992:
	add	r0, r0, #1	@ tmp220, i,
	mov	r2, r1	@ tmp219, ivtmp.6805
	cmp	r0, r9	@ tmp220, D.47626
	add	r0, r0, #1	@ i, tmp220,
	bcc	.L1993	@,
.L1990:
	mov	ip, #1	@ D.47625,
.L1994:
	mov	r2, r5	@, i.6830
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC81	@,
	movt	r1, #:upper16:.LC81	@,
	str	lr, [sp, #0]	@ D.47389,
	add	r5, r5, #1	@ i.6830, i.6830,
	str	ip, [sp, #4]	@ D.47625,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r7]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r6, r6, #712	@ ivtmp.6824, ivtmp.6824,
	cmp	r3, r5	@ <variable>.TotalFsNum, i.6830
	bhi	.L1995	@,
.L1989:
	ldr	r2, [fp, #-48]	@, ReadImgNum
	mov	r0, #0	@,
	ldr	r3, [fp, #-52]	@, NewImgNum
	movw	r1, #:lower16:.LC82	@,
	movt	r1, #:upper16:.LC82	@,
	bl	dprint_vfmw	@
	movw	r1, #57704	@ tmp194,
	ldr	r0, [r4, r1]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	movw	r2, #26636	@ tmp197,
	ldr	r3, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	ldr	r1, [fp, #-52]	@ NewImgNum, NewImgNum
	sub	ip, r0, #2	@ tmp195, <variable>.TotalFsNum,
	ldr	r2, [fp, #-48]	@ ReadImgNum, ReadImgNum
	rsb	r0, r3, ip	@ tmp198, <variable>.DPB.used_size, tmp195
	add	ip, r1, r2	@ tmp191, NewImgNum, ReadImgNum
	cmp	ip, r0	@ tmp191, tmp198
	bge	.L1986	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC83	@,
	movt	r1, #:upper16:.LC83	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	bl	ClearAll	@
	mov	r0, #0	@ D.47367,
	b	.L1987	@
.L1991:
	mov	ip, #0	@ D.47625,
	b	.L1994	@
.L1981:
	mov	r0, #1	@ D.47367,
	b	.L1987	@
.L2016:
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	add	r1, r4, #8	@, pH264Ctx,
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, #0	@ D.47367,
	b	.L1987	@
	.fnend
	.size	H264DEC_GetImageBuffer, .-H264DEC_GetImageBuffer
	.align	2
	.global	H264DEC_Init
	.type	H264DEC_Init, %function
H264DEC_Init:
	.fnstart
.LFB1664:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r6, [r0, #352]	@ D.46983, <variable>.ImageQue.ResetMagicWord
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r5, r1	@ pstExtraData, pstExtraData
	movw	r1, #59264	@,
	bl	__memzero	@
	add	r0, r4, #8	@, pH264Ctx,
	str	r6, [r4, #352]	@ D.46983, <variable>.ImageQue.ResetMagicWord
	bl	ResetVoQueue	@
	mov	r0, #0	@ tmp149,
	str	r5, [r4, #0]	@ pstExtraData, <variable>.pstExtraData
	str	r0, [r4, #364]	@ tmp149, <variable>.StartMode
	str	r0, [r4, #360]	@ tmp149, <variable>.pH264DecParam
	ldr	r3, [r5, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r3, #25	@ <variable>.eCapLevel,
	beq	.L2029	@,
	movw	r0, #13576	@ tmp158,
	movw	ip, #13580	@ tmp160,
	movw	r2, #13572	@ tmp162,
	mov	lr, #32	@ tmp159,
	mov	r1, #256	@ tmp161,
	mov	r6, #136	@ tmp163,
	str	lr, [r4, r0]	@ tmp159, <variable>.MaxSpsNum
	str	r1, [r4, ip]	@ tmp161, <variable>.MaxPpsNum
	str	r6, [r4, r2]	@ tmp163, <variable>.MaxSliceNum
.L2019:
	ldr	r0, [r5, #676]	@, <variable>.s32ContextMemAddr
	movw	r6, #13592	@ tmp172,
	bl	MEM_Phy2Vir	@
	movw	r2, #13576	@ tmp168,
	ldr	r1, [r4, r2]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	mov	ip, #4000	@ tmp171,
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r3, #13580	@ tmp173,
	ldr	r3, [r4, r3]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	lr, #59144	@ tmp177,
	mul	r1, ip, r1	@ tmp169, tmp171, <variable>.MaxSpsNum
	ldr	r2, [r2, #672]	@ <variable>.s32BasicCtxSize, <variable>.s32BasicCtxSize
	movw	ip, #13588	@ tmp167,
	add	r0, r0, r2	@ D.47004,, <variable>.s32BasicCtxSize
	str	r0, [r4, ip]	@ D.47004, <variable>.SPS
	add	ip, r0, r1	@ prephitmp.6864, D.47004, tmp169
	mov	r2, #2208	@ tmp176,
	cmp	r0, #0	@ D.47004,
	str	ip, [r4, r6]	@ prephitmp.6864, <variable>.PPS
	mla	r2, r2, r3, ip	@ D.47016, tmp176, <variable>.MaxPpsNum, prephitmp.6864
	str	r2, [r4, lr]	@ D.47016, <variable>.DecSlicePara
	beq	.L2020	@,
	cmp	ip, #0	@ prephitmp.6864,
	beq	.L2020	@,
	cmp	r2, #0	@ D.47016,
	beq	.L2020	@,
	ldr	lr, [r5, #696]	@ <variable>.s32KeepSPSPPS, <variable>.s32KeepSPSPPS
	cmp	lr, #0	@ <variable>.s32KeepSPSPPS,
	beq	.L2030	@,
.L2024:
	movw	r5, #13572	@ tmp195,
	movw	r0, #4060	@ tmp197,
	ldr	r1, [r4, r5]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	movw	r2, #13576	@ tmp192,
	ldr	ip, [r4, r2]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	movw	lr, #17620	@ tmp190,
	str	r3, [r4, lr]	@ prephitmp.6862, <variable>.CurrPPS.pic_parameter_set_id
	movw	r5, #59144	@ tmp194,
	mul	r1, r0, r1	@ __n, tmp197, <variable>.MaxSliceNum
	movw	r3, #14340	@ tmp191,
	str	ip, [r4, r3]	@ <variable>.MaxSpsNum, <variable>.CurrSPS.seq_parameter_set_id
	ldr	r0, [r4, r5]	@ __p, <variable>.DecSlicePara
	cmp	r1, #0	@ __n,
	bne	.L2031	@,
.L2026:
	movw	r3, #57704	@ tmp214,
	movw	r0, #59168	@ tmp198,
	mov	lr, #40	@ tmp215,
	movw	ip, #57708	@ tmp216,
	str	lr, [r4, r3]	@ tmp215, <variable>.TotalFsNum
	movw	r1, #57728	@ tmp238,
	movw	lr, #59172	@ tmp200,
	movw	r3, #59176	@ tmp202,
	mov	r5, #0	@ tmp199,
	mov	r2, #17	@ tmp217,
	str	r5, [r4, r0]	@ tmp199, <variable>.TotalNal
	mov	r0, #25	@ tmp239,
	str	r2, [r4, ip]	@ tmp217, <variable>.TotalPmvNum
	movw	ip, #59180	@ tmp204,
	str	r0, [r4, r1]	@ tmp239, <variable>.frame_rate
	movw	r2, #59184	@ tmp206,
	str	r5, [r4, lr]	@ tmp199, <variable>.TotalSPS
	movw	r1, #59188	@ tmp208,
	str	r5, [r4, r3]	@ tmp199, <variable>.TotalPPS
	movw	lr, #59192	@ tmp210,
	movw	r3, #59196	@ tmp212,
	str	r5, [r4, ip]	@ tmp199, <variable>.TotalSlice
	str	r5, [r4, r2]	@ tmp199, <variable>.SeqCnt
	movw	ip, #59160	@ tmp218,
	str	r5, [r4, r1]	@ tmp199, <variable>.TotalPicNum
	movw	r2, #57732	@ tmp220,
	str	r5, [r4, lr]	@ tmp199, <variable>.TotalFrameNum
	movw	r1, #57736	@ tmp222,
	str	r5, [r4, r3]	@ tmp199, <variable>.TotalFieldNum
	movw	lr, #57740	@ tmp224,
	movw	r3, #57744	@ tmp226,
	str	r5, [r4, r1]	@ tmp199, <variable>.pUsrDatArray
	str	r5, [r4, ip]	@ tmp199, <variable>.MutexHold
	movw	r1, #57720	@ tmp232,
	str	r5, [r4, lr]	@ tmp199, <variable>.pUsrDatArray
	movw	ip, #57748	@ tmp228,
	str	r5, [r4, r3]	@ tmp199, <variable>.pUsrDatArray
	movw	lr, #59228	@ tmp234,
	str	r5, [r4, r2]	@ tmp199, <variable>.TotalUsrDatNum
	movw	r3, #57724	@ tmp236,
	movw	r2, #57712	@ tmp230,
	str	r5, [r4, ip]	@ tmp199, <variable>.pUsrDatArray
	mov	r0, r4	@, pH264Ctx
	str	r5, [r4, r2]	@ tmp199, <variable>.AllowStartDec
	str	r5, [r4, r1]	@ tmp199, <variable>.IDRFound
	str	r5, [r4, lr]	@ tmp199, <variable>.FirstFrameDisplayed
	str	r5, [r4, r3]	@ tmp199, <variable>.PPicFound
	bl	VCTRL_GetChanIDByCtx	@
	movw	ip, #59224	@ tmp240,
	cmn	r0, #1	@ D.47050,
	str	r0, [r4, ip]	@ D.47050, <variable>.ChanID
	beq	.L2032	@,
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, tmp199
	bl	ClearAll	@
	mov	r0, #1	@ D.47023,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2030:
	cmp	r1, #0	@ tmp169,
	bne	.L2033	@,
.L2025:
	movw	r5, #13580	@ tmp187,
	mov	r0, #2208	@ tmp188,
	ldr	r3, [r4, r5]	@ prephitmp.6862, <variable>.MaxPpsNum
	mul	r1, r0, r3	@ __n, tmp188, prephitmp.6862
	cmp	r1, #0	@ __n,
	beq	.L2024	@,
	mov	r0, ip	@, prephitmp.6864
	bl	__memzero	@
	ldr	r3, [r4, r5]	@ prephitmp.6862, <variable>.MaxPpsNum
	b	.L2024	@
.L2031:
	bl	__memzero	@
	b	.L2026	@
.L2029:
	ldr	r0, [r5, #760]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.stChanOption.s32MaxSpsNum
	movw	r3, #13576	@ tmp152,
	movw	lr, #13580	@ tmp154,
	movw	r1, #13572	@ tmp156,
	str	r0, [r4, r3]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.MaxSpsNum
	ldr	ip, [r5, #764]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.stChanOption.s32MaxPpsNum
	str	ip, [r4, lr]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.MaxPpsNum
	ldr	r2, [r5, #752]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.stChanOption.s32MaxSliceNum
	str	r2, [r4, r1]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.MaxSliceNum
	b	.L2019	@
.L2033:
	bl	__memzero	@
	ldr	ip, [r4, r6]	@ prephitmp.6864, <variable>.PPS
	b	.L2025	@
.L2020:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC84	@,
	ldr	r2, .L2034	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #11813	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.47023,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2032:
	mov	r0, r5	@, tmp199
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.47023,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2035:
	.align	2
.L2034:
	.word	.LANCHOR0+136
	.fnend
	.size	H264DEC_Init, .-H264DEC_Init
	.align	2
	.global	AllocFrameStore
	.type	AllocFrameStore, %function
AllocFrameStore:
	.fnstart
.LFB1612:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20689	@ tmp160,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	str	r1, [fp, #-52]	@ IsDecGap, %sfp
	cmp	r3, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L2078	@,
	movw	r0, #20690	@ tmp162,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r3, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r3, #2	@,
	moveq	r3, #1	@,
.L2078:
	movw	r2, #59152	@ tmp164,
	str	r3, [fp, #-48]	@, %sfp
	ldr	r1, [r4, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r1, #2	@ <variable>.OldDecMode,
	beq	.L2044	@,
	ldr	r3, [fp, #-48]	@, %sfp
	movw	ip, #55793	@ tmp169,
	mov	r5, #0	@ tmp170,
	strb	r5, [r4, ip]	@ tmp170, <variable>.CurrPic.field_pair_flag
	cmp	r3, #2	@,
	beq	.L2083	@,
	ldr	r2, [fp, #-48]	@, %sfp
	cmp	r2, #1	@,
	beq	.L2084	@,
.L2044:
	mov	r2, #0	@ tmp209,
	movw	r3, #55793	@ tmp208,
.L2079:
	strb	r2, [r4, r3]	@ tmp209, <variable>.CurrPic.field_pair_flag
.L2041:
	movw	r3, #57704	@ tmp214,
	mov	r5, #0	@ tmp212,
	ldr	r7, [r4, r3]	@ D.42294, <variable>.TotalFsNum
	movw	lr, #55792	@ tmp211,
	strb	r5, [r4, lr]	@ tmp212, <variable>.CurrPic.state
	cmp	r7, r5	@ D.42294,
	beq	.L2051	@,
	add	r6, r4, #27136	@ ivtmp.6922, pH264Ctx,
	add	r8, r4, #26368	@ ivtmp.6917, pH264Ctx,
	add	r6, r6, #177	@ ivtmp.6922, ivtmp.6922,
	add	r8, r8, #76	@ ivtmp.6917, ivtmp.6917,
	mov	sl, #712	@ tmp370,
	movw	r9, #26440	@ tmp372,
.L2057:
	ldrb	r0, [r6, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #0	@ <variable>.is_used,
	bne	.L2052	@,
	mul	r1, sl, r5	@ tmp217, tmp370, i
	add	r2, r1, #27136	@ tmp219, tmp217,
	add	ip, r2, #176	@ tmp219, tmp219,
	adds	r3, r4, ip	@ D.42290, pH264Ctx, tmp219
	beq	.L2053	@,
	movw	ip, #26636	@,
	ldr	lr, [r4, ip]	@ D.47633, <variable>.DPB.used_size
	cmp	lr, #0	@ D.47633,
	beq	.L2053	@,
	ldr	r2, [r4, r9]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r3, r2	@ D.42290, <variable>.DPB.fs
	beq	.L2052	@,
	tst	lr, #1	@ D.47633,
	mov	r1, r8	@ ivtmp.6917, ivtmp.6917
	bne	.L2054	@,
	mov	r0, #1	@ i,
	cmp	r0, lr	@ i, D.47633
	bcs	.L2053	@,
	mov	r1, r8	@ ivtmp.6917, ivtmp.6917
	ldr	ip, [r1], #4	@ D.47634, <variable>.DPB.fs
	cmp	r3, ip	@ D.42290, D.47634
	bne	.L2054	@,
	b	.L2052	@
.L2055:
	ldr	ip, [r2], #4	@ D.47634, <variable>.DPB.fs
	cmp	r3, ip	@ D.42290, D.47634
	beq	.L2052	@,
	ldr	ip, [r1, #4]	@ D.47634, <variable>.DPB.fs
	add	r1, r2, #4	@ ivtmp.6917, tmp379,
	cmp	r3, ip	@ D.42290, D.47634
	beq	.L2052	@,
.L2054:
	add	r0, r0, #1	@ tmp380, i,
	mov	r2, r1	@ tmp379, ivtmp.6917
	cmp	r0, lr	@ tmp380, D.47633
	add	r0, r0, #1	@ i, tmp380,
	bcc	.L2055	@,
.L2053:
	mov	r9, #712	@ tmp235,
	add	sl, r4, #55808	@ tmp369, pH264Ctx,
	mla	r0, r9, r5, r4	@ tmp236, tmp235, i, pH264Ctx
	movw	r6, #56336	@ tmp228,
	movw	r9, #55792	@ tmp225,
	movw	r2, #56380	@ tmp230,
	mov	r8, #0	@ tmp229,
	str	r3, [r4, r6]	@ D.42290, <variable>.CurrPic.frame_store
	add	ip, r0, #27136	@, tmp236,
	mov	r5, #1	@ tmp226,
	add	r1, ip, #184	@,,
	strb	r5, [r4, r9]	@ tmp226, <variable>.CurrPic.state
	mov	lr, #101	@ tmp231,
	str	r8, [r3, #696]	@ tmp229, <variable>.err_level
	mov	r0, sl	@, tmp369
	str	lr, [r4, r2]	@ tmp231, <variable>.CurrPic.err_level
	mov	r2, #528	@,
	bl	memcpy	@
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r1, #56008	@ tmp242,
	str	r8, [r4, r1]	@ tmp229, <variable>.CurrPic.fs_image.error_level
	strb	r8, [r3, #3]	@ tmp229, <variable>.mode_skip_flag
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r8, [r0, #684]	@ tmp229, <variable>.is_displayed
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r8, [ip, #2]	@ tmp229, <variable>.is_reference
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r5, [r2, #4]	@ tmp226, <variable>.is_in_dpb
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r8, [r1, #676]	@ tmp229, <variable>.eFoState
	ldrb	r3, [r4, r9]	@ zero_extendqisi2	@, <variable>.CurrPic.state
	cmp	r3, r5	@,
	str	r3, [fp, #-56]	@, %sfp
	bne	.L2051	@,
	ldr	r7, [fp, #-52]	@, %sfp
	movw	r5, #59224	@ tmp265,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	rsbs	r1, r7, #1	@,
	movcc	r1, #0	@
	bl	FSP_NewLogicFs	@
	mov	r7, r0	@ LogicFsID,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, r7	@, LogicFsID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ tmp279, pstLFs,
	movne	r3, #1	@ tmp279
	cmp	r7, #0	@ LogicFsID,
	mov	r5, r0	@ pstLFs,
	movlt	r3, #0	@, tmp279,
	cmp	r3, #0	@ tmp279,
	beq	.L2059	@,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r6, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r6, #25	@ <variable>.eCapLevel,
	beq	.L2085	@,
.L2060:
	movw	r6, #56336	@ tmp298,
	add	r1, r5, #8	@, pstLFs,
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #528	@,
	add	r0, r3, #8	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, sl	@, tmp369
	mov	r2, #528	@,
	add	r1, ip, #8	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	ip, r7	@ prephitmp.6900, LogicFsID
	str	r7, [r0, #656]	@ LogicFsID, <variable>.logic_fs_id
	ldrsb	r1, [r5, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	movw	r5, #56404	@ tmp316,
	str	r1, [r4, r5]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
.L2061:
	movw	r1, #20689	@ tmp329,
	ldr	r5, [fp, #-48]	@, %sfp
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r2, #56336	@ tmp328,
	ldr	r1, [r4, r2]	@ temp.6941, <variable>.CurrPic.frame_store
	movw	r0, #55795	@ tmp326,
	cmp	r3, #0	@ <variable>.CurrSlice.field_pic_flag,
	uxtb	r2, r5	@ D.42347,
	movw	r5, #55793	@ tmp332,
	strb	r2, [r4, r0]	@ D.42347, <variable>.CurrPic.structure
	movne	r3, #3	@, iftmp.641,
	strb	r3, [r1, #536]	@ iftmp.641, <variable>.frame.structure
	ldrb	r1, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r1, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2086	@,
	ldr	r1, [fp, #-48]	@, %sfp
	movw	r0, #20708	@ tmp353,
	movw	r3, #20720	@ tmp356,
	ldr	r5, [r4, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r3, #59236	@ tmp359,
	cmp	r1, #0	@,
	ldr	r1, [r4, r3]	@ <variable>.PicCounter, <variable>.PicCounter
	movw	r3, #57040	@ tmp350,
	strb	r2, [r4, r3]	@ D.42347, <variable>.PrevPic.structure
	movw	r3, #57048	@ tmp352,
	str	r5, [r4, r3]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	movw	r3, #57044	@ tmp355,
	str	r0, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	movw	r3, #57056	@ tmp358,
	str	r1, [r4, r3]	@ <variable>.PicCounter, <variable>.PrevPic.pic_counter
	movw	r3, #57060	@ tmp361,
	str	ip, [r4, r3]	@ prephitmp.6900, <variable>.PrevPic.image_id
	movne	r0, #0	@ D.42300,
	ldreq	r0, [fp, #-48]	@ D.42300, %sfp
	movwne	r3, #57064	@ tmp362,
	movweq	r3, #57064	@ tmp365,
	movne	r2, #1	@ tmp363,
	strneb	r2, [r4, r3]	@ tmp363, <variable>.PrevPic.FrameStoreFlag
	streqb	r0, [r4, r3]	@ D.42300, <variable>.PrevPic.FrameStoreFlag
.L2058:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2052:
	add	r5, r5, #1	@ i, i,
	add	r6, r6, #712	@ ivtmp.6922, ivtmp.6922,
	cmp	r7, r5	@ D.42294, i
	bhi	.L2057	@,
.L2051:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC86	@,
	movt	r1, #:upper16:.LC86	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	bl	ClearAll	@
	mvn	r0, #0	@ D.42300,
	b	.L2058	@
.L2083:
	movw	r1, #57040	@ tmp172,
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.PrevPic.structure, <variable>.PrevPic.structure
	cmp	r0, #1	@ <variable>.PrevPic.structure,
	beq	.L2043	@,
	mov	r2, #0	@ tmp209,
	movw	r3, #55793	@ tmp208,
	b	.L2079	@
.L2084:
	movw	ip, #57040	@ tmp174,
	ldrb	r5, [r4, ip]	@ zero_extendqisi2	@ <variable>.PrevPic.structure, <variable>.PrevPic.structure
	cmp	r5, #2	@ <variable>.PrevPic.structure,
	bne	.L2044	@,
.L2043:
	movw	r0, #59152	@ tmp176,
	ldr	r3, [r4, r0]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r3, #2	@ <variable>.OldDecMode,
	beq	.L2045	@,
	movw	ip, #57048	@ tmp178,
	movw	r5, #20708	@ tmp179,
	ldr	r1, [r4, ip]	@ <variable>.PrevPic.frame_num, <variable>.PrevPic.frame_num
	ldr	r2, [r4, r5]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	cmp	r1, r2	@ <variable>.PrevPic.frame_num, <variable>.CurrSlice.frame_num
	bne	.L2041	@,
.L2045:
	movw	r0, #20720	@ tmp182,
	ldr	r3, [r4, r0]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2046	@,
	movw	r2, #57044	@ tmp184,
	ldr	r1, [r4, r2]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.PrevPic.nal_ref_idc,
	bne	.L2041	@,
.L2047:
	movw	r5, #59236	@ tmp188,
	sub	r2, r5, #4	@ tmp189, tmp189,
	ldr	r1, [r4, r5]	@ <variable>.PicCounter, <variable>.PicCounter
	ldr	r0, [r4, r2]	@ <variable>.PrevStorePicCounter, <variable>.PrevStorePicCounter
	rsb	r3, r0, r1	@ tmp190, <variable>.PrevStorePicCounter, <variable>.PicCounter
	cmp	r3, #2	@ tmp190,
	bhi	.L2041	@,
	movw	ip, #56336	@ tmp196,
	movw	r3, #55793	@ tmp193,
	ldr	r2, [r4, ip]	@ D.42267, <variable>.CurrPic.frame_store
	mov	r1, #1	@ tmp194,
	strb	r1, [r4, r3]	@ tmp194, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ D.42267,
	beq	.L2079	@,
	ldr	r0, [fp, #-48]	@, %sfp
	cmp	r0, #2	@,
	beq	.L2087	@,
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, #1	@,
	beq	.L2088	@,
.L2050:
	mov	ip, #0	@ prephitmp.6900,
	b	.L2061	@
.L2086:
	movw	r1, #20708	@ tmp338,
	movw	r3, #20720	@ tmp341,
	ldr	r5, [r4, r1]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movw	r2, #59236	@ tmp344,
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	mov	r3, #0	@ tmp335,
	ldr	r1, [r4, r2]	@ <variable>.PicCounter, <variable>.PicCounter
	movw	r2, #57048	@ tmp337,
	str	r5, [r4, r2]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	movw	r2, #57044	@ tmp340,
	str	r0, [r4, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	movw	r2, #57056	@ tmp343,
	str	r1, [r4, r2]	@ <variable>.PicCounter, <variable>.PrevPic.pic_counter
	movw	r1, #57060	@ tmp346,
	str	ip, [r4, r1]	@ prephitmp.6900, <variable>.PrevPic.image_id
	movw	r2, #57064	@ tmp347,
	movw	ip, #57040	@ tmp334,
	mov	r0, r3	@ D.42300, tmp335
	strb	r3, [r4, r2]	@ tmp335, <variable>.PrevPic.FrameStoreFlag
	strb	r3, [r4, ip]	@ tmp335, <variable>.PrevPic.structure
	b	.L2058	@
.L2085:
	mov	lr, #13568	@ tmp282,
	ldr	r6, [r0, #200]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	ldr	r3, [r4, lr]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	movw	r2, #13564	@ tmp290,
	str	r8, [r5, #256]	@ tmp229, <variable>.stDispImg.SkipRatio
	str	r8, [r5, #240]	@ tmp229, <variable>.stDispImg.FrameStreamSize
	mov	r1, r3, asl #4	@ HeightAligh, <variable>.CurHeightInMb,
	str	r8, [r5, #244]	@ tmp229, <variable>.stDispImg.MaxMV
	str	r8, [r5, #248]	@ tmp229, <variable>.stDispImg.MinMV
	mul	r6, r6, r1	@ ChromOffset, <variable>.stDispImg.image_stride, HeightAligh
	str	r8, [r5, #252]	@ tmp229, <variable>.stDispImg.AvgMV
	ldr	ip, [r4, r2]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	ldr	r0, [r0, #112]	@ <variable>.stDispImg.luma_phy_addr, <variable>.stDispImg.luma_phy_addr
	str	r1, [r5, #176]	@ HeightAligh, <variable>.stDispImg.image_height
	mov	lr, ip, asl #4	@ tmp292, <variable>.CurWidthInMb,
	add	r0, r6, r0	@ D.42321, ChromOffset, <variable>.stDispImg.luma_phy_addr
	str	lr, [r5, #172]	@ tmp292, <variable>.stDispImg.image_width
	str	r0, [r5, #116]	@ D.42321, <variable>.stDispImg.chrom_phy_addr
	bl	MEM_Phy2Vir	@
	ldr	r3, [r5, #128]	@ <variable>.stDispImg.luma_2d_phy_addr, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r1, [r5, #96]	@ <variable>.stDispImg.top_luma_phy_addr, <variable>.stDispImg.top_luma_phy_addr
	add	ip, r6, r3	@ D.42335, ChromOffset, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r2, [r5, #200]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	add	r6, r6, r1	@ D.42328, ChromOffset, <variable>.stDispImg.top_luma_phy_addr
	str	ip, [r5, #132]	@ D.42335, <variable>.stDispImg.chrom_2d_phy_addr
	add	r1, r6, r2	@ tmp296, D.42328, <variable>.stDispImg.image_stride
	str	r6, [r5, #100]	@ D.42328, <variable>.stDispImg.top_chrom_phy_addr
	str	r1, [r5, #108]	@ tmp296, <variable>.stDispImg.btm_chrom_phy_addr
	str	r0, [r5, #44]	@, <variable>.stDispImg.chrom_vir_addr
	mov	r0, ip	@, D.42335
	bl	MEM_Phy2Vir	@
	str	r0, [r5, #60]	@, <variable>.stDispImg.chrom_2d_vir_addr
	b	.L2060	@
.L2046:
	movw	ip, #57044	@ tmp186,
	ldr	r5, [r4, ip]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r5, #0	@ <variable>.PrevPic.nal_ref_idc,
	beq	.L2041	@,
	b	.L2047	@
.L2088:
	ldrb	r5, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r5, #2	@ <variable>.is_used,
	beq	.L2050	@,
.L2080:
	mov	r7, #0	@ tmp203,
	strb	r7, [r4, r3]	@ tmp203, <variable>.CurrPic.field_pair_flag
	b	.L2041	@
.L2059:
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, r3	@, tmp279
	strb	r3, [r4, r9]	@ tmp279, <variable>.CurrPic.state
	movw	r1, #:lower16:.LC87	@,
	movt	r1, #:upper16:.LC87	@,
	strb	r3, [r2, #4]	@ tmp279, <variable>.is_in_dpb
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [fp, #-56]	@, %sfp
	bl	ClearAll	@
	mvn	r0, #0	@ D.42300,
	b	.L2058	@
.L2087:
	ldrb	r2, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, r1	@ <variable>.is_used,
	bne	.L2080	@,
	mov	ip, #0	@ prephitmp.6900,
	b	.L2061	@
	.fnend
	.size	AllocFrameStore, .-AllocFrameStore
	.align	2
	.global	OutputFrmToVO
	.type	OutputFrmToVO, %function
OutputFrmToVO:
	.fnstart
.LFB1562:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pH264Ctx,
	cmpne	r1, #0	@, pFrameStore,
	mov	r5, r1	@ pFrameStore, pFrameStore
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movne	r3, #0	@, tmp153
	moveq	r3, #1	@, tmp153
	mov	r6, r2	@ is_last_frame, is_last_frame
	beq	.L2106	@,
	ldr	r1, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ <variable>.s32DecOrderOutput,
	ble	.L2092	@,
	movw	r2, #59152	@ tmp157,
	ldr	ip, [r0, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	ip, #2	@ <variable>.OldDecMode,
	beq	.L2092	@,
	movw	ip, #57072	@ tmp159,
	ldr	r1, [r0, ip]	@ D.39669, <variable>.pDirectOutBuf
	cmp	r1, #0	@ D.39669,
	strneb	r3, [r1, #1]	@ tmp153, <variable>.is_used
	movne	r0, #1	@ D.39661,
	strne	r3, [r4, ip]	@ tmp153, <variable>.pDirectOutBuf
	beq	.L2093	@,
.L2091:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L2092:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, pFrameStore
	bl	CheckFrameStore	@
	cmn	r0, #3	@,
	beq	.L2093	@,
	movw	r7, #57072	@ tmp164,
	ldr	r1, [r4, r7]	@ temp.6981, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6981,
	beq	.L2094	@,
	mov	r0, r4	@, pH264Ctx
	bl	GetImagePara	@
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [r4, r7]	@, <variable>.pDirectOutBuf
	bl	CheckFrameStore	@
	subs	r3, r0, #0	@ ret.6983,
	beq	.L2107	@,
	cmn	r3, #3	@ ret.6983,
	beq	.L2099	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC91	@,
	movw	r2, #1802	@,
	movt	r1, #:upper16:.LC91	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [r3, #204]	@, <variable>.fs_image.image_id
	bl	H264DEC_RecycleImage	@
.L2099:
	movw	r3, #57072	@ tmp217,
	mov	r0, #0	@ tmp218,
	ldr	ip, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [ip, #1]	@ tmp218, <variable>.is_used
	ldr	lr, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	lr, r5	@ <variable>.pDirectOutBuf, pFrameStore
	streq	r0, [r4, r3]	@ tmp218, <variable>.pDirectOutBuf
	beq	.L2091	@,
	str	r0, [r4, r3]	@ tmp218, <variable>.pDirectOutBuf
.L2094:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, pFrameStore
	bl	GetImagePara	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, pFrameStore
	bl	CheckFrameStore	@
	subs	r3, r0, #0	@ ret.6998,
	beq	.L2108	@,
	cmn	r3, #3	@ ret.6998,
	beq	.L2093	@,
	mov	r2, #1856	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC91	@,
	movt	r1, #:upper16:.LC91	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [r5, #204]	@, <variable>.fs_image.image_id
	bl	H264DEC_RecycleImage	@
	mov	r0, #2	@ D.39661,
	b	.L2091	@
.L2106:
	mov	r2, r0	@, pH264Ctx
	mov	r3, r1	@, pFrameStore
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC88	@,
	movt	r1, #:upper16:.LC88	@,
	bl	dprint_vfmw	@
	mov	r0, #2	@ D.39661,
	b	.L2091	@
.L2093:
	mov	r0, #1	@ D.39661,
	b	.L2091	@
.L2108:
	movw	r7, #59224	@ tmp226,
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pstLogicFsImage.7002,
	beq	.L2109	@,
	cmp	r6, #1	@ is_last_frame,
	streq	r6, [r7, #268]	@ is_last_frame, <variable>.last_frame
	movw	r6, #59224	@ tmp235,
	mov	r1, #0	@,
	ldr	r0, [r4, r6]	@ <variable>.ChanID, <variable>.ChanID
	mov	r2, r4	@, pH264Ctx
	add	r3, r4, #8	@, pH264Ctx,
	str	r7, [sp, #0]	@ pstLogicFsImage.7002,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.7005,
	bne	.L2110	@,
	mov	r1, r7	@, pstLogicFsImage.7002
	mov	r0, r4	@, pH264Ctx
	bl	SetFrmRepeatCount	@
	movw	r2, #59252	@ tmp242,
	movw	r3, #59244	@ tmp246,
	ldr	ip, [r4, r2]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	r1, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	mov	r0, #0	@ D.39661,
	add	ip, ip, #1	@ tmp245, <variable>.numOutputFrame,
	str	ip, [r4, r2]	@ tmp245, <variable>.numOutputFrame
	add	r2, r1, #2	@ tmp249, <variable>.PicOutCounter,
	str	r2, [r4, r3]	@ tmp249, <variable>.PicOutCounter
	b	.L2091	@
.L2107:
	ldr	lr, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r8, #59224	@ tmp167,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r3, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r8, r0, #0	@ pstLogicFsImage,
	beq	.L2111	@,
	ldr	r0, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r7, #59224	@ tmp189,
	mov	r1, #0	@,
	mov	r2, r4	@, pH264Ctx
	cmp	r6, #1	@ is_last_frame,
	cmpeq	r0, r5	@, <variable>.pDirectOutBuf, pFrameStore
	add	r3, r4, #8	@, pH264Ctx,
	moveq	r0, #1	@ tmp188,
	streq	r0, [r8, #268]	@ tmp188, <variable>.last_frame
	ldr	r0, [r4, r7]	@ <variable>.ChanID, <variable>.ChanID
	str	r8, [sp, #0]	@ pstLogicFsImage,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.6990,
	bne	.L2112	@,
	mov	r1, r8	@, pstLogicFsImage
	mov	r0, r4	@, pH264Ctx
	bl	SetFrmRepeatCount	@
	movw	r1, #59252	@ tmp204,
	movw	r3, #59244	@ tmp208,
	ldr	r2, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	ip, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, r2, #1	@ tmp207, <variable>.numOutputFrame,
	str	r0, [r4, r1]	@ tmp207, <variable>.numOutputFrame
	add	r2, ip, #2	@ tmp211, <variable>.PicOutCounter,
	str	r2, [r4, r3]	@ tmp211, <variable>.PicOutCounter
	b	.L2099	@
.L2110:
	mov	r2, r0	@, ret.7005
	movw	r1, #:lower16:.LC90	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	bl	ClearAll	@
	mvn	r0, #0	@ D.39661,
	b	.L2091	@
.L2112:
	mov	r2, r0	@, ret.6990
	movw	r5, #57072	@ tmp194,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	mov	r6, r0	@ tmp195,
	bl	dprint_vfmw	@
	ldr	r1, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, r6	@, tmp195
	strb	r6, [r1, #1]	@ tmp195, <variable>.is_used
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	str	r6, [r4, r5]	@ tmp195, <variable>.pDirectOutBuf
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	bl	ClearAll	@
	mvn	r0, #0	@ D.39661,
	b	.L2091	@
.L2109:
	movw	r1, #:lower16:.LC92	@,
	movw	r2, #1828	@,
	movt	r1, #:upper16:.LC92	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39661,
	b	.L2091	@
.L2111:
	movw	r1, #:lower16:.LC89	@,
	movw	r2, #1775	@,
	movt	r1, #:upper16:.LC89	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.39661,
	b	.L2091	@
	.fnend
	.size	OutputFrmToVO, .-OutputFrmToVO
	.align	2
	.global	InitDPB
	.type	InitDPB, %function
InitDPB:
	.fnstart
.LFB1605:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r0, #0	@ pH264Ctx, pH264Ctx
	mvneq	r0, #0	@ D.41784,
	beq	.L2169	@,
	bl	ClearAllSlice	@
	movw	r3, #26440	@ tmp191,
	ldr	r3, [r4, r3]	@ temp.7078, <variable>.DPB.fs
	cmp	r3, #0	@ temp.7078,
	beq	.L2115	@,
	movw	r2, #59224	@ tmp192,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2115:
	movw	r0, #26504	@ tmp195,
	ldr	r3, [r4, r0]	@ temp.7076, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7076,
	beq	.L2116	@,
	movw	r5, #59224	@ tmp196,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2116:
	movw	r1, #26568	@ tmp199,
	ldr	r3, [r4, r1]	@ temp.7069, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7069,
	beq	.L2117	@,
	movw	r6, #59224	@ tmp200,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2117:
	movw	r5, #26444	@ tmp209,
	mov	lr, #0	@ tmp204,
	ldr	r2, [r4, r5]	@ temp.7079, <variable>.DPB.fs
	movw	r0, #26440	@ tmp207,
	movw	r3, #26568	@ tmp203,
	movw	ip, #26504	@ tmp205,
	cmp	r2, lr	@ temp.7079,
	str	lr, [r4, r0]	@ tmp204, <variable>.DPB.fs
	str	lr, [r4, r3]	@ tmp204, <variable>.DPB.fs_ltref
	str	lr, [r4, ip]	@ tmp204, <variable>.DPB.fs_ref
	beq	.L2118	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp210,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2118:
	movw	r1, #26508	@ tmp213,
	ldr	r3, [r4, r1]	@ temp.7082, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7082,
	beq	.L2119	@,
	movw	r6, #59224	@ tmp214,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2119:
	movw	ip, #26572	@ tmp217,
	ldr	r3, [r4, ip]	@ temp.7085, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7085,
	beq	.L2120	@,
	movw	lr, #59224	@ tmp218,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2120:
	movw	r6, #26448	@ tmp227,
	mov	r3, #0	@ tmp222,
	ldr	r2, [r4, r6]	@ temp.7088, <variable>.DPB.fs
	movw	r1, #26444	@ tmp225,
	movw	r5, #26572	@ tmp221,
	movw	r0, #26508	@ tmp223,
	cmp	r2, r3	@ temp.7088,
	str	r3, [r4, r1]	@ tmp222, <variable>.DPB.fs
	str	r3, [r4, r5]	@ tmp222, <variable>.DPB.fs_ltref
	str	r3, [r4, r0]	@ tmp222, <variable>.DPB.fs_ref
	beq	.L2121	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp228,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2121:
	movw	ip, #26512	@ tmp231,
	ldr	r3, [r4, ip]	@ temp.7091, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7091,
	beq	.L2122	@,
	movw	lr, #59224	@ tmp232,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2122:
	movw	r0, #26576	@ tmp235,
	ldr	r3, [r4, r0]	@ temp.7094, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7094,
	beq	.L2123	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp236,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2123:
	movw	lr, #26452	@ tmp245,
	mov	r6, #0	@ tmp240,
	ldr	r2, [r4, lr]	@ temp.7097, <variable>.DPB.fs
	movw	ip, #26448	@ tmp243,
	movw	r1, #26576	@ tmp239,
	movw	r5, #26512	@ tmp241,
	cmp	r2, r6	@ temp.7097,
	str	r6, [r4, ip]	@ tmp240, <variable>.DPB.fs
	str	r6, [r4, r1]	@ tmp240, <variable>.DPB.fs_ltref
	str	r6, [r4, r5]	@ tmp240, <variable>.DPB.fs_ref
	beq	.L2124	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp246,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2124:
	movw	r0, #26516	@ tmp249,
	ldr	r3, [r4, r0]	@ temp.7100, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7100,
	beq	.L2125	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp250,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2125:
	movw	r5, #26580	@ tmp253,
	ldr	r3, [r4, r5]	@ temp.7103, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7103,
	beq	.L2126	@,
	movw	r6, #59224	@ tmp254,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2126:
	movw	r3, #26456	@ tmp263,
	mov	ip, #0	@ tmp258,
	ldr	r2, [r4, r3]	@ temp.7106, <variable>.DPB.fs
	movw	r0, #26452	@ tmp261,
	movw	lr, #26580	@ tmp257,
	movw	r1, #26516	@ tmp259,
	cmp	r2, ip	@ temp.7106,
	str	ip, [r4, r0]	@ tmp258, <variable>.DPB.fs
	str	ip, [r4, lr]	@ tmp258, <variable>.DPB.fs_ltref
	str	ip, [r4, r1]	@ tmp258, <variable>.DPB.fs_ref
	beq	.L2127	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp264,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2127:
	movw	r5, #26520	@ tmp267,
	ldr	r3, [r4, r5]	@ temp.7109, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7109,
	beq	.L2128	@,
	movw	r6, #59224	@ tmp268,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2128:
	movw	r1, #26584	@ tmp271,
	ldr	r3, [r4, r1]	@ temp.7112, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7112,
	beq	.L2129	@,
	movw	ip, #59224	@ tmp272,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2129:
	movw	r6, #26460	@ tmp281,
	mov	r0, #0	@ tmp276,
	ldr	r2, [r4, r6]	@ temp.7115, <variable>.DPB.fs
	movw	r5, #26456	@ tmp279,
	movw	r3, #26584	@ tmp275,
	movw	lr, #26520	@ tmp277,
	cmp	r2, r0	@ temp.7115,
	str	r0, [r4, r5]	@ tmp276, <variable>.DPB.fs
	str	r0, [r4, r3]	@ tmp276, <variable>.DPB.fs_ltref
	str	r0, [r4, lr]	@ tmp276, <variable>.DPB.fs_ref
	beq	.L2130	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp282,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2130:
	movw	r1, #26524	@ tmp285,
	ldr	r3, [r4, r1]	@ temp.7118, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7118,
	beq	.L2131	@,
	movw	ip, #59224	@ tmp286,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2131:
	movw	lr, #26588	@ tmp289,
	ldr	r3, [r4, lr]	@ temp.7121, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7121,
	beq	.L2132	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp290,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2132:
	movw	ip, #26464	@ tmp299,
	mov	r5, #0	@ tmp294,
	ldr	r2, [r4, ip]	@ temp.7124, <variable>.DPB.fs
	movw	r1, #26460	@ tmp297,
	movw	r6, #26588	@ tmp293,
	movw	r0, #26524	@ tmp295,
	cmp	r2, r5	@ temp.7124,
	str	r5, [r4, r1]	@ tmp294, <variable>.DPB.fs
	str	r5, [r4, r6]	@ tmp294, <variable>.DPB.fs_ltref
	str	r5, [r4, r0]	@ tmp294, <variable>.DPB.fs_ref
	beq	.L2133	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp300,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2133:
	movw	lr, #26528	@ tmp303,
	ldr	r3, [r4, lr]	@ temp.7127, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7127,
	beq	.L2134	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp304,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2134:
	movw	r0, #26592	@ tmp307,
	ldr	r3, [r4, r0]	@ temp.7130, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7130,
	beq	.L2135	@,
	movw	r5, #59224	@ tmp308,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2135:
	movw	r3, #26468	@ tmp317,
	mov	ip, #0	@ tmp312,
	ldr	r2, [r4, r3]	@ temp.7133, <variable>.DPB.fs
	movw	lr, #26464	@ tmp315,
	movw	r1, #26592	@ tmp311,
	movw	r6, #26528	@ tmp313,
	cmp	r2, ip	@ temp.7133,
	str	ip, [r4, lr]	@ tmp312, <variable>.DPB.fs
	str	ip, [r4, r1]	@ tmp312, <variable>.DPB.fs_ltref
	str	ip, [r4, r6]	@ tmp312, <variable>.DPB.fs_ref
	beq	.L2136	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp318,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2136:
	movw	r0, #26532	@ tmp321,
	ldr	r3, [r4, r0]	@ temp.7136, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7136,
	beq	.L2137	@,
	movw	r5, #59224	@ tmp322,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2137:
	movw	r6, #26596	@ tmp325,
	ldr	r3, [r4, r6]	@ temp.7139, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7139,
	beq	.L2138	@,
	movw	ip, #59224	@ tmp326,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2138:
	movw	r5, #26472	@ tmp335,
	mov	lr, #0	@ tmp330,
	ldr	r2, [r4, r5]	@ temp.7142, <variable>.DPB.fs
	movw	r0, #26468	@ tmp333,
	movw	r3, #26596	@ tmp329,
	movw	r1, #26532	@ tmp331,
	cmp	r2, lr	@ temp.7142,
	str	lr, [r4, r0]	@ tmp330, <variable>.DPB.fs
	str	lr, [r4, r3]	@ tmp330, <variable>.DPB.fs_ltref
	str	lr, [r4, r1]	@ tmp330, <variable>.DPB.fs_ref
	beq	.L2139	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp336,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2139:
	movw	r6, #26536	@ tmp339,
	ldr	r3, [r4, r6]	@ temp.7145, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7145,
	beq	.L2140	@,
	movw	ip, #59224	@ tmp340,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2140:
	movw	r1, #26600	@ tmp343,
	ldr	r3, [r4, r1]	@ temp.7148, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7148,
	beq	.L2141	@,
	movw	lr, #59224	@ tmp344,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2141:
	movw	ip, #26476	@ tmp353,
	mov	r3, #0	@ tmp348,
	ldr	r2, [r4, ip]	@ temp.7151, <variable>.DPB.fs
	movw	r6, #26472	@ tmp351,
	movw	r5, #26600	@ tmp347,
	movw	r0, #26536	@ tmp349,
	cmp	r2, r3	@ temp.7151,
	str	r3, [r4, r6]	@ tmp348, <variable>.DPB.fs
	str	r3, [r4, r5]	@ tmp348, <variable>.DPB.fs_ltref
	str	r3, [r4, r0]	@ tmp348, <variable>.DPB.fs_ref
	beq	.L2142	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp354,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2142:
	movw	r1, #26540	@ tmp357,
	ldr	r3, [r4, r1]	@ temp.7154, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7154,
	beq	.L2143	@,
	movw	lr, #59224	@ tmp358,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2143:
	movw	r0, #26604	@ tmp361,
	ldr	r3, [r4, r0]	@ temp.7157, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7157,
	beq	.L2144	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp362,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2144:
	movw	lr, #26480	@ tmp371,
	mov	r6, #0	@ tmp366,
	ldr	r2, [r4, lr]	@ temp.7160, <variable>.DPB.fs
	movw	r1, #26476	@ tmp369,
	movw	ip, #26604	@ tmp365,
	movw	r5, #26540	@ tmp367,
	cmp	r2, r6	@ temp.7160,
	str	r6, [r4, r1]	@ tmp366, <variable>.DPB.fs
	str	r6, [r4, ip]	@ tmp366, <variable>.DPB.fs_ltref
	str	r6, [r4, r5]	@ tmp366, <variable>.DPB.fs_ref
	beq	.L2145	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp372,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2145:
	movw	r0, #26544	@ tmp375,
	ldr	r3, [r4, r0]	@ temp.7163, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7163,
	beq	.L2146	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp376,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2146:
	movw	r5, #26608	@ tmp379,
	ldr	r3, [r4, r5]	@ temp.7166, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7166,
	beq	.L2147	@,
	movw	r6, #59224	@ tmp380,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2147:
	movw	r3, #26484	@ tmp389,
	mov	lr, #0	@ tmp384,
	ldr	r2, [r4, r3]	@ temp.7169, <variable>.DPB.fs
	movw	r0, #26480	@ tmp387,
	movw	r1, #26608	@ tmp383,
	movw	ip, #26544	@ tmp385,
	cmp	r2, lr	@ temp.7169,
	str	lr, [r4, r0]	@ tmp384, <variable>.DPB.fs
	str	lr, [r4, r1]	@ tmp384, <variable>.DPB.fs_ltref
	str	lr, [r4, ip]	@ tmp384, <variable>.DPB.fs_ref
	beq	.L2148	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp390,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2148:
	movw	r5, #26548	@ tmp393,
	ldr	r3, [r4, r5]	@ temp.7172, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7172,
	beq	.L2149	@,
	movw	r6, #59224	@ tmp394,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2149:
	movw	ip, #26612	@ tmp397,
	ldr	r3, [r4, ip]	@ temp.7175, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7175,
	beq	.L2150	@,
	movw	lr, #59224	@ tmp398,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2150:
	movw	r6, #26488	@ tmp407,
	mov	r0, #0	@ tmp402,
	ldr	r2, [r4, r6]	@ temp.7178, <variable>.DPB.fs
	movw	r5, #26484	@ tmp405,
	movw	r3, #26612	@ tmp401,
	movw	r1, #26548	@ tmp403,
	cmp	r2, r0	@ temp.7178,
	str	r0, [r4, r5]	@ tmp402, <variable>.DPB.fs
	str	r0, [r4, r3]	@ tmp402, <variable>.DPB.fs_ltref
	str	r0, [r4, r1]	@ tmp402, <variable>.DPB.fs_ref
	beq	.L2151	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp408,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2151:
	movw	ip, #26552	@ tmp411,
	ldr	r3, [r4, ip]	@ temp.7181, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7181,
	beq	.L2152	@,
	movw	lr, #59224	@ tmp412,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2152:
	movw	r1, #26616	@ tmp415,
	ldr	r3, [r4, r1]	@ temp.7184, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7184,
	beq	.L2153	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp416,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2153:
	movw	lr, #26492	@ tmp425,
	mov	r5, #0	@ tmp420,
	ldr	r2, [r4, lr]	@ temp.7187, <variable>.DPB.fs
	movw	ip, #26488	@ tmp423,
	movw	r6, #26616	@ tmp419,
	movw	r0, #26552	@ tmp421,
	cmp	r2, r5	@ temp.7187,
	str	r5, [r4, ip]	@ tmp420, <variable>.DPB.fs
	str	r5, [r4, r6]	@ tmp420, <variable>.DPB.fs_ltref
	str	r5, [r4, r0]	@ tmp420, <variable>.DPB.fs_ref
	beq	.L2154	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp426,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2154:
	movw	r1, #26556	@ tmp429,
	ldr	r3, [r4, r1]	@ temp.7190, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7190,
	beq	.L2155	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp430,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2155:
	movw	r0, #26620	@ tmp433,
	ldr	r3, [r4, r0]	@ temp.7193, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7193,
	beq	.L2156	@,
	movw	r5, #59224	@ tmp434,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2156:
	movw	r3, #26496	@ tmp443,
	mov	ip, #0	@ tmp438,
	ldr	r2, [r4, r3]	@ temp.7196, <variable>.DPB.fs
	movw	r1, #26492	@ tmp441,
	movw	lr, #26620	@ tmp437,
	movw	r6, #26556	@ tmp439,
	cmp	r2, ip	@ temp.7196,
	str	ip, [r4, r1]	@ tmp438, <variable>.DPB.fs
	str	ip, [r4, lr]	@ tmp438, <variable>.DPB.fs_ltref
	str	ip, [r4, r6]	@ tmp438, <variable>.DPB.fs_ref
	beq	.L2157	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp444,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2157:
	movw	r0, #26560	@ tmp447,
	ldr	r3, [r4, r0]	@ temp.7199, <variable>.DPB.fs_ref
	cmp	r3, #0	@ temp.7199,
	beq	.L2158	@,
	movw	r5, #59224	@ tmp448,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2158:
	mov	r6, #26624	@ tmp451,
	ldr	r3, [r4, r6]	@ temp.7202, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ temp.7202,
	beq	.L2159	@,
	movw	ip, #59224	@ tmp452,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2159:
	movw	r5, #26500	@ tmp461,
	mov	r3, #0	@ tmp456,
	ldr	r2, [r4, r5]	@ D.41786, <variable>.DPB.fs
	movw	r0, #26496	@ tmp459,
	mov	r1, #26624	@ tmp455,
	movw	lr, #26560	@ tmp457,
	cmp	r2, r3	@ D.41786,
	str	r3, [r4, r0]	@ tmp456, <variable>.DPB.fs
	str	r3, [r4, r1]	@ tmp456, <variable>.DPB.fs_ltref
	str	r3, [r4, lr]	@ tmp456, <variable>.DPB.fs_ref
	beq	.L2160	@,
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	movw	r2, #59224	@ tmp462,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2160:
	movw	r6, #26564	@ tmp465,
	ldr	r3, [r4, r6]	@ D.41791, <variable>.DPB.fs_ref
	cmp	r3, #0	@ D.41791,
	beq	.L2161	@,
	movw	ip, #59224	@ tmp466,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2161:
	movw	lr, #26628	@ tmp469,
	ldr	r3, [r4, lr]	@ D.41795, <variable>.DPB.fs_ltref
	cmp	r3, #0	@ D.41795,
	beq	.L2162	@,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	movw	r3, #59224	@ tmp470,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2162:
	movw	lr, #57072	@ tmp491,
	movw	ip, #17576	@ tmp480,
	ldr	r1, [r4, lr]	@ D.41801, <variable>.pDirectOutBuf
	movw	r5, #26632	@ tmp479,
	ldr	r6, [r4, ip]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movw	r0, #26628	@ tmp473,
	cmp	r1, #0	@ D.41801,
	movw	r3, #26564	@ tmp475,
	sub	r2, r6, #1	@ tmp482, <variable>.CurrSPS.dpb_size_plus1,
	movw	lr, #26500	@ tmp477,
	str	r2, [r4, r5]	@ tmp482, <variable>.DPB.size
	movw	ip, #26636	@ tmp483,
	mov	r2, #0	@ tmp474,
	movw	r6, #26640	@ tmp485,
	str	r2, [r4, r0]	@ tmp474, <variable>.DPB.fs_ltref
	movw	r5, #26644	@ tmp487,
	movw	r0, #26648	@ tmp489,
	str	r2, [r4, r3]	@ tmp474, <variable>.DPB.fs_ref
	str	r2, [r4, lr]	@ tmp474, <variable>.DPB.fs
	str	r2, [r4, ip]	@ tmp474, <variable>.DPB.used_size
	str	r2, [r4, r6]	@ tmp474, <variable>.DPB.ref_frames_in_buffer
	str	r2, [r4, r5]	@ tmp474, <variable>.DPB.ltref_frames_in_buffer
	str	r2, [r4, r0]	@ tmp474, <variable>.DPB.max_long_term_pic_idx
	beq	.L2163	@,
	movw	r0, #59152	@ tmp492,
	ldr	r3, [r4, r0]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r3, #2	@ <variable>.OldDecMode,
	beq	.L2178	@,
.L2164:
	movw	r5, #56336	@ tmp500,
	ldr	r3, [r4, r5]	@ D.41813, <variable>.CurrPic.frame_store
	cmp	r3, #0	@ D.41813,
	beq	.L2166	@,
	movw	r6, #59224	@ tmp501,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
.L2166:
	movw	lr, #57072	@ tmp504,
	mov	ip, #0	@ tmp505,
	str	ip, [r4, lr]	@ tmp505, <variable>.pDirectOutBuf
.L2163:
	add	lr, r4, #26624	@, pH264Ctx,
	mov	r1, #392	@,
	add	r0, lr, #28	@,,
	movw	r6, #26908	@ tmp508,
	bl	__memzero	@
	movw	r0, #26632	@ tmp509,
	ldr	r1, [r4, r0]	@ <variable>.DPB.size, <variable>.DPB.size
	movw	r2, #26912	@ tmp511,
	movw	ip, #57636	@ tmp513,
	mov	r3, #0	@ tmp512,
	str	r3, [r4, ip]	@ tmp512, <variable>.PmvStoreUsedFlag
	add	r5, r4, #20480	@ ivtmp.7063, pH264Ctx,
	str	r1, [r4, r6]	@ <variable>.DPB.size, <variable>.APC.size
	movw	r6, #57640	@ tmp515,
	movw	r1, #57644	@ tmp517,
	str	r3, [r4, r6]	@ tmp512, <variable>.PmvStoreUsedFlag
	str	r3, [r4, r2]	@ tmp512, <variable>.APC.used_size
	movw	r2, #57648	@ tmp519,
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r1, #57652	@ tmp521,
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r2, #57656	@ tmp523,
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r1, #57660	@ tmp525,
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r2, #57664	@ tmp527,
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r1, #57668	@ tmp529,
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r2, #57672	@ tmp531,
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r1, #57676	@ tmp533,
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r2, #57680	@ tmp535,
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r1, #57684	@ tmp537,
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	add	r5, r5, #252	@ ivtmp.7063, ivtmp.7063,
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r2, #57688	@ tmp539,
	movw	r1, #57692	@ tmp541,
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	mov	r0, r3	@ i, tmp512
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
	movw	r2, #57696	@ tmp543,
	movw	r1, #57700	@ tmp545,
	mov	ip, r3	@ j, i
	mov	r6, r3	@ tmp560, i
	str	r3, [r4, r2]	@ tmp512, <variable>.PmvStoreUsedFlag
	str	r3, [r4, r1]	@ tmp512, <variable>.PmvStoreUsedFlag
.L2167:
	add	r2, r0, r0, asl #5	@, tmp552, i, i,
	mov	r1, #1	@ j,
	mov	lr, r2, asl #2	@ tmp553, tmp552,
	add	r3, lr, #26880	@ tmp554, tmp553,
	add	r2, r3, #160	@ tmp554, tmp554,
	add	lr, r4, r2	@ tmp556, pH264Ctx, tmp554
	add	r2, lr, #8	@ ivtmp.7055, tmp556,
	str	ip, [lr, #4]	@ j, <variable>.pListX
.L2168:
	add	r1, r1, #2	@ j, j,
	mov	r3, r2	@ tmp564, ivtmp.7055
	cmp	r1, #33	@ j,
	str	ip, [r3], #4	@ j, <variable>.pListX
	str	ip, [r2, #4]	@ j, <variable>.pListX
	add	r2, r3, #4	@ ivtmp.7055, tmp564,
	bne	.L2168	@,
	add	r0, r0, #1	@ i, i,
	str	r6, [r5], #4	@ tmp560, <variable>.CurrSlice.listXsize
	cmp	r0, #2	@ i,
	bne	.L2167	@,
	mov	r0, r6	@ D.41784, tmp560
.L2169:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L2178:
	mov	r0, r4	@, pH264Ctx
	bl	OutputFrmToVO	@
	subs	ip, r0, #0	@ ret,
	bne	.L2179	@,
.L2165:
	movw	r2, #57072	@ tmp498,
	ldr	r1, [r4, r2]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r1, #0	@ <variable>.pDirectOutBuf,
	bne	.L2164	@,
	b	.L2163	@
.L2179:
	movw	r1, #:lower16:.LC93	@,
	ldr	r2, .L2180	@,
	movt	r1, #:upper16:.LC93	@,
	movw	r3, #5190	@,
	mov	r0, #22	@,
	str	ip, [sp, #0]	@ ret,
	bl	dprint_vfmw	@
	b	.L2165	@
.L2181:
	.align	2
.L2180:
	.word	.LANCHOR0+152
	.fnend
	.size	InitDPB, .-InitDPB
	.align	2
	.global	H264DEC_GetRemainImg
	.type	H264DEC_GetRemainImg, %function
H264DEC_GetRemainImg:
	.fnstart
.LFB1570:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #26636	@ tmp149,
	ldr	r3, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2198	@,
	add	r5, r0, #26368	@ ivtmp.7237, pH264Ctx,
	mov	r6, #0	@ i,
	add	r5, r5, #72	@ ivtmp.7237, ivtmp.7237,
	b	.L2185	@
.L2184:
	ldr	r1, [r4, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bls	.L2198	@,
.L2185:
	ldr	r1, [r5, #0]	@ D.40184, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.7237, ivtmp.7237,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2184	@,
	mov	r0, r4	@, pH264Ctx
	bl	UnMarkFrameStoreRef	@
	ldr	r1, [r4, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bhi	.L2185	@,
.L2198:
	mov	r0, r4	@, pH264Ctx
	bl	RemoveUnUsedFrameStore	@
	cmp	r0, #0	@ D.40189
	bne	.L2198	@,
	add	r7, r4, #26368	@ ivtmp.7232, pH264Ctx,
	mov	sl, r0	@ pos.7244, D.40189
	add	r7, r7, #72	@ ivtmp.7232, ivtmp.7232,
	mvn	r9, #0	@ ret,
	movw	r8, #26636	@ tmp176,
.L2207:
	ldr	r3, [r4, r8]	@ D.47645, <variable>.DPB.used_size
	cmp	r3, #0	@ D.47645,
	beq	.L2212	@,
.L2193:
	movw	r2, #26632	@,
	ldr	ip, [r4, r2]	@ temp.7243, <variable>.DPB.size
	cmp	r3, ip	@ D.47645, temp.7243
	movls	ip, r3	@ temp.7243, D.47645
	bls	.L2188	@,
	cmp	ip, #0	@ temp.7243,
	str	ip, [r4, r8]	@ temp.7243, <variable>.DPB.used_size
	moveq	r5, ip	@ pos.7244, temp.7243
	beq	.L2189	@,
.L2188:
	tst	ip, #1	@ temp.7243,
	mov	r5, #0	@ pos.7244,
	mov	r2, r7	@ ivtmp.7232, ivtmp.7232
	mvn	r1, #-2147483648	@ min_poc.7246,
	mov	r0, r5	@ pos, pos.7244
	bne	.L2195	@,
	ldr	r3, [r7, #0]	@ D.47642, <variable>.DPB.fs
	ldr	r1, [r3, #672]	@ min_poc, <variable>.poc
	cmn	r1, #-2147483647	@ min_poc,
	bge	.L2201	@,
	ldrb	r0, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r0, #0	@ <variable>.is_in_dpb,
	beq	.L2201	@,
	mov	r0, #1	@ pos,
	cmp	r0, ip	@ pos, temp.7243
	add	r2, r7, #4	@ ivtmp.7232, ivtmp.7232,
	bcs	.L2189	@,
.L2195:
	ldr	lr, [r2, #0]	@ D.47642, <variable>.DPB.fs
	ldr	r3, [lr, #672]	@ min_poc, <variable>.poc
	cmp	r3, r1	@ min_poc, min_poc.7246
	bge	.L2190	@,
.L2213:
	ldrb	lr, [lr, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	movne	r5, r0	@ pos.7244, pos
	beq	.L2190	@,
	add	r0, r0, #1	@ tmp187, pos,
	add	lr, r2, #4	@ tmp188, ivtmp.7232,
	cmp	r0, ip	@ tmp187, temp.7243
	bcs	.L2189	@,
.L2192:
	ldr	r2, [r2, #4]	@ D.47642, <variable>.DPB.fs
	ldr	r1, [r2, #672]	@ min_poc, <variable>.poc
	cmp	r1, r3	@ min_poc, min_poc
	bge	.L2204	@,
	ldrb	r2, [r2, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	beq	.L2204	@,
	mov	r5, r0	@ pos.7244, tmp187
.L2211:
	add	r2, lr, #4	@ ivtmp.7232, tmp188,
	add	r0, r0, #1	@ pos, tmp187,
	ldr	lr, [r2, #0]	@ D.47642, <variable>.DPB.fs
	ldr	r3, [lr, #672]	@ min_poc, <variable>.poc
	cmp	r3, r1	@ min_poc, min_poc.7246
	blt	.L2213	@,
.L2190:
	add	r0, r0, #1	@ tmp187, pos,
	mov	r3, r1	@ min_poc, min_poc.7246
	cmp	r0, ip	@ tmp187, temp.7243
	add	lr, r2, #4	@ tmp188, ivtmp.7232,
	bcc	.L2192	@,
.L2189:
	add	r6, r5, #6592	@ tmp158, pos.7244,
	mov	r0, r4	@, pH264Ctx
	add	r6, r6, #18	@ tmp158, tmp158,
	ldr	r9, [r4, r6, asl #2]	@ tmp160, <variable>.DPB.fs
	strb	sl, [r9, #4]	@ pos.7244, <variable>.is_in_dpb
	ldr	r1, [r4, r6, asl #2]	@, <variable>.DPB.fs
	ldr	r2, [r4, r8]	@, <variable>.DPB.used_size
	bl	OutputFrmToVO	@
	ldr	r3, [r4, r6, asl #2]	@ tmp170, <variable>.DPB.fs
	ldrb	ip, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	mov	r9, r0	@ ret,
	bne	.L2207	@,
	mov	r1, r5	@, pos.7244
	mov	r0, r4	@, pH264Ctx
	bl	RemoveFrameStoreOutDPB	@
	ldr	r3, [r4, r8]	@ D.47645, <variable>.DPB.used_size
	cmp	r3, #0	@ D.47645,
	bne	.L2193	@,
.L2212:
	cmp	r9, #0	@ ret,
	beq	.L2194	@,
	add	r0, r4, #8	@, pH264Ctx,
	bl	GetVoLastImageID	@
	mov	r9, r0	@ ret,
.L2194:
	mov	r0, r9	@, ret
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2201:
	mov	r0, #1	@ pos,
	cmp	r0, ip	@ pos, temp.7243
	mvn	r1, #-2147483648	@ min_poc,
	add	r2, r7, #4	@ ivtmp.7232, ivtmp.7232,
	bcc	.L2195	@,
	b	.L2189	@
.L2204:
	mov	r1, r3	@ min_poc, min_poc
	b	.L2211	@
	.fnend
	.size	H264DEC_GetRemainImg, .-H264DEC_GetRemainImg
	.align	2
	.global	DirectOutput
	.type	DirectOutput, %function
DirectOutput:
	.fnstart
.LFB1568:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #55795	@ tmp191,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #1	@ <variable>.CurrPic.structure,
	beq	.L2217	@,
	bcc	.L2216	@,
	cmp	r3, #2	@ <variable>.CurrPic.structure,
	movne	r5, #0	@ ret,
	beq	.L2264	@,
.L2219:
	mov	r0, r5	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2216:
	movw	r2, #56336	@ tmp194,
	movw	r5, #57072	@ tmp197,
	ldr	r1, [r0, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #0	@ tmp195,
	strb	r2, [r1, #536]	@ tmp195, <variable>.frame.structure
	ldr	r1, [r0, r5]	@ temp.7300, <variable>.pDirectOutBuf
	cmp	r1, r2	@ temp.7300,
	beq	.L2220	@,
	bl	OutputFrmToVO	@
	subs	ip, r0, #0	@ ret.7301,
	bne	.L2265	@,
.L2221:
	movw	r6, #57072	@ tmp201,
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, #0	@ <variable>.pDirectOutBuf,
	beq	.L2222	@,
	movw	ip, #56336	@ tmp206,
	movw	r8, #59224	@ tmp203,
	ldr	r7, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r7, #656]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2222:
	movw	r3, #57072	@ tmp208,
	mov	lr, #0	@ tmp209,
	str	lr, [r4, r3]	@ tmp209, <variable>.pDirectOutBuf
.L2220:
	movw	r7, #56336	@ tmp210,
	movw	r6, #57072	@ tmp211,
	ldr	r0, [r4, r7]	@ temp.7304, <variable>.CurrPic.frame_store
	mov	r5, #0	@ tmp233,
	add	r1, r4, #55808	@, pH264Ctx,
	mov	r2, #528	@,
	movw	r8, #59224	@ tmp267,
	str	r0, [r4, r6]	@ temp.7304, <variable>.pDirectOutBuf
	str	r0, [r0, #540]	@ temp.7304, <variable>.frame.frame_store
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	lr, [r3, #580]	@ <variable>.CurrPic.frame_store, <variable>.top_field.frame_store
	movw	lr, #55794	@ tmp224,
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [ip, #620]	@ <variable>.CurrPic.frame_store, <variable>.bottom_field.frame_store
	ldrb	ip, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	lr, #3	@ tmp229,
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	ip, [r3, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	lr, [r0, #1]	@ tmp229, <variable>.is_used
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [ip, #2]	@ tmp233, <variable>.is_reference
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [r3, #4]	@ tmp233, <variable>.is_in_dpb
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r5, [r0, #684]	@ tmp233, <variable>.is_displayed
	ldr	lr, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r2, #56380	@ tmp250,
	ldr	r1, [r4, r2]	@ D.40030, <variable>.CurrPic.err_level
	movw	r0, #56372	@ tmp257,
	ldr	ip, [r4, r6]	@ temp.7316, <variable>.pDirectOutBuf
	mov	r2, r5	@, tmp233
	str	r1, [ip, #696]	@ D.40030, <variable>.err_level
	str	r1, [ip, #556]	@ D.40030, <variable>.frame.err_level
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [r3, #536]	@ tmp233, <variable>.frame.structure
	movw	r3, #55801	@ tmp261,
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r1, [ip, #692]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	movw	r1, #55799	@ tmp264,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r0, #688]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r3, [r4, r6]	@ temp.7320, <variable>.pDirectOutBuf
	cmp	r0, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	r0, r5	@ iftmp.521, tmp2
	moveq	r0, #3	@ iftmp.521,
	strb	r0, [r3, #3]	@ iftmp.521, <variable>.mode_skip_flag
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r2, r5	@, tmp233
	ldr	r1, [r4, r6]	@, <variable>.pDirectOutBuf
	mov	r0, r4	@, pH264Ctx
	bl	OutputFrmToVO	@
	ldr	r1, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r1, #0	@ <variable>.pDirectOutBuf,
	mov	r5, r0	@ ret,
	beq	.L2255	@,
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2255:
	movw	r2, #57072	@ tmp671,
	mov	r0, #0	@ tmp672,
	str	r0, [r4, r2]	@ tmp672, <variable>.pDirectOutBuf
	b	.L2219	@
.L2217:
	movw	ip, #56336	@ tmp284,
	movw	r6, #55793	@ tmp287,
	ldr	r8, [r0, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r7, #3	@ tmp285,
	strb	r7, [r8, #536]	@ tmp285, <variable>.frame.structure
	ldrb	r2, [r0, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2226	@,
	movw	r3, #57072	@ tmp289,
	ldr	r1, [r0, r3]	@ temp.7329, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.7329,
	beq	.L2227	@,
	bl	OutputFrmToVO	@
	subs	r5, r0, #0	@ ret,
	bne	.L2266	@,
.L2228:
	movw	lr, #56336	@ tmp293,
	movw	r2, #57072	@ tmp294,
	ldr	r1, [r4, lr]	@ temp.7331, <variable>.CurrPic.frame_store
	str	r1, [r4, r2]	@ temp.7331, <variable>.pDirectOutBuf
	str	r1, [r1, #580]	@ temp.7331, <variable>.top_field.frame_store
.L2229:
	movw	r6, #57072	@ tmp300,
	movw	r7, #55794	@ tmp301,
	ldrb	r0, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r8, #1	@ tmp306,
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r7, #0	@ tmp310,
	add	r1, r4, #55808	@, pH264Ctx,
	mov	r2, #528	@,
	strb	r0, [ip, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldr	lr, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [lr, #1]	@ tmp306, <variable>.is_used
	movw	lr, #56372	@ tmp321,
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r3, #4]	@ tmp310, <variable>.is_in_dpb
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [ip, #684]	@ tmp310, <variable>.is_displayed
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r0, #2]	@ tmp310, <variable>.is_reference
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r3, #692]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [r0, #688]	@ tmp310, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r3, #56380	@ tmp335,
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r1, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r1, #596]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	movw	r1, #55799	@ tmp344,
	ldr	r0, [r4, r6]	@ temp.7346, <variable>.pDirectOutBuf
	ldr	r2, [r0, #596]	@ D.40053, <variable>.top_field.err_level
	str	r2, [r0, #696]	@ D.40053, <variable>.err_level
	str	r2, [r0, #556]	@ D.40053, <variable>.frame.err_level
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [r3, #576]	@ tmp306, <variable>.top_field.structure
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, r8	@ <variable>.CurrPic.mode_skip_flag,
	movne	r2, #0	@, tmp346
	moveq	r2, #1	@, tmp346
	b	.L2263	@
.L2264:
	movw	ip, #56336	@ tmp480,
	movw	r8, #55793	@ tmp483,
	ldr	r7, [r0, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r5, #3	@ tmp481,
	strb	r5, [r7, #536]	@ tmp481, <variable>.frame.structure
	ldrb	r2, [r0, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2267	@,
	movw	sl, #57072	@ tmp560,
	add	r1, r4, #55808	@, pH264Ctx,
	ldr	lr, [r0, sl]	@ prephitmp.7394, <variable>.pDirectOutBuf
	mov	r2, #528	@,
	cmp	lr, #0	@ prephitmp.7394,
	ldreq	lr, [r0, ip]	@ temp.7421, <variable>.CurrPic.frame_store
	streq	lr, [r0, sl]	@ temp.7421, <variable>.pDirectOutBuf
	streq	lr, [lr, #620]	@ temp.7421, <variable>.bottom_field.frame_store
	ldreq	lr, [r0, sl]	@ prephitmp.7394, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, prephitmp.7394,
	ldrd	r8, [lr, #24]	@, prephitmp.7394,
	ldr	r6, [lr, #20]	@ OtherFieldPts.7422, <variable>.fs_image.PTS
	ldr	r5, [lr, #16]	@ OtherFieldPts.7422, <variable>.fs_image.PTS
	strd	r8, [fp, #-52]	@,,
	ldrd	r8, [lr, #32]	@, prephitmp.7394,
	strd	r8, [fp, #-60]	@,,
	ldr	r9, [lr, #80]	@, <variable>.fs_image.DispFrameDistance
	ldr	r8, [lr, #76]	@ OtherFieldDispEnableFlag.7425, <variable>.fs_image.DispEnableFlag
	str	r9, [fp, #-64]	@, %sfp
	ldr	sl, [lr, #84]	@ OtherFieldDistanceBeforeFirstFrame.7427, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	r9, [lr, #88]	@ OtherFieldGopNum.7428, <variable>.fs_image.GopNum
	bl	memcpy	@
	add	ip, r4, #55808	@ tmp578, pH264Ctx,
	movw	r2, #55816	@ tmp572,
	add	r7, ip, #8	@ tmp578, tmp578,
	ldr	r1, [r4, r2]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	and	r0, r5, r6	@ tmp570, OtherFieldPts.7422, OtherFieldPts.7422
	ldr	r3, [r7, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	and	r7, r1, r3	@ tmp574, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r3, #55824	@ tmp588,
	cmn	r7, #1	@ tmp574,
	movne	ip, #0	@,
	moveq	ip, #1	@,
	cmn	r0, #1	@ tmp570,
	ldrd	r2, [r3, r4]	@ <variable>.CurrPic.fs_image.Usertag, tmp588, pH264Ctx
	movw	r0, #55832	@ tmp592,
	moveq	ip, #0	@,,
	cmp	ip, #0	@ tmp583,
	movwne	r7, #57072	@ tmp585,
	ldrne	r7, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r6, [r7, #20]	@ OtherFieldPts.7422, <variable>.fs_image.PTS
	movw	r6, #57072	@ tmp587,
	strne	r5, [r7, #16]	@ OtherFieldPts.7422, <variable>.fs_image.PTS
	ldr	r1, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldrd	r6, [fp, #-52]	@,,
	cmp	r3, r7	@ <variable>.CurrPic.fs_image.Usertag,
	cmpeq	r2, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r2, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r3, r7	@ <variable>.CurrPic.fs_image.Usertag,
	ldrd	r6, [r4, r0]	@, pH264Ctx, tmp592
	strd	r6, [fp, #-52]	@,,
	strd	r2, [r1, #24]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	movw	r3, #57072	@ tmp591,
	ldrd	r0, [fp, #-60]	@,,
	ldr	r2, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r7, r1	@,
	cmpeq	r6, r0	@,
	strhid	r0, [fp, #-52]	@,,
.L2250:
	ldrd	r6, [fp, #-52]	@,,
	movw	r5, #57072	@ tmp595,
	movw	ip, #55876	@ tmp596,
	movw	r0, #55884	@ tmp606,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.fs_image.DispEnableFlag, <variable>.CurrPic.fs_image.DispEnableFlag
	movw	r1, #55888	@ tmp611,
	strd	r6, [r2, #32]	@, <variable>.pDirectOutBuf,
	movw	r2, #55880	@ tmp601,
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.fs_image.DispFrameDistance, <variable>.CurrPic.fs_image.DispFrameDistance
	ldr	r0, [r4, r0]	@ <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame, <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame
	cmp	lr, r8	@ <variable>.CurrPic.fs_image.DispEnableFlag, OtherFieldDispEnableFlag.7425
	strls	lr, [r3, #76]	@, <variable>.CurrPic.fs_image.DispEnableFlag, <variable>.fs_image.DispEnableFlag
	strhi	r8, [r3, #76]	@, OtherFieldDispEnableFlag.7425, <variable>.fs_image.DispEnableFlag
	ldr	r2, [fp, #-64]	@, %sfp
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.fs_image.GopNum, <variable>.CurrPic.fs_image.GopNum
	cmp	ip, r2	@ <variable>.CurrPic.fs_image.DispFrameDistance,
	strls	ip, [r3, #80]	@, <variable>.CurrPic.fs_image.DispFrameDistance, <variable>.fs_image.DispFrameDistance
	strhi	r2, [r3, #80]	@,, <variable>.fs_image.DispFrameDistance
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, sl	@ <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame, OtherFieldDistanceBeforeFirstFrame.7427
	strls	r0, [r7, #84]	@, <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	strhi	sl, [r7, #84]	@, OtherFieldDistanceBeforeFirstFrame.7427, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	lr, r9	@ <variable>.CurrPic.fs_image.GopNum, OtherFieldGopNum.7428
	strls	lr, [r2, #88]	@, <variable>.CurrPic.fs_image.GopNum, <variable>.fs_image.GopNum
	strhi	r9, [r2, #88]	@, OtherFieldGopNum.7428, <variable>.fs_image.GopNum
	ldr	ip, [r4, r5]	@ temp.7452, <variable>.pDirectOutBuf
	movw	r5, #56372	@ tmp624,
	ldrb	r3, [ip, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #0	@ <variable>.non_existing,
	movwne	r3, #55794	@ tmp616,
	moveq	lr, r3	@ iftmp.531, <variable>.non_existing
	ldrneb	lr, [r4, r3]	@ zero_extendqisi2	@ iftmp.531, <variable>.CurrPic.non_existing
	movw	r3, #57072	@ tmp618,
	strb	lr, [ip, #0]	@ iftmp.531, <variable>.non_existing
	ldr	r7, [r4, r3]	@ temp.7454, <variable>.pDirectOutBuf
	ldrb	r0, [r7, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r1, r0, #2	@ tmp621, <variable>.is_used,
	strb	r1, [r7, #1]	@ tmp621, <variable>.is_used
	ldr	r2, [r4, r3]	@ temp.7457, <variable>.pDirectOutBuf
	mov	r7, #2	@ tmp630,
	ldr	lr, [r4, r5]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	mov	r5, #3	@ tmp634,
	ldr	ip, [r2, #692]	@ <variable>.pic_type, <variable>.pic_type
	cmp	ip, lr	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	strcs	ip, [r2, #692]	@, <variable>.pic_type, <variable>.pic_type
	strcc	lr, [r2, #692]	@, <variable>.CurrPic.pic_type, <variable>.pic_type
	movw	lr, #56380	@ tmp638,
	ldr	r0, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r0, #616]	@ tmp630, <variable>.bottom_field.structure
	ldr	r1, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [r1, #536]	@ tmp634, <variable>.frame.structure
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r2, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r2, #636]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	ldr	r5, [r4, r3]	@ temp.7464, <variable>.pDirectOutBuf
	ldr	r0, [r5, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r7, [r5, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r1, r0, r7	@ tmp641, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	movw	r0, #55799	@ tmp649,
	mov	lr, r1, lsr #1	@ tmp644, tmp641,
	str	lr, [r5, #556]	@ tmp644, <variable>.frame.err_level
	ldr	r2, [r4, r3]	@ temp.7469, <variable>.pDirectOutBuf
	ldr	ip, [r2, #556]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	ip, [r2, #696]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	r7, [r4, r3]	@ temp.7471, <variable>.pDirectOutBuf
	ldr	r1, [r7, #620]	@ <variable>.bottom_field.frame_store, <variable>.bottom_field.frame_store
	str	r1, [r7, #540]	@ <variable>.bottom_field.frame_store, <variable>.frame.frame_store
	ldrb	r5, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r5, #1	@ <variable>.CurrPic.mode_skip_flag,
	beq	.L2268	@,
.L2253:
	ldr	r3, [r4, r3]	@ temp.7299, <variable>.pDirectOutBuf
	ldrb	r2, [r3, #3]	@ zero_extendqisi2	@ iftmp.532, <variable>.mode_skip_flag
.L2254:
	movw	r6, #57072	@ tmp660,
	strb	r2, [r3, #3]	@ iftmp.532, <variable>.mode_skip_flag
	ldr	r5, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r7, #59224	@ tmp657,
	mov	r2, #0	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r1, [r4, r6]	@, <variable>.pDirectOutBuf
	mov	r0, r4	@, pH264Ctx
	mov	r2, #0	@,
	bl	OutputFrmToVO	@
	ldr	r1, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r1, #0	@ <variable>.pDirectOutBuf,
	mov	r5, r0	@ ret,
	beq	.L2255	@,
	movw	r3, #56336	@ tmp669,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	movw	r2, #57072	@ tmp671,
	mov	r0, #0	@ tmp672,
	str	r0, [r4, r2]	@ tmp672, <variable>.pDirectOutBuf
	b	.L2219	@
.L2267:
	movw	r3, #57072	@ tmp485,
	ldr	r1, [r0, r3]	@ temp.7389, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.7389,
	beq	.L2241	@,
	bl	OutputFrmToVO	@
	subs	r5, r0, #0	@ ret,
	bne	.L2269	@,
.L2242:
	movw	r3, #56336	@ tmp489,
	movw	lr, #57072	@ tmp490,
	ldr	r1, [r4, r3]	@ temp.7391, <variable>.CurrPic.frame_store
	str	r1, [r4, lr]	@ temp.7391, <variable>.pDirectOutBuf
	str	r1, [r1, #620]	@ temp.7391, <variable>.bottom_field.frame_store
.L2243:
	movw	r6, #57072	@ tmp496,
	movw	r7, #55794	@ tmp497,
	ldrb	r0, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r8, #2	@ tmp502,
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r7, #0	@ tmp506,
	add	r1, r4, #55808	@, pH264Ctx,
	mov	r2, #528	@,
	strb	r0, [r3, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldr	lr, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [lr, #1]	@ tmp502, <variable>.is_used
	movw	lr, #56372	@ tmp517,
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [ip, #4]	@ tmp506, <variable>.is_in_dpb
	ldr	r0, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [r0, #684]	@ tmp506, <variable>.is_displayed
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r3, #2]	@ tmp506, <variable>.is_reference
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [ip, #692]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r3, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [r3, #688]	@ tmp506, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	ip, #56380	@ tmp531,
	ldr	r0, [r4, ip]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r2, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [r2, #636]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	movw	r2, #55799	@ tmp539,
	ldr	r3, [r4, r6]	@ temp.7407, <variable>.pDirectOutBuf
	ldr	r1, [r3, #636]	@ temp.7408, <variable>.bottom_field.err_level
	str	r1, [r3, #696]	@ temp.7408, <variable>.err_level
	str	r1, [r3, #556]	@ temp.7408, <variable>.frame.err_level
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [ip, #616]	@ tmp502, <variable>.bottom_field.structure
	ldrb	r2, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r3, [r4, r6]	@ temp.7410, <variable>.pDirectOutBuf
	cmp	r2, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r2, r8	@ iftmp.529,
	movne	r2, r7	@ iftmp.529,
.L2263:
	movw	r1, #59156	@ tmp542,
	strb	r2, [r3, #3]	@ iftmp.529, <variable>.mode_skip_flag
	ldr	r8, [r4, r1]	@ <variable>.IModeOutFlag, <variable>.IModeOutFlag
	cmp	r8, #1	@ <variable>.IModeOutFlag,
	bne	.L2219	@,
	ldr	r5, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	sl, #59224	@ tmp544,
	mov	r2, r7	@, tmp506
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r2, r7	@, tmp506
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [r4, r6]	@, <variable>.pDirectOutBuf
	bl	OutputFrmToVO	@
	ldr	r2, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r2, r7	@ <variable>.pDirectOutBuf,
	mov	r5, r0	@ ret,
	beq	.L2255	@,
	movw	lr, #56336	@ tmp556,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, r8	@, <variable>.IModeOutFlag
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	b	.L2255	@
.L2226:
	movw	sl, #57072	@ tmp366,
	add	r1, r4, #55808	@, pH264Ctx,
	ldr	lr, [r0, sl]	@ prephitmp.7277, <variable>.pDirectOutBuf
	mov	r2, #528	@,
	cmp	lr, #0	@ prephitmp.7277,
	ldreq	lr, [r0, ip]	@ temp.7358, <variable>.CurrPic.frame_store
	streq	lr, [r0, sl]	@ temp.7358, <variable>.pDirectOutBuf
	streq	lr, [lr, #580]	@ temp.7358, <variable>.top_field.frame_store
	ldreq	lr, [r0, sl]	@ prephitmp.7277, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, prephitmp.7277,
	ldrd	r8, [lr, #24]	@, prephitmp.7277,
	ldr	r7, [lr, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	r5, [lr, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strd	r8, [fp, #-52]	@,,
	ldrd	r8, [lr, #32]	@, prephitmp.7277,
	strd	r8, [fp, #-60]	@,,
	ldr	r9, [lr, #80]	@, <variable>.fs_image.DispFrameDistance
	ldr	r8, [lr, #76]	@ OtherFieldDispEnableFlag, <variable>.fs_image.DispEnableFlag
	str	r9, [fp, #-64]	@, %sfp
	ldr	sl, [lr, #84]	@ OtherFieldDistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	r9, [lr, #88]	@ OtherFieldGopNum, <variable>.fs_image.GopNum
	bl	memcpy	@
	add	ip, r4, #55808	@ tmp384, pH264Ctx,
	movw	r2, #55816	@ tmp378,
	add	r3, ip, #8	@ tmp384, tmp384,
	ldr	r1, [r4, r2]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	and	r0, r7, r5	@ tmp376, OtherFieldPts, OtherFieldPts
	ldr	r6, [r3, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	and	r3, r1, r6	@ tmp380, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r6, #57072	@ tmp393,
	cmn	r3, #1	@ tmp380,
	movne	ip, #0	@,
	moveq	ip, #1	@,
	cmn	r0, #1	@ tmp376,
	movw	r0, #55832	@ tmp398,
	moveq	ip, #0	@,,
	cmp	ip, #0	@ tmp389,
	movwne	r3, #57072	@ tmp391,
	ldrne	r3, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r5, [r3, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	movw	r5, #57072	@ tmp397,
	strne	r7, [r3, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	movw	r3, #55824	@ tmp394,
	ldrd	r2, [r3, r4]	@ <variable>.CurrPic.fs_image.Usertag, tmp394, pH264Ctx
	ldr	r1, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldrd	r6, [fp, #-52]	@,,
	cmp	r3, r7	@ <variable>.CurrPic.fs_image.Usertag,
	cmpeq	r2, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r2, r6	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r3, r7	@ <variable>.CurrPic.fs_image.Usertag,
	ldrd	r6, [r4, r0]	@, pH264Ctx, tmp398
	strd	r6, [fp, #-52]	@,,
	strd	r2, [r1, #24]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	ldrd	r0, [fp, #-60]	@,,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r7, r1	@,
	cmpeq	r6, r0	@,
	strhid	r0, [fp, #-52]	@,,
.L2234:
	ldrd	r6, [fp, #-52]	@,,
	movw	r5, #57072	@ tmp401,
	movw	ip, #55876	@ tmp402,
	movw	r0, #55884	@ tmp412,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.fs_image.DispEnableFlag, <variable>.CurrPic.fs_image.DispEnableFlag
	movw	r1, #55888	@ tmp417,
	strd	r6, [r2, #32]	@, <variable>.pDirectOutBuf,
	movw	r2, #55880	@ tmp407,
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.fs_image.DispFrameDistance, <variable>.CurrPic.fs_image.DispFrameDistance
	ldr	r0, [r4, r0]	@ <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame, <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame
	cmp	lr, r8	@ <variable>.CurrPic.fs_image.DispEnableFlag, OtherFieldDispEnableFlag
	strls	lr, [r3, #76]	@, <variable>.CurrPic.fs_image.DispEnableFlag, <variable>.fs_image.DispEnableFlag
	strhi	r8, [r3, #76]	@, OtherFieldDispEnableFlag, <variable>.fs_image.DispEnableFlag
	ldr	r2, [fp, #-64]	@, %sfp
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.fs_image.GopNum, <variable>.CurrPic.fs_image.GopNum
	cmp	ip, r2	@ <variable>.CurrPic.fs_image.DispFrameDistance,
	strls	ip, [r3, #80]	@, <variable>.CurrPic.fs_image.DispFrameDistance, <variable>.fs_image.DispFrameDistance
	strhi	r2, [r3, #80]	@,, <variable>.fs_image.DispFrameDistance
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, sl	@ <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame, OtherFieldDistanceBeforeFirstFrame
	strls	r0, [r7, #84]	@, <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	strhi	sl, [r7, #84]	@, OtherFieldDistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	movw	r7, #56372	@ tmp430,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	lr, r9	@ <variable>.CurrPic.fs_image.GopNum, OtherFieldGopNum
	strls	lr, [r2, #88]	@, <variable>.CurrPic.fs_image.GopNum, <variable>.fs_image.GopNum
	strhi	r9, [r2, #88]	@, OtherFieldGopNum, <variable>.fs_image.GopNum
	ldr	ip, [r4, r5]	@ temp.7366, <variable>.pDirectOutBuf
	ldrb	r3, [ip, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #0	@ <variable>.non_existing,
	movwne	r3, #55794	@ tmp422,
	moveq	lr, r3	@ iftmp.525, <variable>.non_existing
	ldrneb	lr, [r4, r3]	@ zero_extendqisi2	@ iftmp.525, <variable>.CurrPic.non_existing
	movw	r3, #57072	@ tmp424,
	strb	lr, [ip, #0]	@ iftmp.525, <variable>.non_existing
	ldr	r0, [r4, r3]	@ temp.7367, <variable>.pDirectOutBuf
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r5, r1, #1	@ tmp427, <variable>.is_used,
	strb	r5, [r0, #1]	@ tmp427, <variable>.is_used
	ldr	r2, [r4, r3]	@ temp.7369, <variable>.pDirectOutBuf
	mov	r1, #1	@ tmp436,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	mov	r7, #3	@ tmp440,
	ldr	ip, [r2, #692]	@ <variable>.pic_type, <variable>.pic_type
	cmp	ip, lr	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	strcs	ip, [r2, #692]	@, <variable>.pic_type, <variable>.pic_type
	strcc	lr, [r2, #692]	@, <variable>.CurrPic.pic_type, <variable>.pic_type
	movw	lr, #56380	@ tmp444,
	ldr	r0, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r1, [r0, #576]	@ tmp436, <variable>.top_field.structure
	ldr	r5, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r5, #536]	@ tmp440, <variable>.frame.structure
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r2, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r2, #596]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	ldr	r7, [r4, r3]	@ temp.7374, <variable>.pDirectOutBuf
	ldr	r0, [r7, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r1, [r7, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r5, r0, r1	@ tmp447, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	lr, r5, lsr #1	@ tmp450, tmp447,
	str	lr, [r7, #556]	@ tmp450, <variable>.frame.err_level
	ldr	r2, [r4, r3]	@ temp.7376, <variable>.pDirectOutBuf
	movw	r5, #55799	@ tmp455,
	ldr	ip, [r2, #556]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	ip, [r2, #696]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	r1, [r4, r3]	@ temp.7377, <variable>.pDirectOutBuf
	ldr	r0, [r1, #580]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	str	r0, [r1, #540]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	ldrb	r7, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r7, #1	@ <variable>.CurrPic.mode_skip_flag,
	bne	.L2253	@,
	ldr	r3, [r4, r3]	@ D.40018, <variable>.pDirectOutBuf
	ldrb	r6, [r3, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r2, r6, #1	@ iftmp.526, <variable>.mode_skip_flag,
	b	.L2254	@
.L2265:
	movw	r1, #:lower16:.LC93	@,
	ldr	r2, .L2270	@,
	movt	r1, #:upper16:.LC93	@,
	movw	r3, #2422	@,
	mov	r0, #22	@,
	str	ip, [sp, #0]	@ ret.7301,
	bl	dprint_vfmw	@
	b	.L2221	@
.L2227:
	ldr	r0, [r0, ip]	@ temp.7333, <variable>.CurrPic.frame_store
	mov	r5, r1	@ ret, temp.7329
	str	r0, [r4, r3]	@ temp.7333, <variable>.pDirectOutBuf
	str	r0, [r0, #580]	@ temp.7333, <variable>.top_field.frame_store
	b	.L2229	@
.L2241:
	ldr	r0, [r0, ip]	@ temp.7393, <variable>.CurrPic.frame_store
	mov	r5, r1	@ ret, temp.7389
	str	r0, [r4, r3]	@ temp.7393, <variable>.pDirectOutBuf
	str	r0, [r0, #620]	@ temp.7393, <variable>.bottom_field.frame_store
	b	.L2243	@
.L2268:
	ldr	r3, [r4, r3]	@ temp.7299, <variable>.pDirectOutBuf
	ldrb	r6, [r3, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r2, r6, #2	@ iftmp.532, <variable>.mode_skip_flag,
	b	.L2254	@
.L2269:
	movw	r1, #:lower16:.LC93	@,
	ldr	r2, .L2270	@,
	movt	r1, #:upper16:.LC93	@,
	movw	r3, #2593	@,
	mov	r0, #22	@,
	str	r5, [sp, #0]	@ ret,
	bl	dprint_vfmw	@
	b	.L2242	@
.L2266:
	movw	r1, #:lower16:.LC93	@,
	ldr	r2, .L2270	@,
	movt	r1, #:upper16:.LC93	@,
	movw	r3, #2466	@,
	mov	r0, #22	@,
	str	r5, [sp, #0]	@ ret,
	bl	dprint_vfmw	@
	b	.L2228	@
.L2271:
	.align	2
.L2270:
	.word	.LANCHOR0+160
	.fnend
	.size	DirectOutput, .-DirectOutput
	.align	2
	.global	OutputFrmFromDPB
	.type	OutputFrmFromDPB, %function
OutputFrmFromDPB:
	.fnstart
.LFB1563:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r4, r1, #6592	@ tmp137, pos,
	add	r4, r4, #18	@ tmp137, tmp137,
	mov	r6, r1	@ pos, pos
	mov	r7, #0	@ tmp140,
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	ldr	r1, [r0, r4, asl #2]	@ tmp139, <variable>.DPB.fs
	mov	r2, r7	@, tmp140
	strb	r7, [r1, #4]	@ tmp140, <variable>.is_in_dpb
	ldr	r1, [r0, r4, asl #2]	@, <variable>.DPB.fs
	bl	OutputFrmToVO	@
	mov	r7, r0	@ ret,
	ldr	r0, [r5, r4, asl #2]	@ tmp147, <variable>.DPB.fs
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L2273	@,
	mov	r0, r5	@, pH264Ctx
	mov	r1, r6	@, pos
	bl	RemoveFrameStoreOutDPB	@
.L2273:
	mov	r0, r7	@, ret
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	OutputFrmFromDPB, .-OutputFrmFromDPB
	.align	2
	.global	FlushDPB
	.type	FlushDPB, %function
FlushDPB:
	.fnstart
.LFB1569:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #26636	@ tmp149,
	ldr	r3, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	cmp	r3, #0	@ <variable>.DPB.used_size,
	beq	.L2291	@,
	add	r4, r0, #26368	@ ivtmp.7539, pH264Ctx,
	mov	r6, #0	@ i,
	add	r4, r4, #72	@ ivtmp.7539, ivtmp.7539,
	b	.L2278	@
.L2277:
	ldr	r1, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bls	.L2291	@,
.L2278:
	ldr	r1, [r4, #0]	@ D.40156, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.7539, ivtmp.7539,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2277	@,
	mov	r0, r5	@, pH264Ctx
	bl	UnMarkFrameStoreRef	@
	ldr	r1, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r1, r6	@ <variable>.DPB.used_size, i
	bhi	.L2278	@,
.L2291:
	mov	r0, r5	@, pH264Ctx
	bl	RemoveUnUsedFrameStore	@
	cmp	r0, #0	@,
	bne	.L2291	@,
	add	r2, r5, #26368	@ ivtmp.7534, pH264Ctx,
	movw	r6, #26636	@ tmp161,
	add	r4, r2, #72	@ ivtmp.7534, ivtmp.7534,
	movw	r7, #26632	@ tmp162,
.L2290:
	ldr	r0, [r5, r6]	@ D.47663, <variable>.DPB.used_size
	cmp	r0, #0	@ D.47663,
	beq	.L2305	@,
	ldr	r8, [r5, r7]	@ temp.7542, <variable>.DPB.size
	cmp	r0, r8	@ D.47663, temp.7542
	movls	r8, r0	@ temp.7542, D.47663
	bls	.L2281	@,
	cmp	r8, #0	@ temp.7542,
	str	r8, [r5, r6]	@ temp.7542, <variable>.DPB.used_size
	moveq	r1, r8	@ pos, temp.7542
	beq	.L2282	@,
.L2281:
	tst	r8, #1	@ temp.7542,
	mov	r1, #0	@ pos,
	mov	r2, r4	@ ivtmp.7534, ivtmp.7534
	mvn	r0, #-2147483648	@ min_poc.7545,
	mov	ip, r1	@ pos.7543, pos
	bne	.L2288	@,
	ldr	r3, [r4, #0]	@ D.47660, <variable>.DPB.fs
	ldr	r0, [r3, #672]	@ min_poc, <variable>.poc
	cmn	r0, #-2147483647	@ min_poc,
	bge	.L2295	@,
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	ip, #0	@ <variable>.is_in_dpb,
	beq	.L2295	@,
	mov	ip, #1	@ pos.7543,
	cmp	ip, r8	@ pos.7543, temp.7542
	add	r2, r4, #4	@ ivtmp.7534, ivtmp.7534,
	bcs	.L2282	@,
.L2288:
	ldr	lr, [r2, #0]	@ D.47660, <variable>.DPB.fs
	ldr	r3, [lr, #672]	@ min_poc, <variable>.poc
	cmp	r3, r0	@ min_poc, min_poc.7545
	bge	.L2283	@,
.L2306:
	ldrb	lr, [lr, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	movne	r1, ip	@ pos, pos.7543
	beq	.L2283	@,
	add	ip, ip, #1	@ tmp172, pos.7543,
	add	lr, r2, #4	@ tmp173, ivtmp.7534,
	cmp	ip, r8	@ tmp172, temp.7542
	bcs	.L2282	@,
.L2285:
	ldr	r2, [r2, #4]	@ D.47660, <variable>.DPB.fs
	ldr	r0, [r2, #672]	@ min_poc, <variable>.poc
	cmp	r0, r3	@ min_poc, min_poc
	bge	.L2298	@,
	ldrb	r2, [r2, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	beq	.L2298	@,
	mov	r1, ip	@ pos, tmp172
.L2304:
	add	r2, lr, #4	@ ivtmp.7534, tmp173,
	add	ip, ip, #1	@ pos.7543, tmp172,
	ldr	lr, [r2, #0]	@ D.47660, <variable>.DPB.fs
	ldr	r3, [lr, #672]	@ min_poc, <variable>.poc
	cmp	r3, r0	@ min_poc, min_poc.7545
	blt	.L2306	@,
.L2283:
	add	ip, ip, #1	@ tmp172, pos.7543,
	mov	r3, r0	@ min_poc, min_poc.7545
	cmp	ip, r8	@ tmp172, temp.7542
	add	lr, r2, #4	@ tmp173, ivtmp.7534,
	bcc	.L2285	@,
.L2282:
	mov	r0, r5	@, pH264Ctx
	bl	OutputFrmFromDPB	@
	cmn	r0, #1	@ ret,
	bne	.L2290	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2295:
	mov	ip, #1	@ pos.7543,
	cmp	ip, r8	@ pos.7543, temp.7542
	mvn	r0, #-2147483648	@ min_poc,
	add	r2, r4, #4	@ ivtmp.7534, ivtmp.7534,
	bcc	.L2288	@,
	b	.L2282	@
.L2298:
	mov	r0, r3	@ min_poc, min_poc
	b	.L2304	@
.L2305:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	FlushDPB, .-FlushDPB
	.align	2
	.global	IDRMemMarking
	.type	IDRMemMarking, %function
IDRMemMarking:
	.fnstart
.LFB1574:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #56340	@ tmp148,
	ldr	r1, [r0, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r3, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2308	@,
	movw	sl, #26636	@ tmp150,
	ldr	ip, [r0, sl]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	ip, #0	@ <variable>.DPB.used_size,
	beq	.L2309	@,
	add	r4, r0, #26368	@ ivtmp.7589, pH264Ctx,
	mov	r7, #0	@ i.7603,
	add	r4, r4, #136	@ ivtmp.7589, ivtmp.7589,
	mov	r5, r7	@ tmp232, i.7603
	movw	r8, #59224	@ tmp233,
	mov	r9, #1	@ tmp234,
.L2312:
	ldr	lr, [r4, #-64]	@ prephitmp.7565, <variable>.DPB.fs
	mov	r2, #0	@,
	add	r7, r7, #1	@ i.7603, i.7603,
	ldr	r1, [lr, #676]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r1, #1	@ <variable>.eFoState,
	movweq	r0, #57720	@,
	streq	r1, [r6, r0]	@ <variable>.eFoState, <variable>.IDRFound
	strb	r5, [lr, #537]	@ tmp232, <variable>.frame.is_long_term
	strb	r5, [lr, #538]	@ tmp232, <variable>.frame.is_short_term
	ldr	r0, [r4, #-64]	@ D.40331, <variable>.DPB.fs
	strb	r5, [r0, #577]	@ tmp232, <variable>.top_field.is_long_term
	strb	r5, [r0, #578]	@ tmp232, <variable>.top_field.is_short_term
	ldr	r3, [r4, #-64]	@ temp.7591, <variable>.DPB.fs
	strb	r5, [r3, #617]	@ tmp232, <variable>.bottom_field.is_long_term
	strb	r5, [r3, #618]	@ tmp232, <variable>.bottom_field.is_short_term
	ldr	ip, [r4, #-64]	@ tmp168, <variable>.DPB.fs
	strb	r5, [ip, #2]	@ tmp232, <variable>.is_reference
	ldr	lr, [r4, #-64]	@ tmp173, <variable>.DPB.fs
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r1, [r4, #-64]	@ tmp175, <variable>.DPB.fs
	strb	r5, [r1, #1]	@ tmp232, <variable>.is_used
	ldr	r2, [r4, #-64]	@ tmp178, <variable>.DPB.fs
	strb	r5, [r2, #4]	@ tmp232, <variable>.is_in_dpb
	ldr	r0, [r4, #-64]	@ tmp181, <variable>.DPB.fs
	str	r9, [r0, #684]	@ tmp234, <variable>.is_displayed
	ldr	r2, [r4, #-64]	@ temp.7597, <variable>.DPB.fs
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	ldr	r3, [r2, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	add	ip, r3, #6656	@ tmp183, <variable>.apc_idc,
	add	r1, ip, #6	@ tmp183, tmp183,
	add	r3, r6, r1, asl #2	@, tmp188, pH264Ctx, tmp183,
	str	r5, [r3, #4]	@ tmp232, <variable>.APC.is_used
	ldr	r1, [r2, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	mov	r2, r5	@, tmp232
	cmp	r0, #3	@,
	beq	.L2311	@,
	ldr	ip, [r4, #-64]	@ tmp196, <variable>.DPB.fs
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2311:
	ldr	r2, [r6, sl]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r5, [r4, #-64]	@ tmp232, <variable>.DPB.fs
	cmp	r2, r7	@ <variable>.DPB.used_size, i.7603
	str	r5, [r4, #0]	@ tmp232, <variable>.DPB.fs_ref
	str	r5, [r4, #64]	@ tmp232, <variable>.DPB.fs_ltref
	add	r4, r4, #4	@ ivtmp.7589, ivtmp.7589,
	bhi	.L2312	@,
.L2309:
	movw	r0, #57708	@ tmp205,
	movw	r3, #26636	@ tmp203,
	ldr	ip, [r6, r0]	@ D.40345, <variable>.TotalPmvNum
	mov	r0, #0	@ tmp204,
	str	r0, [r6, r3]	@ tmp204, <variable>.DPB.used_size
	cmp	ip, r0	@ D.40345,
	beq	.L2313	@,
	add	r3, r6, #57600	@ tmp206, pH264Ctx,
	mov	r2, #1	@ i,
	add	lr, r3, #36	@ ivtmp.7581, tmp206,
	cmp	r2, ip	@ i, D.40345
	sub	r1, ip, #1	@ tmp236, D.40345,
	str	r0, [lr, #0]	@ tmp230, <variable>.PmvStoreUsedFlag
	and	lr, r1, r2	@ tmp238, tmp236,
	add	r1, r3, #40	@ ivtmp.7581, tmp206,
	bcs	.L2313	@,
	cmp	lr, #0	@ tmp238,
	beq	.L2314	@,
	mov	r2, #2	@ i,
	cmp	r2, ip	@ i, D.40345
	str	r0, [r1, #0]	@ tmp230, <variable>.PmvStoreUsedFlag
	add	r1, r3, #44	@ ivtmp.7581, tmp206,
	bcs	.L2313	@,
.L2314:
	add	r2, r2, #2	@ i, i,
	mov	r3, r1	@ tmp240, ivtmp.7581
	cmp	r2, ip	@ i, D.40345
	str	r0, [r3], #4	@ tmp230, <variable>.PmvStoreUsedFlag
	str	r0, [r1, #4]	@ tmp230, <variable>.PmvStoreUsedFlag
	add	r1, r3, #4	@ ivtmp.7581, tmp240,
	bcc	.L2314	@,
.L2313:
	mov	r0, r6	@, pH264Ctx
	bl	UpdateReflist	@
	mov	r0, r6	@, pH264Ctx
	bl	UpdateLTReflist	@
	movw	r2, #56340	@ tmp209,
	ldr	ip, [r6, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [ip, #2]	@ zero_extendqisi2	@ <variable>.long_term_reference_flag, <variable>.long_term_reference_flag
	cmp	r3, #0	@ <variable>.long_term_reference_flag,
	bne	.L2325	@,
	movw	r2, #26648	@ tmp221,
	movw	ip, #55797	@ tmp226,
	movw	r1, #55796	@ tmp223,
	mov	lr, #1	@ tmp227,
	mov	r0, r3	@ D.40350, <variable>.long_term_reference_flag
	str	r3, [r6, r2]	@ <variable>.long_term_reference_flag, <variable>.DPB.max_long_term_pic_idx
	strb	lr, [r6, ip]	@ tmp227, <variable>.CurrPic.is_short_term
	strb	r3, [r6, r1]	@ <variable>.long_term_reference_flag, <variable>.CurrPic.is_long_term
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2325:
	movw	r2, #56348	@ tmp213,
	movw	ip, #55797	@ tmp218,
	movw	r3, #55796	@ tmp215,
	movw	r1, #26648	@ tmp211,
	mov	r0, #0	@ tmp214,
	mov	lr, #1	@ tmp212,
	str	r0, [r6, r2]	@ tmp214, <variable>.CurrPic.long_term_frame_idx
	strb	r0, [r6, ip]	@ tmp214, <variable>.CurrPic.is_short_term
	strb	lr, [r6, r3]	@ tmp212, <variable>.CurrPic.is_long_term
	str	lr, [r6, r1]	@ tmp212, <variable>.DPB.max_long_term_pic_idx
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2308:
	bl	FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.40350,
	beq	.L2313	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	IDRMemMarking, .-IDRMemMarking
	.align	2
	.global	AdaptiveMemMark
	.type	AdaptiveMemMark, %function
AdaptiveMemMark:
	.fnstart
.LFB1573:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #56340	@ tmp153,
	ldr	r4, [r0, r3]	@ ivtmp.7637, <variable>.CurrPic.pMarkPara
	add	r7, r0, #55552	@ D.40284, pH264Ctx,
	add	r7, r7, #240	@ D.40284, D.40284,
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	add	r6, r4, #2000	@ D.54794, ivtmp.7637,
	movw	r8, #19828	@ tmp211,
	mov	sl, #1	@ tmp212,
.L2336:
	ldr	r0, [r4, #4]	@ <variable>.memory_management_control_operation, <variable>.memory_management_control_operation
	cmp	r0, #6	@ <variable>.memory_management_control_operation,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.memory_management_control_operation
	b	.L2327	@
.L2335:
	.word	.L2328
	.word	.L2329
	.word	.L2330
	.word	.L2331
	.word	.L2332
	.word	.L2333
	.word	.L2334
.L2334:
	ldr	r2, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pH264Ctx
	mov	r1, r7	@, D.40284
	bl	MarkCurrPicLT	@
.L2327:
	add	r4, r4, #20	@ ivtmp.7637, ivtmp.7637,
	cmp	r4, r6	@ ivtmp.7637, D.54794
	bne	.L2336	@,
.L2328:
	movw	r2, #19828	@ tmp163,
	ldr	r1, [r5, r2]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r1, #1	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L2345	@,
.L2337:
	mov	r0, #0	@ D.40314,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2333:
	mov	r0, r5	@, pH264Ctx
	add	r4, r4, #20	@ ivtmp.7637, ivtmp.7637,
	bl	UnMarkAllSTRef	@
	mov	r0, r5	@, pH264Ctx
	bl	UpdateReflist	@
	mov	r0, r5	@, pH264Ctx
	mov	r1, #0	@,
	bl	UpdateMaxLTFrmIdx	@
	mov	r0, r5	@, pH264Ctx
	bl	UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7637, D.54794
	str	sl, [r5, r8]	@ tmp212, <variable>.CurrPOC.last_has_mmco_5
	bne	.L2336	@,
	b	.L2328	@
.L2332:
	ldr	r1, [r4, #20]	@, <variable>.max_long_term_frame_idx_plus1
	mov	r0, r5	@, pH264Ctx
	bl	UpdateMaxLTFrmIdx	@
	add	r4, r4, #20	@ ivtmp.7637, ivtmp.7637,
	mov	r0, r5	@, pH264Ctx
	bl	UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7637, D.54794
	bne	.L2336	@,
	b	.L2328	@
.L2331:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r1, r7	@, D.40284
	ldr	r3, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pH264Ctx
	bl	MarkSTToLTRef	@
	mov	r0, r5	@, pH264Ctx
	bl	UpdateReflist	@
	add	r4, r4, #20	@ ivtmp.7637, ivtmp.7637,
	mov	r0, r5	@, pH264Ctx
	bl	UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7637, D.54794
	bne	.L2336	@,
	b	.L2328	@
.L2330:
	ldr	r2, [r4, #12]	@, <variable>.long_term_pic_num
	mov	r0, r5	@, pH264Ctx
	mov	r1, r7	@, D.40284
	add	r4, r4, #20	@ ivtmp.7637, ivtmp.7637,
	bl	UnMarkLTRef	@
	mov	r0, r5	@, pH264Ctx
	bl	UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7637, D.54794
	bne	.L2336	@,
	b	.L2328	@
.L2329:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r0, r5	@, pH264Ctx
	mov	r1, r7	@, D.40284
	add	r4, r4, #20	@ ivtmp.7637, ivtmp.7637,
	bl	UnMarkSTRef	@
	mov	r0, r5	@, pH264Ctx
	bl	UpdateReflist	@
	cmp	r4, r6	@ ivtmp.7637, D.54794
	bne	.L2336	@,
	b	.L2328	@
.L2345:
	movw	lr, #55795	@ tmp167,
	movw	ip, #56344	@ tmp165,
	ldrb	r2, [r5, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r3, #0	@ tmp166,
	str	r3, [r5, ip]	@ tmp166, <variable>.CurrPic.frame_num
	cmp	r2, #1	@ <variable>.CurrPic.structure,
	beq	.L2340	@,
	bcs	.L2346	@,
	movw	r3, #56356	@ tmp186,
	movw	r4, #56368	@ tmp190,
	movw	r7, #56364	@ tmp185,
	movw	r0, #19836	@ tmp197,
	movw	sl, #19848	@ tmp198,
	ldr	ip, [r5, r3]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r1, [r5, sl]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r2, #19840	@ tmp202,
	ldr	r6, [r5, r4]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	ldr	r9, [r5, r0]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	ldr	r8, [r5, r7]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	rsb	r6, ip, r6	@ D.40303, <variable>.CurrPic.thispoc, <variable>.CurrPic.bottompoc
	str	r6, [r5, r4]	@ D.40303, <variable>.CurrPic.bottompoc
	sub	r4, r4, #8	@ tmp195, tmp195,
	rsb	r8, ip, r8	@ D.40302, <variable>.CurrPic.thispoc, <variable>.CurrPic.toppoc
	rsb	ip, r1, r9	@ D.40307, <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.toppoc
	ldr	r9, [r5, r2]	@, <variable>.CurrPOC.bottompoc
	cmp	r6, r8	@ D.40303, D.40302
	movlt	lr, r6	@ D.40304, D.40303
	movge	lr, r8	@ D.40304, D.40302
	str	ip, [r5, r0]	@ D.40307, <variable>.CurrPOC.toppoc
	rsb	r1, r1, r9	@ D.40308, <variable>.CurrPOC.ThisPOC,
	str	lr, [r5, r3]	@ D.40304, <variable>.CurrPic.thispoc
	cmp	r1, ip	@ D.40308, D.40307
	movlt	r3, r1	@ D.40309, D.40308
	movge	r3, ip	@ D.40309, D.40307
	add	ip, r2, #4	@ tmp207, tmp207,
	str	r3, [r5, sl]	@ D.40309, <variable>.CurrPOC.ThisPOC
	str	r8, [r5, r7]	@ D.40302, <variable>.CurrPic.toppoc
	str	lr, [r5, r4]	@ D.40304, <variable>.CurrPic.framepoc
	str	r1, [r5, r2]	@ D.40308, <variable>.CurrPOC.bottompoc
	str	r3, [r5, ip]	@ D.40309,
.L2338:
	mov	r0, r5	@, pH264Ctx
	bl	FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.40314,
	beq	.L2337	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2346:
	cmp	r2, #2	@ <variable>.CurrPic.structure,
	bne	.L2338	@,
	movw	r1, #56368	@ tmp177,
	sub	r0, r1, #12	@ tmp179, tmp179,
	movw	r2, #19848	@ tmp183,
	movw	lr, #19840	@ tmp181,
	str	r3, [r5, r2]	@ tmp166, <variable>.CurrPOC.ThisPOC
	str	r3, [r5, r1]	@ tmp166, <variable>.CurrPic.bottompoc
	str	r3, [r5, r0]	@ tmp166, <variable>.CurrPic.thispoc
	str	r3, [r5, lr]	@ tmp166,
	b	.L2338	@
.L2340:
	movw	r2, #56364	@ tmp169,
	sub	r1, r2, #8	@ tmp171, tmp171,
	movw	ip, #19848	@ tmp175,
	movw	r0, #19836	@ tmp173,
	str	r3, [r5, ip]	@ tmp166, <variable>.CurrPOC.ThisPOC
	str	r3, [r5, r2]	@ tmp166, <variable>.CurrPic.toppoc
	str	r3, [r5, r1]	@ tmp166, <variable>.CurrPic.thispoc
	str	r3, [r5, r0]	@ tmp166,
	b	.L2338	@
	.fnend
	.size	AdaptiveMemMark, .-AdaptiveMemMark
	.align	2
	.global	Marking
	.type	Marking, %function
Marking:
	.fnstart
.LFB1575:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #55795	@ tmp143,
	movw	r3, #55798	@ tmp146,
	ldrb	ip, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	ldrb	r1, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	ip, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, tmp145
	moveq	r2, #1	@, tmp145
	movw	r0, #19832	@ tmp142,
	cmp	r1, #5	@ <variable>.CurrPic.nal_unit_type,
	movw	r3, #19828	@ tmp140,
	str	r2, [r4, r0]	@ tmp145, <variable>.CurrPOC.last_pic_bottom_field
	mov	r2, #0	@ tmp141,
	str	r2, [r4, r3]	@ tmp141, <variable>.CurrPOC.last_has_mmco_5
	beq	.L2348	@,
	movw	r1, #56372	@ tmp148,
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, r2	@ <variable>.CurrPic.pic_type,
	bne	.L2349	@,
	ldr	r3, [r4, #0]	@ D.40368, <variable>.pstExtraData
	ldr	ip, [r3, #716]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	ip, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L2360	@,
.L2349:
	movw	r0, #56340	@ tmp156,
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	ip, [r2, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	ip, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L2359	@,
	movw	r1, #56352	@ tmp159,
	ldr	r3, [r4, r1]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r3, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2361	@,
.L2354:
	mov	r0, #0	@ D.40381,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L2360:
	ldr	r2, [r3, #712]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	r2, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L2349	@,
	ldr	r0, [r3, #720]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r0, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L2349	@,
	ldr	r1, [r3, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r1, #1024	@ tmp153, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp153,
	bls	.L2349	@,
.L2348:
	mov	r0, r4	@, pH264Ctx
	bl	IDRMemMarking	@
	cmp	r0, #0	@,
	bne	.L2350	@,
.L2351:
	movw	ip, #55798	@ tmp161,
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	cmp	lr, #5	@ <variable>.CurrPic.nal_unit_type,
	beq	.L2355	@,
.L2359:
	movw	r0, #56352	@ tmp163,
	ldr	r2, [r4, r0]	@ prephitmp.7661, <variable>.CurrPic.nal_ref_idc
	cmp	r2, #0	@ prephitmp.7661,
	beq	.L2354	@,
	movw	ip, #56340	@ tmp165,
	ldr	r1, [r4, ip]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r3, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L2356	@,
	movw	r2, #55793	@ tmp167,
	ldrb	r5, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r5, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2356	@,
	mov	r0, r4	@, pH264Ctx
	bl	SlidingWinMark	@
	movw	r0, #55796	@ tmp169,
	strb	r5, [r4, r0]	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.is_long_term
.L2355:
	movw	r3, #56352	@ tmp172,
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2354	@,
.L2356:
	movw	r0, #55796	@ tmp175,
	movw	ip, #55797	@ tmp174,
	ldrb	r2, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	mov	r0, #0	@ D.40381,
	cmp	r2, r0	@ <variable>.CurrPic.is_long_term,
	movne	r1, #0	@, tmp177
	moveq	r1, #1	@, tmp177
	strb	r1, [r4, ip]	@ tmp177, <variable>.CurrPic.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L2361:
	mov	r0, r4	@, pH264Ctx
	bl	AdaptiveMemMark	@
	cmp	r0, #0	@,
	beq	.L2351	@,
.L2350:
	mvn	r0, #0	@ D.40381,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	Marking, .-Marking
	.align	2
	.global	ClearDPB
	.type	ClearDPB, %function
ClearDPB:
	.fnstart
.LFB1537:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	FlushDPB	@
	subs	r3, r0, #0	@ ret,
	beq	.L2363	@,
	movw	r1, #:lower16:.LC94	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC94	@,
	mov	r2, #352	@,
	bl	dprint_vfmw	@
.L2363:
	mov	r0, r4	@, pH264Ctx
	bl	InitDPB	@
	mov	r3, #0	@ tmp138,
	movw	r0, #59228	@ tmp139,
	movw	r2, #57720	@ tmp137,
	str	r3, [r4, r0]	@ tmp138, <variable>.FirstFrameDisplayed
	mov	r0, r3	@, tmp138
	str	r3, [r4, r2]	@ tmp138, <variable>.IDRFound
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	ClearDPB, .-ClearDPB
	.align	2
	.global	ReceivePacket
	.type	ReceivePacket, %function
ReceivePacket:
	.fnstart
.LFB1658:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pPacket, pPacket
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r2, [r1, #4]	@ <variable>.p_stream, <variable>.p_stream
	mov	r0, #7	@,
	ldr	r3, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	movw	r1, #:lower16:.LC95	@,
	movt	r1, #:upper16:.LC95	@,
	str	ip, [sp, #0]	@ <variable>.stream_len,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #0]	@ D.46706, <variable>.pstExtraData
	movw	r2, #59256	@ tmp159,
	mov	r1, #0	@ tmp160,
	str	r1, [r4, r2]	@ tmp160, <variable>.u32SCDWrapAround
	ldr	r2, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r2, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L2393	@,
.L2366:
	ldr	r3, [r4, #368]	@ D.46713, <variable>.pCurrNal
	cmp	r3, #0	@ D.46713,
	beq	.L2368	@,
	ldrb	r2, [r5, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	cmp	r2, #1	@ <variable>.last_pack_in_nal,
	beq	.L2394	@,
.L2369:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC96	@,
	movt	r1, #:upper16:.LC96	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
.L2367:
	ldr	r3, [r4, #368]	@ D.46713, <variable>.pCurrNal
	cmp	r3, #0	@ D.46713,
	ldrneb	r2, [r5, #0]	@ zero_extendqisi2	@ prephitmp.7714, <variable>.last_pack_in_nal
	beq	.L2368	@,
.L2370:
	strb	r2, [r3, #4]	@ prephitmp.7714, <variable>.nal_integ
	ldr	r3, [r4, #0]	@ temp.7759, <variable>.pstExtraData
	ldr	r1, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r1, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L2395	@,
.L2380:
	ldr	lr, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	lr, #0	@ <variable>.stream_len,
	ble	.L2381	@,
	ldr	r2, [r5, #4]	@ temp.7763, <variable>.p_stream
	cmp	r2, #0	@ temp.7763,
	beq	.L2381	@,
	ldr	ip, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	ip, #0	@ <variable>.strm_phy_addr,
	beq	.L2381	@,
	ldr	r3, [r4, #368]	@ prephitmp.7716, <variable>.pCurrNal
	ldr	r1, [r3, #68]	@ temp.7765, <variable>.nal_segment
	cmp	r1, #1	@ temp.7765,
	bls	.L2396	@,
.L2383:
	movw	r6, #59224	@ tmp310,
	mov	r2, #1	@ tmp308,
	strb	r2, [r3, #4]	@ tmp308, <variable>.nal_integ
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r5, #16]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	movw	r0, #:lower16:g_event_report	@ tmp313,
	movt	r0, #:upper16:g_event_report	@ tmp313,
	ldr	ip, [r0, #0]	@ g_event_report.7792, g_event_report
	cmp	ip, #0	@ g_event_report.7792,
	beq	.L2377	@,
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.7792
.L2377:
	ldrb	r0, [r5, #2]	@ zero_extendqisi2	@ <variable>.pack_is_pic_over_flag, <variable>.pack_is_pic_over_flag
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r0, [r2, #5]	@ <variable>.pack_is_pic_over_flag, <variable>.dsp_check_pic_over_flag
	ldrb	r1, [r5, #1]	@ zero_extendqisi2	@ <variable>.IsFrameLastSegFlag, <variable>.IsFrameLastSegFlag
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r1, [r3, #6]	@ <variable>.IsFrameLastSegFlag, <variable>.IsFrameLastSegFlag
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	lr, [ip, #4]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	lr, #0	@ <variable>.nal_integ,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L2379:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2394:
	ldr	r1, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bhi	.L2369	@,
	ldrb	r0, [r3, #4]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r0, #1	@ <variable>.nal_integ,
	bne	.L2370	@,
	b	.L2369	@
.L2381:
	ldr	r3, [r4, #368]	@ prephitmp.7716, <variable>.pCurrNal
	b	.L2383	@
.L2396:
	rsb	r1, r1, r1, asl #3	@, tmp252, temp.7765, temp.7765,
	add	r0, r3, r1, asl #2	@, tmp254, prephitmp.7716, tmp252,
	str	r2, [r0, #8]	@ temp.7763, <variable>.streamBuffer
	ldr	ip, [r4, #368]	@ temp.7766, <variable>.pCurrNal
	ldr	r0, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	r3, [ip, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r3, r3, asl #3	@, tmp260, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, ip, r2, asl #2	@, tmp262, temp.7766, tmp260,
	str	r0, [lr, #12]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	ip, [r4, #368]	@ temp.7770, <variable>.pCurrNal
	ldr	r0, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	ldr	r1, [ip, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r3, r1, r1, asl #3	@, tmp269, <variable>.nal_segment, <variable>.nal_segment,
	add	lr, ip, r3, asl #2	@, tmp271, temp.7770, tmp269,
	str	r0, [lr, #16]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	mov	lr, #0	@ tmp282,
	ldr	r3, [r4, #368]	@ temp.7773, <variable>.pCurrNal
	ldr	r2, [r3, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r1, r2, r2, asl #3	@, tmp278, <variable>.nal_segment, <variable>.nal_segment,
	add	ip, r3, r1, asl #2	@, tmp280, temp.7773, tmp278,
	str	lr, [ip, #24]	@ tmp282, <variable>.bitsoffset
	ldr	r1, [r4, #368]	@ temp.7775, <variable>.pCurrNal
	ldr	ip, [r5, #16]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r0, [r1, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r0, r0, asl #3	@, tmp287, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, r1, r2, asl #2	@, tmp289, temp.7775, tmp287,
	str	ip, [r3, #32]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r0, [r4, #368]	@ temp.7778, <variable>.pCurrNal
	ldr	lr, [r0, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	add	r1, lr, #1	@ tmp293, <variable>.nal_segment,
	str	r1, [r0, #68]	@ tmp293, <variable>.nal_segment
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r3, #932]	@ <variable>.StopRecord, <variable>.StopRecord
	cmp	r2, #1	@ <variable>.StopRecord,
	beq	.L2385	@,
	movw	r2, #56408	@ tmp296,
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.FrameStreamSize, <variable>.CurrPic.FrameStreamSize
	movw	r3, #56412	@ tmp301,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.CurrentNalSize, <variable>.CurrPic.CurrentNalSize
	add	r0, ip, lr	@ tmp300, <variable>.stream_len, <variable>.CurrPic.FrameStreamSize
	str	r0, [r4, r2]	@ tmp300, <variable>.CurrPic.FrameStreamSize
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	add	lr, ip, r1	@ tmp305, <variable>.stream_len, <variable>.CurrPic.CurrentNalSize
	str	lr, [r4, r3]	@ tmp305, <variable>.CurrPic.CurrentNalSize
.L2385:
	mov	r0, r4	@, pH264Ctx
	bl	CombinePacket	@
	movw	r3, #59256	@ tmp306,
	mov	r1, #1	@ tmp307,
	str	r1, [r4, r3]	@ tmp307,
	b	.L2377	@
.L2368:
	ldr	lr, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	lr, #0	@ <variable>.stream_len,
	ble	.L2372	@,
	ldr	r2, [r5, #4]	@ <variable>.p_stream, <variable>.p_stream
	cmp	r2, #0	@ <variable>.p_stream,
	beq	.L2372	@,
	ldr	ip, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	ip, #0	@ <variable>.strm_phy_addr,
	beq	.L2372	@,
	ldrb	r2, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r1, r4, #96	@ ivtmp.7735, pH264Ctx,
	movne	r3, #1	@ Pos,
	bne	.L2374	@,
	b	.L2373	@
.L2397:
	ldrb	r2, [r1, #473]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r1, r1, #192	@ ivtmp.7735, ivtmp.7735,
	cmp	r2, #0	@ <variable>.is_valid,
	beq	.L2373	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L2375	@,
.L2374:
	ldrb	r2, [r1, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	bne	.L2397	@,
.L2373:
	cmp	r3, #136	@ Pos,
	bhi	.L2375	@,
	add	r1, r3, r3, asl #1	@, tmp179, Pos, Pos,
	mov	r0, #1	@ tmp183,
	mov	r3, r1, asl #5	@ tmp180, tmp179,
	add	r1, r3, r4	@ tmp181, tmp180, pH264Ctx
	add	ip, r3, #376	@ tmp189, tmp180,
	add	lr, r4, ip	@ tmp190, pH264Ctx, tmp189
	strb	r0, [r1, #377]	@ tmp183, <variable>.is_valid
	str	lr, [r4, #368]	@ tmp190, <variable>.pCurrNal
	ldr	r7, [r5, #4]	@ <variable>.p_stream, <variable>.p_stream
	str	r7, [r1, #384]	@ <variable>.p_stream, <variable>.streamBuffer
	ldr	r6, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	str	r6, [r1, #388]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	ip, [r5, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	str	ip, [r3, #16]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	lr, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [lr, #24]	@ <variable>.is_valid, <variable>.bitsoffset
	ldr	r7, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r6, [r5, #16]	@ <variable>.StreamID, <variable>.StreamID
	str	r6, [r7, #32]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrd	r6, [r5, #24]	@ <variable>.pts, pPacket,
	strd	r6, [r1, #88]	@ <variable>.pts, <variable>.pCurrNal,
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [r3, #68]	@ tmp183, <variable>.nal_segment
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r2, [ip, #0]	@ <variable>.is_valid, <variable>.nal_used_segment
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	lr, [r5, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	strb	lr, [r2, #4]	@ <variable>.last_pack_in_nal, <variable>.nal_integ
	ldr	r1, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r1, #932]	@ <variable>.StopRecord, <variable>.StopRecord
	cmp	r3, r0	@ <variable>.StopRecord,
	beq	.L2377	@,
	movw	lr, #56408	@ tmp228,
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	r2, [r4, lr]	@ <variable>.CurrPic.FrameStreamSize, <variable>.CurrPic.FrameStreamSize
	movw	r3, #56412	@ tmp233,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.CurrentNalSize, <variable>.CurrPic.CurrentNalSize
	add	r0, ip, r2	@ tmp232, <variable>.stream_len, <variable>.CurrPic.FrameStreamSize
	str	r0, [r4, lr]	@ tmp232, <variable>.CurrPic.FrameStreamSize
	ldr	ip, [r5, #12]	@ <variable>.stream_len, <variable>.stream_len
	add	r2, ip, r1	@ tmp237, <variable>.stream_len, <variable>.CurrPic.CurrentNalSize
	str	r2, [r4, r3]	@ tmp237,
	b	.L2377	@
.L2393:
	ldr	r3, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r3, r1	@ <variable>.s32WaitFsFlag,
	bne	.L2367	@,
	b	.L2366	@
.L2395:
	ldr	r0, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r0, #0	@ <variable>.s32WaitFsFlag,
	bne	.L2377	@,
	b	.L2380	@
.L2375:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC97	@,
	movt	r1, #:upper16:.LC97	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearAllNal	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
	movw	r0, #:lower16:g_event_report	@ tmp226,
	movt	r0, #:upper16:g_event_report	@ tmp226,
	ldr	ip, [r0, #0]	@ g_event_report.840, g_event_report
	cmp	ip, #0	@ g_event_report.840,
	bne	.L2398	@,
.L2378:
	mvn	r0, #0	@ ret,
	b	.L2379	@
.L2398:
	mov	r2, #0	@,
	movw	lr, #59224	@ tmp227,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.840
	mvn	r0, #0	@ ret,
	b	.L2379	@
.L2372:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC98	@,
	movw	r6, #59224	@ tmp239,
	movt	r1, #:upper16:.LC98	@,
	bl	dprint_vfmw	@
	ldr	r1, [r5, #16]	@, <variable>.StreamID
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r3, #:lower16:g_event_report	@ tmp242,
	movt	r3, #:upper16:g_event_report	@ tmp242,
	ldr	ip, [r3, #0]	@ g_event_report.7757, g_event_report
	cmp	ip, #0	@ g_event_report.7757,
	beq	.L2378	@,
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.7757
	mvn	r0, #0	@ ret,
	b	.L2379	@
	.fnend
	.size	ReceivePacket, .-ReceivePacket
	.align	2
	.global	DecVDM
	.type	DecVDM, %function
DecVDM:
	.fnstart
.LFB1620:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #55795	@ tmp150,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #0	@ <variable>.CurrPic.structure,
	beq	.L2400	@,
	movw	r5, #55793	@ tmp152,
	ldrb	r1, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r1, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2400	@,
.L2401:
	movw	lr, #59212	@ tmp165,
	movw	r6, #59152	@ tmp168,
	ldr	ip, [r4, lr]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	ldr	r3, [r4, r6]	@ D.43311, <variable>.OldDecMode
	ubfx	r5, ip, #16, #3	@ IPBDecMode, <variable>.advanced_cfg,,
	cmp	r3, r5	@ D.43311, IPBDecMode
	beq	.L2402	@,
	sub	r3, r3, #2	@ tmp171, D.43311,
	subs	r2, r5, #2	@, IPBDecMode,
	movne	r2, #1	@
	cmp	r3, #1	@ tmp171,
	movhi	r2, #0	@,,
	cmp	r2, #0	@ tmp176,
	bne	.L2429	@,
.L2402:
	cmp	r5, #2	@ IPBDecMode,
	movw	r0, #59152	@ tmp186,
	str	r5, [r4, r0]	@ IPBDecMode, <variable>.OldDecMode
	beq	.L2406	@,
	cmp	r5, #3	@ IPBDecMode,
	beq	.L2407	@,
	cmp	r5, #1	@ IPBDecMode,
	beq	.L2430	@,
.L2404:
	movw	r3, #59148	@ tmp208,
	ldr	r1, [r4, r3]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r1, #0	@ <variable>.SliceParaNum,
	beq	.L2428	@,
	cmp	r5, #4	@ IPBDecMode,
	movw	r5, #56372	@ tmp210,
	ldr	r3, [r4, r5]	@ prephitmp.7819, <variable>.CurrPic.pic_type
	beq	.L2431	@,
.L2410:
	movw	r0, #56372	@ tmp211,
	ldr	r3, [r4, r0]	@ prephitmp.7819, <variable>.CurrPic.pic_type
.L2412:
	cmp	r3, #2	@ prephitmp.7819,
	beq	.L2432	@,
	cmp	r3, #1	@ prephitmp.7819,
	movweq	r2, #57724	@ tmp236,
	streq	r3, [r4, r2]	@ prephitmp.7819, <variable>.PPicFound
.L2415:
	movw	r5, #59188	@ tmp239,
	movw	r1, #55795	@ tmp242,
	ldr	lr, [r4, r5]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	mov	r0, #2	@,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@, <variable>.CurrPic.structure
	movw	r1, #:lower16:.LC102	@,
	sub	r2, lr, #1	@, <variable>.TotalPicNum,
	movt	r1, #:upper16:.LC102	@,
	bl	dprint_vfmw	@
	movw	ip, #56396	@ tmp245,
	ldr	r1, [r4, ip]	@ <variable>.CurrPic.pic_mbs, <variable>.CurrPic.pic_mbs
	movw	r2, #56400	@ tmp251,
	ldr	r3, [r4, r5]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	movw	r0, #59148	@ tmp254,
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	ldr	r2, [r4, r0]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #0	@ <variable>.TotalPicNum,
	movw	r3, #58672	@ tmp244,
	movw	r0, #58668	@ tmp250,
	str	r1, [r4, r3]	@ <variable>.CurrPic.pic_mbs, <variable>.DecPicPara.mbtodec
	movw	r1, #58872	@ tmp253,
	movw	r3, #57754	@ tmp247,
	str	ip, [r4, r0]	@ <variable>.CurrPic.stream_base_addr, <variable>.DecPicPara.stream_base_addr
	str	r2, [r4, r1]	@ <variable>.SliceParaNum, <variable>.DecPicPara.SliceParaNum
	mov	ip, #1	@ tmp248,
	strb	ip, [r4, r3]	@ tmp248, <variable>.DecPicPara.NewPicFlag
	beq	.L2416	@,
	movw	r3, #56372	@ tmp258,
	ldr	r0, [r4, r3]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #0	@ <variable>.CurrPic.pic_type,
	beq	.L2433	@,
	movw	r1, #26636	@ tmp267,
	ldr	lr, [r4, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	lr, #0	@ <variable>.DPB.used_size,
	bne	.L2426	@,
	ldr	r2, [r4, #0]	@ temp.7847, <variable>.pstExtraData
	ldr	r3, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r3, #2	@ <variable>.s32DecOrderOutput,
	bne	.L2428	@,
	add	ip, r4, #57600	@ D.43391, pH264Ctx,
	add	r3, ip, #152	@ D.43391, D.43391,
	str	r3, [r4, #360]	@ D.43391, <variable>.pH264DecParam
	ldr	r1, [r2, #896]	@ D.43392, <variable>.stDisParams.s32Mode
	cmp	r1, #1	@ D.43392,
	beq	.L2434	@,
.L2419:
	cmp	r1, #2	@ D.43392,
	beq	.L2435	@,
.L2420:
	ldr	r5, [r2, #684]	@ <variable>.s32Compress_en, <variable>.s32Compress_en
	mov	r3, #59136	@ tmp287,
	str	r5, [r4, r3]	@ <variable>.s32Compress_en, <variable>.DecPicPara.Compress_en
.L2416:
	movw	r5, #56412	@ tmp289,
	movw	r0, #56336	@ tmp293,
	ldr	r2, [r4, r5]	@ D.43413, <variable>.CurrPic.CurrentNalSize
	movw	ip, #56408	@ tmp290,
	ldr	r1, [r4, r0]	@ temp.7858, <variable>.CurrPic.frame_store
	movw	lr, #56040	@ tmp296,
	ldr	r5, [r4, ip]	@ <variable>.CurrPic.FrameStreamSize, <variable>.CurrPic.FrameStreamSize
	mov	r0, #0	@ D.43326,
	str	r2, [r4, ip]	@ D.43413, <variable>.CurrPic.FrameStreamSize
	ldr	ip, [r1, #240]	@ <variable>.fs_image.FrameStreamSize, <variable>.fs_image.FrameStreamSize
	rsb	r3, r2, r5	@ FrameStreamSize, D.43413, <variable>.CurrPic.FrameStreamSize
	add	ip, ip, r3	@ tmp295, <variable>.fs_image.FrameStreamSize, FrameStreamSize
	str	ip, [r1, #240]	@ tmp295, <variable>.fs_image.FrameStreamSize
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.fs_image.FrameStreamSize, <variable>.CurrPic.fs_image.FrameStreamSize
	add	r2, r3, ip	@ tmp299, FrameStreamSize, <variable>.CurrPic.fs_image.FrameStreamSize
	str	r2, [r4, lr]	@ tmp299, <variable>.CurrPic.fs_image.FrameStreamSize
.L2403:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L2400:
	movw	r3, #59248	@ tmp154,
	ldr	r2, [r4, #0]	@ D.43303, <variable>.pstExtraData
	ldr	r6, [r4, r3]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	movw	r1, #59252	@ tmp157,
	ldr	r5, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	add	r0, r6, #1	@ D.43305, <variable>.numTotalFrame,
	cmp	r0, r5	@ D.43305, <variable>.numOutputFrame
	movlt	r0, r5	@ D.43307, <variable>.numOutputFrame
	str	r0, [r4, r3]	@ D.43307, <variable>.numTotalFrame
	str	r0, [r2, #608]	@ D.43307, <variable>.stChanState.total_frame_num
	ldr	lr, [r4, r3]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	ip, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	rsb	r6, ip, lr	@ tmp164, <variable>.numOutputFrame, <variable>.numTotalFrame
	str	r6, [r2, #612]	@ tmp164, <variable>.stChanState.error_frame_num
	b	.L2401	@
.L2429:
	cmp	r5, #4	@ IPBDecMode,
	cmpne	r5, #1	@, IPBDecMode,
	bhi	.L2402	@,
	mov	r2, r5	@, IPBDecMode
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC99	@,
	movt	r1, #:upper16:.LC99	@,
	bl	dprint_vfmw	@
	str	r5, [r4, r6]	@ IPBDecMode, <variable>.OldDecMode
.L2407:
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
.L2430:
	movw	r0, #56372	@ tmp201,
	ldr	r3, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2404	@,
	movw	lr, #56352	@ tmp203,
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2404	@,
	movw	r2, #55799	@ tmp205,
	mov	r0, r4	@, pH264Ctx
	strb	r5, [r4, r2]	@ IPBDecMode, <variable>.CurrPic.mode_skip_flag
	bl	H264_ClearCurrPic	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
.L2406:
	movw	ip, #56372	@ tmp187,
	ldr	r5, [r4, ip]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r5, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2436	@,
	movw	r3, #59148	@ tmp192,
	ldr	r1, [r4, r3]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r1, #0	@ <variable>.SliceParaNum,
	beq	.L2428	@,
	movw	lr, #59144	@ tmp195,
	ldr	ip, [r4, lr]	@ <variable>.DecSlicePara, <variable>.DecSlicePara
	ldr	r0, [ip, #48]	@ <variable>.first_mb_in_slice, <variable>.first_mb_in_slice
	cmp	r0, #0	@ <variable>.first_mb_in_slice,
	beq	.L2410	@,
	movw	r1, #55799	@ tmp197,
	mov	r2, #1	@ tmp198,
	mov	r0, r4	@, pH264Ctx
	strb	r2, [r4, r1]	@ tmp198, <variable>.CurrPic.mode_skip_flag
	bl	H264_ClearCurrPic	@
	mov	r0, r5	@, <variable>.CurrPic.pic_type
	movw	r1, #:lower16:.LC100	@,
	movt	r1, #:upper16:.LC100	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
.L2432:
	movw	r1, #57724	@ tmp220,
	ldr	r2, [r4, r1]	@ <variable>.PPicFound, <variable>.PPicFound
	cmp	r2, #2	@ <variable>.PPicFound,
	bne	.L2415	@,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r5, [r3, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r5, #0	@ <variable>.s32DecOrderOutput,
	bne	.L2415	@,
	movw	ip, #:lower16:g_allow_B_before_P	@ tmp224,
	movt	ip, #:upper16:g_allow_B_before_P	@ tmp224,
	ldrb	r0, [ip, #0]	@ zero_extendqisi2	@ g_allow_B_before_P, g_allow_B_before_P
	cmp	r0, #1	@ g_allow_B_before_P,
	beq	.L2415	@,
	movw	lr, #56352	@ tmp229,
	movw	r0, #56356	@ tmp227,
	ldr	r2, [r4, r0]	@, <variable>.CurrPic.thispoc
	movw	r1, #:lower16:.LC101	@,
	ldr	r3, [r4, lr]	@, <variable>.CurrPic.nal_ref_idc
	movt	r1, #:upper16:.LC101	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	movw	r1, #56336	@ tmp234,
	ldr	r3, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r2, #59224	@ tmp231,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, r5	@, <variable>.s32DecOrderOutput
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
.L2431:
	cmp	r3, #0	@ prephitmp.7819,
	bne	.L2412	@,
	movw	lr, #57724	@ tmp212,
	ldr	ip, [r4, lr]	@ <variable>.PPicFound, <variable>.PPicFound
	cmp	ip, #0	@ <variable>.PPicFound,
	moveq	ip, #2	@ tmp215,
	movne	ip, #1	@ tmp218,
	str	ip, [r4, lr]	@ tmp218, <variable>.PPicFound
	b	.L2415	@
.L2433:
	movw	r5, #:lower16:g_event_report	@ tmp260,
	movt	r5, #:upper16:g_event_report	@ tmp260,
	ldr	r2, [r5, #0]	@ g_event_report, g_event_report
	cmp	r2, #0	@ g_event_report,
	beq	.L2426	@,
	mov	r0, r4	@, pH264Ctx
	bl	H264_GetPicStreamSize	@
	sub	r2, fp, #28	@ tmp265,,
	ldr	ip, [r5, #0]	@ g_event_report, g_event_report
	mov	r1, #20	@,
	mov	r3, #4	@,
	str	r0, [r2, #-4]!	@, para
	movw	r0, #59224	@ tmp263,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	ip	@ g_event_report
.L2426:
	ldr	r2, [r4, #0]	@ temp.7847, <variable>.pstExtraData
	add	ip, r4, #57600	@ D.43391, pH264Ctx,
	add	r3, ip, #152	@ D.43391, D.43391,
	str	r3, [r4, #360]	@ D.43391, <variable>.pH264DecParam
	ldr	r1, [r2, #896]	@ D.43392, <variable>.stDisParams.s32Mode
	cmp	r1, #1	@ D.43392,
	bne	.L2419	@,
.L2434:
	cmp	r3, #0	@ D.43391,
	beq	.L2420	@,
	movw	lr, #56372	@ tmp272,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2420	@,
	movw	ip, #56336	@ tmp277,
	movw	r1, #59224	@ tmp275,
	ldr	r3, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #0	@ tmp274,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	str	r2, [r4, #360]	@ tmp274, <variable>.pH264DecParam
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2428:
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
.L2435:
	ldr	r0, [r2, #900]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	cmp	r0, #0	@ <variable>.stDisParams.s32DisNums,
	ble	.L2420	@,
	cmp	r3, #0	@ D.43391,
	beq	.L2420	@,
	movw	r3, #56372	@ tmp279,
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	lr, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2420	@,
	movw	r0, #56336	@ tmp284,
	movw	r1, #59224	@ tmp282,
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #0	@ tmp281,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	str	r2, [r4, #360]	@ tmp281, <variable>.pH264DecParam
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	r1, [r4, #0]	@ temp.7856, <variable>.pstExtraData
	mov	r0, r4	@, pH264Ctx
	ldr	ip, [r1, #900]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	sub	r2, ip, #1	@ tmp286, <variable>.stDisParams.s32DisNums,
	str	r2, [r1, #900]	@ tmp286, <variable>.stDisParams.s32DisNums
	bl	H264_ClearCurrPic	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
.L2436:
	movw	lr, #55799	@ tmp189,
	mov	r2, #1	@ tmp190,
	mov	r0, r4	@, pH264Ctx
	strb	r2, [r4, lr]	@ tmp190, <variable>.CurrPic.mode_skip_flag
	bl	H264_ClearCurrPic	@
	mvn	r0, #0	@ D.43326,
	b	.L2403	@
	.fnend
	.size	DecVDM, .-DecVDM
	.align	2
	.global	H264_FlushDecoder
	.type	H264_FlushDecoder, %function
H264_FlushDecoder:
	.fnstart
.LFB1652:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #20693	@ tmp137,
	movw	r2, #20740	@ tmp135,
	mov	r4, #1	@ tmp138,
	mov	r1, #0	@ tmp136,
	strb	r4, [r0, ip]	@ tmp138, <variable>.CurrSlice.new_pic_flag
	str	r1, [r0, r2]	@ tmp136, <variable>.CurrSlice.first_mb_in_slice
	str	r4, [r0, #364]	@ tmp138, <variable>.StartMode
	bl	DecVDM	@
	cmp	r0, #0	@,
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	mov	r0, r4	@, tmp138
	movw	r1, #:lower16:.LC103	@,
	movt	r1, #:upper16:.LC103	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	H264_FlushDecoder, .-H264_FlushDecoder
	.align	2
	.global	InsertFrmInDPB
	.type	InsertFrmInDPB, %function
InsertFrmInDPB:
	.fnstart
.LFB1567:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r7, r2	@ pCurrPic, pCurrPic
	ldrb	r2, [r2, #3]	@ zero_extendqisi2	@ D.39854, <variable>.structure
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r2, #1	@ D.39854,
	beq	.L2443	@,
	bcc	.L2442	@,
	cmp	r2, #2	@ D.39854,
	beq	.L2486	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC105	@,
	movt	r1, #:upper16:.LC105	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	bl	ClearAll	@
	mov	r0, #0	@ D.39897,
.L2450:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2442:
	ldr	r2, [r7, #544]	@ D.39857, <variable>.frame_store
	add	r6, r1, #6592	@ tmp826, pos,
	add	r6, r6, #18	@ tmp826, tmp826,
	mov	sl, #3	@ tmp210,
	str	r2, [r0, r6, asl #2]	@ D.39857, <variable>.DPB.fs
	ldrb	lr, [r7, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	lr, [r2, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	ip, [r0, r6, asl #2]	@ tmp209, <variable>.DPB.fs
	strb	sl, [ip, #1]	@ tmp210, <variable>.is_used
	ldr	r9, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r8, [r0, r6, asl #2]	@ tmp214, <variable>.DPB.fs
	ldrb	r5, [r9, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r5, [r8, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r1, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r0, r6, asl #2]	@ tmp220, <variable>.DPB.fs
	ldr	r0, [r1, #684]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r0, [r3, #684]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	ldr	r3, [r4, r6, asl #2]	@ temp.7927, <variable>.DPB.fs
	cmp	r2, #0	@ <variable>.is_long_term,
	beq	.L2487	@,
.L2445:
	mov	r2, #3	@ iftmp.509,
.L2446:
	strb	r2, [r3, #2]	@ iftmp.509, <variable>.is_reference
	add	r1, r7, #16	@, pCurrPic,
	ldr	r9, [r4, r6, asl #2]	@ tmp230, <variable>.DPB.fs
	mov	r2, #528	@,
	ldr	lr, [r7, #612]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	mov	r5, #0	@ tmp254,
	str	lr, [r9, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r0, [r4, r6, asl #2]	@ tmp234, <variable>.DPB.fs
	add	r0, r0, #8	@, tmp234,
	bl	memcpy	@
	ldr	r8, [r4, r6, asl #2]	@ temp.7930, <variable>.DPB.fs
	ldr	ip, [r7, #588]	@ D.39873, <variable>.err_level
	mov	r2, r5	@, tmp254
	mov	r0, r4	@, pH264Ctx
	str	ip, [r8, #696]	@ D.39873, <variable>.err_level
	str	ip, [r8, #556]	@ D.39873, <variable>.frame.err_level
	ldr	r3, [r4, r6, asl #2]	@ temp.7931, <variable>.DPB.fs
	ldr	r1, [r7, #544]	@ temp.7932, <variable>.frame_store
	str	r1, [r3, #540]	@ temp.7932, <variable>.frame.frame_store
	str	r1, [r3, #620]	@ temp.7932, <variable>.bottom_field.frame_store
	str	r1, [r3, #580]	@ temp.7932, <variable>.top_field.frame_store
	ldr	sl, [r4, r6, asl #2]	@ tmp245, <variable>.DPB.fs
	ldr	r9, [r7, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	str	r9, [sl, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	ldr	r8, [r4, r6, asl #2]	@ tmp249, <variable>.DPB.fs
	ldr	ip, [r7, #552]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r8, #660]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r4, r6, asl #2]	@ tmp253, <variable>.DPB.fs
	strb	r5, [r1, #536]	@ tmp254, <variable>.frame.structure
	ldr	r3, [r4, r6, asl #2]	@ tmp258, <variable>.DPB.fs
	ldrb	sl, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	sl, [r3, #537]	@ <variable>.is_long_term, <variable>.frame.is_long_term
	ldr	r9, [r4, r6, asl #2]	@ tmp263, <variable>.DPB.fs
	ldrb	r8, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r8, [r9, #538]	@ <variable>.is_short_term, <variable>.frame.is_short_term
	ldr	ip, [r4, r6, asl #2]	@ temp.7940, <variable>.DPB.fs
	ldr	r1, [r7, #580]	@ D.39879, <variable>.pic_type
	str	r1, [ip, #692]	@ D.39879, <variable>.pic_type
	str	r1, [ip, #560]	@ D.39879, <variable>.frame.pic_type
	ldr	r3, [r4, r6, asl #2]	@ tmp270, <variable>.DPB.fs
	ldrb	sl, [r7, #9]	@ zero_extendqisi2	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	str	sl, [r3, #688]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldr	r9, [r4, r6, asl #2]	@ tmp274, <variable>.DPB.fs
	ldr	r8, [r7, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	r8, [r9, #672]	@ <variable>.thispoc, <variable>.poc
	ldr	ip, [r4, r6, asl #2]	@ tmp278, <variable>.DPB.fs
	ldr	r1, [r7, #568]	@ <variable>.framepoc, <variable>.framepoc
	str	r1, [ip, #552]	@ <variable>.framepoc, <variable>.frame.poc
	ldr	r3, [r4, r6, asl #2]	@ tmp282, <variable>.DPB.fs
	ldr	sl, [r7, #572]	@ <variable>.toppoc, <variable>.toppoc
	str	sl, [r3, #592]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r9, [r4, r6, asl #2]	@ tmp286, <variable>.DPB.fs
	ldr	r8, [r7, #576]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r8, [r9, #632]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	mov	r8, #1	@ tmp302,
	ldrb	r1, [r7, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	ip, [r4, r6, asl #2]	@ temp.7946, <variable>.DPB.fs
	cmp	r1, #1	@ <variable>.mode_skip_flag,
	moveq	r1, #3	@ iftmp.511,
	movne	r1, r5	@ iftmp.511, tmp2
	strb	r1, [ip, #3]	@ iftmp.511, <variable>.mode_skip_flag
	ldr	r3, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	sl, [r4, r6, asl #2]	@ tmp294, <variable>.DPB.fs
	ldr	r9, [r3, #572]	@ <variable>.frame.AvgQp, <variable>.frame.AvgQp
	str	r9, [sl, #572]	@ <variable>.frame.AvgQp, <variable>.frame.AvgQp
	ldr	r3, [r4, r6, asl #2]	@ temp.7949, <variable>.DPB.fs
	ldr	r1, [r3, #556]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldrb	lr, [r3, #537]	@ zero_extendqisi2	@ D.47678, <variable>.frame.is_long_term
	ldrb	ip, [r3, #538]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	ldr	sl, [r3, #560]	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldr	r9, [r3, #540]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r8, [r3, #576]	@ tmp302, <variable>.top_field.structure
	mov	r8, #2	@ tmp310,
	strb	lr, [r3, #617]	@ D.47678, <variable>.bottom_field.is_long_term
	str	r9, [r3, #620]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r3, #618]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r8, [r3, #616]	@ tmp310, <variable>.bottom_field.structure
	str	r1, [r3, #636]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	str	sl, [r3, #640]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	lr, [r3, #577]	@ D.47678, <variable>.top_field.is_long_term
	strb	ip, [r3, #578]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	r1, [r3, #596]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	str	sl, [r3, #600]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r9, [r3, #580]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldr	r1, [r7, #544]	@, <variable>.frame_store
	bl	GetAPC	@
	cmp	r0, #0	@ ret
	movne	r3, r0	@, ret
	movne	r2, #2080	@,
	movne	r0, r5	@, tmp254
	bne	.L2485	@,
.L2449:
	ldr	lr, [r4, r6, asl #2]	@ tmp818, <variable>.DPB.fs
	movw	r2, #59224	@ tmp814,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r2, #1	@,
	ldr	r1, [lr, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r0, #0	@ D.39897,
	b	.L2450	@
.L2443:
	ldr	r3, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	mov	ip, #3	@ tmp318,
	strb	ip, [r3, #536]	@ tmp318, <variable>.frame.structure
	ldrb	r5, [r7, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r5, #0	@ <variable>.field_pair_flag,
	addeq	r6, r1, #6592	@ tmp826, pos,
	addeq	r6, r6, #18	@ tmp826, tmp826,
	beq	.L2451	@,
	add	r6, r1, #6592	@ tmp826, pos,
	add	r6, r6, #18	@ tmp826, tmp826,
	ldr	r3, [r0, r6, asl #2]	@ temp.7952, <variable>.DPB.fs
	cmp	r3, #0	@ temp.7952,
	beq	.L2451	@,
	strb	r2, [r3, #576]	@ D.39854, <variable>.top_field.structure
	ldr	ip, [r0, r6, asl #2]	@ tmp432, <variable>.DPB.fs
	ldr	r9, [r7, #580]	@ <variable>.pic_type, <variable>.pic_type
	str	r9, [ip, #600]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	lr, [r0, r6, asl #2]	@ tmp436, <variable>.DPB.fs
	ldrb	r1, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r1, [lr, #577]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r0, [r0, r6, asl #2]	@ tmp441, <variable>.DPB.fs
	ldrb	r2, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r2, [r0, #578]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	r5, [r4, r6, asl #2]	@ tmp446, <variable>.DPB.fs
	ldr	sl, [r7, #572]	@ <variable>.toppoc, <variable>.toppoc
	str	sl, [r5, #592]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r3, [r4, r6, asl #2]	@ tmp450, <variable>.DPB.fs
	ldr	r8, [r7, #580]	@ <variable>.pic_type, <variable>.pic_type
	str	r8, [r3, #600]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	ip, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r9, [r4, r6, asl #2]	@ tmp454, <variable>.DPB.fs
	ldr	lr, [ip, #612]	@ <variable>.top_field.AvgQp, <variable>.top_field.AvgQp
	str	lr, [r9, #612]	@ <variable>.top_field.AvgQp, <variable>.top_field.AvgQp
	ldr	r1, [r4, r6, asl #2]	@ tmp459, <variable>.DPB.fs
	ldr	r0, [r7, #588]	@ <variable>.err_level, <variable>.err_level
	str	r0, [r1, #596]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	sl, [r4, r6, asl #2]	@ temp.7967, <variable>.DPB.fs
	ldr	r2, [sl, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r5, [sl, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r8, r2, r5	@ D.39915, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	r8, [sl, #696]	@ D.39915, <variable>.err_level
	str	r8, [sl, #556]	@ D.39915, <variable>.frame.err_level
	ldr	r3, [r4, r6, asl #2]	@ temp.7968, <variable>.DPB.fs
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	ldrneb	ip, [r7, #2]	@ zero_extendqisi2	@ iftmp.514, <variable>.non_existing
	strb	ip, [r3, #0]	@ iftmp.514, <variable>.non_existing
	ldr	lr, [r4, r6, asl #2]	@ temp.7969, <variable>.DPB.fs
	ldrb	r9, [lr, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r1, r9, #1	@ tmp473, <variable>.is_used,
	strb	r1, [lr, #1]	@ tmp473, <variable>.is_used
	ldr	r2, [r4, r6, asl #2]	@ D.39858, <variable>.DPB.fs
	add	r1, r7, #16	@, pCurrPic,
	ldrb	r0, [r7, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	r5, [r2, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r0, #1	@ <variable>.mode_skip_flag,
	orreq	r5, r5, #1	@ iftmp.515, <variable>.mode_skip_flag,
	strb	r5, [r2, #3]	@ iftmp.515, <variable>.mode_skip_flag
	mov	r2, #528	@,
	ldr	ip, [r4, r6, asl #2]	@ temp.7971, <variable>.DPB.fs
	add	r0, ip, #8	@, temp.7971,
	ldr	sl, [ip, #20]	@, <variable>.fs_image.PTS
	ldr	r5, [ip, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	str	sl, [fp, #-76]	@, %sfp
	ldrd	r8, [ip, #24]	@, temp.7971,
	strd	r8, [fp, #-52]	@,,
	ldrd	r8, [ip, #32]	@, temp.7971,
	strd	r8, [fp, #-60]	@,,
	ldr	r3, [ip, #84]	@, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	lr, [ip, #80]	@ OtherFieldDispFrameDistance, <variable>.fs_image.DispFrameDistance
	ldr	sl, [ip, #76]	@ OtherFieldDispEnableFlag, <variable>.fs_image.DispEnableFlag
	str	r3, [fp, #-64]	@, %sfp
	ldr	r9, [ip, #88]	@, <variable>.fs_image.GopNum
	str	lr, [fp, #-68]	@,
	str	r9, [fp, #-72]	@, %sfp
	bl	memcpy	@
	ldr	r1, [r7, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	r0, [r7, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	lr, [fp, #-76]	@, %sfp
	and	r2, r1, r0	@ tmp494, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r3, r5, lr	@ tmp491, OtherFieldPts,
	cmn	r2, #1	@ tmp494,
	movne	ip, #0	@,
	moveq	ip, #1	@,
	cmn	r3, #1	@ tmp491,
	ldrd	r2, [r7, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	moveq	ip, #0	@,,
	cmp	ip, #0	@ tmp500,
	mov	r9, ip	@ tmp500,
	ldr	ip, [fp, #-68]	@,
	ldrne	r9, [r4, r6, asl #2]	@ tmp503, <variable>.DPB.fs
	strne	lr, [r9, #20]	@, <variable>.fs_image.PTS
	strne	r5, [r9, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	r8, [fp, #-52]	@,,
	ldr	r1, [r4, r6, asl #2]	@ tmp506, <variable>.DPB.fs
	cmp	r3, r9	@ <variable>.fs_image.Usertag,
	cmpeq	r2, r8	@ <variable>.fs_image.Usertag,
	movhi	r3, r9	@ <variable>.fs_image.Usertag,
	movhi	r2, r8	@ <variable>.fs_image.Usertag,
	ldrd	r8, [r7, #40]	@, pCurrPic,
	strd	r8, [fp, #-52]	@,,
	strd	r2, [r1, #24]	@ <variable>.fs_image.Usertag, tmp506,
	ldrd	r0, [fp, #-60]	@,,
	ldr	r3, [r4, r6, asl #2]	@ tmp510, <variable>.DPB.fs
	cmp	r9, r1	@,
	cmpeq	r8, r0	@,
	strhid	r0, [fp, #-52]	@,,
.L2461:
	ldrd	r8, [fp, #-52]	@,,
	ldr	r2, [r7, #84]	@ <variable>.fs_image.DispEnableFlag, <variable>.fs_image.DispEnableFlag
	ldr	r0, [r7, #88]	@ <variable>.fs_image.DispFrameDistance, <variable>.fs_image.DispFrameDistance
	strd	r8, [r3, #32]	@, tmp510,
	ldr	r1, [r4, r6, asl #2]	@ tmp514, <variable>.DPB.fs
	ldr	lr, [r7, #92]	@ <variable>.fs_image.DistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	cmp	r2, sl	@ <variable>.fs_image.DispEnableFlag, OtherFieldDispEnableFlag
	strls	r2, [r1, #76]	@, <variable>.fs_image.DispEnableFlag, <variable>.fs_image.DispEnableFlag
	strhi	sl, [r1, #76]	@, OtherFieldDispEnableFlag, <variable>.fs_image.DispEnableFlag
	ldr	r3, [r4, r6, asl #2]	@ tmp519, <variable>.DPB.fs
	ldr	r2, [r7, #96]	@ <variable>.fs_image.GopNum, <variable>.fs_image.GopNum
	cmp	r0, ip	@ <variable>.fs_image.DispFrameDistance, OtherFieldDispFrameDistance
	strls	r0, [r3, #80]	@, <variable>.fs_image.DispFrameDistance, <variable>.fs_image.DispFrameDistance
	strhi	ip, [r3, #80]	@, OtherFieldDispFrameDistance, <variable>.fs_image.DispFrameDistance
	ldr	r9, [fp, #-64]	@, %sfp
	ldr	ip, [r4, r6, asl #2]	@ tmp524, <variable>.DPB.fs
	cmp	lr, r9	@ <variable>.fs_image.DistanceBeforeFirstFrame,
	strls	lr, [ip, #84]	@, <variable>.fs_image.DistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	strhi	r9, [ip, #84]	@,, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	r0, [r4, r6, asl #2]	@ tmp529, <variable>.DPB.fs
	cmp	r2, r1	@ <variable>.fs_image.GopNum,
	strls	r2, [r0, #88]	@, <variable>.fs_image.GopNum, <variable>.fs_image.GopNum
	strhi	r1, [r0, #88]	@,, <variable>.fs_image.GopNum
	ldrb	r3, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2462	@,
	ldrb	lr, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	lr, #1	@ <variable>.is_short_term,
	beq	.L2462	@,
.L2463:
	ldr	r3, [r4, r6, asl #2]	@ temp.7985, <variable>.DPB.fs
	ldr	r0, [r3, #640]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	ip, [r3, #600]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r0, ip	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	strcs	r0, [r3, #692]	@, <variable>.bottom_field.pic_type, <variable>.pic_type
	strcc	ip, [r3, #692]	@, <variable>.top_field.pic_type, <variable>.pic_type
	ldr	r1, [r4, r6, asl #2]	@ tmp552, <variable>.DPB.fs
	ldr	lr, [r7, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	lr, [r1, #672]	@ <variable>.thispoc, <variable>.poc
	ldr	r0, [r4, r6, asl #2]	@, <variable>.DPB.fs
	bl	CombineFldsToFrm	@
	ldr	r2, [r4, r6, asl #2]	@ temp.7989, <variable>.DPB.fs
	ldr	ip, [r2, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r1, [r2, #592]	@ <variable>.top_field.poc, <variable>.top_field.poc
	add	r3, ip, #6656	@ tmp559, <variable>.apc_idc,
	add	r0, r3, #38	@ tmp559, tmp559,
	add	ip, r4, r0, asl #2	@, tmp564, pH264Ctx, tmp559,
	str	r1, [ip, #4]	@ <variable>.top_field.poc, <variable>.APC.poc
	b	.L2449	@
.L2486:
	ldr	r0, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	mov	lr, #3	@ tmp568,
	strb	lr, [r0, #536]	@ tmp568, <variable>.frame.structure
	ldrb	r5, [r7, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r5, #0	@ <variable>.field_pair_flag,
	addeq	r6, r1, #6592	@ tmp826, pos,
	addeq	r6, r6, #18	@ tmp826, tmp826,
	beq	.L2464	@,
	add	r6, r1, #6592	@ tmp826, pos,
	add	r6, r6, #18	@ tmp826, tmp826,
	ldr	r3, [r4, r6, asl #2]	@ temp.8040, <variable>.DPB.fs
	cmp	r3, #0	@ temp.8040,
	beq	.L2464	@,
	strb	r2, [r3, #616]	@ D.39854, <variable>.bottom_field.structure
	ldr	ip, [r4, r6, asl #2]	@ tmp678, <variable>.DPB.fs
	ldr	r9, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	str	r9, [ip, #620]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	lr, [r4, r6, asl #2]	@ tmp682, <variable>.DPB.fs
	ldrb	r1, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r1, [lr, #617]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	r0, [r4, r6, asl #2]	@ tmp687, <variable>.DPB.fs
	ldrb	r2, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r2, [r0, #618]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	r5, [r4, r6, asl #2]	@ tmp692, <variable>.DPB.fs
	ldr	sl, [r7, #576]	@ <variable>.bottompoc, <variable>.bottompoc
	str	sl, [r5, #632]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	r3, [r4, r6, asl #2]	@ tmp696, <variable>.DPB.fs
	ldr	r8, [r7, #580]	@ <variable>.pic_type, <variable>.pic_type
	str	r8, [r3, #640]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	ip, [r4, r6, asl #2]	@ tmp700, <variable>.DPB.fs
	ldr	r9, [r7, #588]	@ <variable>.err_level, <variable>.err_level
	str	r9, [ip, #636]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	lr, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r4, r6, asl #2]	@ tmp704, <variable>.DPB.fs
	ldr	r0, [lr, #652]	@ <variable>.bottom_field.AvgQp, <variable>.bottom_field.AvgQp
	str	r0, [r1, #652]	@ <variable>.bottom_field.AvgQp, <variable>.bottom_field.AvgQp
	ldr	sl, [r4, r6, asl #2]	@ temp.8055, <variable>.DPB.fs
	ldr	r2, [sl, #636]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r5, [sl, #596]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r8, r2, r5	@ temp.8058, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	r8, [sl, #696]	@ temp.8058, <variable>.err_level
	str	r8, [sl, #556]	@ temp.8058, <variable>.frame.err_level
	ldr	r3, [r4, r6, asl #2]	@ temp.8059, <variable>.DPB.fs
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	ldrneb	ip, [r7, #2]	@ zero_extendqisi2	@ iftmp.518, <variable>.non_existing
	strb	ip, [r3, #0]	@ iftmp.518, <variable>.non_existing
	ldr	lr, [r4, r6, asl #2]	@ temp.8061, <variable>.DPB.fs
	ldrb	r9, [lr, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r1, r9, #2	@ tmp719, <variable>.is_used,
	strb	r1, [lr, #1]	@ tmp719, <variable>.is_used
	ldr	r2, [r4, r6, asl #2]	@ temp.7921, <variable>.DPB.fs
	add	r1, r7, #16	@, pCurrPic,
	ldrb	r0, [r7, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	r5, [r2, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r0, #1	@ <variable>.mode_skip_flag,
	orreq	r5, r5, #2	@ iftmp.519, <variable>.mode_skip_flag,
	strb	r5, [r2, #3]	@ iftmp.519, <variable>.mode_skip_flag
	mov	r2, #528	@,
	ldr	ip, [r4, r6, asl #2]	@ temp.8065, <variable>.DPB.fs
	add	r0, ip, #8	@, temp.8065,
	ldr	sl, [ip, #20]	@, <variable>.fs_image.PTS
	ldr	r5, [ip, #16]	@ OtherFieldPts.8066, <variable>.fs_image.PTS
	str	sl, [fp, #-76]	@, %sfp
	ldrd	r8, [ip, #24]	@, temp.8065,
	strd	r8, [fp, #-52]	@,,
	ldrd	r8, [ip, #32]	@, temp.8065,
	strd	r8, [fp, #-60]	@,,
	ldr	r3, [ip, #84]	@, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	lr, [ip, #80]	@ OtherFieldDispFrameDistance.8070, <variable>.fs_image.DispFrameDistance
	ldr	sl, [ip, #76]	@ OtherFieldDispEnableFlag.8069, <variable>.fs_image.DispEnableFlag
	str	r3, [fp, #-64]	@, %sfp
	ldr	r9, [ip, #88]	@, <variable>.fs_image.GopNum
	str	lr, [fp, #-68]	@,
	str	r9, [fp, #-72]	@, %sfp
	bl	memcpy	@
	ldr	r1, [r7, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	r0, [r7, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	lr, [fp, #-76]	@, %sfp
	and	r2, r1, r0	@ tmp740, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r3, r5, lr	@ tmp737, OtherFieldPts.8066,
	cmn	r2, #1	@ tmp740,
	movne	ip, #0	@,
	moveq	ip, #1	@,
	cmn	r3, #1	@ tmp737,
	ldrd	r2, [r7, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	moveq	ip, #0	@,,
	cmp	ip, #0	@ tmp746,
	mov	r9, ip	@ tmp746,
	ldr	ip, [fp, #-68]	@,
	ldrne	r9, [r4, r6, asl #2]	@ tmp749, <variable>.DPB.fs
	strne	lr, [r9, #20]	@, <variable>.fs_image.PTS
	strne	r5, [r9, #16]	@ OtherFieldPts.8066, <variable>.fs_image.PTS
	ldrd	r8, [fp, #-52]	@,,
	ldr	r1, [r4, r6, asl #2]	@ tmp752, <variable>.DPB.fs
	cmp	r3, r9	@ <variable>.fs_image.Usertag,
	cmpeq	r2, r8	@ <variable>.fs_image.Usertag,
	movhi	r3, r9	@ <variable>.fs_image.Usertag,
	movhi	r2, r8	@ <variable>.fs_image.Usertag,
	ldrd	r8, [r7, #40]	@, pCurrPic,
	strd	r8, [fp, #-52]	@,,
	strd	r2, [r1, #24]	@ <variable>.fs_image.Usertag, tmp752,
	ldrd	r0, [fp, #-60]	@,,
	ldr	r3, [r4, r6, asl #2]	@ tmp756, <variable>.DPB.fs
	cmp	r9, r1	@,
	cmpeq	r8, r0	@,
	strhid	r0, [fp, #-52]	@,,
.L2476:
	ldrd	r8, [fp, #-52]	@,,
	ldr	r2, [r7, #84]	@ <variable>.fs_image.DispEnableFlag, <variable>.fs_image.DispEnableFlag
	ldr	r0, [r7, #88]	@ <variable>.fs_image.DispFrameDistance, <variable>.fs_image.DispFrameDistance
	strd	r8, [r3, #32]	@, tmp756,
	ldr	r1, [r4, r6, asl #2]	@ tmp760, <variable>.DPB.fs
	ldr	lr, [r7, #92]	@ <variable>.fs_image.DistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	cmp	r2, sl	@ <variable>.fs_image.DispEnableFlag, OtherFieldDispEnableFlag.8069
	strls	r2, [r1, #76]	@, <variable>.fs_image.DispEnableFlag, <variable>.fs_image.DispEnableFlag
	strhi	sl, [r1, #76]	@, OtherFieldDispEnableFlag.8069, <variable>.fs_image.DispEnableFlag
	ldr	r3, [r4, r6, asl #2]	@ tmp765, <variable>.DPB.fs
	ldr	r2, [r7, #96]	@ <variable>.fs_image.GopNum, <variable>.fs_image.GopNum
	cmp	r0, ip	@ <variable>.fs_image.DispFrameDistance, OtherFieldDispFrameDistance.8070
	strls	r0, [r3, #80]	@, <variable>.fs_image.DispFrameDistance, <variable>.fs_image.DispFrameDistance
	strhi	ip, [r3, #80]	@, OtherFieldDispFrameDistance.8070, <variable>.fs_image.DispFrameDistance
	ldr	r9, [fp, #-64]	@, %sfp
	ldr	ip, [r4, r6, asl #2]	@ tmp770, <variable>.DPB.fs
	cmp	lr, r9	@ <variable>.fs_image.DistanceBeforeFirstFrame,
	strls	lr, [ip, #84]	@, <variable>.fs_image.DistanceBeforeFirstFrame, <variable>.fs_image.DistanceBeforeFirstFrame
	strhi	r9, [ip, #84]	@,, <variable>.fs_image.DistanceBeforeFirstFrame
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	r0, [r4, r6, asl #2]	@ tmp775, <variable>.DPB.fs
	cmp	r2, r1	@ <variable>.fs_image.GopNum,
	strls	r2, [r0, #88]	@, <variable>.fs_image.GopNum, <variable>.fs_image.GopNum
	strhi	r1, [r0, #88]	@,, <variable>.fs_image.GopNum
	ldrb	r3, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2477	@,
	ldrb	lr, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	lr, #1	@ <variable>.is_short_term,
	beq	.L2477	@,
.L2478:
	ldr	r3, [r4, r6, asl #2]	@ temp.8103, <variable>.DPB.fs
	ldr	r0, [r3, #640]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	ip, [r3, #600]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r0, ip	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	strcs	r0, [r3, #692]	@, <variable>.bottom_field.pic_type, <variable>.pic_type
	strcc	ip, [r3, #692]	@, <variable>.top_field.pic_type, <variable>.pic_type
	ldr	r1, [r4, r6, asl #2]	@ tmp798, <variable>.DPB.fs
	ldr	lr, [r7, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	lr, [r1, #672]	@ <variable>.thispoc, <variable>.poc
	ldr	r0, [r4, r6, asl #2]	@, <variable>.DPB.fs
	bl	CombineFldsToFrm	@
	ldr	r2, [r4, r6, asl #2]	@ temp.8110, <variable>.DPB.fs
	ldr	ip, [r2, #704]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r1, [r2, #632]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	add	r3, ip, #6656	@ tmp805, <variable>.apc_idc,
	add	r0, r3, #54	@ tmp805, tmp805,
	add	ip, r4, r0, asl #2	@, tmp810, pH264Ctx, tmp805,
	str	r1, [ip, #4]	@ <variable>.bottom_field.poc, <variable>.APC.poc
	b	.L2449	@
.L2464:
	ldr	r5, [r7, #544]	@ temp.8112, <variable>.frame_store
	mov	r2, #2	@ tmp575,
	str	r5, [r4, r6, asl #2]	@ temp.8112, <variable>.DPB.fs
	strb	r2, [r5, #616]	@ tmp575, <variable>.bottom_field.structure
	ldr	r1, [r4, r6, asl #2]	@ tmp579, <variable>.DPB.fs
	ldr	ip, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	str	ip, [r1, #620]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	r0, [r4, r6, asl #2]	@ tmp583, <variable>.DPB.fs
	ldrb	lr, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	lr, [r0, #617]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	r3, [r4, r6, asl #2]	@ tmp588, <variable>.DPB.fs
	ldrb	r5, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r5, [r3, #618]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	r1, [r4, r6, asl #2]	@ tmp593, <variable>.DPB.fs
	ldr	ip, [r7, #576]	@ <variable>.bottompoc, <variable>.bottompoc
	str	ip, [r1, #632]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	r0, [r4, r6, asl #2]	@ tmp597, <variable>.DPB.fs
	ldr	lr, [r7, #580]	@ <variable>.pic_type, <variable>.pic_type
	str	lr, [r0, #640]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	r3, [r4, r6, asl #2]	@ tmp601, <variable>.DPB.fs
	ldr	r5, [r7, #588]	@ <variable>.err_level, <variable>.err_level
	str	r5, [r3, #636]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	r1, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r4, r6, asl #2]	@ tmp605, <variable>.DPB.fs
	ldr	r0, [r1, #652]	@ <variable>.bottom_field.AvgQp, <variable>.bottom_field.AvgQp
	str	r0, [ip, #652]	@ <variable>.bottom_field.AvgQp, <variable>.bottom_field.AvgQp
	ldr	lr, [r4, r6, asl #2]	@ temp.8128, <variable>.DPB.fs
	ldr	r5, [lr, #596]	@ temp.8129, <variable>.top_field.err_level
	str	r5, [lr, #696]	@ temp.8129, <variable>.err_level
	str	r5, [lr, #556]	@ temp.8129, <variable>.frame.err_level
	ldr	r3, [r4, r6, asl #2]	@ tmp612, <variable>.DPB.fs
	ldrb	ip, [r7, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	ip, [r3, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r1, [r4, r6, asl #2]	@ tmp617, <variable>.DPB.fs
	strb	r2, [r1, #1]	@ tmp575, <variable>.is_used
	ldr	r0, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r4, r6, asl #2]	@ tmp622, <variable>.DPB.fs
	ldrb	r5, [r0, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r5, [lr, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r3, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r4, r6, asl #2]	@ tmp628, <variable>.DPB.fs
	ldr	r1, [r3, #684]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r1, [ip, #684]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2466	@,
	ldrb	r2, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #1	@ <variable>.is_short_term,
	beq	.L2466	@,
.L2467:
	ldr	r0, [r4, r6, asl #2]	@ tmp645, <variable>.DPB.fs
	mov	r5, #0	@ tmp646,
	add	r1, r7, #16	@, pCurrPic,
	mov	r2, #528	@,
	str	r5, [r0, #688]	@ tmp646, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r6, asl #2]	@ tmp649, <variable>.DPB.fs
	add	r0, lr, #8	@, tmp649,
	bl	memcpy	@
	ldr	r1, [r4, r6, asl #2]	@ tmp656, <variable>.DPB.fs
	ldr	ip, [r7, #612]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	mov	r2, #2	@,
	mov	r0, r4	@, pH264Ctx
	str	ip, [r1, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r4, r6, asl #2]	@ tmp660, <variable>.DPB.fs
	ldr	r1, [r7, #552]	@ <variable>.frame_num, <variable>.frame_num
	str	r1, [r3, #660]	@ <variable>.frame_num, <variable>.frame_num
	ldr	ip, [r4, r6, asl #2]	@ tmp664, <variable>.DPB.fs
	ldr	r1, [r7, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	r1, [ip, #672]	@ <variable>.thispoc, <variable>.poc
	ldr	r3, [r4, r6, asl #2]	@ temp.8153, <variable>.DPB.fs
	ldr	ip, [r7, #580]	@ temp.8154, <variable>.pic_type
	str	ip, [r3, #692]	@ temp.8154, <variable>.pic_type
	str	ip, [r3, #640]	@ temp.8154, <variable>.bottom_field.pic_type
	ldrb	ip, [r7, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r1, [r4, r6, asl #2]	@ temp.8155, <variable>.DPB.fs
	cmp	ip, #1	@ <variable>.mode_skip_flag,
	moveq	ip, r2	@ iftmp.516,
	movne	ip, r5	@ iftmp.516,
	strb	ip, [r1, #3]	@ iftmp.516, <variable>.mode_skip_flag
	ldr	r1, [r7, #544]	@, <variable>.frame_store
	bl	GetAPC	@
	cmp	r0, #0	@ ret.8158
	movne	r3, r0	@, ret.8158
	movwne	r2, #2265	@,
	movne	r0, r5	@, tmp646
	beq	.L2449	@,
.L2485:
	movw	r1, #:lower16:.LC104	@,
	movt	r1, #:upper16:.LC104	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
	mvn	r0, #0	@ D.39897,
	b	.L2450	@
.L2451:
	ldr	lr, [r7, #544]	@ temp.7990, <variable>.frame_store
	mov	r2, #1	@ tmp325,
	str	lr, [r4, r6, asl #2]	@ temp.7990, <variable>.DPB.fs
	strb	r2, [lr, #576]	@ tmp325, <variable>.top_field.structure
	ldr	r3, [r4, r6, asl #2]	@ tmp329, <variable>.DPB.fs
	ldr	r0, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	str	r0, [r3, #580]	@ <variable>.frame_store, <variable>.top_field.frame_store
	ldr	r1, [r4, r6, asl #2]	@ tmp333, <variable>.DPB.fs
	ldrb	ip, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r1, #577]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r5, [r4, r6, asl #2]	@ tmp338, <variable>.DPB.fs
	ldrb	lr, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	lr, [r5, #578]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	r3, [r4, r6, asl #2]	@ tmp343, <variable>.DPB.fs
	ldr	r0, [r7, #572]	@ <variable>.toppoc, <variable>.toppoc
	str	r0, [r3, #592]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r1, [r4, r6, asl #2]	@ tmp347, <variable>.DPB.fs
	ldr	ip, [r7, #580]	@ <variable>.pic_type, <variable>.pic_type
	str	ip, [r1, #600]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	r5, [r4, r6, asl #2]	@ tmp351, <variable>.DPB.fs
	ldr	lr, [r7, #588]	@ <variable>.err_level, <variable>.err_level
	str	lr, [r5, #596]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	r0, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r4, r6, asl #2]	@ tmp355, <variable>.DPB.fs
	ldr	r1, [r0, #612]	@ <variable>.top_field.AvgQp, <variable>.top_field.AvgQp
	str	r1, [r3, #612]	@ <variable>.top_field.AvgQp, <variable>.top_field.AvgQp
	ldr	ip, [r4, r6, asl #2]	@ temp.8006, <variable>.DPB.fs
	ldr	r5, [ip, #596]	@ temp.8007, <variable>.top_field.err_level
	str	r5, [ip, #696]	@ temp.8007, <variable>.err_level
	str	r5, [ip, #556]	@ temp.8007, <variable>.frame.err_level
	ldr	lr, [r4, r6, asl #2]	@ tmp362, <variable>.DPB.fs
	ldrb	r0, [r7, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r0, [lr, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r1, [r4, r6, asl #2]	@ tmp367, <variable>.DPB.fs
	strb	r2, [r1, #1]	@ tmp325, <variable>.is_used
	ldr	r3, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r4, r6, asl #2]	@ tmp372, <variable>.DPB.fs
	ldrb	r5, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r5, [ip, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	lr, [r7, #544]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r4, r6, asl #2]	@ tmp378, <variable>.DPB.fs
	ldr	r1, [lr, #684]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r1, [r0, #684]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2453	@,
	ldrb	r2, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #1	@ <variable>.is_short_term,
	beq	.L2453	@,
.L2454:
	ldr	lr, [r4, r6, asl #2]	@ tmp395, <variable>.DPB.fs
	mov	r5, #0	@ tmp396,
	add	r1, r7, #16	@, pCurrPic,
	mov	r2, #528	@,
	str	r5, [lr, #688]	@ tmp396, <variable>.MbaffFrameFlag
	ldr	r0, [r4, r6, asl #2]	@ tmp399, <variable>.DPB.fs
	add	r0, r0, #8	@, tmp399,
	bl	memcpy	@
	ldr	r1, [r4, r6, asl #2]	@ tmp406, <variable>.DPB.fs
	ldr	ip, [r7, #612]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	mov	r2, #1	@,
	mov	r0, r4	@, pH264Ctx
	str	ip, [r1, #700]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r4, r6, asl #2]	@ tmp410, <variable>.DPB.fs
	ldr	r1, [r7, #552]	@ <variable>.frame_num, <variable>.frame_num
	str	r1, [r3, #660]	@ <variable>.frame_num, <variable>.frame_num
	ldr	ip, [r4, r6, asl #2]	@ tmp414, <variable>.DPB.fs
	ldr	r1, [r7, #564]	@ <variable>.thispoc, <variable>.thispoc
	str	r1, [ip, #672]	@ <variable>.thispoc, <variable>.poc
	ldr	r3, [r4, r6, asl #2]	@ tmp418, <variable>.DPB.fs
	ldr	ip, [r7, #580]	@ <variable>.pic_type, <variable>.pic_type
	str	ip, [r3, #692]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r3, [r4, r6, asl #2]	@ tmp422, <variable>.DPB.fs
	ldrb	r1, [r7, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r1, r2	@ <variable>.mode_skip_flag,
	movne	ip, #0	@, tmp424
	moveq	ip, #1	@, tmp424
	strb	ip, [r3, #3]	@ tmp424, <variable>.mode_skip_flag
	ldr	r1, [r7, #544]	@, <variable>.frame_store
	bl	GetAPC	@
	cmp	r0, #0	@ ret.8036
	beq	.L2449	@,
	mov	r3, r0	@, ret.8036
	movw	r2, #2129	@,
	mov	r0, r5	@, tmp396
	b	.L2485	@
.L2487:
	ldrb	r2, [r7, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #0	@ <variable>.is_short_term,
	beq	.L2446	@,
	b	.L2445	@
.L2466:
	ldr	r0, [r4, r6, asl #2]	@ tmp635, <variable>.DPB.fs
	mov	lr, #2	@ tmp636,
	strb	lr, [r0, #2]	@ tmp636, <variable>.is_reference
	ldrb	r3, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	ldreq	r3, [r4, r6, asl #2]	@ tmp641, <variable>.DPB.fs
	ldreq	lr, [r7, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	lr, [r3, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2467	@
.L2453:
	ldr	r1, [r4, r6, asl #2]	@ tmp385, <variable>.DPB.fs
	mov	r5, #1	@ tmp386,
	strb	r5, [r1, #2]	@ tmp386, <variable>.is_reference
	ldrb	ip, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, r5	@ <variable>.is_long_term,
	ldreq	ip, [r4, r6, asl #2]	@ tmp391, <variable>.DPB.fs
	ldreq	r5, [r7, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r5, [ip, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2454	@
.L2477:
	ldr	r3, [r4, r6, asl #2]	@ temp.8098, <variable>.DPB.fs
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	ip, r2, #2	@ tmp784, <variable>.is_reference,
	strb	ip, [r3, #2]	@ tmp784, <variable>.is_reference
	ldrb	r0, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, #1	@ <variable>.is_long_term,
	ldreq	r0, [r4, r6, asl #2]	@ tmp789, <variable>.DPB.fs
	ldreq	ip, [r7, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r0, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2478	@
.L2462:
	ldr	r3, [r4, r6, asl #2]	@ temp.7981, <variable>.DPB.fs
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	ip, r2, #1	@ tmp538, <variable>.is_reference,
	strb	ip, [r3, #2]	@ tmp538, <variable>.is_reference
	ldrb	r0, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, #1	@ <variable>.is_long_term,
	ldreq	r0, [r4, r6, asl #2]	@ tmp543, <variable>.DPB.fs
	ldreq	ip, [r7, #556]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r0, #668]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2463	@
	.fnend
	.size	InsertFrmInDPB, .-InsertFrmInDPB
	.align	2
	.global	StorePicInDPB
	.type	StorePicInDPB, %function
StorePicInDPB:
	.fnstart
.LFB1578:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	lr, #55792	@ tmp196,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #55795	@ tmp193,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r6, #19832	@ tmp192,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	movw	r3, #19828	@ tmp190,
	cmp	ip, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, tmp195
	moveq	r2, #1	@, tmp195
	str	r2, [r4, r6]	@ tmp195, <variable>.CurrPOC.last_pic_bottom_field
	cmp	r0, #0	@ <variable>.CurrPic.state,
	mov	r6, #0	@ tmp191,
	str	r6, [r4, r3]	@ tmp191, <variable>.CurrPOC.last_has_mmco_5
	beq	.L2606	@,
	movw	lr, #59152	@ tmp203,
	movw	ip, #59236	@ tmp201,
	ldr	r0, [r4, lr]	@ <variable>.OldDecMode, <variable>.OldDecMode
	movw	r3, #59232	@ tmp200,
	ldr	r2, [r4, ip]	@ <variable>.PicCounter, <variable>.PicCounter
	cmp	r0, #2	@ <variable>.OldDecMode,
	str	r2, [r4, r3]	@ <variable>.PicCounter, <variable>.PrevStorePicCounter
	beq	.L2607	@,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r3, #12]	@ prephitmp.8198, <variable>.s32DecOrderOutput
	cmp	r3, #0	@ prephitmp.8198,
	ble	.L2608	@,
	movw	ip, #55794	@ tmp231,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	r2, #0	@ <variable>.CurrPic.non_existing,
	bne	.L2497	@,
.L2619:
	movw	r6, #55795	@ tmp234,
	movw	r1, #56336	@ tmp233,
	ldrb	r2, [r4, r6]	@ zero_extendqisi2	@ temp.8240, <variable>.CurrPic.structure
	ldr	r6, [r4, r1]	@ pFrameStore, <variable>.CurrPic.frame_store
	sub	r0, r2, #1	@ tmp235, temp.8240,
	uxtb	lr, r0	@ tmp236, tmp235
	cmp	lr, #1	@ tmp236,
	movhi	r1, #0	@, one_fld_flg
	movls	r1, #1	@, one_fld_flg
	cmp	r2, #0	@ temp.8240,
	bne	.L2609	@,
.L2498:
	cmp	r1, #0	@ one_fld_flg,
	beq	.L2499	@,
	movw	r3, #59228	@ tmp245,
	ldr	r0, [r4, r3]	@ temp.8241, <variable>.FirstFrameDisplayed
	cmp	r0, #0	@ temp.8241,
	bne	.L2500	@,
	add	r0, r4, #56320	@, pH264Ctx,
	add	r1, r4, #55552	@, pH264Ctx,
	mov	r2, #1	@ tmp247,
	add	r0, r0, #96	@,,
	str	r2, [r4, r3]	@ tmp247, <variable>.FirstFrameDisplayed
	add	r1, r1, #240	@,,
	mov	r2, #624	@,
	bl	memcpy	@
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r3, #12]	@ prephitmp.8198, <variable>.s32DecOrderOutput
.L2497:
	cmp	r3, #2	@ prephitmp.8198,
	beq	.L2610	@,
.L2496:
	movw	r0, #56352	@ tmp353,
	ldr	r5, [r4, r0]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r5, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2520	@,
	movw	r5, #59216	@ tmp355,
	movw	r6, #56380	@ tmp356,
	ldr	r3, [r4, r5]	@ D.40657, <variable>.ref_error_thr
	ldr	r2, [r4, r6]	@ D.40658, <variable>.CurrPic.err_level
	cmp	r3, r2	@ D.40657, D.40658
	bcs	.L2525	@,
	movw	r1, #55794	@ tmp357,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	ip, #0	@ <variable>.CurrPic.non_existing,
	beq	.L2611	@,
.L2525:
	mov	r0, r4	@, pH264Ctx
	bl	Marking	@
	subs	r2, r0, #0	@ ret.8281,
	beq	.L2527	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC113	@,
	movt	r1, #:upper16:.LC113	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3567	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2527:
	mov	r0, r4	@, pH264Ctx
	bl	UpdateReflist	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateLTReflist	@
	mov	r0, r4	@, pH264Ctx
	bl	RemoveUnUsedFrameStore	@
	cmp	r0, #0	@,
	beq	.L2520	@,
	movw	r1, #:lower16:.LC114	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC114	@,
	bl	dprint_vfmw	@
.L2520:
	movw	r5, #55793	@ tmp375,
	ldrb	r6, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r6, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2612	@,
.L2528:
	movw	r0, #56352	@ tmp402,
	ldr	r6, [r4, r0]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2613	@,
	movw	sl, #26632	@ tmp452,
	ldr	r6, [r4, sl]	@ pre_used_size.8248, <variable>.DPB.size
.L2539:
	add	r8, r4, #26368	@ ivtmp.8224, pH264Ctx,
	mvn	r5, #0	@ pre_used_size,
	add	r8, r8, #72	@ ivtmp.8224, ivtmp.8224,
	mov	r3, r5	@ pre_pos, pre_used_size
	movw	sl, #26636	@ tmp520,
	movw	r9, #56352	@ tmp526,
.L2562:
	ldr	r1, [r4, sl]	@ pre_used_size.8274, <variable>.DPB.used_size
	cmp	r6, r1	@ pre_used_size.8248, pre_used_size.8274
	bhi	.L2614	@,
	movcs	r6, r1	@ pre_used_size.8248, pre_used_size.8274
	strcc	r6, [r4, sl]	@ pre_used_size.8248, <variable>.DPB.used_size
	cmp	r6, #0	@ pre_used_size.8248,
	moveq	r7, r6	@ pos.8328, pre_used_size.8248
	mvneq	r2, #-2147483648	@ min_poc.8326,
	beq	.L2554	@,
	tst	r6, #1	@ pre_used_size.8248,
	mov	r7, #0	@ pos.8328,
	mov	r1, r8	@ ivtmp.8224, ivtmp.8224
	mvn	r0, #-2147483648	@ min_poc.8310,
	mov	ip, r7	@ pos.8327, pos.8328
	bne	.L2555	@,
	ldr	r1, [r8, #0]	@ D.47695, <variable>.DPB.fs
	ldr	r2, [r1, #672]	@ min_poc.8326, <variable>.poc
	cmp	r0, r2	@ min_poc.8310, min_poc.8326
	ble	.L2574	@,
	ldrb	ip, [r1, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	ip, #0	@ <variable>.is_in_dpb,
	beq	.L2574	@,
	add	r1, r8, #4	@ ivtmp.8224, ivtmp.8224,
	mov	r0, r2	@ min_poc.8310, min_poc.8326
	mov	ip, #1	@ pos.8327,
.L2555:
	ldr	lr, [r1, #0]	@ D.47695, <variable>.DPB.fs
	ldr	r2, [lr, #672]	@ min_poc.8326, <variable>.poc
	cmp	r0, r2	@ min_poc.8310, min_poc.8326
	ble	.L2552	@,
.L2615:
	ldrb	lr, [lr, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	movne	r7, ip	@ pos.8328, pos.8327
	beq	.L2552	@,
	add	ip, ip, #1	@ tmp531, pos.8327,
	add	lr, r1, #4	@ tmp532, ivtmp.8224,
	cmp	ip, r6	@ tmp531, pre_used_size.8248
	beq	.L2554	@,
.L2616:
	ldr	r1, [r1, #4]	@ D.47695, <variable>.DPB.fs
	ldr	r0, [r1, #672]	@ min_poc.8326, <variable>.poc
	cmp	r2, r0	@ min_poc.8326, min_poc.8326
	ble	.L2576	@,
	ldrb	r1, [r1, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #0	@ <variable>.is_in_dpb,
	beq	.L2576	@,
	mov	r7, ip	@ pos.8328, tmp531
.L2598:
	add	r1, lr, #4	@ ivtmp.8224, tmp532,
	add	ip, ip, #1	@ pos.8327, tmp531,
	ldr	lr, [r1, #0]	@ D.47695, <variable>.DPB.fs
	ldr	r2, [lr, #672]	@ min_poc.8326, <variable>.poc
	cmp	r0, r2	@ min_poc.8310, min_poc.8326
	bgt	.L2615	@,
.L2552:
	add	ip, ip, #1	@ tmp531, pos.8327,
	mov	r2, r0	@ min_poc.8326, min_poc.8310
	cmp	ip, r6	@ tmp531, pre_used_size.8248
	add	lr, r1, #4	@ tmp532, ivtmp.8224,
	bne	.L2616	@,
.L2554:
	ldr	ip, [r4, r9]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2556	@,
	movw	r0, #56356	@,
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	cmp	r1, r2	@ <variable>.CurrPic.thispoc, min_poc.8326
	blt	.L2617	@,
.L2556:
	cmp	r5, r6	@ pre_used_size, pre_used_size.8248
	bne	.L2560	@,
	cmp	r3, r7	@ pre_pos, pos.8328
	beq	.L2618	@,
.L2560:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, pos.8328
	bl	OutputFrmFromDPB	@
	cmn	r0, #1	@ ret.8303,
	beq	.L2561	@,
	movw	r2, #26632	@ tmp450,
	mov	r5, r6	@ pre_used_size, pre_used_size.8248
	mov	r3, r7	@ pre_pos, pos.8328
	ldr	r6, [r4, r2]	@ pre_used_size.8248, <variable>.DPB.size
	b	.L2562	@
.L2606:
	movw	r1, #:lower16:.LC106	@,
	movt	r1, #:upper16:.LC106	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3306	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
.L2490:
	movw	r6, #56336	@ tmp500,
	movw	r5, #59224	@ tmp497,
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mvn	r5, #0	@ ret,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC108	@,
	movw	r2, #3768	@,
	movt	r1, #:upper16:.LC108	@,
	mov	r3, r5	@, ret
	bl	dprint_vfmw	@
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, #0	@ tmp504,
	strb	r0, [r1, #4]	@ tmp504, <variable>.is_in_dpb
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r0, [ip, #1]	@ tmp504, <variable>.is_used
.L2569:
	movw	lr, #55792	@ tmp510,
	mov	r2, #0	@ tmp511,
	strb	r2, [r4, lr]	@ tmp511, <variable>.CurrPic.state
.L2522:
	mov	r0, r5	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2608:
	movw	r2, #59228	@ tmp229,
	ldr	r2, [r4, r2]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	r2, #2	@ <variable>.FirstFrameDisplayed,
	beq	.L2496	@,
	movw	ip, #55794	@ tmp231,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	r2, #0	@ <variable>.CurrPic.non_existing,
	bne	.L2497	@,
	b	.L2619	@
.L2610:
	movw	r3, #56352	@ tmp339,
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2520	@,
	movw	r2, #55798	@ tmp341,
	ldrb	ip, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	cmp	ip, #5	@ <variable>.CurrPic.nal_unit_type,
	beq	.L2620	@,
.L2521:
	mov	r0, r4	@, pH264Ctx
	add	r6, r4, #55552	@, pH264Ctx,
	movw	r5, #26636	@ tmp343,
	bl	SimpleSlideDPB	@
	add	r2, r6, #240	@,,
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [r4, r5]	@, <variable>.DPB.used_size
	bl	InsertFrmInDPB	@
	subs	r6, r0, #0	@ ret.8268,
	beq	.L2523	@,
	mov	r3, r6	@, ret.8268
	movw	r2, #3535	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC108	@,
	movt	r1, #:upper16:.LC108	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	mov	r3, #3536	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2574:
	mvn	r2, #-2147483648	@ min_poc.8326,
	mov	ip, #1	@ pos.8327,
	mov	r0, r2	@ min_poc.8310, min_poc.8326
	add	r1, r8, #4	@ ivtmp.8224, ivtmp.8224,
	b	.L2555	@
.L2613:
	movw	ip, #26640	@ tmp405,
	movw	r6, #26644	@ tmp406,
	ldr	lr, [r4, ip]	@ D.40697, <variable>.DPB.ref_frames_in_buffer
	movw	r5, #26632	@ tmp404,
	ldr	ip, [r4, r6]	@ D.40698, <variable>.DPB.ltref_frames_in_buffer
	ldr	r6, [r4, r5]	@ pre_used_size.8248, <variable>.DPB.size
	add	r3, ip, lr	@ tmp407, D.40698, D.40697
	cmp	r6, r3	@ pre_used_size.8248, tmp407
	bhi	.L2539	@,
	ldr	r0, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #3	@ <variable>.s32DecOrderOutput,
	beq	.L2540	@,
	movw	r5, #:lower16:g_apple_airplay_mirrorinig_flag	@ tmp410,
	movt	r5, #:upper16:g_apple_airplay_mirrorinig_flag	@ tmp410,
	ldrb	r3, [r5, #0]	@ zero_extendqisi2	@ g_apple_airplay_mirrorinig_flag, g_apple_airplay_mirrorinig_flag
	cmp	r3, #1	@ g_apple_airplay_mirrorinig_flag,
	beq	.L2540	@,
	mov	r3, r6	@, pre_used_size.8248
	movw	r2, #3642	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC115	@,
	movt	r1, #:upper16:.LC115	@,
	str	lr, [sp, #0]	@ D.40697,
	str	ip, [sp, #4]	@ D.40698,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3663	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2609:
	ldrb	lr, [r6, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	lr, #0	@ <variable>.is_used,
	moveq	ip, r1	@, tmp244, one_fld_flg
	orrne	ip, r1, #1	@,, tmp244, one_fld_flg
	cmp	ip, #0	@ tmp244,
	beq	.L2497	@,
	b	.L2498	@
.L2500:
	cmp	r0, #1	@ temp.8241,
	beq	.L2501	@,
.L2499:
	cmp	r2, #0	@ temp.8240,
	beq	.L2502	@,
	ldrb	ip, [r6, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #0	@ <variable>.is_used,
	beq	.L2503	@,
.L2502:
	cmp	r1, #0	@ one_fld_flg,
	bne	.L2621	@,
.L2504:
	add	r3, r4, #55552	@ pOutPic, pH264Ctx,
	add	r7, r3, #240	@ pOutPic, pOutPic,
.L2505:
	ldrb	r2, [r7, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r2, #0	@ <variable>.structure,
	beq	.L2506	@,
	ldrb	r3, [r7, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r3, #1	@ <variable>.field_pair_flag,
	beq	.L2622	@,
.L2506:
	ldr	lr, [r7, #588]	@ <variable>.err_level, <variable>.err_level
	str	lr, [r6, #696]	@ <variable>.err_level, <variable>.err_level
.L2507:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r6	@, pOutFrameStore
	bl	GetImagePara	@
	movw	r3, #59224	@ tmp269,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	ldr	r1, [r6, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r5, r0, #0	@ pImg,
	beq	.L2623	@,
	ldrb	r8, [r7, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r8, #0	@ <variable>.structure,
	beq	.L2509	@,
	ldrb	r9, [r7, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r9, #1	@ <variable>.field_pair_flag,
	beq	.L2624	@,
.L2509:
	ldrd	r2, [r7, #24]	@ <variable>.fs_image.PTS, pOutPic,
.L2605:
	strd	r2, [r5, #8]	@ <variable>.fs_image.PTS, pImg,
.L2510:
	ldrd	r0, [r7, #32]	@, pOutPic,
	ldr	ip, [r7, #96]	@ <variable>.fs_image.GopNum, <variable>.fs_image.GopNum
	ldrd	r8, [r7, #40]	@, pOutPic,
	strd	r0, [r5, #16]	@, pImg,
	add	r0, r7, #84
	ldmia	r0, {r0, r1, r2}	@ phole ldm
	strd	r8, [r5, #24]	@, pImg,
	str	r0, [r5, #68]	@ <variable>.fs_image.DispEnableFlag, <variable>.DispEnableFlag
	str	r1, [r5, #72]	@ <variable>.fs_image.DispFrameDistance, <variable>.DispFrameDistance
	str	r2, [r5, #76]	@ <variable>.fs_image.DistanceBeforeFirstFrame, <variable>.DistanceBeforeFirstFrame
	str	ip, [r5, #80]	@ <variable>.fs_image.GopNum, <variable>.GopNum
	ldr	r3, [r6, #696]	@ D.40605, <variable>.err_level
	cmp	r3, #0	@ D.40605,
	str	r3, [r5, #200]	@ D.40605, <variable>.error_level
	beq	.L2511	@,
	ldr	r7, [r5, #160]	@ <variable>.format, <variable>.format
	ands	r7, r7, #3	@ tmp288, <variable>.format,
	beq	.L2625	@,
.L2512:
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r2, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	ip, r3	@ <variable>.s32OutErrThr, D.40605
	bcs	.L2511	@,
	movw	r5, #:lower16:g_event_report	@ tmp315,
	movt	r5, #:upper16:g_event_report	@ tmp315,
	ldr	ip, [r5, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L2519	@,
	str	r3, [fp, #-52]	@ D.40605, para
	movw	r3, #59224	@ tmp320,
	ldr	lr, [r2, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	mov	r1, #104	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	sub	r2, fp, #52	@,,
	mov	r3, #8	@,
	str	lr, [fp, #-48]	@ <variable>.s32OutErrThr, para
	blx	ip	@ g_event_report
.L2519:
	ldr	r1, [r6, #656]	@, <variable>.logic_fs_id
	movw	r6, #59224	@ tmp324,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3494	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2625:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC111	@,
	movw	r2, #3466	@,
	movt	r1, #:upper16:.LC111	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp292,
	movt	r3, #:upper16:g_event_report	@ tmp292,
	ldr	ip, [r3, #0]	@ g_event_report.556, g_event_report
	cmp	ip, #0	@ g_event_report.556,
	beq	.L2513	@,
	movw	lr, #59224	@ tmp293,
	mov	r2, r7	@, tmp288
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r1, #111	@,
	mov	r3, r7	@, tmp2
	blx	ip	@ g_event_report.556
.L2513:
	ldr	r3, [r5, #200]	@ D.40605, <variable>.error_level
	cmp	r3, #0	@ D.40605,
	bne	.L2512	@,
.L2511:
	movw	r7, #59224	@ tmp296,
	ldr	r1, [r6, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r7]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #0	@,
	mov	r2, r4	@, pH264Ctx
	add	r3, r4, #8	@, pH264Ctx,
	str	r5, [sp, #0]	@ pImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	beq	.L2515	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldr	r1, [r6, #656]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2516:
	mov	r1, r5	@, pImg
	mov	r0, r4	@, pH264Ctx
	bl	SetFrmRepeatCount	@
	movw	r0, #59228	@ tmp313,
	ldr	r1, [r4, r0]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	movw	r3, #59244	@ tmp309,
	ldr	r2, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	cmp	r1, #2	@ <variable>.FirstFrameDisplayed,
	mov	r1, #2	@ tmp330,
	add	ip, r2, #2	@ tmp312, <variable>.PicOutCounter,
	str	ip, [r4, r3]	@ tmp312, <variable>.PicOutCounter
	movne	r3, #1	@ tmp328,
	strne	r3, [r6, #676]	@ tmp328, <variable>.eFoState
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r2, #59228	@ tmp329,
	str	r1, [r4, r2]	@ tmp330, <variable>.FirstFrameDisplayed
	ldr	r3, [ip, #12]	@ prephitmp.8198, <variable>.s32DecOrderOutput
	b	.L2497	@
.L2576:
	mov	r0, r2	@ min_poc.8326, min_poc.8326
	b	.L2598	@
.L2561:
	mov	r6, r0	@ ret.8303, ret.8303
	mov	r3, r0	@, ret.8303
	movw	r2, #3709	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC108	@,
	movt	r1, #:upper16:.LC108	@,
	bl	dprint_vfmw	@
	mov	r2, r6	@, ret.8303
	movw	r1, #:lower16:.LC107	@,
	movw	r3, #3710	@,
	movt	r1, #:upper16:.LC107	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2607:
	movw	r1, #:lower16:.LC109	@,
	movt	r1, #:upper16:.LC109	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	DirectOutput	@
	movw	r3, #56404	@ tmp206,
	movw	r2, #57708	@ tmp207,
	ldr	r1, [r4, r3]	@ D.40536, <variable>.CurrPic.pmv_address_idc
	mov	r5, r0	@ ret,
	ldr	r0, [r4, r2]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	cmp	r1, r0	@ D.40536, <variable>.TotalPmvNum
	addne	r1, r1, #14400	@ tmp209, D.40536,
	strne	r0, [r4, r3]	@ <variable>.TotalPmvNum, <variable>.CurrPic.pmv_address_idc
	addne	r1, r1, #8	@ tmp209, tmp209,
	addne	r1, r4, r1, asl #2	@, tmp213, pH264Ctx, tmp209,
	strne	r6, [r1, #4]	@ tmp191, <variable>.PmvStoreUsedFlag
	cmp	r5, #1	@ ret,
	beq	.L2626	@,
.L2493:
	movw	r1, #:lower16:.LC107	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3351	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
.L2494:
	cmn	r5, #1	@ ret,
	bne	.L2569	@,
	b	.L2490	@
.L2612:
	movw	r0, #57072	@ tmp378,
	movw	r7, #56336	@ tmp377,
	ldr	ip, [r4, r0]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r7]	@ temp.8283, <variable>.CurrPic.frame_store
	cmp	r0, ip	@ temp.8283, <variable>.pDirectOutBuf
	beq	.L2627	@,
.L2529:
	movw	r3, #26636	@ tmp380,
	ldr	lr, [r4, r3]	@ temp.8331, <variable>.DPB.used_size
	cmp	lr, #0	@ temp.8331,
	beq	.L2528	@,
	movw	r5, #26440	@ tmp381,
	ldr	r2, [r4, r5]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r0, r2	@ temp.8283, <variable>.DPB.fs
	moveq	r1, #0	@ i,
	beq	.L2532	@,
	tst	lr, #1	@ temp.8331,
	add	r3, r4, #26368	@ tmp401, pH264Ctx,
	add	r2, r3, #76	@ ivtmp.8234, tmp401,
	mov	r1, #0	@ i,
	bne	.L2535	@,
	ldr	r5, [r2, #0]	@ D.40688, <variable>.DPB.fs
	mov	r1, #1	@ i,
	add	r2, r3, #80	@ ivtmp.8234, tmp401,
	cmp	r0, r5	@ temp.8283, D.40688
	bne	.L2535	@,
.L2532:
	add	lr, r4, #55552	@, pH264Ctx,
	mov	r0, r4	@, pH264Ctx
	add	r2, lr, #240	@,,
	bl	InsertFrmInDPB	@
	cmn	r0, #1	@ ret.8288,
	mov	r5, r0	@ ret.8288,
	beq	.L2628	@,
	mov	r0, r4	@, pH264Ctx
	mov	r5, #0	@ ret,
	bl	UpdateReflist	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateLTReflist	@
	movw	r1, #:lower16:.LC107	@,
	mov	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3619	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2569	@
.L2590:
	ldr	ip, [r2, #4]	@ D.40688, <variable>.DPB.fs
	add	r1, r1, #1	@ i, i,
	add	r2, r3, #4	@ ivtmp.8234, tmp542,
	cmp	r0, ip	@ temp.8283, D.40688
	beq	.L2532	@,
.L2535:
	add	r1, r1, #1	@ i, i,
	mov	r3, r2	@ tmp542, ivtmp.8234
	cmp	r1, lr	@ i, temp.8331
	bcs	.L2528	@,
	ldr	ip, [r3], #4	@ D.40688, <variable>.DPB.fs
	cmp	r0, ip	@ temp.8283, D.40688
	bne	.L2590	@,
	b	.L2532	@
.L2611:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC112	@,
	movt	r1, #:upper16:.LC112	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp360,
	movt	r3, #:upper16:g_event_report	@ tmp360,
	ldr	ip, [r3, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L2526	@,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r2, #59224	@ tmp367,
	ldr	r6, [r4, r5]	@ <variable>.ref_error_thr, <variable>.ref_error_thr
	mov	r1, #104	@,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r3, #8	@,
	sub	r2, fp, #52	@,,
	str	lr, [fp, #-52]	@ <variable>.CurrPic.err_level, para
	str	r6, [fp, #-48]	@ <variable>.ref_error_thr, para
	blx	ip	@ g_event_report
.L2526:
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3559	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2523:
	ldr	lr, [r4, r5]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r0, r4	@, pH264Ctx
	add	r1, lr, #1	@ tmp351, <variable>.DPB.used_size,
	str	r1, [r4, r5]	@ tmp351, <variable>.DPB.used_size
	bl	UpdateReflist	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateLTReflist	@
	mov	r2, r6	@, ret.8268
	movw	r1, #:lower16:.LC107	@,
	movw	r3, #3543	@,
	movt	r1, #:upper16:.LC107	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	mov	r5, #0	@ ret,
	b	.L2569	@
.L2515:
	movw	r1, #59252	@ tmp305,
	ldr	r0, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	add	r2, r0, #1	@ tmp308, <variable>.numOutputFrame,
	str	r2, [r4, r1]	@ tmp308, <variable>.numOutputFrame
	b	.L2516	@
.L2503:
	add	r0, r4, #56320	@, pH264Ctx,
	add	r1, r4, #55552	@, pH264Ctx,
	mov	r2, #624	@,
	add	r0, r0, #96	@,,
	add	r1, r1, #240	@,,
	bl	memcpy	@
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r2, #12]	@ prephitmp.8198, <variable>.s32DecOrderOutput
	b	.L2497	@
.L2540:
	movw	sl, #26636	@ tmp412,
	ldr	r8, [r4, sl]	@ pre_used_size.8324, <variable>.DPB.used_size
	cmp	r6, r8	@ pre_used_size.8248, pre_used_size.8324
	strcc	r6, [r4, sl]	@ pre_used_size.8248, <variable>.DPB.used_size
	movcs	r6, r8	@ pre_used_size.8248, pre_used_size.8324
	cmp	r6, #0	@ pre_used_size.8248,
	moveq	r1, r6	@ pos.8325, pre_used_size.8248
	beq	.L2547	@,
	tst	r6, #1	@ pre_used_size.8248,
	add	r9, r4, #26368	@ ivtmp.8229, pH264Ctx,
	mov	r1, #0	@ pos.8325,
	add	r2, r9, #72	@ ivtmp.8229, ivtmp.8229,
	mov	ip, r1	@ pos, pos.8325
	mvn	r0, #-2147483648	@ min_poc.8333,
	bne	.L2548	@,
	ldr	r3, [r2, #0]	@ D.47685, <variable>.DPB.fs
	ldr	r0, [r3, #672]	@ min_poc, <variable>.poc
	cmn	r0, #-2147483647	@ min_poc,
	bge	.L2580	@,
	ldrb	r9, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r9, #0	@ <variable>.is_in_dpb,
	beq	.L2580	@,
.L2600:
	add	r2, r2, #4	@ ivtmp.8229, ivtmp.8229,
	mov	ip, #1	@ pos,
.L2548:
	ldr	lr, [r2, #0]	@ D.47685, <variable>.DPB.fs
	ldr	r3, [lr, #672]	@ min_poc, <variable>.poc
	cmp	r3, r0	@ min_poc, min_poc.8333
	bge	.L2545	@,
.L2629:
	ldrb	lr, [lr, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	movne	r1, ip	@ pos.8325, pos
	beq	.L2545	@,
.L2546:
	add	ip, ip, #1	@ tmp536, pos,
	add	lr, r2, #4	@ tmp537, ivtmp.8229,
	cmp	ip, r6	@ tmp536, pre_used_size.8248
	beq	.L2547	@,
	ldr	r2, [r2, #4]	@ D.47685, <variable>.DPB.fs
	ldr	r0, [r2, #672]	@ min_poc, <variable>.poc
	cmp	r0, r3	@ min_poc, min_poc
	bge	.L2582	@,
	ldrb	sl, [r2, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	sl, #0	@ <variable>.is_in_dpb,
	beq	.L2582	@,
	mov	r1, ip	@ pos.8325, tmp536
.L2601:
	add	r2, lr, #4	@ ivtmp.8229, tmp537,
	add	ip, ip, #1	@ pos, tmp536,
	ldr	lr, [r2, #0]	@ D.47685, <variable>.DPB.fs
	ldr	r3, [lr, #672]	@ min_poc, <variable>.poc
	cmp	r3, r0	@ min_poc, min_poc.8333
	blt	.L2629	@,
.L2545:
	mov	r3, r0	@ min_poc, min_poc.8333
	b	.L2546	@
.L2621:
	movw	r7, #59228	@ tmp256,
	ldr	r5, [r4, r7]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	r5, #1	@ <variable>.FirstFrameDisplayed,
	bne	.L2504	@,
.L2501:
	add	r6, r4, #55552	@ pOutPic, pH264Ctx,
	movw	lr, #56960	@ tmp259,
	add	r7, r6, #240	@ pOutPic, pOutPic,
	ldr	r6, [r4, lr]	@ pOutFrameStore, <variable>.LastPic.frame_store
	b	.L2505	@
.L2624:
	ldrd	r0, [r7, #24]	@ <variable>.fs_image.PTS, pOutPic,
	mvn	r2, #0	@ tmp278,
	mvn	r3, #0	@,
	cmp	r1, r3	@ <variable>.fs_image.PTS, tmp278
	cmpeq	r0, r2	@ <variable>.fs_image.PTS, tmp278
	bne	.L2510	@,
	movw	r3, #56440	@ tmp279,
	ldrd	r2, [r3, r4]	@ D.40596, tmp279, pH264Ctx
	cmp	r3, r1	@ D.40596, <variable>.fs_image.PTS
	cmpeq	r2, r0	@ D.40596, <variable>.fs_image.PTS
	bne	.L2605	@,
	b	.L2510	@
.L2622:
	ldr	ip, [r6, #696]	@ <variable>.err_level, <variable>.err_level
	add	r5, r3, #2	@ tmp263, tmp263,
	strb	r5, [r6, #1]	@ tmp263, <variable>.is_used
	ldr	r0, [r7, #588]	@ <variable>.err_level, <variable>.err_level
	add	r1, ip, r0	@ tmp267, <variable>.err_level, <variable>.err_level
	str	r1, [r6, #696]	@ tmp267, <variable>.err_level
	b	.L2507	@
.L2580:
	mvn	r0, #-2147483648	@ min_poc,
	b	.L2600	@
.L2582:
	mov	r0, r3	@ min_poc, min_poc
	b	.L2601	@
.L2547:
	mov	r0, r4	@, pH264Ctx
	bl	RemoveFrameStoreOutDPB	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateReflist	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateLTReflist	@
	movw	r1, #26632	@ tmp416,
	ldr	r6, [r4, r1]	@ pre_used_size.8248, <variable>.DPB.size
	b	.L2539	@
.L2614:
	movw	lr, #56352	@ tmp454,
	ldr	r5, [r4, lr]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r5, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2564	@,
	movw	ip, #55796	@ tmp456,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	bne	.L2564	@,
	movw	r5, #26640	@ tmp458,
	ldr	r0, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r0, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L2564	@,
	add	r7, r4, #26368	@ ivtmp.8219, pH264Ctx,
	movw	lr, #56344	@ tmp516,
	add	r3, r7, #136	@ ivtmp.8219, ivtmp.8219,
	mov	r6, r2	@ tmp517, i.8304
	movw	r7, #57708	@ tmp518,
	b	.L2567	@
.L2565:
	ldr	r1, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.8219, ivtmp.8219,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.8304
	bls	.L2630	@,
.L2567:
	ldr	r1, [r3, #0]	@ D.40736, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.8304, i.8304,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	ldr	ip, [r1, #660]	@ <variable>.frame_num, <variable>.frame_num
	cmp	ip, r0	@ <variable>.frame_num, <variable>.CurrPic.frame_num
	bne	.L2565	@,
	strb	r6, [r1, #2]	@ tmp517, <variable>.is_reference
	ldr	r1, [r3, #0]	@ tmp514, <variable>.DPB.fs_ref
	ldrb	r8, [r1, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r8, #1	@ <variable>.is_in_dpb,
	streq	r8, [r1, #684]	@ <variable>.is_in_dpb, <variable>.is_displayed
	ldreq	r1, [r3, #0]	@ tmp468, <variable>.DPB.fs_ref
	streqb	r6, [r1, #4]	@ tmp517, <variable>.is_in_dpb
	ldreq	r1, [r3, #0]	@ tmp514, <variable>.DPB.fs_ref
	ldr	ip, [r4, r7]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	ldr	r8, [r1, #700]	@ D.40744, <variable>.pmv_address_idc
	add	r0, r8, #14400	@ tmp473, D.40744,
	cmp	r8, ip	@ D.40744, <variable>.TotalPmvNum
	add	r0, r0, #8	@ tmp473, tmp473,
	addne	r0, r4, r0, asl #2	@, tmp477, pH264Ctx, tmp473,
	strne	r6, [r0, #4]	@ tmp517, <variable>.PmvStoreUsedFlag
	strne	ip, [r1, #700]	@ <variable>.TotalPmvNum, <variable>.pmv_address_idc
	b	.L2565	@
.L2630:
	movw	r2, #26636	@ tmp485,
	ldr	r1, [r4, r2]	@ pre_used_size.8274, <variable>.DPB.used_size
.L2564:
	add	r5, r4, #55552	@, pH264Ctx,
	mov	r0, r4	@, pH264Ctx
	add	r2, r5, #240	@,,
	bl	InsertFrmInDPB	@
	movw	r2, #26636	@ tmp489,
	ldr	r1, [r4, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	movw	r3, #57068	@ tmp488,
	str	r1, [r4, r3]	@ <variable>.DPB.used_size, <variable>.PrevPic.Dpb_pos
	subs	r3, r0, #0	@ ret.8314,
	beq	.L2568	@,
	mov	r2, #3744	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC108	@,
	movt	r1, #:upper16:.LC108	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3745	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2626:
	movw	r0, #56336	@ tmp220,
	mov	lr, #0	@ tmp221,
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	lr, [r1, #4]	@ tmp221, <variable>.is_in_dpb
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	lr, [ip, #1]	@ tmp221, <variable>.is_used
	b	.L2493	@
.L2617:
	movw	r5, #59152	@ tmp426,
	ldr	r3, [r4, r5]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r3, #2	@ <variable>.OldDecMode,
	beq	.L2631	@,
.L2557:
	mov	r0, r4	@, pH264Ctx
	bl	DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L2632	@,
	cmp	r0, #1	@ ret,
	bne	.L2559	@,
	movw	r3, #56336	@ tmp436,
	mov	r0, #0	@ tmp437,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r0, [r1, #4]	@ tmp437, <variable>.is_in_dpb
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r0, [r2, #1]	@ tmp437, <variable>.is_used
.L2559:
	movw	r1, #:lower16:.LC107	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3690	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2494	@
.L2568:
	add	lr, r1, #1	@ tmp496, <variable>.DPB.used_size,
	mov	r0, r4	@, pH264Ctx
	str	lr, [r4, r2]	@ tmp496, <variable>.DPB.used_size
	mov	r5, #0	@ ret,
	bl	UpdateReflist	@
	mov	r0, r4	@, pH264Ctx
	bl	UpdateLTReflist	@
	b	.L2569	@
.L2618:
	ldr	r2, .L2634	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3697	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2627:
	cmp	r0, #0	@ temp.8283,
	beq	.L2529	@,
	mov	r0, r4	@, pH264Ctx
	bl	DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L2633	@,
	cmp	r0, #1	@ ret,
	ldreq	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	moveq	r3, #0	@ tmp387,
	streqb	r3, [r2, #4]	@ tmp387, <variable>.is_in_dpb
	ldreq	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	streqb	r3, [r2, #1]	@ tmp387, <variable>.is_used
.L2534:
	movw	r1, #:lower16:.LC107	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC107	@,
	movw	r3, #3601	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2494	@
.L2628:
	mov	r3, r0	@, ret.8288
	movw	r2, #3613	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC108	@,
	movt	r1, #:upper16:.LC108	@,
	bl	dprint_vfmw	@
	mov	r2, r5	@, ret.8288
	movw	r1, #:lower16:.LC107	@,
	movw	r3, #3614	@,
	movt	r1, #:upper16:.LC107	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2623:
	movw	r2, #3439	@,
	movw	r1, #:lower16:.LC110	@,
	movt	r1, #:upper16:.LC110	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC107	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC107	@,
	mov	r3, #3440	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2490	@
.L2631:
	movw	ip, #55795	@ tmp428,
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	lr, #0	@ <variable>.CurrPic.structure,
	movwne	lr, #56336	@ tmp431,
	ldrne	r2, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	addne	lr, lr, #740	@ tmp430, tmp430,
	strne	r2, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.pLastFieldBuf
	b	.L2557	@
.L2633:
	mov	r0, r6	@, <variable>.CurrPic.field_pair_flag
	movw	r1, #:lower16:.LC108	@,
	movw	r2, #3592	@,
	movt	r1, #:upper16:.LC108	@,
	mov	r3, r5	@, ret
	bl	dprint_vfmw	@
	b	.L2534	@
.L2632:
	mov	r3, r0	@, ret
	movw	r1, #:lower16:.LC108	@,
	movw	r2, #3682	@,
	movt	r1, #:upper16:.LC108	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	b	.L2559	@
.L2620:
	mov	r0, r4	@, pH264Ctx
	bl	IDRMemMarking	@
	cmp	r0, #0	@,
	mvnne	r5, #0	@ ret,
	beq	.L2521	@,
	b	.L2522	@
.L2635:
	.align	2
.L2634:
	.word	.LANCHOR0+176
	.fnend
	.size	StorePicInDPB, .-StorePicInDPB
	.align	2
	.global	H264DEC_VDMPostProc
	.type	H264DEC_VDMPostProc, %function
H264DEC_VDMPostProc:
	.fnstart
.LFB1668:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r5, [r0, #364]	@ <variable>.StartMode, <variable>.StartMode
	mov	r6, r3	@ pLumaInfo, pLumaInfo
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	cmp	r5, #0	@ <variable>.StartMode,
	ldr	r3, [fp, #8]	@ VdhId, VdhId
	bne	.L2637	@,
	ldr	ip, [fp, #4]	@ ModuleLowlyEnable, ModuleLowlyEnable
	movw	r2, #56380	@ tmp170,
	str	r1, [r0, r2]	@ ErrRatio, <variable>.CurrPic.err_level
	cmp	ip, #0	@ ModuleLowlyEnable,
	beq	.L2638	@,
	rsb	lr, r3, r3, asl #3	@, tmp175, VdhId, VdhId,
	movw	r1, #:lower16:g_VdmDrvParam	@ tmp171,
	movt	r1, #:upper16:g_VdmDrvParam	@ tmp171,
	add	r3, r1, lr, asl #3	@, tmp177, tmp171, tmp175,
	ldr	r3, [r3, #52]	@ D.47285, <variable>.ChanIntState
	cmp	r3, #3	@ D.47285,
	beq	.L2695	@,
	cmp	r3, #1	@ D.47285,
	beq	.L2638	@,
	mov	r1, r6	@, pLumaInfo
	mov	r0, r4	@, pH264Ctx
	bl	StorePicInDPB	@
	cmp	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	bls	.L2642	@,
.L2698:
	movw	r6, #56336	@ tmp182,
	movw	r3, #59224	@ tmp179,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	ldr	r1, [ip, #656]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	mov	r2, r5	@, ret
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC117	@,
	movt	r1, #:upper16:.LC117	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
	mov	r0, #0	@ tmp186,
	str	r0, [r4, r6]	@ tmp186, <variable>.CurrPic.frame_store
	mvn	r0, #0	@ D.47288,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2637:
	movw	r3, #56380	@ tmp235,
	str	r1, [r0, r3]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	ClearAllSlice	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r6	@, pLumaInfo
	bl	StorePicInDPB	@
	subs	r2, r0, #0	@ ret.8392,
	bne	.L2696	@,
.L2656:
	mov	r0, r4	@, pH264Ctx
	bl	FlushDPB	@
	subs	r2, r0, #0	@ ret.8393,
	bne	.L2697	@,
.L2657:
	movw	r0, #13580	@ tmp241,
	movw	r3, #22344	@ tmp240,
	ldr	ip, [r4, r0]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r1, #57712	@ tmp238,
	movw	r2, #:lower16:88888	@ tmp244,
	movt	r2, #:upper16:88888	@ tmp244,
	mov	lr, #0	@ tmp239,
	str	lr, [r4, r1]	@ tmp239, <variable>.AllowStartDec
	str	ip, [r4, r3]	@ <variable>.MaxPpsNum, <variable>.PrevSlice.pic_parameter_set_id
	movw	r3, #22352	@ tmp243,
	str	r2, [r4, r3]	@ tmp244, <variable>.PrevSlice.frame_num
	movw	ip, #22337	@ tmp248,
	movw	r2, #22348	@ tmp251,
	mov	r1, #2	@ tmp249,
	mov	r3, #7	@ tmp252,
	strb	r1, [r4, ip]	@ tmp249, <variable>.PrevSlice.bottom_field_flag
	str	r3, [r4, r2]	@ tmp252, <variable>.PrevSlice.nal_ref_idc
	movw	ip, #22338	@ tmp253,
	movw	r2, #22360	@ tmp256,
	mov	r1, #32	@ tmp254,
	mov	r3, #3	@ tmp257,
	strb	r1, [r4, ip]	@ tmp254, <variable>.PrevSlice.nal_unit_type
	str	r3, [r4, r2]	@ tmp257, <variable>.PrevSlice.pic_oder_cnt_lsb
	movw	ip, #22364	@ tmp258,
	movw	r2, #22376	@ tmp264,
	mvn	r1, #0	@ tmp259,
	mov	r3, #262144	@ tmp265,
	str	r1, [r4, ip]	@ tmp259, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	str	r3, [r4, r2]	@ tmp265, <variable>.PrevSlice.first_mb_in_slice
	movw	ip, #22336	@ tmp245,
	movw	r1, #22368	@ tmp260,
	movw	r2, #22372	@ tmp262,
	str	lr, [r4, r1]	@ tmp239, <variable>.PrevSlice.delta_pic_order_cnt
	mov	r0, lr	@ D.47288, tmp239
	strb	lr, [r4, ip]	@ tmp239, <variable>.PrevSlice.field_pic_flag
	str	lr, [r4, r2]	@ tmp239, <variable>.PrevSlice.delta_pic_order_cnt
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2638:
	bl	ClearAllSlice	@
	mov	r1, r6	@, pLumaInfo
	mov	r0, r4	@, pH264Ctx
	bl	StorePicInDPB	@
	cmp	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	bhi	.L2698	@,
.L2642:
	ldr	r5, [r4, #360]	@ pH264DecParam, <variable>.pH264DecParam
	ldr	r6, [r5, #292]	@ <variable>.CurrPicImgIdc, <variable>.CurrPicImgIdc
	add	r2, r5, r6, asl #2	@, tmp191, pH264DecParam, <variable>.CurrPicImgIdc,
	ldr	r6, [r2, #308]	@ CurrFramePhyAddr, <variable>.ImgPhyAddr
	mov	r0, r6	@, CurrFramePhyAddr
	bl	MEM_Phy2Vir	@
	cmp	r0, #0	@ D.47302
	mvneq	r0, #0	@ D.47288,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	ldr	r7, [r5, #28]	@ <variable>.pic_width_in_mb, <variable>.pic_width_in_mb
	ldr	r1, [r5, #20]	@ <variable>.pic_height_in_mb, <variable>.pic_height_in_mb
	ldr	sl, [r5, #300]	@ <variable>.CurrPicPmvIdc, <variable>.CurrPicPmvIdc
	mul	r7, r7, r1	@ TotalMBNum, <variable>.pic_width_in_mb, <variable>.pic_height_in_mb
	add	r9, sl, #206	@ tmp193, <variable>.CurrPicPmvIdc,
	ldr	r8, [r5, r9, asl #2]	@ tmp196, <variable>.PmvPhyAddr
	cmp	r7, #0	@ TotalMBNum,
	rsb	r5, r6, r8	@ tmp195, CurrFramePhyAddr, tmp196
	add	r0, r0, r5	@ pCurrPMVVirAddr, D.47302, tmp195
	beq	.L2699	@,
	ldr	r9, [r0, #0]	@ D.47309,* pCurrPMVVirAddr
	sub	lr, r7, #1	@ tmp267, TotalMBNum,
	and	r2, lr, #1	@ tmp269, tmp267,
	mvn	r5, #-2147483648	@ MinMV,
	tst	r9, #8192	@ D.47309,
	mov	lr, #0	@ SkipMV,
	mov	ip, r9, asl #18	@ MVX.8384, D.47309,
	mov	r3, ip, lsr #18	@ MVX.8384, MVX.8384,
	rsbne	r3, r3, #0	@ D.47315, MVX.8384
	movne	r3, r3, asl #19	@ MVX, D.47315,
	movne	r3, r3, lsr #19	@ MVX, MVX,
	moveq	r6, r3, asl #19	@ MVX, MVX.8384,
	moveq	r3, r6, lsr #19	@ MVX, MVX,
.L2676:
	mov	ip, r9, asr #14	@ tmp292, D.47309,
	tst	ip, #2048	@ tmp292,
	mov	r1, ip, asl #20	@ MVY.8385, tmp292,
	mov	r9, r1, lsr #20	@ MVY.8385, MVY.8385,
	rsbne	r9, r9, #0	@ D.47322, MVY.8385
	mov	sl, r9, asl #21	@ MVY, MVY.8385,
	mov	r8, sl, lsr #21	@ MVY, MVY,
	add	r9, r8, r3	@ CurrentMV, MVY, MVX
	cmp	r9, #0	@ CurrentMV,
	movge	r6, r9	@ MaxMV, CurrentMV
	movlt	r6, #0	@ MaxMV,
	cmp	r9, #0	@ CurrentMV,
	moveq	lr, #1	@ SkipMV,
	beq	.L2680	@,
	cmp	r5, r9	@ MinMV, CurrentMV
	movge	r5, r9	@ MinMV, CurrentMV
.L2680:
	mov	r3, #1	@ MBIndex,
	cmp	r7, r3	@ TotalMBNum, MBIndex
	bls	.L2681	@,
	cmp	r2, #0	@ tmp269,
	beq	.L2652	@,
	ldr	ip, [r0, #4]	@ D.47309,
	tst	ip, #8192	@ D.47309,
	mov	sl, ip, asr #14	@ tmp310, D.47309,
	mov	r2, ip, asl #18	@ MVX.8384, D.47309,
	mov	r8, r2, lsr #18	@ MVX.8384, MVX.8384,
	mov	r2, sl, asl #20	@ MVY.8385, tmp310,
	rsbne	r8, r8, #0	@ D.47315, MVX.8384
	tst	sl, #2048	@ tmp310,
	mov	ip, r2, lsr #20	@ MVY.8385, MVY.8385,
	rsbne	ip, ip, #0	@ D.47322, MVY.8385
	mov	r1, r8, asl #19	@ MVX, MVX.8384,
	mov	sl, ip, asl #21	@ MVY, MVY.8385,
	mov	r8, r1, lsr #19	@ MVX, MVX,
	mov	r2, sl, lsr #21	@ MVY, MVY,
	add	r2, r2, r8	@ CurrentMV, MVY, MVX
	cmp	r6, r2	@ MaxMV, CurrentMV
	movlt	r6, r2	@ MaxMV, CurrentMV
	cmp	r2, #0	@ CurrentMV,
	addeq	lr, lr, #1	@ SkipMV, SkipMV,
	beq	.L2687	@,
	cmp	r5, r2	@ MinMV, CurrentMV
	movge	r5, r2	@ MinMV, CurrentMV
.L2687:
	add	r3, r3, #1	@ MBIndex, MBIndex,
	add	r9, r9, r2	@ TotalMV, TotalMV, CurrentMV
	cmp	r7, r3	@ TotalMBNum, MBIndex
	bls	.L2681	@,
.L2652:
	ldr	r1, [r0, r3, asl #2]	@ D.47309,* pCurrPMVVirAddr
	tst	r1, #8192	@ D.47309,
	mov	r8, r1, asr #14	@ tmp204, D.47309,
	mov	r2, r1, asl #18	@ MVX.8384, D.47309,
	mov	sl, r2, lsr #18	@ MVX.8384, MVX.8384,
	mov	r2, r8, asl #20	@ MVY.8385, tmp204,
	rsbne	sl, sl, #0	@ D.47315, MVX.8384
	tst	r8, #2048	@ tmp204,
	mov	r1, r2, lsr #20	@ MVY.8385, MVY.8385,
	rsbne	r1, r1, #0	@ D.47322, MVY.8385
	mov	ip, sl, asl #19	@ MVX, D.47315,
	mov	r8, r1, asl #21	@ MVY, D.47322,
	mov	sl, ip, lsr #19	@ MVX, MVX,
	mov	r2, r8, lsr #21	@ MVY, MVY,
	add	r1, r2, sl	@ CurrentMV, MVY, MVX
	cmp	r6, r1	@ MaxMV, CurrentMV
	movlt	r6, r1	@ MaxMV, CurrentMV
	cmp	r1, #0	@ CurrentMV,
	addeq	lr, lr, #1	@ SkipMV, SkipMV,
	beq	.L2651	@,
	cmp	r5, r1	@ MinMV, CurrentMV
	movge	r5, r1	@ MinMV, CurrentMV
.L2651:
	add	r3, r3, #1	@ tmp270, MBIndex,
	add	r1, r9, r1	@ TotalMV, TotalMV, CurrentMV
	ldr	r2, [r0, r3, asl #2]	@ D.47309,* pCurrPMVVirAddr
	tst	r2, #8192	@ D.47309,
	mov	r9, r2, asl #18	@ MVX.8384, D.47309,
	mov	ip, r9, lsr #18	@ MVX.8384, MVX.8384,
	rsbne	ip, ip, #0	@ D.47315, MVX.8384
	movne	ip, ip, asl #19	@ MVX, D.47315,
	movne	ip, ip, lsr #19	@ MVX, MVX,
	moveq	r9, ip, asl #19	@ MVX, MVX.8384,
	moveq	ip, r9, lsr #19	@ MVX, MVX,
.L2688:
	mov	sl, r2, asr #14	@ tmp323, D.47309,
	tst	sl, #2048	@ tmp323,
	mov	r9, sl, asl #20	@ MVY.8385, tmp323,
	mov	r2, r9, lsr #20	@ MVY.8385, MVY.8385,
	rsbne	r2, r2, #0	@ D.47322, MVY.8385
	mov	r8, r2, asl #21	@ MVY, MVY.8385,
	mov	sl, r8, lsr #21	@ MVY, MVY,
	add	r2, sl, ip	@ CurrentMV, MVY, MVX
	cmp	r6, r2	@ MaxMV, CurrentMV
	movlt	r6, r2	@ MaxMV, CurrentMV
	cmp	r2, #0	@ CurrentMV,
	addeq	lr, lr, #1	@ SkipMV, SkipMV,
	beq	.L2692	@,
	cmp	r5, r2	@ MinMV, CurrentMV
	movge	r5, r2	@ MinMV, CurrentMV
.L2692:
	add	r3, r3, #1	@ MBIndex, tmp270,
	add	r9, r1, r2	@ TotalMV, TotalMV, CurrentMV
	cmp	r7, r3	@ TotalMBNum, MBIndex
	bhi	.L2652	@,
.L2681:
	mov	r0, #100	@ tmp209,
	mul	r0, r0, lr	@ prephitmp.8394, tmp209, SkipMV
.L2645:
	mov	r1, r7	@, TotalMBNum
	movw	r8, #56336	@ tmp213,
	bl	__aeabi_uidiv	@
	mov	sl, r0	@ SkipRatio,
	ldr	r0, [r4, r8]	@ temp.8386, <variable>.CurrPic.frame_store
	cmp	sl, #100	@ SkipRatio,
	moveq	r5, #0	@ MinMV,
	cmp	r0, #0	@ temp.8386,
	beq	.L2654	@,
	str	r6, [r0, #244]	@ MaxMV, <variable>.fs_image.MaxMV
	mov	r1, r7	@, TotalMBNum
	ldr	lr, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, r9	@, prephitmp.8366
	str	r5, [lr, #248]	@ MinMV, <variable>.fs_image.MinMV
	bl	__aeabi_uidiv	@
	ldr	r1, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r1, #252]	@, <variable>.fs_image.AvgMV
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	sl, [r2, #256]	@ SkipRatio, <variable>.fs_image.SkipRatio
	ldr	r3, [r4, r8]	@ temp.8390, <variable>.CurrPic.frame_store
	ldr	ip, [r3, #244]	@ <variable>.fs_image.MaxMV, <variable>.fs_image.MaxMV
	add	r0, r3, #248
	ldmia	r0, {r0, r1, r2}	@ phole ldm
	movw	r3, #56044	@ tmp224,
	str	ip, [r4, r3]	@ <variable>.fs_image.MaxMV, <variable>.CurrPic.fs_image.MaxMV
	movw	r3, #56048	@ tmp226,
	str	r0, [r4, r3]	@ <variable>.fs_image.MinMV, <variable>.CurrPic.fs_image.MinMV
	movw	ip, #56052	@ tmp228,
	movw	r3, #56056	@ tmp230,
	str	r1, [r4, ip]	@ <variable>.fs_image.AvgMV, <variable>.CurrPic.fs_image.AvgMV
	str	r2, [r4, r3]	@ <variable>.fs_image.SkipRatio, <variable>.CurrPic.fs_image.SkipRatio
.L2655:
	movw	ip, #57712	@ tmp233,
	mov	r0, #1	@ tmp234,
	str	r0, [r4, ip]	@ tmp234, <variable>.AllowStartDec
	mov	r0, #0	@ D.47288,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2697:
	movw	r1, #:lower16:.LC120	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC120	@,
	bl	dprint_vfmw	@
	b	.L2657	@
.L2696:
	movw	r1, #:lower16:.LC119	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC119	@,
	bl	dprint_vfmw	@
	b	.L2656	@
.L2695:
	bl	ClearAllSlice	@
	mov	r0, r5	@ D.47288, <variable>.StartMode
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2699:
	mov	r0, r7	@ prephitmp.8394, TotalMBNum
	mov	r9, r7	@ prephitmp.8366, TotalMBNum
	mvn	r5, #-2147483648	@ MinMV,
	mov	r6, r7	@ MaxMV, TotalMBNum
	b	.L2645	@
.L2654:
	movw	r1, #:lower16:.LC118	@,
	movt	r1, #:upper16:.LC118	@,
	bl	dprint_vfmw	@
	b	.L2655	@
	.fnend
	.size	H264DEC_VDMPostProc, .-H264DEC_VDMPostProc
	.global	__aeabi_idivmod
	.align	2
	.global	DecGap
	.type	DecGap, %function
DecGap:
	.fnstart
.LFB1613:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #26388	@ tmp156,
	ldr	r5, [r0, r3]	@ D.42381, <variable>.CurrMarkIdx
	movw	r1, #2004	@ tmp159,
	movw	ip, #13613	@ tmp162,
	movw	lr, #26636	@ tmp171,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag, <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mul	r9, r1, r5	@ tmp158, tmp159, D.42381
	cmp	r2, #1	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag,
	ldr	r5, [r0, lr]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	movw	lr, #20708	@ tmp151,
	moveq	r2, #2	@,
	movne	r2, #0	@,
	add	r7, r9, r0	@ tmp160, tmp158, pH264Ctx
	str	r2, [fp, #-56]	@, %sfp
	add	r6, r7, #22272	@ tmp161, tmp160,
	movw	r9, #56340	@ tmp164,
	add	r0, r6, #104	@ tmp161, tmp161,
	movw	r7, #19852	@ tmp154,
	mov	r1, r6	@ tmp170, tmp161
	add	r3, r1, #108	@ tmp170, tmp170,
	ldrb	ip, [r0, #7]	@ zero_extendqisi2	@, <variable>.adaptive_ref_pic_marking_mode_flag
	movw	r6, #19856	@ tmp155,
	movw	r0, #16500	@ tmp152,
	cmp	r5, #0	@ <variable>.DPB.used_size,
	str	ip, [fp, #-68]	@, %sfp
	movw	ip, #20704	@ tmp153,
	ldr	r2, [r4, lr]	@, <variable>.CurrSlice.frame_num
	str	r3, [r4, r9]	@ tmp170, <variable>.CurrPic.pMarkPara
	str	r2, [fp, #-48]	@, %sfp
	ldr	r1, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r2, [r4, r0]	@ D.42374, <variable>.CurrSPS.log2_max_frame_num_minus4
	ldr	r0, [r4, ip]	@ D.42377, <variable>.CurrSlice.prev_frame_num
	str	r1, [fp, #-64]	@, %sfp
	ldr	r3, [r4, r6]	@, <variable>.CurrPOC.delta_pic_order_cnt
	str	r3, [fp, #-60]	@, %sfp
	beq	.L2713	@,
	add	r1, r2, #4	@ tmp174, D.42374,
	mov	r5, #1	@ tmp175,
	mov	lr, r5, asl r1	@, tmp175,
	add	r0, r0, #1	@, D.42377,
	str	lr, [fp, #-52]	@, %sfp
	mov	r1, lr	@,
	bl	__aeabi_uidivmod	@
	mov	r2, #0	@ tmp183,
	mov	r0, #2	@,
	str	r2, [r4, r7]	@ tmp183, <variable>.CurrPOC.delta_pic_order_cnt
	str	r2, [r4, r6]	@ tmp183, <variable>.CurrPOC.delta_pic_order_cnt
	mov	r5, r1	@ UnusedShortTermFrameNum,
	movw	r1, #:lower16:.LC122	@,
	movt	r1, #:upper16:.LC122	@,
	bl	dprint_vfmw	@
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC123	@,
	ldr	r2, [fp, #-48]	@, %sfp
	movt	r1, #:upper16:.LC123	@,
	mov	r3, r5	@, UnusedShortTermFrameNum
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-48]	@, %sfp
	cmp	r0, r5	@, UnusedShortTermFrameNum
	ble	.L2705	@,
	movw	r6, #56336	@ tmp262,
	movw	sl, #16504	@ tmp267,
	b	.L2711	@
.L2707:
	movw	r0, #55796	@ tmp240,
	mov	r1, r8	@, tmp241
	strb	r8, [r4, r0]	@ tmp241, <variable>.CurrPic.is_long_term
	mov	r0, r4	@, pH264Ctx
	bl	StorePicInDPB	@
	ldr	r1, [fp, #-52]	@, %sfp
	subs	r3, r0, #0	@ ret.8424,
	add	r0, r5, #1	@, UnusedShortTermFrameNum,
	bne	.L2714	@,
	movw	lr, #20704	@ tmp249,
	str	r5, [r4, lr]	@ UnusedShortTermFrameNum, <variable>.CurrSlice.prev_frame_num
	bl	__aeabi_idivmod	@
	ldr	r3, [fp, #-48]	@, %sfp
	cmp	r3, r1	@, UnusedShortTermFrameNum
	mov	r5, r1	@ UnusedShortTermFrameNum,
	ble	.L2705	@,
.L2711:
	mov	r1, #1	@,
	mov	r0, r4	@, pH264Ctx
	bl	AllocFrameStore	@
	mov	r8, #0	@ tmp241,
	movw	r1, #:lower16:.LC125	@,
	movt	r1, #:upper16:.LC125	@,
	subs	r7, r0, #0	@ ret,
	mov	r0, #2	@,
	bne	.L2715	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	ip, #55798	@,
	mov	r3, #1	@ tmp196,
	strb	r3, [r4, ip]	@ tmp196, <variable>.CurrPic.nal_unit_type
	movw	r0, #56344	@,
	str	r5, [r1, #660]	@ UnusedShortTermFrameNum, <variable>.frame_num
	movw	r1, #56352	@,
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r5, [r4, r0]	@ UnusedShortTermFrameNum, <variable>.CurrPic.frame_num
	str	r5, [r2, #548]	@ UnusedShortTermFrameNum, <variable>.frame.pic_num
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	ip, [r4, r1]	@, <variable>.CurrPic.nal_ref_idc
	str	r7, [r0, #544]	@ ret, <variable>.frame.long_term_pic_num
	movw	r0, #55794	@,
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r3, [r2, #684]	@ tmp196, <variable>.is_displayed
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [ip, #4]	@ ret, <variable>.is_in_dpb
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r3, [r1, #0]	@ tmp196, <variable>.non_existing
	ldr	r2, [r4, r9]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	strb	r3, [r4, r0]	@ tmp196, <variable>.CurrPic.non_existing
	strb	r7, [r2, #3]	@ ret, <variable>.adaptive_ref_pic_marking_mode_flag
	ldr	r3, [r4, sl]	@ <variable>.CurrSPS.pic_order_cnt_type, <variable>.CurrSPS.pic_order_cnt_type
	cmp	r3, #0	@ <variable>.CurrSPS.pic_order_cnt_type,
	beq	.L2707	@,
	movw	lr, #19868	@,
	mov	r0, r4	@, pH264Ctx
	str	r5, [r4, lr]	@ UnusedShortTermFrameNum, <variable>.CurrPOC.frame_num
	bl	DecPOC	@
	movw	r2, #19848	@ tmp229,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r3, #19844	@ tmp232,
	ldr	r2, [r4, r3]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPOC.framepoc
	movw	ip, #19836	@ tmp235,
	movw	r1, #19840	@ tmp238,
	ldr	r3, [r4, ip]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	ldr	ip, [r4, r1]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPOC.bottompoc
	movw	r1, #56356	@ tmp228,
	str	r0, [r4, r1]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPic.thispoc
	movw	r0, #56360	@ tmp231,
	str	r2, [r4, r0]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPic.framepoc
	movw	r2, #56364	@ tmp234,
	str	r3, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPic.toppoc
	movw	r3, #56368	@ tmp237,
	str	ip, [r4, r3]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPic.bottompoc
	b	.L2707	@
.L2713:
	mov	r0, r5	@, <variable>.DPB.used_size
	movw	r1, #:lower16:.LC121	@,
	movt	r1, #:upper16:.LC121	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.42395, <variable>.DPB.used_size
.L2704:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2705:
	ldr	ip, [fp, #-64]	@, %sfp
	movw	lr, #19852	@ tmp255,
	movw	r2, #19856	@ tmp256,
	movw	r0, #56340	@ tmp258,
	ldr	r3, [r4, r0]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r0, #0	@ D.42395,
	str	ip, [r4, lr]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [fp, #-60]	@, %sfp
	str	r1, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	ip, [fp, #-68]	@, %sfp
	strb	ip, [r3, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	b	.L2704	@
.L2715:
	ldr	r0, [fp, #-64]	@, %sfp
	movw	r1, #19852	@ tmp188,
	movw	r2, #19856	@ tmp189,
	movw	ip, #56340	@ tmp191,
	ldr	r3, [r4, ip]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	str	r0, [r4, r1]	@, <variable>.CurrPOC.delta_pic_order_cnt
	mov	r0, r8	@, tmp241
	ldr	lr, [fp, #-60]	@, %sfp
	movw	r1, #:lower16:.LC124	@,
	movt	r1, #:upper16:.LC124	@,
	str	lr, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	ip, [fp, #-68]	@, %sfp
	strb	ip, [r3, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42395,
	b	.L2704	@
.L2714:
	ldr	r1, [fp, #-64]	@, %sfp
	movw	r0, #19852	@ tmp243,
	movw	lr, #19856	@ tmp244,
	movw	r2, #56340	@ tmp246,
	ldr	r2, [r4, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	str	r1, [r4, r0]	@, <variable>.CurrPOC.delta_pic_order_cnt
	mov	r0, r8	@, tmp241
	ldr	ip, [fp, #-60]	@, %sfp
	str	ip, [r4, lr]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [fp, #-68]	@, %sfp
	strb	r1, [r2, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	movw	r1, #:lower16:.LC126	@,
	movw	r2, #6018	@,
	movt	r1, #:upper16:.LC126	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42395,
	b	.L2704	@
	.fnend
	.size	DecGap, .-DecGap
	.align	2
	.global	InitPic
	.type	InitPic, %function
InitPic:
	.fnstart
.LFB1614:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #13592	@ tmp192,
	movw	r5, #20700	@ tmp193,
	ldr	ip, [r0, r2]	@ <variable>.PPS, <variable>.PPS
	ldr	r7, [r0, r5]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r6, #2208	@ tmp196,
	movw	lr, #55792	@ tmp203,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r1, #13588	@ tmp198,
	ldrb	r0, [r0, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	mla	r6, r6, r7, ip	@ pPPS, tmp196, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	ldr	r3, [r4, r1]	@ <variable>.SPS, <variable>.SPS
	cmp	r0, #0	@ <variable>.CurrPic.state,
	mov	r5, #4000	@ tmp201,
	ldr	r2, [r6, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r5, r5, r2, r3	@ pSPS, tmp201, <variable>.seq_parameter_set_id, <variable>.SPS
	beq	.L2717	@,
	movw	r7, #56336	@ tmp205,
	ldr	r3, [r4, r7]	@ D.42458, <variable>.CurrPic.frame_store
	cmp	r3, #0	@ D.42458,
	beq	.L2718	@,
	ldrb	r8, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #0	@ <variable>.is_used,
	beq	.L2800	@,
.L2719:
	movw	r7, #55792	@ tmp221,
	mov	r1, #0	@ tmp222,
	strb	r1, [r4, r7]	@ tmp222, <variable>.CurrPic.state
.L2717:
	mov	r0, r4	@, pH264Ctx
	sub	r1, fp, #48	@,,
	bl	GetReRangeFlag	@
	ldr	r3, [r5, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mov	r7, r0	@ ReRangeFlg,
	movw	r0, #14340	@ tmp225,
	ldr	r2, [r4, r0]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	cmp	r2, r3	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.seq_parameter_set_id
	beq	.L2801	@,
.L2720:
	add	ip, r4, #13568	@, pH264Ctx,
	mov	r1, #0	@ tmp229,
	mov	r2, #4000	@,
	strb	r1, [r5, #24]	@ tmp229, <variable>.is_refreshed
	add	r0, ip, #28	@,,
	mov	r1, r5	@, pSPS
	bl	memmove	@
	ldr	r2, [fp, #-48]	@ dpb_changed, dpb_changed
	cmp	r2, #0	@ dpb_changed,
	beq	.L2722	@,
.L2810:
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r8, [r3, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r8, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L2723	@,
	ldr	r0, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L2802	@,
.L2723:
	movw	r2, #59184	@ tmp281,
	cmp	r7, #0	@ ReRangeFlg,
	ldr	r1, [r4, r2]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	lr, r1, #1	@ tmp284, <variable>.SeqCnt,
	str	lr, [r4, r2]	@ tmp284, <variable>.SeqCnt
	bne	.L2734	@,
.L2811:
	ldr	r3, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r3, #1	@ <variable>.s32WaitFsFlag,
	beq	.L2734	@,
	mov	r0, r4	@, pH264Ctx
	bl	FlushDPB	@
	subs	r3, r0, #0	@ ret.8526,
	bne	.L2803	@,
.L2736:
	mov	r0, r4	@, pH264Ctx
	bl	InitDPB	@
	cmp	r0, #0	@ ret.8528
	bne	.L2804	@,
	cmp	r7, #0	@ ReRangeFlg,
	bne	.L2738	@,
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [ip, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r0, #1	@ <variable>.s32WaitFsFlag,
	beq	.L2738	@,
.L2733:
	movw	r2, #17620	@ tmp318,
	ldr	r3, [r6, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	ip, [r4, r2]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	ip, r3	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	bne	.L2740	@,
	ldrb	r0, [r6, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	r0, #0	@ <variable>.is_refreshed,
	beq	.L2741	@,
.L2740:
	add	sl, r4, #17408	@, pH264Ctx,
	mov	lr, #0	@ tmp322,
	mov	r1, r6	@, pPPS
	add	r0, sl, #188	@,,
	strb	lr, [r6, #20]	@ tmp322, <variable>.is_refreshed
	mov	r2, #2208	@,
	bl	memmove	@
.L2741:
	movw	r2, #19828	@ tmp327,
	movw	ip, #16500	@ tmp326,
	ldr	r3, [r4, r2]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	movw	r1, #59152	@ tmp333,
	ldr	sl, [r4, ip]	@ D.42572, <variable>.CurrSPS.log2_max_frame_num_minus4
	cmp	r3, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	ldr	r6, [r4, r1]	@ <variable>.OldDecMode, <variable>.OldDecMode
	movwne	ip, #57048	@ tmp331,
	movne	r3, #0	@ tmp330,
	strne	r3, [r4, ip]	@ tmp330, <variable>.PrevPic.frame_num
	movwne	ip, #20704	@ tmp329,
	strne	r3, [r4, ip]	@ tmp330, <variable>.CurrSlice.prev_frame_num
	cmp	r6, #2	@ <variable>.OldDecMode,
	beq	.L2743	@,
	ldr	r7, [r4, #0]	@ temp.8551, <variable>.pstExtraData
	ldr	r3, [r7, #12]	@ D.42582, <variable>.s32DecOrderOutput
	cmp	r3, #2	@ D.42582,
	beq	.L2743	@,
	cmp	r3, #3	@ D.42582,
	beq	.L2743	@,
	movw	r8, #20708	@ tmp337,
	movw	r0, #20704	@ tmp338,
	ldr	r6, [r4, r8]	@ prephitmp.8634, <variable>.CurrSlice.frame_num
	ldr	r8, [r4, r0]	@ prephitmp.8463, <variable>.CurrSlice.prev_frame_num
	cmp	r6, r8	@ prephitmp.8634, prephitmp.8463
	beq	.L2745	@,
	mov	lr, #1	@ tmp340,
	add	sl, sl, #4	@ tmp339, D.42572,
	mov	sl, lr, asl sl	@ MaxFrameNum, tmp340,
	add	r0, r8, lr	@, prephitmp.8463,
	mov	r1, sl	@, MaxFrameNum
	bl	__aeabi_uidivmod	@
	cmp	r6, r1	@ prephitmp.8634,
	beq	.L2745	@,
	ldr	r1, [r7, #688]	@ <variable>.s32MoreGapEnable, <variable>.s32MoreGapEnable
	cmp	r1, #0	@ <variable>.s32MoreGapEnable,
	bne	.L2747	@,
	ldr	ip, [r7, #716]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	ip, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L2805	@,
.L2748:
	cmp	r6, r8	@ prephitmp.8634, prephitmp.8463
	bls	.L2749	@,
	movw	ip, #17576	@ tmp354,
	rsb	r8, r8, r6	@ tmp355, prephitmp.8463, prephitmp.8634
	ldr	r1, [r4, ip]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	cmp	r1, r8	@ <variable>.CurrSPS.dpb_size_plus1, tmp355
	bcs	.L2747	@,
	movw	r2, #20688	@ tmp357,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L2806	@,
	cmp	r6, #0	@ prephitmp.8634,
	movw	ip, #20704	@ tmp370,
	subeq	r6, sl, #1	@ iftmp.655, MaxFrameNum,
	subne	r6, r6, #1	@ iftmp.655, prephitmp.8634,
	mov	r0, r4	@, pH264Ctx
	str	r6, [r4, ip]	@ iftmp.655, <variable>.CurrSlice.prev_frame_num
	bl	FlushDPB	@
	subs	r3, r0, #0	@ ret.8555,
	beq	.L2747	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC94	@,
	movw	r2, #6317	@,
	movt	r1, #:upper16:.LC94	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2734:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC132	@,
	movt	r1, #:upper16:.LC132	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	GetBackPicFromVOQueue	@
	b	.L2736	@
.L2758:
	mov	r0, r4	@, pH264Ctx
	bl	DecGap	@
	cmp	r0, #0	@,
	bne	.L2763	@,
.L2743:
	movw	r2, #20708	@ tmp427,
	ldr	r6, [r4, r2]	@ prephitmp.8634, <variable>.CurrSlice.frame_num
.L2745:
	movw	r0, #20720	@ tmp428,
	movw	lr, #19868	@ tmp432,
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	mov	r0, r4	@, pH264Ctx
	cmp	r1, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movwne	r1, #20704	@ tmp430,
	strne	r6, [r4, r1]	@ prephitmp.8634, <variable>.CurrSlice.prev_frame_num
	movwne	r1, #20708	@ tmp431,
	ldrne	r6, [r4, r1]	@ prephitmp.8634, <variable>.CurrSlice.frame_num
	str	r6, [r4, lr]	@ prephitmp.8634, <variable>.CurrPOC.frame_num
	bl	DecPOC	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, #0	@,
	bl	AllocFrameStore	@
	cmp	r0, #0	@ ret.8576
	bne	.L2807	@,
	movw	r2, #20689	@ tmp473,
	movw	r1, #20691	@ tmp441,
	ldrb	r8, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r3, #20708	@ tmp445,
	ldrb	r9, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r7, #20720	@ tmp448,
	cmp	r8, #0	@ <variable>.CurrSlice.field_pic_flag,
	ldr	sl, [r4, r3]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r8, [r4, r7]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r6, #19848	@ tmp451,
	movw	lr, #19844	@ tmp454,
	movw	ip, #19836	@ tmp457,
	movw	r3, #19840	@ tmp460,
	ldr	r7, [r4, r6]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	ldr	r6, [r4, lr]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPOC.framepoc
	movw	r1, #56344	@ tmp444,
	ldr	lr, [r4, ip]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPOC.bottompoc
	movw	r3, #55798	@ tmp440,
	strb	r9, [r4, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrPic.nal_unit_type
	movw	r9, #56352	@ tmp447,
	str	sl, [r4, r1]	@ <variable>.CurrSlice.frame_num, <variable>.CurrPic.frame_num
	movw	sl, #56360	@ tmp453,
	str	r8, [r4, r9]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movw	r1, #56364	@ tmp456,
	movw	r9, #56368	@ tmp459,
	str	r6, [r4, sl]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPic.framepoc
	str	lr, [r4, r1]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPic.toppoc
	movw	r8, #56356	@ tmp450,
	str	ip, [r4, r9]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPic.bottompoc
	movw	r6, #55796	@ tmp468,
	movw	r1, #55794	@ tmp462,
	movw	r9, #13614	@ tmp478,
	str	r7, [r4, r8]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPic.thispoc
	movw	ip, #17556	@ tmp481,
	strb	r0, [r4, r6]	@ ret.8576, <variable>.CurrPic.is_long_term
	movw	r8, #55799	@ tmp434,
	strb	r0, [r4, r1]	@ ret.8576, <variable>.CurrPic.non_existing
	movw	r1, #55797	@ tmp465,
	ldrb	r6, [r4, r9]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movw	r7, #56400	@ tmp471,
	strb	r0, [r4, r1]	@ ret.8576, <variable>.CurrPic.is_short_term
	mvn	lr, #0	@ tmp472,
	strb	r0, [r4, r8]	@ ret.8576, <variable>.CurrPic.mode_skip_flag
	mov	r3, #1	@ tmp438,
	ldr	r0, [r4, ip]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	sl, #55792	@ tmp437,
	str	lr, [r4, r7]	@ tmp472, <variable>.CurrPic.stream_base_addr
	rsb	lr, r6, #2	@ tmp480, <variable>.CurrSPS.frame_mbs_only_flag,
	moveq	r1, r3	@ prephitmp.8468, tmp438
	strneb	r3, [r4, r2]	@ tmp438, <variable>.CurrSlice.field_pic_flag
	mla	r9, r0, lr, lr	@ tmp484, <variable>.CurrSPS.pic_height_in_map_units_minus1, tmp480, tmp480
	strb	r3, [r4, sl]	@ tmp438, <variable>.CurrPic.state
	movne	r1, #2	@ prephitmp.8468,
	movw	r7, #20689	@ tmp506,
	movw	r8, #17596	@ tmp503,
	movw	r6, #56396	@ tmp500,
	mov	r0, r9	@, tmp484
	bl	__aeabi_uidiv	@
	movw	r2, #17552	@ tmp497,
	ldr	r3, [r4, r2]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	movw	r1, #56392	@ tmp489,
	ldrb	sl, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r2, #55800	@ tmp502,
	add	r7, r3, #1	@ temp.8594, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	ldrb	ip, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	cmp	sl, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r9, [r4, r1]	@ tmp484, <variable>.CurrPic.frame_height_in_mb
	movw	r8, #56388	@ tmp488,
	movw	r9, #56384	@ tmp499,
	strb	ip, [r4, r2]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPic.entropy_coding_mode_flag
	str	r7, [r4, r9]	@ temp.8594, <variable>.CurrPic.pic_width_in_mb
	mul	sl, r7, r0	@ tmp501, temp.8594, tmp487
	str	r0, [r4, r8]	@ tmp487, <variable>.CurrPic.pic_height_in_mb
	str	sl, [r4, r6]	@ tmp501, <variable>.CurrPic.pic_mbs
	bne	.L2768	@,
	movw	r0, #13615	@ tmp508,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSPS.mb_adaptive_frame_field_flag, <variable>.CurrSPS.mb_adaptive_frame_field_flag
	cmp	r3, #0	@ <variable>.CurrSPS.mb_adaptive_frame_field_flag,
	movne	r3, #1	@ prephitmp.8470,
	beq	.L2768	@,
.L2769:
	movw	sl, #20720	@ tmp513,
	movw	r2, #26388	@ tmp519,
	ldr	lr, [r4, sl]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	ip, #55801	@ tmp510,
	ldr	r1, [r4, r2]	@ <variable>.CurrMarkIdx, <variable>.CurrMarkIdx
	movw	r8, #59140	@ tmp512,
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	strb	r3, [r4, ip]	@ prephitmp.8470, <variable>.CurrPic.MbaffFrameFlag
	str	r3, [r4, r8]	@ prephitmp.8470, <variable>.DecPicPara.MbaffFrameFlag
	movw	r0, #2004	@ tmp522,
	movwne	r3, #20708	@ tmp516,
	movw	sl, #56340	@ tmp518,
	ldrne	ip, [r4, r3]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movwne	r3, #20704	@ tmp515,
	mla	r7, r0, r1, r4	@ tmp525, tmp522, <variable>.CurrMarkIdx, pH264Ctx
	movw	r2, #55816	@ tmp527,
	strne	ip, [r4, r3]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
	movw	lr, #55824	@,
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	ip, #55832	@ tmp533,
	add	r6, r7, #22272	@ tmp526, tmp525,
	mov	r0, #29	@,
	add	r9, r6, #108	@ tmp526, tmp526,
	str	r9, [r4, sl]	@ tmp526, <variable>.CurrPic.pMarkPara
	ldrd	r8, [r3, #56]	@, <variable>.pstExtraData,
	movw	r1, #:lower16:.LC138	@,
	movt	r1, #:upper16:.LC138	@,
	add	r7, r4, #55808	@ tmp679, pH264Ctx,
	movw	sl, #55972	@ tmp560,
	movw	r6, #55968	@ tmp576,
	strd	r8, [r4, r2]	@, pH264Ctx, tmp527
	ldrd	r8, [r3, #72]	@, <variable>.pstExtraData,
	strd	r8, [r4, lr]	@, pH264Ctx,
	ldrd	r8, [r3, #88]	@, <variable>.pstExtraData,
	strd	r8, [r4, ip]	@, pH264Ctx, tmp533
	movw	ip, #55876	@ tmp536,
	ldr	lr, [r3, #104]	@ <variable>.DispEnableFlag, <variable>.DispEnableFlag
	mvn	r9, #0	@,
	mvn	r8, #0	@,
	str	lr, [r4, ip]	@ <variable>.DispEnableFlag, <variable>.CurrPic.fs_image.DispEnableFlag
	movw	ip, #55880	@ tmp539,
	ldr	lr, [r3, #108]	@ <variable>.DispFrameDistance, <variable>.DispFrameDistance
	str	lr, [r4, ip]	@ <variable>.DispFrameDistance, <variable>.CurrPic.fs_image.DispFrameDistance
	movw	ip, #55884	@ tmp542,
	ldr	lr, [r3, #112]	@ <variable>.DistanceBeforeFirstFrame, <variable>.DistanceBeforeFirstFrame
	str	lr, [r4, ip]	@ <variable>.DistanceBeforeFirstFrame, <variable>.CurrPic.fs_image.DistanceBeforeFirstFrame
	movw	ip, #55888	@ tmp545,
	ldr	lr, [r3, #128]	@ <variable>.GopNum, <variable>.GopNum
	str	lr, [r4, ip]	@ <variable>.GopNum, <variable>.CurrPic.fs_image.GopNum
	mov	ip, #56064	@ tmp548,
	ldr	lr, [r5, #752]	@ <variable>.bit_depth_luma, <variable>.bit_depth_luma
	str	lr, [r4, ip]	@ <variable>.bit_depth_luma, <variable>.CurrPic.fs_image.bit_depth_luma
	movw	ip, #56068	@ tmp550,
	ldr	lr, [r5, #756]	@ <variable>.bit_depth_chroma, <variable>.bit_depth_chroma
	str	lr, [r4, ip]	@ <variable>.bit_depth_chroma, <variable>.CurrPic.fs_image.bit_depth_chroma
	strd	r8, [r3, #56]	@, <variable>.pstExtraData,
	movw	r9, #55824	@,
	ldrd	r2, [r2, r4]	@, tmp527, pH264Ctx
	bl	dprint_vfmw	@
	ldrd	r2, [r4, r9]	@, pH264Ctx,
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC139	@,
	movt	r1, #:upper16:.LC139	@,
	bl	dprint_vfmw	@
	movw	r3, #13614	@ tmp566,
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movw	r0, #17556	@ tmp569,
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	r2, #13652	@ tmp585,
	rsb	r3, r1, #2	@ tmp568, <variable>.CurrSPS.frame_mbs_only_flag,
	ldr	r2, [r4, r2]	@ <variable>.CurrSPS.vui_seq_parameters.video_format, <variable>.CurrSPS.vui_seq_parameters.video_format
	movw	r0, #14344	@ tmp579,
	movw	r1, #17552	@ tmp561,
	mla	r3, ip, r3, r3	@ tmp572, <variable>.CurrSPS.pic_height_in_map_units_minus1, tmp568, tmp568
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.chroma_format_idc, <variable>.CurrSPS.chroma_format_idc
	ldr	r0, [r4, r1]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	movw	r1, #13648	@ tmp574,
	ldr	r1, [r4, r1]	@ <variable>.CurrSPS.vui_seq_parameters.aspect_ratio, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio
	subs	ip, ip, #1	@ tmp583, <variable>.CurrSPS.chroma_format_idc,
	movne	ip, #1	@ tmp583
	mov	r2, r2, asl #5	@ tmp586, <variable>.CurrSPS.vui_seq_parameters.video_format,
	add	r0, r0, #1	@ tmp562, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	and	r1, r1, #7	@ dar, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio,
	and	r2, r2, #255	@ tmp588, tmp586,
	orr	r2, r2, ip, asl #2	@, tmp589, tmp588, tmp583,
	movw	ip, #55976	@,
	mov	r0, r0, asl #4	@ tmp564, tmp562,
	str	r0, [r4, sl]	@ tmp564, <variable>.CurrPic.fs_image.image_width
	mov	r0, r3, asl #4	@ tmp573, tmp572,
	orr	r3, r2, r1, asl #14	@, tmp591, tmp589, dar,
	str	r0, [r4, ip]	@ tmp573, <variable>.CurrPic.fs_image.image_height
	mov	r0, r7	@, tmp679
	str	r3, [r4, r6]	@ tmp591, <variable>.CurrPic.fs_image.format
	bl	SetAspectRatio	@
	movw	r1, #55795	@ tmp597,
	movw	r3, #56336	@ tmp600,
	ldrb	r2, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r0, #59184	@ tmp594,
	ldr	r1, [r4, r3]	@ temp.8616, <variable>.CurrPic.frame_store
	ldr	ip, [r4, r0]	@ <variable>.SeqCnt, <variable>.SeqCnt
	subs	r2, r2, #0	@ tmp599, <variable>.CurrPic.structure,
	movne	r2, #1	@ tmp599
	movw	r0, #55956	@,
	cmp	r1, #0	@ temp.8616,
	str	r2, [r4, r0]	@ tmp599, <variable>.CurrPic.fs_image.is_fld_save
	movw	r0, #56012	@ tmp593,
	str	ip, [r4, r0]	@ <variable>.SeqCnt, <variable>.CurrPic.fs_image.seq_cnt
	beq	.L2808	@,
	ldr	r8, [r4, r6]	@ <variable>.CurrPic.fs_image.format, <variable>.CurrPic.fs_image.format
	movw	lr, #55872	@ tmp612,
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.fs_image.u32AspectHeight, <variable>.CurrPic.fs_image.u32AspectHeight
	movw	r0, #55868	@ tmp616,
	ldr	r0, [r4, r0]	@ <variable>.CurrPic.fs_image.u32AspectWidth, <variable>.CurrPic.fs_image.u32AspectWidth
	movw	r6, #55976	@,
	str	r8, [r1, #168]	@ <variable>.CurrPic.fs_image.format, <variable>.fs_image.format
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r8, [r4, sl]	@ <variable>.CurrPic.fs_image.image_width, <variable>.CurrPic.fs_image.image_width
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.fs_image.image_height, <variable>.CurrPic.fs_image.image_height
	movw	r6, #59224	@ tmp638,
	str	r2, [lr, #156]	@ tmp599, <variable>.fs_image.is_fld_save
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	ip, [lr, #72]	@ <variable>.CurrPic.fs_image.u32AspectHeight, <variable>.fs_image.u32AspectHeight
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [ip, #68]	@ <variable>.CurrPic.fs_image.u32AspectWidth, <variable>.fs_image.u32AspectWidth
	movw	ip, #55988	@ tmp628,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r8, [r2, #172]	@ <variable>.CurrPic.fs_image.image_width, <variable>.fs_image.image_width
	ldr	r0, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r1, [r0, #176]	@ <variable>.CurrPic.fs_image.image_height, <variable>.fs_image.image_height
	movw	r1, #55992	@ tmp631,
	ldr	lr, [r5, #3992]	@ D.42749, <variable>.disp_center_x
	ldr	sl, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	lr, [sl, #188]	@ D.42749, <variable>.fs_image.disp_center_x
	str	lr, [r4, ip]	@ D.42749, <variable>.CurrPic.fs_image.disp_center_x
	movw	ip, #55980	@ tmp634,
	ldr	r0, [r5, #3996]	@ D.42751, <variable>.disp_center_y
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r2, #192]	@ D.42751, <variable>.fs_image.disp_center_y
	str	r0, [r4, r1]	@ D.42751, <variable>.CurrPic.fs_image.disp_center_y
	movw	r1, #55984	@ tmp637,
	ldr	lr, [r5, #3984]	@ D.42753, <variable>.disp_width
	ldr	sl, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	lr, [sl, #180]	@ D.42753, <variable>.fs_image.disp_width
	str	lr, [r4, ip]	@ D.42753, <variable>.CurrPic.fs_image.disp_width
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r5, #3988]	@ D.42755, <variable>.disp_height
	str	r0, [r2, #184]	@ D.42755, <variable>.fs_image.disp_height
	ldr	r5, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r4, r1]	@ D.42755, <variable>.CurrPic.fs_image.disp_height
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r5, #656]	@, <variable>.logic_fs_id
	bl	FSP_GetDispPhyFs	@
	subs	r2, r0, #0	@ pstDecFs,
	beq	.L2772	@,
	movw	r8, #55956	@,
	mov	r1, #0	@,
	ldr	r3, [r4, r8]	@ <variable>.CurrPic.fs_image.is_fld_save, <variable>.CurrPic.fs_image.is_fld_save
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	subs	r3, r3, r1	@, <variable>.CurrPic.fs_image.is_fld_save,
	movne	r3, #1	@
	ldr	r2, [r2, #4]	@, <variable>.PhyFsID
	bl	FSP_SetStoreType	@
.L2772:
	movw	r2, #57732	@ tmp650,
	add	r5, r4, #57600	@ ivtmp.8503, pH264Ctx,
	ldr	sl, [r4, r2]	@ prephitmp.8632, <variable>.TotalUsrDatNum
	add	r1, r7, #228	@ D.55701, tmp679,
	add	r7, r7, #212	@ ivtmp.8512, tmp679,
	add	r0, r5, #140	@ ivtmp.8503, ivtmp.8503,
	movw	r6, #57736	@ tmp683,
	mov	r5, #0	@ tmp685,
.L2777:
	ldr	ip, [r7, #0]	@ tmp653, <variable>.CurrPic.fs_image.p_usrdat
	cmp	ip, #0	@ tmp653,
	ldrne	sl, [r4, r2]	@ prephitmp.8632, <variable>.TotalUsrDatNum
	beq	.L2809	@,
.L2774:
	add	r7, r7, #4	@ ivtmp.8512, ivtmp.8512,
	cmp	r7, r1	@ ivtmp.8512, D.55701
	bne	.L2777	@,
	cmp	sl, #0	@ prephitmp.8632,
	beq	.L2778	@,
	ble	.L2778	@,
	add	r2, sl, #14400	@ tmp667, prephitmp.8632,
	sub	r7, sl, #1	@ tmp688, prephitmp.8632,
	add	r1, r2, #34	@ tmp667, tmp667,
	movw	r8, #59224	@ tmp681,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r6, r7	@ uidxpic, tmp688
	add	r5, r4, r1, asl #2	@, ivtmp.8500, pH264Ctx, tmp667,
	and	sl, r7, #1	@ tmp689, tmp688,
	mov	r7, #0	@ tmp682,
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, r7	@ uidxpic,
	str	r7, [r5, #-4]!	@ tmp682, <variable>.pUsrDatArray
	ble	.L2778	@,
	cmp	sl, #0	@ tmp689,
	beq	.L2779	@,
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	r6, r6, #1	@ uidxpic, uidxpic,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r7, [r5, #-4]!	@ tmp682, <variable>.pUsrDatArray
	ble	.L2778	@,
.L2779:
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	r6, r6, #1	@ tmp690, uidxpic,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	sub	r6, r6, #1	@ uidxpic, tmp690,
	bl	FreeUsdByDec	@
	str	r7, [r5, #-4]!	@ tmp682, <variable>.pUsrDatArray
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r7, [r5, #-4]!	@ tmp682, <variable>.pUsrDatArray
	bgt	.L2779	@,
.L2778:
	movw	r3, #57732	@ tmp674,
	movw	ip, #56372	@ tmp676,
	mov	r5, #0	@ tmp675,
	mov	r0, r4	@, pH264Ctx
	str	r5, [r4, r3]	@ tmp675, <variable>.TotalUsrDatNum
	str	r5, [r4, ip]	@ tmp675, <variable>.CurrPic.pic_type
	bl	CalcPicNum	@
	mov	r0, r5	@ D.42493, tmp675
.L2725:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2768:
	mov	r3, #0	@ prephitmp.8470,
	b	.L2769	@
.L2809:
	cmp	sl, #0	@ prephitmp.8632,
	beq	.L2774	@,
	ldr	lr, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	sl, [r4, r6]	@ <variable>.pUsrDatArray, <variable>.pUsrDatArray
	subs	lr, lr, #1	@ D.42774, <variable>.TotalUsrDatNum,
	str	sl, [r7, #0]	@ <variable>.pUsrDatArray, <variable>.CurrPic.fs_image.p_usrdat
	beq	.L2775	@,
	ldr	r8, [r0, #0]	@ tmp660, <variable>.pUsrDatArray
	mov	ip, #1	@ uidxsei,
	cmp	lr, ip	@ D.42774, uidxsei
	sub	r3, lr, #1	@ tmp692, D.42774,
	and	sl, r3, ip	@ tmp694, tmp692,
	add	r3, r0, #4	@ ivtmp.8503, ivtmp.8503,
	str	r8, [r0, #-4]	@ tmp660, <variable>.pUsrDatArray
	bls	.L2775	@,
	cmp	sl, #0	@ tmp694,
	beq	.L2776	@,
	ldr	r8, [r0, #4]	@ tmp719, <variable>.pUsrDatArray
	mov	ip, #2	@ uidxsei,
	cmp	lr, ip	@ D.42774, uidxsei
	str	r8, [r3, #-4]	@ tmp719, <variable>.pUsrDatArray
	add	r3, r3, #4	@ ivtmp.8503, ivtmp.8503,
	bls	.L2775	@,
.L2776:
	ldr	sl, [r3, #0]	@ tmp700, <variable>.pUsrDatArray
	add	ip, ip, #2	@ uidxsei, uidxsei,
	cmp	lr, ip	@ D.42774, uidxsei
	mov	r8, r3	@ tmp696, ivtmp.8503
	str	sl, [r3, #-4]	@ tmp700, <variable>.pUsrDatArray
	ldr	sl, [r3, #4]	@ tmp702, <variable>.pUsrDatArray
	str	sl, [r8], #4	@ tmp702, <variable>.pUsrDatArray
	add	r3, r8, #4	@ ivtmp.8503, tmp696,
	bhi	.L2776	@,
.L2775:
	add	lr, lr, #14400	@ tmp661, D.42774,
	ldr	r3, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	ip, lr, #34	@ tmp661, tmp661,
	sub	sl, r3, #1	@ prephitmp.8632, <variable>.TotalUsrDatNum,
	str	sl, [r4, r2]	@ prephitmp.8632, <variable>.TotalUsrDatNum
	str	r5, [r4, ip, asl #2]	@ tmp685, <variable>.pUsrDatArray
	b	.L2774	@
.L2801:
	ldrb	lr, [r5, #24]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	lr, #0	@ <variable>.is_refreshed,
	bne	.L2720	@,
	ldr	r2, [fp, #-48]	@ dpb_changed, dpb_changed
	cmp	r2, #0	@ dpb_changed,
	bne	.L2810	@,
.L2722:
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	ip, #1	@ <variable>.s32WaitFsFlag,
	bne	.L2733	@,
	movw	r2, #59184	@ tmp281,
	cmp	r7, #0	@ ReRangeFlg,
	ldr	r1, [r4, r2]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	lr, r1, #1	@ tmp284, <variable>.SeqCnt,
	str	lr, [r4, r2]	@ tmp284, <variable>.SeqCnt
	beq	.L2811	@,
	b	.L2734	@
.L2738:
	movw	r3, #17556	@ tmp298,
	movw	r8, #13614	@ tmp302,
	ldr	r1, [r4, r3]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	r7, #17552	@ tmp295,
	ldrb	lr, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movw	r2, #17576	@ tmp293,
	add	ip, r1, #1	@ tmp299, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	ldr	r0, [r4, r7]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	rsb	r8, lr, #2	@ tmp304, <variable>.CurrSPS.frame_mbs_only_flag,
	ldr	lr, [r4, r2]	@ D.42512, <variable>.CurrSPS.dpb_size_plus1
	mov	r3, ip, asl #4	@ tmp301, tmp299,
	add	r7, r0, #1	@ tmp296, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	add	r2, r4, #57600	@, pH264Ctx,
	movw	r1, #57708	@ tmp294,
	mul	r8, r8, r3	@ ImageHeight.8542, tmp304, tmp301
	mov	r7, r7, asl #4	@ ImageWidth.8534, tmp296,
	str	lr, [r4, r1]	@ D.42512, <variable>.TotalPmvNum
	add	r3, r2, #104	@,,
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, ImageWidth.8534
	str	lr, [sp, #0]	@ D.42512,
	mov	r2, r8	@, ImageHeight.8542
	bl	H264_ArrangeVahbMem	@
	cmp	r0, #1	@,
	bne	.L2798	@,
.L2739:
	movw	r1, #13564	@ tmp314,
	mov	sl, #13568	@ tmp316,
	mov	r7, r7, lsr #4	@ tmp315, ImageWidth.8534,
	mov	r8, r8, lsr #4	@ tmp317, ImageHeight.8542,
	str	r7, [r4, r1]	@ tmp315, <variable>.CurWidthInMb
	str	r8, [r4, sl]	@ tmp317, <variable>.CurHeightInMb
	b	.L2733	@
.L2802:
	movw	r3, #59184	@ tmp236,
	cmp	r7, #0	@ ReRangeFlg,
	ldr	ip, [r4, r3]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	lr, ip, #1	@ tmp239, <variable>.SeqCnt,
	str	lr, [r4, r3]	@ tmp239, <variable>.SeqCnt
	beq	.L2724	@,
	mov	r0, r4	@, pH264Ctx
	bl	FlushDPB	@
	subs	r3, r0, #0	@ ret,
	beq	.L2724	@,
	mov	r0, r8	@, <variable>.stChanOption.s32ReRangeEn
	movw	r1, #:lower16:.LC94	@,
	movw	r2, #6112	@,
	movt	r1, #:upper16:.LC94	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2724:
	mov	r0, r4	@, pH264Ctx
	bl	InitDPB	@
	subs	r3, r0, #0	@ ret.8517,
	bne	.L2812	@,
	movw	lr, #17556	@ tmp247,
	movw	r1, #17552	@ tmp244,
	ldr	r8, [r4, lr]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	ip, #13614	@ tmp251,
	ldr	r2, [r4, r1]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	cmp	r7, #0	@ ReRangeFlg,
	add	r3, r8, #1	@ tmp248, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	add	r7, r2, #1	@ tmp245, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	mov	r1, r3, asl #4	@ tmp250, tmp248,
	rsb	r8, lr, #2	@ tmp253, <variable>.CurrSPS.frame_mbs_only_flag,
	mov	r7, r7, asl #4	@ ImageWidth, tmp245,
	mul	r8, r8, r1	@ ImageHeight, tmp253, tmp250
	beq	.L2739	@,
	movw	r2, #13564	@ tmp254,
	ldr	r3, [r4, r2]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	cmp	r3, #0	@ <variable>.CurWidthInMb,
	bne	.L2739	@,
	movw	r1, #17576	@ tmp256,
	ldr	r3, [r4, #0]	@ temp.8518, <variable>.pstExtraData
	ldr	ip, [r4, r1]	@ prephitmp.8480, <variable>.CurrSPS.dpb_size_plus1
	movw	lr, #57708	@ tmp257,
	str	ip, [r4, lr]	@ prephitmp.8480, <variable>.TotalPmvNum
	ldr	r1, [r3, #744]	@ prephitmp.8476, <variable>.stChanOption.s32MaxWidth
	cmp	r7, r1	@ ImageWidth, prephitmp.8476
	bhi	.L2728	@,
	ldr	r2, [r3, #748]	@ prephitmp.8635, <variable>.stChanOption.s32MaxHeight
	cmp	r8, r2	@ ImageHeight, prephitmp.8635
	bhi	.L2728	@,
	movw	sl, #26632	@ tmp259,
	ldr	r9, [r3, #768]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	sl, [r4, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r9, sl	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.DPB.size
	bcc	.L2813	@,
	ldr	r0, [r3, #776]	@ <variable>.stChanOption.s32SupportBFrame, <variable>.stChanOption.s32SupportBFrame
	cmp	r0, #0	@ <variable>.stChanOption.s32SupportBFrame,
	add	r0, r4, #57600	@, pH264Ctx,
	moveq	ip, #1	@ tmp265,
	streq	ip, [r4, lr]	@ tmp265, <variable>.TotalPmvNum
	ldreq	r2, [r3, #748]	@ prephitmp.8635, <variable>.stChanOption.s32MaxHeight
	ldreq	r1, [r3, #744]	@ prephitmp.8476, <variable>.stChanOption.s32MaxWidth
	add	r3, r0, #104	@,,
	mov	r0, r4	@, pH264Ctx
	str	ip, [sp, #0]	@ prephitmp.8480,
	bl	H264_ArrangeVahbMem	@
	cmp	r0, #1	@,
	beq	.L2739	@,
.L2798:
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r2, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	ip, #1	@ <variable>.s32WaitFsFlag,
	mvneq	r0, #1	@ D.42493,
	beq	.L2725	@,
	movw	lr, #13564	@ tmp309,
	add	r0, lr, #4	@ tmp311, tmp311,
	mov	r5, #0	@ tmp310,
	movw	r1, #:lower16:.LC131	@,
	str	r5, [r4, lr]	@ tmp310, <variable>.CurWidthInMb
	movt	r1, #:upper16:.LC131	@,
	str	r5, [r4, r0]	@ tmp310, <variable>.CurHeightInMb
	mov	r0, r5	@, tmp310
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, tmp310
	bl	ClearAll	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2805:
	ldr	r3, [r7, #712]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	r3, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L2748	@,
	ldr	r2, [r7, #720]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r2, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L2748	@,
	ldr	lr, [r7, #692]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r0, lr, #1024	@ tmp352, <variable>.s32FastForwardBackwardSpeed,
	cmp	r0, #2048	@ tmp352,
	bls	.L2748	@,
.L2747:
	movw	r3, #13613	@ tmp393,
	ldrb	r7, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag, <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag
	cmp	r7, #0	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag,
	bne	.L2758	@,
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC134	@,
	movt	r1, #:upper16:.LC134	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r6, [r2, #692]	@ D.42648, <variable>.s32FastForwardBackwardSpeed
	cmp	r6, #0	@ D.42648,
	cmpne	r6, #1024	@, D.42648,
	bne	.L2743	@,
	movw	r8, #20704	@ tmp406,
	mov	r1, sl	@, MaxFrameNum
	ldr	lr, [r4, r8]	@ <variable>.CurrSlice.prev_frame_num, <variable>.CurrSlice.prev_frame_num
	movw	r8, #20708	@ tmp405,
	ldr	r6, [r4, r8]	@ prephitmp.8634, <variable>.CurrSlice.frame_num
	add	r0, lr, #1	@, <variable>.CurrSlice.prev_frame_num,
	bl	__aeabi_uidivmod	@
	cmp	r6, r1	@ prephitmp.8634,
	bcs	.L2760	@,
	movw	r0, #20688	@ tmp415,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L2745	@,
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	movw	r3, #:lower16:g_apple_airplay_mirrorinig_flag	@ tmp417,
	movt	r3, #:upper16:g_apple_airplay_mirrorinig_flag	@ tmp417,
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ g_apple_airplay_mirrorinig_flag, g_apple_airplay_mirrorinig_flag
	cmp	ip, #0	@ g_apple_airplay_mirrorinig_flag,
	bne	.L2761	@,
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
.L2761:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC135	@,
	movw	r2, #6369	@,
	movt	r1, #:upper16:.LC135	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2800:
	movw	ip, #59224	@ tmp207,
	ldr	r1, [r3, #656]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	mov	r2, #1	@,
	bl	FSP_ClearLogicFs	@
	ldr	r0, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r8, [r0, #1]	@ <variable>.is_used, <variable>.is_used
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r8, [r3, #4]	@ <variable>.is_used, <variable>.is_in_dpb
	b	.L2719	@
.L2749:
	movw	r2, #17576	@ tmp373,
	rsb	r0, r8, r6	@ tmp374, prephitmp.8463, prephitmp.8634
	ldr	lr, [r4, r2]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	add	r3, r0, sl	@ tmp375, tmp374, MaxFrameNum
	cmp	lr, r3	@ <variable>.CurrSPS.dpb_size_plus1, tmp375
	bcs	.L2747	@,
	movw	ip, #20688	@ tmp377,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L2814	@,
	cmp	r6, #0	@ prephitmp.8634,
	movw	ip, #20704	@ tmp390,
	subeq	r6, sl, #1	@ iftmp.657, MaxFrameNum,
	subne	r6, r6, #1	@ iftmp.657, prephitmp.8634,
	mov	r0, r4	@, pH264Ctx
	str	r6, [r4, ip]	@ iftmp.657, <variable>.CurrSlice.prev_frame_num
	bl	FlushDPB	@
	subs	r3, r0, #0	@ ret.8565,
	beq	.L2747	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC94	@,
	movw	r2, #6345	@,
	movt	r1, #:upper16:.LC94	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2718:
	movw	r1, #:lower16:.LC127	@,
	ldr	r2, .L2815	@,
	movt	r1, #:upper16:.LC127	@,
	movw	r3, #6081	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L2719	@
.L2763:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC136	@,
	movw	r2, #6392	@,
	movt	r1, #:upper16:.LC136	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2807:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC137	@,
	movw	r2, #6416	@,
	movt	r1, #:upper16:.LC137	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2760:
	mov	r0, r4	@, pH264Ctx
	bl	DecGap	@
	cmp	r0, #0	@,
	ldreq	r6, [r4, r8]	@ prephitmp.8634, <variable>.CurrSlice.frame_num
	beq	.L2745	@,
	mov	r0, r7	@, <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag
	movw	r1, #:lower16:.LC136	@,
	movw	r2, #6379	@,
	movt	r1, #:upper16:.LC136	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2804:
	mov	r3, r0	@, ret.8528
	movw	r1, #:lower16:.LC128	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC128	@,
	movw	r2, #6229	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2808:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC140	@,
	ldr	r2, .L2815	@,
	movt	r1, #:upper16:.LC140	@,
	movw	r3, #6501	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2803:
	mov	r0, r7	@, ReRangeFlg
	movw	r1, #:lower16:.LC94	@,
	movw	r2, #6221	@,
	movt	r1, #:upper16:.LC94	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2812:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC128	@,
	movw	r2, #6120	@,
	movt	r1, #:upper16:.LC128	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2814:
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	movw	r0, #:lower16:g_apple_airplay_mirrorinig_flag	@ tmp379,
	movt	r0, #:upper16:g_apple_airplay_mirrorinig_flag	@ tmp379,
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ g_apple_airplay_mirrorinig_flag, g_apple_airplay_mirrorinig_flag
	cmp	r3, #0	@ g_apple_airplay_mirrorinig_flag,
	bne	.L2755	@,
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
.L2755:
	movw	r0, #20708	@ tmp383,
	movw	r1, #17576	@ tmp388,
	movw	r2, #20704	@ tmp384,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r3, [r4, r2]	@ <variable>.CurrSlice.prev_frame_num, <variable>.CurrSlice.prev_frame_num
	mov	r0, #0	@,
	ldr	ip, [r4, r1]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movw	r2, #6335	@,
	movw	r1, #:lower16:.LC133	@,
	rsb	r3, r3, lr	@, <variable>.CurrSlice.prev_frame_num, <variable>.CurrSlice.frame_num
	movt	r1, #:upper16:.LC133	@,
	str	ip, [sp, #0]	@ <variable>.CurrSPS.dpb_size_plus1,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2806:
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	movw	r1, #:lower16:g_apple_airplay_mirrorinig_flag	@ tmp359,
	movt	r1, #:upper16:g_apple_airplay_mirrorinig_flag	@ tmp359,
	ldrb	r0, [r1, #0]	@ zero_extendqisi2	@ g_apple_airplay_mirrorinig_flag, g_apple_airplay_mirrorinig_flag
	cmp	r0, #0	@ g_apple_airplay_mirrorinig_flag,
	bne	.L2751	@,
	mov	r0, r4	@, pH264Ctx
	bl	ClearDPB	@
.L2751:
	movw	r1, #20708	@ tmp363,
	movw	r0, #17576	@ tmp368,
	movw	r2, #20704	@ tmp364,
	ldr	lr, [r4, r1]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r3, [r4, r2]	@ <variable>.CurrSlice.prev_frame_num, <variable>.CurrSlice.prev_frame_num
	movw	r1, #:lower16:.LC133	@,
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movt	r1, #:upper16:.LC133	@,
	mov	r0, #0	@,
	movw	r2, #6307	@,
	rsb	r3, r3, lr	@, <variable>.CurrSlice.prev_frame_num, <variable>.CurrSlice.frame_num
	str	ip, [sp, #0]	@ <variable>.CurrSPS.dpb_size_plus1,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2728:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC129	@,
	movt	r1, #:upper16:.LC129	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2813:
	movw	r1, #:lower16:.LC130	@,
	movt	r1, #:upper16:.LC130	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42493,
	b	.L2725	@
.L2816:
	.align	2
.L2815:
	.word	.LANCHOR0+192
	.fnend
	.size	InitPic, .-InitPic
	.align	2
	.global	se_v
	.type	se_v, %function
se_v:
	.fnstart
.LFB1529:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r6, r0, #13504	@ D.38596, pH264Ctx,
	add	r6, r6, #24	@ D.38596, D.38596,
	mov	r7, r0	@ pH264Ctx, pH264Ctx
	mov	r8, r1	@ SE_TRACEstring, SE_TRACEstring
	mov	r1, #32	@,
	mov	r0, r6	@, D.38596
	bl	BsShow	@
	mov	r4, r0	@ D.38597,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r5, r0	@ zeros,
	bhi	.L2818	@,
	mov	r5, r0, asl #1	@ tmp148, zeros,
	mov	r0, r6	@, D.38596
	add	r5, r5, #1	@ NumBits, tmp148,
	rsb	r3, r5, #32	@ tmp149, NumBits,
	mov	r4, r4, lsr r3	@ D.38604, D.38597,
	mov	r1, r5	@, NumBits
	tst	r4, #1	@ D.38604,
	mov	r4, r4, lsr #1	@ tmp, D.38604,
	rsbne	r4, r4, #0	@ INFO, tmp
	bl	BsSkip	@
.L2821:
	ldr	ip, [r7, #368]	@ D.38628, <variable>.pCurrNal
	mov	r2, r8	@, SE_TRACEstring
	mov	r3, r4	@, INFO
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC39	@,
	movt	r1, #:upper16:.LC39	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp156, <variable>.nal_bitoffset, NumBits
	str	r5, [ip, #64]	@ tmp156, <variable>.nal_bitoffset
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2818:
	cmp	r0, #31	@ zeros,
	bls	.L2825	@,
	movw	r1, #59164	@ tmp153,
	mov	r2, #1	@ tmp154,
	mvn	r4, #-2147483648	@ INFO,
	mov	r5, #32	@ NumBits,
	str	r2, [r7, r1]	@ tmp154, <variable>.SeErrFlg
	b	.L2821	@
.L2825:
	mov	r1, r5	@, zeros
	mov	r0, r6	@, D.38596
	bl	BsSkip	@
	mov	r1, r5	@, zeros
	mov	r0, r6	@, D.38596
	bl	BsGet	@
	mov	r1, #1	@,
	mov	r4, r0	@ INFO,
	mov	r0, r6	@, D.38596
	bl	BsGet	@
	tst	r0, #1	@,
	mov	r0, r5, asl #1	@ tmp152, zeros,
	rsbne	r4, r4, #0	@ INFO, INFO
	add	r5, r0, #1	@ NumBits, tmp152,
	b	.L2821	@
	.fnend
	.size	se_v, .-se_v
	.align	2
	.global	Scaling_List
	.type	Scaling_List, %function
Scaling_List:
	.fnstart
.LFB1636:
	@ args = 4, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r3, #0	@ sizeOfScalingList, sizeOfScalingList
	str	r0, [fp, #-48]	@ pH264Ctx, %sfp
	mov	r9, r1	@ scalingList_Org, scalingList_Org
	mov	r6, r2	@ scalingList, scalingList
	ble	.L2833	@,
	cmp	r4, #16	@ sizeOfScalingList,
	sub	r0, r4, #1	@ tmp180, sizeOfScalingList,
	and	r3, r0, #1	@, tmp180,
	mov	sl, #255	@ tmp179,
	str	r3, [fp, #-52]	@, %sfp
	beq	.L2860	@,
	ldr	r8, .L2863	@,
	ldrb	r5, [r8, #0]	@ zero_extendqisi2	@ scanj, g_ZZ_SCAN8
.L2848:
	ldr	r0, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC141	@,
	movt	r1, #:upper16:.LC141	@,
	and	r8, r5, #252	@ tmp205, scanj,
	bl	se_v	@
	add	r0, r0, #264	@ tmp196,,
	mov	r7, r0, asr #31	@ tmp197, tmp196,
	mov	r2, r7, lsr #24	@ tmp198, tmp197,
	and	r7, r5, #3	@ tmp207, scanj,
	add	ip, r0, r2	@ tmp199, tmp196, tmp198
	and	r3, ip, #255	@ tmp200, tmp199,
	mov	ip, r7, asl #3	@ D.44491, tmp207,
	cmp	r3, r2	@ tmp200, tmp198
	cmpeq	r5, #0	@, scanj,
	movne	r1, #0	@, tmp203
	moveq	r1, #1	@, tmp203
	subs	r3, r3, r2	@ nextScale, tmp200, tmp198
	ldr	r2, [fp, #4]	@, UseDefaultScalingMatrix
	str	r1, [r2, #0]	@ tmp203,
	add	r1, r6, r8	@ D.44489, scalingList, tmp205
	moveq	r2, #8	@ tmpscale,
	movne	r2, r3	@ tmpscale, nextScale
	str	r2, [r9, r5, asl #2]	@ tmpscale,* scalingList_Org
	and	r7, r2, #255	@ tmp209, tmpscale,
	ldr	r0, [r1, #0]	@ tmp214,* D.44489
	mov	r5, #1	@ j,
	cmp	r4, r5	@ sizeOfScalingList, j
	mov	r8, r2	@ lastScale, tmpscale
	bic	r0, r0, sl, asl ip	@ tmp215, tmp214, tmp179,
	orr	r0, r0, r7, asl ip	@, tmp216, tmp215, tmp209,
	str	r0, [r1, #0]	@ tmp216,* D.44489
	ble	.L2833	@,
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r1, #0	@,
	beq	.L2832	@,
	cmp	r4, #16	@ sizeOfScalingList,
	ldrne	r1, .L2863	@,
	ldreq	r1, .L2863+4	@,
	cmp	r3, #0	@ nextScale,
	ldrb	r7, [r1, r5]	@ zero_extendqisi2	@ scanj,* j
	bne	.L2853	@,
.L2839:
	mov	r8, r2	@ tmpscale, tmpscale
	mov	r3, #0	@ nextScale,
.L2854:
	and	r2, r7, #252	@ tmp232, scanj,
	and	r1, r7, #3	@ tmp234, scanj,
	add	r2, r6, r2	@ D.44489, scalingList, tmp232
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	mov	lr, r1, asl #3	@ D.44491, tmp234,
	add	r5, r5, #1	@ j, j,
	ldr	r0, [r2, #0]	@ tmp241,* D.44489
	and	ip, r8, #255	@ tmp236, tmpscale,
	cmp	r4, r5	@ sizeOfScalingList, j
	bic	r0, r0, sl, asl lr	@ tmp242, tmp241, tmp179,
	orr	r1, r0, ip, asl lr	@, tmp243, tmp242, tmp236,
	str	r1, [r2, #0]	@ tmp243,* D.44489
	ble	.L2833	@,
.L2832:
	cmp	r4, #16	@ sizeOfScalingList,
	ldreq	r1, .L2863+4	@,
	ldrne	r2, .L2863	@,
	ldreqb	r7, [r1, r5]	@ zero_extendqisi2	@ scanj, g_ZZ_SCAN
	ldrneb	r7, [r2, r5]	@ zero_extendqisi2	@ scanj, g_ZZ_SCAN8
	cmp	r3, #0	@ nextScale,
	bne	.L2861	@,
.L2830:
	mov	r3, #0	@ nextScale,
.L2831:
	and	r2, r7, #3	@ tmp165, scanj,
	mov	lr, r7, lsr #2	@ tmp163, scanj,
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	and	r0, r8, #255	@ tmp166, tmpscale,
	mov	r1, r2, asl #3	@ D.44491, tmp165,
	ldr	ip, [r6, lr, asl #2]	@ tmp172,* scalingList
	cmp	r4, #16	@ sizeOfScalingList,
	add	r5, r5, #1	@ tmp183, j,
	bic	r2, ip, sl, asl r1	@ tmp171, tmp172, tmp179,
	orr	r7, r2, r0, asl r1	@, tmp173, tmp171, tmp166,
	str	r7, [r6, lr, asl #2]	@ tmp173,* scalingList
	beq	.L2862	@,
	ldr	lr, .L2863	@,
	ldrb	r7, [lr, r5]	@ zero_extendqisi2	@ scanj, g_ZZ_SCAN8
.L2855:
	cmp	r3, #0	@ nextScale,
	bne	.L2856	@,
.L2843:
	mov	r3, #0	@ nextScale,
.L2857:
	and	r1, r7, #3	@ tmp261, scanj,
	mov	r2, r7, lsr #2	@ tmp258, scanj,
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	add	r5, r5, #1	@ j, tmp183,
	mov	lr, r1, asl #3	@ D.44491, tmp261,
	ldr	r0, [r6, r2, asl #2]	@ tmp268,* scalingList
	and	ip, r8, #255	@ tmp263, tmpscale,
	cmp	r4, r5	@ sizeOfScalingList, j
	bic	r0, r0, sl, asl lr	@ tmp269, tmp268, tmp179,
	orr	r1, r0, ip, asl lr	@, tmp270, tmp269, tmp263,
	str	r1, [r6, r2, asl #2]	@ tmp270,* scalingList
	bgt	.L2832	@,
.L2833:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2856:
	ldr	r0, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC141	@,
	movt	r1, #:upper16:.LC141	@,
	bl	se_v	@
	add	r3, r8, #256	@ tmp249, tmpscale,
	add	r1, r3, r0	@ tmp250, tmp249,
	mov	r0, r1, asr #31	@ tmp251, tmp250,
	mov	r2, r0, lsr #24	@ tmp252, tmp251,
	add	ip, r1, r2	@ tmp253, tmp250, tmp252
	ldr	r1, [fp, #4]	@, UseDefaultScalingMatrix
	and	r3, ip, #255	@ tmp254, tmp253,
	cmp	r3, r2	@ tmp254, tmp252
	cmpeq	r7, #0	@, scanj,
	movne	r0, #0	@, tmp257
	moveq	r0, #1	@, tmp257
	subs	r3, r3, r2	@ nextScale, tmp254, tmp252
	str	r0, [r1, #0]	@ tmp257,
	beq	.L2843	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L2857	@
.L2861:
	ldr	r0, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC141	@,
	movt	r1, #:upper16:.LC141	@,
	bl	se_v	@
	add	ip, r8, #256	@ tmp151, lastScale,
	add	r1, ip, r0	@ tmp152, tmp151,
	mov	r2, r1, asr #31	@ tmp153, tmp152,
	mov	r0, r2, lsr #24	@ tmp154, tmp153,
	ldr	r2, [fp, #4]	@, UseDefaultScalingMatrix
	add	r3, r1, r0	@ tmp155, tmp152, tmp154
	and	ip, r3, #255	@ tmp156, tmp155,
	cmp	ip, r0	@ tmp156, tmp154
	cmpeq	r7, #0	@, scanj,
	movne	r1, #0	@, tmp162
	moveq	r1, #1	@, tmp162
	subs	r3, ip, r0	@ nextScale, tmp156, tmp154
	str	r1, [r2, #0]	@ tmp162,
	movne	r8, r3	@ tmpscale, nextScale
	bne	.L2831	@,
	b	.L2830	@
.L2862:
	ldr	ip, .L2863+4	@,
	ldrb	r7, [ip, r5]	@ zero_extendqisi2	@ scanj, g_ZZ_SCAN
	b	.L2855	@
.L2860:
	ldr	r3, .L2863+4	@,
	ldrb	r5, [r3, #0]	@ zero_extendqisi2	@ scanj, g_ZZ_SCAN
	b	.L2848	@
.L2853:
	ldr	r0, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:.LC141	@,
	movt	r1, #:upper16:.LC141	@,
	str	r2, [fp, #-56]	@,
	bl	se_v	@
	ldr	r2, [fp, #-56]	@,
	add	r3, r2, #256	@ tmp222, tmpscale,
	add	r0, r3, r0	@ tmp223, tmp222,
	mov	r1, r0, asr #31	@ tmp224, tmp223,
	mov	ip, r1, lsr #24	@ tmp225, tmp224,
	ldr	r1, [fp, #4]	@, UseDefaultScalingMatrix
	add	r8, r0, ip	@ tmp226, tmp223, tmp225
	and	r3, r8, #255	@ tmp227, tmp226,
	cmp	r3, ip	@ tmp227, tmp225
	cmpeq	r7, #0	@, scanj,
	movne	r8, #0	@, tmp230
	moveq	r8, #1	@, tmp230
	subs	r3, r3, ip	@ nextScale, tmp227, tmp225
	str	r8, [r1, #0]	@ tmp230,
	beq	.L2839	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L2854	@
.L2864:
	.align	2
.L2863:
	.word	.LANCHOR0+216
	.word	.LANCHOR0+200
	.fnend
	.size	Scaling_List, .-Scaling_List
	.align	2
	.global	ue_v
	.type	ue_v, %function
ue_v:
	.fnstart
.LFB1528:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r6, r0, #13504	@ D.38562, pH264Ctx,
	add	r6, r6, #24	@ D.38562, D.38562,
	mov	r7, r0	@ pH264Ctx, pH264Ctx
	mov	r8, r1	@ SE_TRACEstring, SE_TRACEstring
	mov	r1, #32	@,
	mov	r0, r6	@, D.38562
	bl	BsShow	@
	mov	r4, r0	@ D.38563,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r5, r0	@ zeros,
	bls	.L2870	@,
	cmp	r0, #31	@ zeros,
	bls	.L2871	@,
	movw	r1, #59164	@ tmp150,
	mvn	r4, #0	@ INFO,
	mov	r5, #32	@ NumBits,
	mov	r2, #1	@ tmp151,
	str	r2, [r7, r1]	@ tmp151, <variable>.SeErrFlg
.L2867:
	ldr	ip, [r7, #368]	@ D.38581, <variable>.pCurrNal
	mov	r2, r8	@, SE_TRACEstring
	mov	r3, r4	@, INFO
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC39	@,
	movt	r1, #:upper16:.LC39	@,
	ldr	lr, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp153, <variable>.nal_bitoffset, NumBits
	str	r5, [ip, #64]	@ tmp153, <variable>.nal_bitoffset
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2870:
	mov	r5, r0, asl #1	@ tmp146, zeros,
	mov	r0, r6	@, D.38562
	add	r5, r5, #1	@ NumBits, tmp146,
	rsb	r3, r5, #32	@ tmp147, NumBits,
	mov	r4, r4, lsr r3	@ tmp148, D.38563,
	mov	r1, r5	@, NumBits
	sub	r4, r4, #1	@ INFO, tmp148,
	bl	BsSkip	@
	b	.L2867	@
.L2871:
	add	r4, r0, #1	@ D.38577, zeros,
	mov	r1, r0	@, zeros
	mov	r0, r6	@, D.38562
	bl	BsSkip	@
	mov	r1, r4	@, D.38577
	mov	r0, r6	@, D.38562
	bl	BsShow	@
	mov	r1, r4	@, D.38577
	sub	r4, r0, #1	@ INFO,,
	mov	r0, r6	@, D.38562
	bl	BsSkip	@
	mov	r0, r5, asl #1	@ tmp149, zeros,
	add	r5, r0, #1	@ NumBits, tmp149,
	b	.L2867	@
	.fnend
	.size	ue_v, .-ue_v
	.align	2
	.global	H264_DecFramePackingSEI
	.type	H264_DecFramePackingSEI, %function
H264_DecFramePackingSEI:
	.fnstart
.LFB1648:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC142	@,
	movt	r1, #:upper16:.LC142	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	ue_v	@
	movw	ip, #26416	@ tmp156,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC143	@,
	movt	r2, #:upper16:.LC143	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_id
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r3, #26393	@ tmp158,
	uxtb	r0, r0	@ D.45808,
	strb	r0, [r4, r3]	@ D.45808, <variable>.FramePackSEI.frame_packing_arrangement_cancel_flag
	cmp	r0, #0	@ D.45808,
	beq	.L2876	@,
.L2873:
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC159	@,
	movt	r2, #:upper16:.LC159	@,
	bl	u_v	@
	movw	r3, #26392	@ tmp208,
	movw	r1, #26394	@ tmp206,
	mov	r2, #1	@ tmp209,
	strb	r2, [r4, r3]	@ tmp209, <variable>.FramePackSEI.frame_packing_dec_ok
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame_packing_arrangement_extension_flag
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2876:
	mov	r1, #7	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC144	@,
	movt	r2, #:upper16:.LC144	@,
	bl	u_v	@
	movw	r6, #26408	@ tmp161,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC145	@,
	movt	r2, #:upper16:.LC145	@,
	movw	r5, #26395	@ tmp163,
	str	r0, [r4, r6]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC146	@,
	movt	r2, #:upper16:.LC146	@,
	strb	r0, [r4, r5]	@, <variable>.FramePackSEI.quincunx_sampling_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	ip, #26412	@ tmp166,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC147	@,
	movt	r2, #:upper16:.LC147	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.content_interpretation_type
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r3, #26396	@ tmp168,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC148	@,
	movt	r2, #:upper16:.LC148	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.spatial_flipping_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	ip, #26397	@ tmp171,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC149	@,
	movt	r2, #:upper16:.LC149	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_flipped_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r3, #26398	@ tmp174,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC150	@,
	movt	r2, #:upper16:.LC150	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.field_views_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	ip, #26399	@ tmp177,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC151	@,
	movt	r2, #:upper16:.LC151	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.current_frame_is_frame0_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r3, #26400	@ tmp180,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC152	@,
	movt	r2, #:upper16:.LC152	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_self_contained_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	ldrsb	r2, [r4, r5]	@ <variable>.FramePackSEI.quincunx_sampling_flag, <variable>.FramePackSEI.quincunx_sampling_flag
	movw	r1, #26401	@ tmp183,
	cmp	r2, #0	@ <variable>.FramePackSEI.quincunx_sampling_flag,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_self_contained_flag
	bne	.L2874	@,
	ldr	lr, [r4, r6]	@ <variable>.FramePackSEI.frame_packing_arrangement_type, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	lr, #5	@ <variable>.FramePackSEI.frame_packing_arrangement_type,
	beq	.L2874	@,
	mov	r1, #1	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC153	@,
	movt	r2, #:upper16:.LC153	@,
	bl	u_v	@
	movw	r3, #26402	@ tmp190,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC154	@,
	movt	r2, #:upper16:.LC154	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_grid_position_x
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	ip, #26403	@ tmp193,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC155	@,
	movt	r2, #:upper16:.LC155	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_grid_position_y
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r3, #26404	@ tmp196,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC156	@,
	movt	r2, #:upper16:.LC156	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame1_grid_position_x
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r1, #26405	@ tmp199,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_grid_position_y
.L2874:
	mov	r1, #8	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC157	@,
	movt	r2, #:upper16:.LC157	@,
	bl	u_v	@
	movw	ip, #26420	@ tmp202,
	movw	r1, #:lower16:.LC158	@,
	movt	r1, #:upper16:.LC158	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_reserved_byte
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r2, #26424	@ tmp204,
	str	r0, [r4, r2]	@, <variable>.FramePackSEI.frame_packing_arrangement_repetition_period
	b	.L2873	@
	.fnend
	.size	H264_DecFramePackingSEI, .-H264_DecFramePackingSEI
	.align	2
	.global	H264_DecSEI
	.type	H264_DecSEI, %function
H264_DecSEI:
	.fnstart
.LFB1650:
	@ args = 0, pretend = 0, frame = 56
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #60
	sub	sp, sp, #60	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	sl, r0, #13504	@ D.46048, pH264Ctx,
	sub	r9, fp, #44	@ tmp939,,
	add	sl, sl, #24	@ D.46048, D.46048,
	movw	r5, #13552	@ tmp1029,
	movw	r6, #13544	@ tmp1030,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r3, #32	@ tmp251,
	mov	r0, #0	@ tmp248,
	str	r0, [fp, #-60]	@ tmp248, %sfp
	strb	r0, [r9, #-1]!	@ tmp248, byte_tmp
	str	r3, [r2, #24]	@ tmp251, <variable>.bitsoffset
.L2881:
	mov	r1, r9	@, tmp939
	mov	r2, #1	@,
	mov	r0, r4	@, pH264Ctx
	bl	GetBytes	@
	ldr	r7, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r7, #8	@ tmp255, <variable>.BS.TotalPos,
	ldrb	r7, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.8888, byte_tmp
	cmp	ip, r1, asl #3	@ tmp255, <variable>.BS.BsLen,
	mov	r8, r0	@ ret,
	ble	.L3351	@,
.L2880:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC160	@,
	movt	r1, #:upper16:.LC160	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46053,
.L2883:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3351:
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r3, [fp, #-60]	@, %sfp
	cmp	r8, #0	@ ret,
	add	r2, r3, r7	@,, byte_tmp.8888
	str	r2, [fp, #-60]	@, %sfp
	ble	.L2880	@,
	ldrb	r8, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	r8, #255	@ byte_tmp,
	beq	.L2881	@,
	mov	r6, #0	@,
	movw	r5, #:lower16:g_event_report	@,
	str	r6, [fp, #-72]	@, %sfp
	movt	r5, #:upper16:g_event_report	@,
	movw	r6, #13544	@ tmp1023,
	str	r5, [fp, #-68]	@, %sfp
	movw	r5, #13552	@ tmp1022,
.L3058:
	mov	r7, #0	@ payloadSize,
.L2887:
	mov	r1, r9	@, tmp939
	mov	r2, #1	@,
	mov	r0, r4	@, pH264Ctx
	bl	GetBytes	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp264, <variable>.BS.TotalPos,
	cmp	ip, r1, asl #3	@ tmp264, <variable>.BS.BsLen,
	mov	r8, r0	@ ret.8892,
	ldrb	r0, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.8893, byte_tmp
	add	r7, r7, r0	@ payloadSize, payloadSize, byte_tmp.8893
	ble	.L3352	@,
.L2886:
	mov	r3, #1	@ prephitmp.8797,
	cmp	r7, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp274, prephitmp.8797
	cmp	r3, #0	@ tmp274,
	bne	.L3353	@,
.L2889:
	ldr	r0, [r4, #368]	@ temp.8899, <variable>.pCurrNal
	ldr	r3, [fp, #-60]	@, %sfp
	ldr	r1, [r0, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	ldr	r2, [r0, #24]	@ <variable>.bitsoffset, <variable>.bitsoffset
	cmp	r1, #2	@ <variable>.nal_segment,
	ldreq	r0, [r0, #52]	@ <variable>.bitsoffset, <variable>.bitsoffset
	addeq	r2, r0, r2	@ tmp277, <variable>.bitsoffset, <variable>.bitsoffset
	moveq	r2, r2, lsr #3	@ TotalBitOffset, tmp277,
	cmp	r3, #45	@,
	ldrls	pc, [pc, r3, asl #2]	@
	b	.L2892	@
.L2916:
	.word	.L2893
	.word	.L2894
	.word	.L2895
	.word	.L2896
	.word	.L2897
	.word	.L2898
	.word	.L2899
	.word	.L2900
	.word	.L2901
	.word	.L2902
	.word	.L2903
	.word	.L2904
	.word	.L2905
	.word	.L2906
	.word	.L2907
	.word	.L2908
	.word	.L2909
	.word	.L2910
	.word	.L2911
	.word	.L2912
	.word	.L2913
	.word	.L2914
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2892
	.word	.L2915
.L3352:
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	r8, #0	@ ret.8892,
	ble	.L2886	@,
	ldrb	lr, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	lr, #255	@ byte_tmp,
	beq	.L2887	@,
	mov	r3, #0	@ prephitmp.8797,
	cmp	r7, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp274, prephitmp.8797
	cmp	r3, #0	@ tmp274,
	beq	.L2889	@,
.L3353:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC161	@,
	movt	r1, #:upper16:.LC161	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46053,
	b	.L2883	@
.L2915:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	ldr	r8, [r4, r5]	@ bitpos.9133, <variable>.BS.TotalPos
	bl	H264_DecFramePackingSEI	@
	ldr	r3, [r4, r5]	@ prephitmp.8801, <variable>.BS.TotalPos
	mov	r2, r7, asl #3	@ temp.9135, payloadSize,
	rsb	r8, r8, r3	@ bitpos.9134, bitpos.9133, prephitmp.8801
	cmp	r8, r2	@ bitpos.9134, temp.9135
	bge	.L3041	@,
	rsb	r0, r8, r2	@, bitpos.9134, temp.9135
	str	r0, [fp, #-64]	@, %sfp
	cmp	r0, #0	@,
	add	r1, r0, #7	@ tmp886,,
	movge	r1, r0	@ temp.9231,
	mov	r2, r1, asr #3	@, temp.9231,
	str	r2, [fp, #-60]	@, %sfp
	cmp	r2, #0	@,
	ldrle	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.8803, <variable>.BS.BsLen,
	ble	.L3043	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp892, prephitmp.8801,
	mov	r2, r2, asl #3	@ prephitmp.8803, <variable>.BS.BsLen,
	cmp	ip, r2	@ tmp892, prephitmp.8803
	bgt	.L3043	@,
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r8, #0	@ i.9139,
	tst	r3, #1	@,
	beq	.L3354	@,
.L3324:
	str	r7, [fp, #-76]	@ payloadSize, %sfp
	b	.L3044	@
.L3045:
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8801, <variable>.BS.TotalPos
	mov	r2, lr, asl #3	@ prephitmp.8803, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp896, prephitmp.8801,
	cmp	r7, r2	@ tmp896, prephitmp.8803
	bgt	.L3347	@,
	bl	BsSkip	@
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8801, <variable>.BS.TotalPos
	mov	r2, r1, asl #3	@ prephitmp.8803, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp1464, prephitmp.8801,
	cmp	r7, r2	@ tmp1464, prephitmp.8803
	bgt	.L3347	@,
.L3044:
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	ldr	ip, [fp, #-60]	@, %sfp
	add	r7, r8, #1	@ tmp1132, i.9139,
	mov	r0, sl	@, D.46048
	cmp	r7, ip	@ tmp1132,
	add	r8, r7, #1	@ i.9139, tmp1132,
	mov	r1, #8	@,
	blt	.L3045	@,
	ldr	r7, [fp, #-76]	@ payloadSize, %sfp
.L3292:
	ldr	r8, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8801, <variable>.BS.TotalPos
	mov	r2, r8, asl #3	@ prephitmp.8803, <variable>.BS.BsLen,
.L3043:
	ldr	r8, [fp, #-64]	@, %sfp
	mov	r0, r8, asr #31	@ tmp900,,
	mov	r1, r0, lsr #29	@ tmp901, tmp900,
	add	ip, r8, r1	@ tmp902,, tmp901
	and	lr, ip, #7	@ tmp903, tmp902,
	rsb	r1, r1, lr	@ tmp904, tmp901, tmp903
	add	r0, r3, r1	@ tmp905, prephitmp.8801, tmp904
	cmp	r0, r2	@ tmp905, prephitmp.8803
	ble	.L3355	@,
.L3041:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pH264Ctx
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3046	@,
.L3253:
	movw	r0, #57732	@ tmp929,
	ldr	r3, [r4, r0]	@ prephitmp.8799, <variable>.TotalUsrDatNum
.L2919:
	cmp	r3, #3	@ prephitmp.8799,
	bhi	.L3356	@,
.L3052:
	mov	r7, #0	@,
	str	r7, [fp, #-60]	@, %sfp
.L3056:
	mov	r1, r9	@, tmp939
	mov	r2, #1	@,
	mov	r0, r4	@, pH264Ctx
	bl	GetBytes	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp933, <variable>.BS.TotalPos,
	ldrb	r7, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.9157, byte_tmp
	cmp	ip, r1, asl #3	@ tmp933, <variable>.BS.BsLen,
	mov	r8, r0	@ ret.9156,
	ble	.L3357	@,
.L3055:
	mov	r0, #0	@ D.46053,
	b	.L2883	@
.L2914:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC189	@,
	movt	r1, #:upper16:.LC189	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3358	@,
.L3036:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp869, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp869, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9132,
	bne	.L3323	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9132,
	cmp	r7, r1	@ payloadSize, i.9132
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1447, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1447, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3323:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9132, i.9132
	b	.L3039	@
.L3040:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp876, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp876, <variable>.BS.BsLen,
	bgt	.L3346	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1453, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1453, <variable>.BS.BsLen,
	bgt	.L3346	@,
.L3039:
	add	r8, r9, #1	@ tmp1128, i.9132,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9132, tmp1128,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1128
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3040	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2910:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC185	@,
	movt	r1, #:upper16:.LC185	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3359	@,
.L3016:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp789, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp789, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9097,
	bne	.L3319	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9097,
	cmp	r7, r1	@ payloadSize, i.9097
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1399, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1399, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3319:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9097, i.9097
	b	.L3019	@
.L3020:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp796, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp796, <variable>.BS.BsLen,
	bgt	.L3342	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1405, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1405, <variable>.BS.BsLen,
	bgt	.L3342	@,
.L3019:
	add	r8, r9, #1	@ tmp1112, i.9097,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9097, tmp1112,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1112
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3020	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2912:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC187	@,
	movt	r1, #:upper16:.LC187	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3360	@,
.L3026:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp829, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp829, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9113,
	bne	.L3321	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9113,
	cmp	r7, r1	@ payloadSize, i.9113
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1423, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1423, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3321:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9113, i.9113
	b	.L3029	@
.L3030:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp836, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp836, <variable>.BS.BsLen,
	bgt	.L3344	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1429, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1429, <variable>.BS.BsLen,
	bgt	.L3344	@,
.L3029:
	add	r8, r9, #1	@ tmp1120, i.9113,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9113, tmp1120,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1120
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3030	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2908:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC183	@,
	movt	r1, #:upper16:.LC183	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3361	@,
.L3006:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp749, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp749, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9081,
	bne	.L3317	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9081,
	cmp	r7, r1	@ payloadSize, i.9081
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1375, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1375, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3317:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9081, i.9081
	b	.L3009	@
.L3010:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp756, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp756, <variable>.BS.BsLen,
	bgt	.L3340	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1381, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1381, <variable>.BS.BsLen,
	bgt	.L3340	@,
.L3009:
	add	r8, r9, #1	@ tmp1104, i.9081,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9081, tmp1104,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1104
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3010	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2913:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC188	@,
	movt	r1, #:upper16:.LC188	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3362	@,
.L3031:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp849, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp849, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9121,
	bne	.L3322	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9121,
	cmp	r7, r1	@ payloadSize, i.9121
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1435, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1435, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3322:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9121, i.9121
	b	.L3034	@
.L3035:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp856, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp856, <variable>.BS.BsLen,
	bgt	.L3345	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1441, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1441, <variable>.BS.BsLen,
	bgt	.L3345	@,
.L3034:
	add	r8, r9, #1	@ tmp1124, i.9121,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9121, tmp1124,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1124
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3035	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2909:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC184	@,
	movt	r1, #:upper16:.LC184	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3363	@,
.L3011:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp769, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp769, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9089,
	bne	.L3318	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9089,
	cmp	r7, r1	@ payloadSize, i.9089
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1387, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1387, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3318:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9089, i.9089
	b	.L3014	@
.L3015:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp776, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp776, <variable>.BS.BsLen,
	bgt	.L3341	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1393, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1393, <variable>.BS.BsLen,
	bgt	.L3341	@,
.L3014:
	add	r8, r9, #1	@ tmp1108, i.9089,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9089, tmp1108,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1108
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3015	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2911:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC186	@,
	movt	r1, #:upper16:.LC186	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3364	@,
.L3021:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp809, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp809, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9105,
	bne	.L3320	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9105,
	cmp	r7, r1	@ payloadSize, i.9105
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1411, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1411, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3320:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9105, i.9105
	b	.L3024	@
.L3025:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp816, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp816, <variable>.BS.BsLen,
	bgt	.L3343	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1417, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1417, <variable>.BS.BsLen,
	bgt	.L3343	@,
.L3024:
	add	r8, r9, #1	@ tmp1116, i.9105,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9105, tmp1116,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1116
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3025	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2907:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC182	@,
	movt	r1, #:upper16:.LC182	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3365	@,
.L3001:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp729, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp729, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9073,
	bne	.L3316	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9073,
	cmp	r7, r1	@ payloadSize, i.9073
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1363, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1363, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3316:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9073, i.9073
	b	.L3004	@
.L3005:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp736, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp736, <variable>.BS.BsLen,
	bgt	.L3339	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1369, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1369, <variable>.BS.BsLen,
	bgt	.L3339	@,
.L3004:
	add	r8, r9, #1	@ tmp1100, i.9073,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9073, tmp1100,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1100
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3005	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2906:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC181	@,
	movt	r1, #:upper16:.LC181	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3366	@,
.L2996:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp709, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp709, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9065,
	bne	.L3315	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9065,
	cmp	r7, r1	@ payloadSize, i.9065
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1351, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1351, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3315:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9065, i.9065
	b	.L2999	@
.L3000:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp716, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp716, <variable>.BS.BsLen,
	bgt	.L3338	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1357, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1357, <variable>.BS.BsLen,
	bgt	.L3338	@,
.L2999:
	add	r8, r9, #1	@ tmp1096, i.9065,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9065, tmp1096,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1096
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3000	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2898:
	ldr	r8, [fp, #-72]	@, %sfp
	cmp	r8, #0	@,
	bne	.L2897	@,
	mov	r3, r7	@, payloadSize
	movw	r1, #:lower16:.LC168	@,
	mov	r0, #20	@,
	movt	r1, #:upper16:.LC168	@,
	bl	dprint_vfmw	@
	movw	r3, #57732	@ tmp372,
	ldr	r8, [r4, r3]	@ prephitmp.8805, <variable>.TotalUsrDatNum
	cmp	r8, #3	@ prephitmp.8805,
	bhi	.L3367	@,
.L2941:
	movw	lr, #59224	@ tmp399,
	add	r8, r8, #14400	@ tmp401, prephitmp.8805,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	add	r8, r8, #34	@ tmp401, tmp401,
	bl	GetUsd	@
	movw	ip, #57732	@ tmp405,
	ldr	r2, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, r2, #14400	@ tmp403, <variable>.TotalUsrDatNum,
	add	r1, r3, #34	@ tmp403, tmp403,
	str	r0, [r4, r8, asl #2]	@, <variable>.pUsrDatArray
	ldr	r3, [r4, r1, asl #2]	@ D.46119, <variable>.pUsrDatArray
	cmp	r3, #0	@ D.46119,
	beq	.L2942	@,
	ldr	lr, [r4, #368]	@ temp.8937, <variable>.pCurrNal
	cmp	r7, #1024	@ payloadSize,
	movlt	ip, r7	@ D.46122, payloadSize
	movge	ip, #1024	@ D.46122,
	ldrb	r2, [lr, #0]	@ zero_extendqisi2	@ segment_idx, <variable>.nal_used_segment
	ldr	r1, [lr, #68]	@ temp.9167, <variable>.nal_segment
	cmp	r2, r1	@ segment_idx, temp.9167
	movcs	r0, #0	@ prephitmp.8807,
	strcs	r0, [fp, #-76]	@ prephitmp.8807, %sfp
	bcs	.L2944	@,
	rsb	r8, r2, r2, asl #3	@, tmp409, segment_idx, segment_idx,
	add	r0, r2, #1	@ segment_idx, segment_idx,
	mvn	r2, r2	@ tmp1061, segment_idx
	add	r2, r2, r1	@ tmp1060, tmp1061, temp.9167
	add	r8, lr, r8, asl #2	@, tmp411, temp.8937, tmp409,
	and	lr, r2, #1	@, tmp1060,
	add	r8, r8, #8	@ tmp412, tmp411,
	str	lr, [fp, #-64]	@, %sfp
	add	r2, r8, #32	@, tmp412,
	str	r2, [fp, #-80]	@, %sfp
	ldr	lr, [r8, #16]	@ <variable>.bitsoffset, <variable>.bitsoffset
	cmp	r0, r1	@ segment_idx, temp.9167
	ldr	r2, [r8, #4]	@, <variable>.bitstream_length
	add	lr, lr, #7	@, <variable>.bitsoffset,
	sub	lr, r2, lr, lsr #3	@,,,
	str	lr, [fp, #-76]	@, %sfp
	beq	.L3227	@,
	ldr	r2, [fp, #-64]	@, %sfp
	cmp	r2, #0	@,
	beq	.L3307	@,
	ldr	r2, [fp, #-80]	@, %sfp
	add	r0, r0, #1	@ segment_idx, segment_idx,
	cmp	r0, r1	@ segment_idx, temp.9167
	ldr	lr, [r2, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	r2, [r8, #32]	@, <variable>.bitstream_length
	add	r8, r8, #60	@, tmp412,
	add	lr, lr, #7	@, <variable>.bitsoffset,
	str	r8, [fp, #-80]	@, %sfp
	sub	r8, r2, lr, lsr #3	@,,,
	ldr	r2, [fp, #-76]	@, %sfp
	add	lr, r2, r8	@,,
	str	lr, [fp, #-76]	@, %sfp
	beq	.L3227	@,
.L3307:
	ldr	r2, [fp, #-76]	@ lenth_not_parse.8940, %sfp
	ldr	lr, [fp, #-80]	@ ivtmp.8849, %sfp
	str	ip, [fp, #-96]	@ D.46122, %sfp
	str	r3, [fp, #-100]	@ D.46119, %sfp
.L2945:
	ldr	ip, [lr, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	mov	r8, lr	@ tmp1064, ivtmp.8849
	ldr	r3, [r8], #28	@, <variable>.bitstream_length
	add	r0, r0, #2	@ segment_idx, segment_idx,
	add	ip, ip, #7	@, <variable>.bitsoffset,
	str	ip, [fp, #-60]	@, %sfp
	ldr	ip, [lr, #28]	@, <variable>.bitstream_length
	cmp	r0, r1	@ segment_idx, temp.9167
	add	lr, lr, #56	@ ivtmp.8849, ivtmp.8849,
	str	ip, [fp, #-80]	@, %sfp
	ldr	r8, [r8, #12]	@, <variable>.bitsoffset
	ldr	ip, [fp, #-60]	@, %sfp
	str	r8, [fp, #-76]	@, %sfp
	sub	r8, r3, ip, lsr #3	@ tmp1144,,,
	ldr	r3, [fp, #-76]	@, %sfp
	ldr	ip, [fp, #-80]	@, %sfp
	add	r2, r2, r8	@ lenth_not_parse.8940, lenth_not_parse.8940, tmp1144
	add	r8, r3, #7	@ tmp1149,,
	sub	r3, ip, r8, lsr #3	@ tmp1152,, tmp1149,
	add	r2, r2, r3	@ lenth_not_parse.8940, lenth_not_parse.8940, tmp1152
	bne	.L2945	@,
	ldr	ip, [fp, #-96]	@ D.46122, %sfp
	ldr	r3, [fp, #-100]	@ D.46119, %sfp
	str	r2, [fp, #-76]	@ lenth_not_parse.8940, %sfp
.L3227:
	ldr	r0, [fp, #-76]	@ prephitmp.8807, %sfp
.L2944:
	ldr	r2, [fp, #-72]	@, %sfp
	cmp	ip, r0	@ D.46122, prephitmp.8807
	ldr	lr, [fp, #-76]	@, %sfp
	movle	lr, ip	@, D.46122
	sxtb	r1, r2	@ registered_flag,
	cmp	r1, #1	@ registered_flag,
	str	lr, [fp, #-64]	@, %sfp
	movne	r3, #0	@,
	strne	r3, [fp, #-60]	@, %sfp
	beq	.L3368	@,
.L2951:
	ldr	r8, [fp, #-64]	@, %sfp
	ldr	r3, [fp, #-60]	@, %sfp
	rsb	r2, r3, r8	@ len_tmp,,
	cmp	r2, #0	@ len_tmp,
	ble	.L3369	@,
	movw	r8, #57732	@ tmp485,
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [r4, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, r1, #14400	@ tmp483, <variable>.TotalUsrDatNum,
	add	lr, r3, #34	@ tmp483, tmp483,
	ldr	r1, [r4, lr, asl #2]	@, <variable>.pUsrDatArray
	str	r8, [fp, #-84]	@,
	str	ip, [fp, #-88]	@,
	bl	GetBytes	@
	ldr	r3, [fp, #-84]	@,
	ldr	ip, [fp, #-88]	@,
	subs	r8, r0, #0	@ ret.8964,
	ble	.L3370	@,
	ldr	r0, [fp, #-60]	@, %sfp
	rsb	r1, r0, ip	@ tmp499,, D.46122
	cmp	r8, r1	@ ret.8964, tmp499
	blt	.L3371	@,
	ldr	lr, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	ip, r7	@ D.46122, payloadSize
	ldr	r1, [fp, #-60]	@, %sfp
	add	r3, lr, #14400	@ tmp511, <variable>.TotalUsrDatNum,
	add	r2, r3, #34	@ tmp511, tmp511,
	rsb	r0, r1, r7	@,, payloadSize
	str	r0, [fp, #-60]	@, %sfp
	ldr	lr, [r4, r2, asl #2]	@ tmp515, <variable>.pUsrDatArray
	str	r0, [lr, #1048]	@, <variable>.data_size
	bcc	.L3372	@,
.L2958:
	ldr	ip, [fp, #-60]	@, %sfp
	cmp	ip, #0	@,
	ble	.L2956	@,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r2, r3, #8	@ tmp525, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp525, <variable>.BS.BsLen,
	bgt	.L2956	@,
	ldr	r8, [fp, #-60]	@, %sfp
	tst	r8, #1	@,
	mov	r8, #0	@ i.8987,
	bne	.L2959	@,
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r2, [fp, #-60]	@, %sfp
	mov	r8, #1	@ i.8987,
	cmp	r2, r8	@, i.8987
	bgt	.L3330	@,
	b	.L2956	@
.L2959:
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	ldr	r3, [fp, #-60]	@, %sfp
	add	r7, r8, #1	@ tmp1059, i.8987,
	mov	r0, sl	@, D.46048
	cmp	r3, r7	@, tmp1059
	add	r8, r7, #1	@ i.8987, tmp1059,
	mov	r1, #8	@,
	ble	.L2956	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp528, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp528, <variable>.BS.BsLen,
	bgt	.L2956	@,
	bl	BsSkip	@
.L3330:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, lr, #8	@ tmp1256, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1256, <variable>.BS.BsLen,
	ble	.L2959	@,
.L2956:
	movw	r3, #57732	@ tmp535,
	ldr	lr, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, r0, #14400	@ tmp533, <variable>.TotalUsrDatNum,
	ldrd	r0, [lr, #56]	@, <variable>.pstExtraData,
	add	ip, r2, #34	@ tmp533, tmp533,
	mov	r2, #1056	@ tmp538,
	ldr	lr, [r4, ip, asl #2]	@ tmp537, <variable>.pUsrDatArray
	strd	r0, [lr, r2]	@, tmp537, tmp538
	movw	r1, #59184	@ tmp552,
	ldr	ip, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	lr, ip, #14400	@ tmp541, <variable>.TotalUsrDatNum,
	add	r2, lr, #34	@ tmp541, tmp541,
	mov	lr, #8	@ tmp546,
	ldr	ip, [r4, r2, asl #2]	@ tmp545, <variable>.pUsrDatArray
	str	lr, [ip, #1036]	@ tmp546, <variable>.from
	ldr	r2, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	lr, [r4, r1]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	ip, r2, #14400	@ tmp547, <variable>.TotalUsrDatNum,
	add	r2, ip, #34	@ tmp547, tmp547,
	ldr	ip, [r4, r2, asl #2]	@ tmp551, <variable>.pUsrDatArray
	str	lr, [ip, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r1, [fp, #-68]	@, %sfp
	ldr	ip, [r1, #0]	@ g_event_report.8997, g_event_report
	cmp	ip, #0	@ g_event_report.8997,
	beq	.L2961	@,
	ldr	r2, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
.L3350:
	add	lr, r2, #14400	@ tmp557, <variable>.TotalUsrDatNum,
	movw	r3, #59224	@ tmp555,
	add	r2, lr, #34	@ tmp557, tmp557,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r1, #6	@,
	mov	r3, #1072	@,
	ldr	r2, [r4, r2, asl #2]	@, <variable>.pUsrDatArray
	blx	ip	@ g_event_report.8997
.L2961:
	movw	r1, #57732	@ tmp562,
	ldr	ip, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, ip, #1	@ prephitmp.8799, <variable>.TotalUsrDatNum,
	str	r3, [r4, r1]	@ prephitmp.8799, <variable>.TotalUsrDatNum
	cmp	r3, #3	@ prephitmp.8799,
	bls	.L3052	@,
.L3356:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC190	@,
	movt	r1, #:upper16:.LC190	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.46053,
	b	.L2883	@
.L2902:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC177	@,
	movt	r1, #:upper16:.LC177	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3373	@,
.L2976:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp629, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp629, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9033,
	bne	.L3311	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9033,
	cmp	r7, r1	@ payloadSize, i.9033
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1303, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1303, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3311:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9033, i.9033
	b	.L2979	@
.L2980:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp636, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp636, <variable>.BS.BsLen,
	bgt	.L3334	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1309, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1309, <variable>.BS.BsLen,
	bgt	.L3334	@,
.L2979:
	add	r8, r9, #1	@ tmp1080, i.9033,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9033, tmp1080,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1080
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2980	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2901:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3374	@,
.L2971:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp609, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp609, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.8938,
	bne	.L3310	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.8938,
	cmp	r7, r1	@ payloadSize, i.8938
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1291, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1291, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3310:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.8938, i.8938
	b	.L2974	@
.L2975:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp616, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp616, <variable>.BS.BsLen,
	bgt	.L3333	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1297, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1297, <variable>.BS.BsLen,
	bgt	.L3333	@,
.L2974:
	add	r8, r9, #1	@ tmp1076, i.8938,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.8938, tmp1076,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1076
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2975	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2894:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC164	@,
	movt	r1, #:upper16:.LC164	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	ldr	r8, [r4, r5]	@ bitpos, <variable>.BS.TotalPos
	bl	H264_DecPicTimingSEI	@
	ldr	r3, [r4, r5]	@ prephitmp.8812, <variable>.BS.TotalPos
	mov	r2, r7, asl #3	@ D.46084, payloadSize,
	rsb	r8, r8, r3	@ bitpos.8908, bitpos, prephitmp.8812
	cmp	r8, r2	@ bitpos.8908, D.46084
	bge	.L2923	@,
	rsb	r1, r8, r2	@, bitpos.8908, D.46084
	str	r1, [fp, #-64]	@, %sfp
	ldr	r8, [fp, #-64]	@, %sfp
	add	r0, r1, #7	@ tmp304,,
	cmp	r8, #0	@,
	movge	r0, r8	@ D.46088,
	mov	r2, r0, asr #3	@, D.46088,
	str	r2, [fp, #-60]	@, %sfp
	cmp	r2, #0	@,
	ldrle	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.8814, <variable>.BS.BsLen,
	ble	.L2925	@,
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp310, prephitmp.8812,
	mov	r2, ip, asl #3	@ prephitmp.8814, <variable>.BS.BsLen,
	cmp	r2, lr	@ prephitmp.8814, tmp310
	blt	.L2925	@,
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r8, #0	@ i.8911,
	tst	r3, #1	@,
	beq	.L3375	@,
.L3300:
	str	r7, [fp, #-76]	@ payloadSize, %sfp
	b	.L2926	@
.L2927:
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8812, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.8814, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp314, prephitmp.8812,
	cmp	r7, r2	@ tmp314, prephitmp.8814
	bgt	.L3326	@,
	bl	BsSkip	@
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8812, <variable>.BS.TotalPos
	mov	r2, r1, asl #3	@ prephitmp.8814, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp1217, prephitmp.8812,
	cmp	r7, r2	@ tmp1217, prephitmp.8814
	bgt	.L3326	@,
.L2926:
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	ldr	lr, [fp, #-60]	@, %sfp
	add	r7, r8, #1	@ tmp1043, i.8911,
	mov	r0, sl	@, D.46048
	cmp	r7, lr	@ tmp1043,
	add	r8, r7, #1	@ i.8911, tmp1043,
	mov	r1, #8	@,
	blt	.L2927	@,
	ldr	r7, [fp, #-76]	@ payloadSize, %sfp
.L3257:
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8812, <variable>.BS.TotalPos
	mov	r2, r0, asl #3	@ prephitmp.8814, <variable>.BS.BsLen,
.L2925:
	ldr	ip, [fp, #-64]	@, %sfp
	mov	r1, ip, asr #31	@ tmp318,,
	mov	r1, r1, lsr #29	@ tmp319, tmp318,
	add	r0, ip, r1	@ tmp320,, tmp319
	and	lr, r0, #7	@ tmp321, tmp320,
	rsb	r1, r1, lr	@ tmp322, tmp319, tmp321
	add	ip, r3, r1	@ tmp323, prephitmp.8812, tmp322
	cmp	ip, r2	@ tmp323, prephitmp.8814
	ble	.L3376	@,
.L2923:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pH264Ctx
	bl	PassBytes	@
	cmp	r0, #0	@,
	bge	.L3253	@,
	movw	r3, #10309	@,
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	bl	dprint_vfmw	@
	movw	r3, #57732	@ tmp328,
	ldr	r3, [r4, r3]	@ prephitmp.8799, <variable>.TotalUsrDatNum
	b	.L2919	@
.L2904:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC179	@,
	movt	r1, #:upper16:.LC179	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3377	@,
.L2986:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp669, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp669, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9049,
	bne	.L3313	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9049,
	cmp	r7, r1	@ payloadSize, i.9049
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1327, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1327, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3313:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9049, i.9049
	b	.L2989	@
.L2990:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp676, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp676, <variable>.BS.BsLen,
	bgt	.L3336	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1333, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1333, <variable>.BS.BsLen,
	bgt	.L3336	@,
.L2989:
	add	r8, r9, #1	@ tmp1088, i.9049,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9049, tmp1088,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1088
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2990	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2896:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC166	@,
	movt	r1, #:upper16:.LC166	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3378	@,
.L2934:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r0, #8	@ tmp355, <variable>.BS.TotalPos,
	cmp	lr, r1, asl #3	@ tmp355, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.8932,
	bne	.L3302	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.8932,
	cmp	r1, r7	@ i.8932, payloadSize
	bge	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1232, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1232, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3302:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.8932, i.8932
	b	.L2937	@
.L2938:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp362, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp362, <variable>.BS.BsLen,
	bgt	.L3328	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1238, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1238, <variable>.BS.BsLen,
	bgt	.L3328	@,
.L2937:
	add	r8, r9, #1	@ tmp1051, i.8932,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.8932, tmp1051,
	bl	BsSkip	@
	cmp	r8, r7	@ tmp1051, payloadSize
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	blt	.L2938	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2900:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC175	@,
	movt	r1, #:upper16:.LC175	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3379	@,
.L2966:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	lr, ip, #8	@ tmp592, <variable>.BS.TotalPos,
	cmp	lr, r0, asl #3	@ tmp592, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9018,
	bne	.L3309	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9018,
	cmp	r7, r1	@ payloadSize, i.9018
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1279, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1279, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3309:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9018, i.9018
	b	.L2969	@
.L2970:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp596, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp596, <variable>.BS.BsLen,
	bgt	.L3332	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1285, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1285, <variable>.BS.BsLen,
	bgt	.L3332	@,
.L2969:
	add	r8, r9, #1	@ tmp1072, i.9018,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9018, tmp1072,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1072
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2970	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2892:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3380	@,
.L3047:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, lr, #8	@ tmp919, <variable>.BS.TotalPos,
	cmp	r3, r1, asl #3	@ tmp919, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i,
	bne	.L3298	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i,
	cmp	r7, r1	@ payloadSize, i
	ble	.L3253	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp1188, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp1188, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3298:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i, i
	b	.L3050	@
.L3051:
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r3, #8	@ tmp923, <variable>.BS.TotalPos,
	cmp	r2, ip, asl #3	@ tmp923, <variable>.BS.BsLen,
	bgt	.L3348	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1194, <variable>.BS.TotalPos,
	cmp	r3, r1, asl #3	@ tmp1194, <variable>.BS.BsLen,
	bgt	.L3348	@,
.L3050:
	add	r8, r9, #1	@ tmp1035, i,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i, tmp1035,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1035
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L3051	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2905:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC180	@,
	movt	r1, #:upper16:.LC180	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3381	@,
.L2991:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp689, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp689, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9057,
	bne	.L3314	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9057,
	cmp	r7, r1	@ payloadSize, i.9057
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1339, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1339, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3314:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9057, i.9057
	b	.L2994	@
.L2995:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp696, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp696, <variable>.BS.BsLen,
	bgt	.L3337	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1345, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1345, <variable>.BS.BsLen,
	bgt	.L3337	@,
.L2994:
	add	r8, r9, #1	@ tmp1092, i.9057,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9057, tmp1092,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1092
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2995	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2895:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC165	@,
	movt	r1, #:upper16:.LC165	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3382	@,
.L2929:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r0, #8	@ tmp335, <variable>.BS.TotalPos,
	cmp	lr, r2, asl #3	@ tmp335, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.8924,
	bne	.L3301	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.8924,
	cmp	r1, r7	@ i.8924, payloadSize
	bge	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1220, <variable>.BS.TotalPos,
	cmp	r3, r0, asl #3	@ tmp1220, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3301:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.8924, i.8924
	b	.L2932	@
.L2933:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp342, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp342, <variable>.BS.BsLen,
	bgt	.L3327	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1226, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1226, <variable>.BS.BsLen,
	bgt	.L3327	@,
.L2932:
	add	r8, r9, #1	@ tmp1047, i.8924,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.8924, tmp1047,
	bl	BsSkip	@
	cmp	r8, r7	@ tmp1047, payloadSize
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	blt	.L2933	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2899:
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC174	@,
	mov	r3, r7	@, payloadSize
	movt	r1, #:upper16:.LC174	@,
	bl	dprint_vfmw	@
	cmp	r7, #0	@ payloadSize,
	ble	.L2962	@,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r2, lr, #8	@ tmp570, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp570, <variable>.BS.BsLen,
	bgt	.L2962	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9007,
	bne	.L3308	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9007,
	cmp	r7, r1	@ payloadSize, i.9007
	ble	.L2962	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1267, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1267, <variable>.BS.BsLen,
	bgt	.L2962	@,
.L3308:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9007, i.9007
	b	.L2963	@
.L2964:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp573, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp573, <variable>.BS.BsLen,
	bgt	.L3331	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1273, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1273, <variable>.BS.BsLen,
	bgt	.L3331	@,
.L2963:
	add	r8, r9, #1	@ tmp1068, i.9007,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9007, tmp1068,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1068
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2964	@,
.L3331:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
.L2962:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pH264Ctx
	bl	PassBytes	@
	cmp	r0, #0	@,
	bge	.L3253	@,
	movw	r3, #10529	@,
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	bl	dprint_vfmw	@
	movw	r1, #57732	@ tmp582,
	ldr	r3, [r4, r1]	@ prephitmp.8799, <variable>.TotalUsrDatNum
	b	.L2919	@
.L2893:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC162	@,
	movt	r1, #:upper16:.LC162	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3383	@,
.L2917:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, lr, #8	@ tmp286, <variable>.BS.TotalPos,
	cmp	r2, ip, asl #3	@ tmp286, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.8907,
	bne	.L3299	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.8907,
	cmp	r1, r7	@ i.8907, payloadSize
	bge	.L3253	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp1200, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp1200, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3299:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.8907, i.8907
	b	.L2921	@
.L2922:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp293, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp293, <variable>.BS.BsLen,
	bgt	.L3325	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1206, <variable>.BS.TotalPos,
	cmp	r3, r1, asl #3	@ tmp1206, <variable>.BS.BsLen,
	bgt	.L3325	@,
.L2921:
	add	r8, r9, #1	@ tmp1039, i.8907,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.8907, tmp1039,
	bl	BsSkip	@
	cmp	r8, r7	@ tmp1039, payloadSize
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	blt	.L2922	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L2903:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC178	@,
	movt	r1, #:upper16:.LC178	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, payloadSize
	bl	PassBytes	@
	cmp	r0, #0	@,
	blt	.L3384	@,
.L2981:
	cmp	r7, #0	@ payloadSize,
	ble	.L3253	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp649, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp649, <variable>.BS.BsLen,
	bgt	.L3253	@,
	tst	r7, #1	@ payloadSize,
	mov	r1, #0	@ i.9041,
	bne	.L3312	@,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	mov	r1, #1	@ i.9041,
	cmp	r7, r1	@ payloadSize, i.9041
	ble	.L3253	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1315, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1315, <variable>.BS.BsLen,
	bgt	.L3253	@,
.L3312:
	str	r9, [fp, #-60]	@ tmp939, %sfp
	mov	r9, r1	@ i.9041, i.9041
	b	.L2984	@
.L2985:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp656, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp656, <variable>.BS.BsLen,
	bgt	.L3335	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp1321, <variable>.BS.TotalPos,
	cmp	r2, r1, asl #3	@ tmp1321, <variable>.BS.BsLen,
	bgt	.L3335	@,
.L2984:
	add	r8, r9, #1	@ tmp1084, i.9041,
	mov	r1, #8	@,
	mov	r0, sl	@, D.46048
	add	r9, r8, #1	@ i.9041, tmp1084,
	bl	BsSkip	@
	cmp	r7, r8	@ payloadSize, tmp1084
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bgt	.L2985	@,
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3357:
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r0, [fp, #-60]	@, %sfp
	cmp	r8, #0	@ ret.9156,
	add	r3, r0, r7	@,, byte_tmp.9157
	str	r3, [fp, #-60]	@, %sfp
	ble	.L3055	@,
	ldrb	r3, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.785, byte_tmp
	cmp	r3, #255	@ byte_tmp.785,
	beq	.L3056	@,
	cmp	r3, #128	@ byte_tmp.785,
	bne	.L3058	@,
	mov	r0, #0	@ D.46053,
	b	.L2883	@
.L2897:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	mov	lr, #1	@,
	str	lr, [fp, #-72]	@, %sfp
	bl	dprint_vfmw	@
	movw	r3, #57732	@ tmp372,
	ldr	r8, [r4, r3]	@ prephitmp.8805, <variable>.TotalUsrDatNum
	cmp	r8, #3	@ prephitmp.8805,
	bls	.L2941	@,
.L3367:
	movw	ip, #59224	@,
	movw	r8, #57736	@ tmp375,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	ldr	r1, [r4, r8]	@, <variable>.pUsrDatArray
	str	r3, [fp, #-84]	@,
	str	r8, [fp, #-88]	@,
	bl	FreeUsdByDec	@
	movw	r2, #59224	@,
	movw	lr, #57740	@,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	movw	r8, #57744	@,
	ldr	r1, [r4, lr]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	movw	r3, #59224	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	ldr	r1, [r4, r8]	@, <variable>.pUsrDatArray
	mov	r8, #0	@ prephitmp.8805,
	bl	FreeUsdByDec	@
	movw	ip, #57748	@,
	movw	r1, #59224	@,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [r4, ip]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	ldr	r2, [fp, #-88]	@,
	movw	r3, #57740	@,
	movw	ip, #57744	@,
	movw	r0, #57748	@,
	str	r8, [r4, r2]	@ prephitmp.8805, <variable>.pUsrDatArray
	str	r8, [r4, r3]	@ prephitmp.8805, <variable>.pUsrDatArray
	str	r8, [r4, ip]	@ prephitmp.8805, <variable>.pUsrDatArray
	str	r8, [r4, r0]	@ prephitmp.8805, <variable>.pUsrDatArray
	ldr	r1, [fp, #-84]	@,
	str	r8, [r4, r1]	@ prephitmp.8805, <variable>.TotalUsrDatNum
	b	.L2941	@
.L3371:
	ldr	lr, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	sub	r3, r8, #1	@ tmp1052, ret.8964,
	and	r3, r3, #1	@ tmp1054, tmp1052,
	add	ip, lr, #14400	@ tmp500, <variable>.TotalUsrDatNum,
	add	r0, ip, #34	@ tmp500, tmp500,
	ldr	r1, [r4, r0, asl #2]	@ tmp504, <variable>.pUsrDatArray
	str	r8, [r1, #1048]	@ ret.8964, <variable>.data_size
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp506, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp506, <variable>.BS.BsLen,
	bgt	.L2956	@,
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	str	r3, [fp, #-84]	@,
	mov	r7, #1	@ i.8976,
	bl	BsSkip	@
	cmp	r8, r7	@ ret.8964, i.8976
	ldr	r3, [fp, #-84]	@,
	ble	.L2956	@,
	cmp	r3, #0	@ tmp1054,
	beq	.L2957	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1244, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1244, <variable>.BS.BsLen,
	bgt	.L2956	@,
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r7, #2	@ i.8976,
	cmp	r8, r7	@ ret.8964, i.8976
	bgt	.L2957	@,
	b	.L2956	@
.L3385:
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	mov	r0, sl	@, D.46048
	add	r3, r1, #8	@ tmp1163, <variable>.BS.TotalPos,
	mov	r1, #8	@,
	cmp	r3, r2, asl #3	@ tmp1163, <variable>.BS.BsLen,
	bgt	.L2956	@,
	bl	BsSkip	@
	cmp	r8, r7	@ ret.8964, i.8976
	ble	.L2956	@,
.L2957:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	mov	r1, #8	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r7, r7, #1	@ tmp1055, i.8976,
	add	ip, lr, r1	@ tmp1155, <variable>.BS.TotalPos,
	mov	r0, sl	@, D.46048
	add	r7, r7, #1	@ i.8976, tmp1055,
	cmp	ip, r2, asl #3	@ tmp1155, <variable>.BS.BsLen,
	ble	.L3385	@,
	b	.L2956	@
.L3354:
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r8, #1	@ i.9139,
	cmp	r8, r3	@ i.9139,
	bge	.L3292	@,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8801, <variable>.BS.TotalPos
	mov	r2, r0, asl #3	@ prephitmp.8803, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp1460, prephitmp.8801,
	cmp	lr, r2	@ tmp1460, prephitmp.8803
	ble	.L3324	@,
	b	.L3043	@
.L3375:
	mov	r0, sl	@, D.46048
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	ip, [fp, #-60]	@, %sfp
	mov	r8, #1	@ i.8911,
	cmp	r8, ip	@ i.8911,
	bge	.L3257	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8812, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.8814, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp1213, prephitmp.8812,
	cmp	lr, r2	@ tmp1213, prephitmp.8814
	ble	.L3300	@,
	b	.L2925	@
.L3334:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3336:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3341:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3335:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3340:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3345:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3346:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3337:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3342:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3343:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3344:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3338:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3333:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3332:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3325:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3348:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3339:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3327:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3328:
	ldr	r9, [fp, #-60]	@ tmp939, %sfp
	b	.L3253	@
.L3368:
	movw	r2, #57732	@,
	strb	r1, [r3, #1064]	@ registered_flag, <variable>.IsRegistered
	ldr	lr, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #8	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC169	@,
	add	r3, lr, #14400	@ tmp421, <variable>.TotalUsrDatNum,
	movt	r2, #:upper16:.LC169	@,
	add	lr, r3, #34	@ tmp421, tmp421,
	ldr	r8, [r4, lr, asl #2]	@ temp.8942, <variable>.pUsrDatArray
	str	ip, [fp, #-88]	@,
	bl	u_v	@
	movw	ip, #57732	@,
	strb	r0, [r8, #1065]	@, <variable>.itu_t_t35_country_code
	ldr	r8, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	ip, [fp, #-88]	@,
	add	r3, r8, #14400	@ tmp427, <variable>.TotalUsrDatNum,
	add	r1, r3, #34	@ tmp427, tmp427,
	ldr	r8, [r4, r1, asl #2]	@ temp.8944, <variable>.pUsrDatArray
	ldrb	r0, [r8, #1065]	@ zero_extendqisi2	@ <variable>.itu_t_t35_country_code, <variable>.itu_t_t35_country_code
	cmp	r0, #255	@ <variable>.itu_t_t35_country_code,
	beq	.L2949	@,
	mov	r1, #0	@,
	mov	r0, #3	@,
	strb	r1, [r8, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	str	r0, [fp, #-60]	@, %sfp
.L2950:
	movw	r8, #57732	@ tmp438,
	mov	r1, #16	@,
	ldr	lr, [r4, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC171	@,
	movt	r2, #:upper16:.LC171	@,
	add	r3, lr, #14400	@ tmp436, <variable>.TotalUsrDatNum,
	add	lr, r3, #34	@ tmp436, tmp436,
	ldr	r3, [r4, lr, asl #2]	@, <variable>.pUsrDatArray
	str	ip, [fp, #-88]	@,
	str	r3, [fp, #-76]	@, %sfp
	bl	u_v	@
	ldr	lr, [fp, #-76]	@, %sfp
	movw	ip, #1068	@ tmp441,
	ldr	r1, [fp, #-60]	@, %sfp
	strh	r0, [lr, ip]	@ movhi	@, <variable>.itu_t_t35_provider_code
	mov	r0, r4	@, pH264Ctx
	bl	PassBytes	@
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	ip, [fp, #-88]	@,
	cmp	r3, r2	@,
	bne	.L2951	@,
	ldr	r1, [r4, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r3, #1056	@ tmp447,
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	add	r0, r1, #14400	@ tmp442, <variable>.TotalUsrDatNum,
	add	lr, r0, #34	@ tmp442, tmp442,
	ldrd	r0, [r2, #56]	@ <variable>.pts, <variable>.pstExtraData,
	ldr	ip, [r4, lr, asl #2]	@ tmp446, <variable>.pUsrDatArray
	strd	r0, [ip, r3]	@ <variable>.pts, tmp446, tmp447
	ldr	lr, [r4, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, lr, #14400	@ tmp450, <variable>.TotalUsrDatNum,
	mov	lr, #8	@ tmp455,
	add	ip, r2, #34	@ tmp450, tmp450,
	movw	r2, #59184	@ tmp461,
	ldr	r3, [r4, ip, asl #2]	@ tmp454, <variable>.pUsrDatArray
	str	lr, [r3, #1036]	@ tmp455, <variable>.from
	ldr	ip, [r4, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	r2, [r4, r2]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	lr, ip, #14400	@ tmp456, <variable>.TotalUsrDatNum,
	add	r3, lr, #34	@ tmp456, tmp456,
	ldr	ip, [r4, r3, asl #2]	@ tmp460, <variable>.pUsrDatArray
	str	r2, [ip, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r2, [fp, #-68]	@, %sfp
	ldr	ip, [r2, #0]	@ g_event_report.797, g_event_report
	cmp	ip, #0	@ g_event_report.797,
	ldrne	r2, [r4, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	bne	.L3350	@,
	b	.L2961	@
.L3372:
	rsb	r1, ip, r7	@, D.46122, payloadSize
	mov	r0, r4	@, pH264Ctx
	bl	PassBytes	@
	cmp	r0, #0	@,
	bge	.L2958	@,
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10483	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2958	@
.L3355:
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	b	.L3041	@
.L3376:
	mov	r0, sl	@, D.46048
	bl	BsSkip	@
	b	.L2923	@
.L3378:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10339	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2934	@
.L3379:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10538	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2966	@
.L3358:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10832	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3036	@
.L3359:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10748	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3016	@
.L3380:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10884	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3047	@
.L3381:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10643	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2991	@
.L3383:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10265	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2917	@
.L3384:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10601	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2981	@
.L3360:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10790	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3026	@
.L3361:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10706	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3006	@
.L3362:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10811	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3031	@
.L3363:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10727	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3011	@
.L3364:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10769	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3021	@
.L3365:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10685	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L3001	@
.L3366:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10664	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2996	@
.L3373:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10580	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2976	@
.L3374:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10559	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2971	@
.L3382:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10318	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2929	@
.L3377:
	movw	r1, #:lower16:.LC163	@,
	ldr	r2, .L3386	@,
	movt	r1, #:upper16:.LC163	@,
	movw	r3, #10622	@,
	mov	r0, #20	@,
	bl	dprint_vfmw	@
	b	.L2986	@
.L3046:
	ldr	r2, .L3386	@,
	movw	r3, #10875	@,
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC163	@,
	movt	r1, #:upper16:.LC163	@,
	bl	dprint_vfmw	@
	movw	r2, #57732	@ tmp910,
	ldr	r3, [r4, r2]	@ prephitmp.8799, <variable>.TotalUsrDatNum
	b	.L2919	@
.L3326:
	ldr	r7, [fp, #-76]	@ payloadSize, %sfp
	b	.L2925	@
.L3347:
	ldr	r7, [fp, #-76]	@ payloadSize, %sfp
	b	.L3043	@
.L2949:
	mov	r0, r4	@, pH264Ctx
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC170	@,
	movt	r2, #:upper16:.LC170	@,
	str	ip, [fp, #-88]	@,
	bl	u_v	@
	mov	ip, #4	@,
	str	ip, [fp, #-60]	@, %sfp
	strb	r0, [r8, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	ldr	ip, [fp, #-88]	@,
	b	.L2950	@
.L3369:
	movw	r5, #57732	@ tmp477,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC172	@,
	movt	r1, #:upper16:.LC172	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, r5]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r2, #59224	@ tmp473,
	add	r1, r0, #14400	@ tmp474, <variable>.TotalUsrDatNum,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	add	ip, r1, #34	@ tmp474, tmp474,
	ldr	r1, [r4, ip, asl #2]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	ldr	r3, [r4, r5]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
.L3349:
	add	r3, r3, #14400	@ tmp494, <variable>.TotalUsrDatNum,
	mov	lr, #0	@ tmp498,
	add	r2, r3, #34	@ tmp494, tmp494,
	mvn	r0, #0	@ D.46053,
	str	lr, [r4, r2, asl #2]	@ tmp498, <variable>.pUsrDatArray
	b	.L2883	@
.L3370:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC173	@,
	movt	r1, #:upper16:.LC173	@,
	bl	dprint_vfmw	@
	ldr	ip, [fp, #-84]	@,
	movw	r1, #59224	@ tmp489,
	ldr	r0, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, r0, #14400	@ tmp490, <variable>.TotalUsrDatNum,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	add	r2, r3, #34	@ tmp490, tmp490,
	ldr	r1, [r4, r2, asl #2]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	ldr	ip, [fp, #-84]	@,
	ldr	r3, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	b	.L3349	@
.L2942:
	mvn	r0, #0	@ D.46053,
	b	.L2883	@
.L3387:
	.align	2
.L3386:
	.word	.LANCHOR0+280
	.fnend
	.size	H264_DecSEI, .-H264_DecSEI
	.align	2
	.global	vui_parameters
	.type	vui_parameters, %function
vui_parameters:
	.fnstart
.LFB1640:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pVUI, pVUI
	movw	r1, #:lower16:.LC191	@,
	movt	r1, #:upper16:.LC191	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	u_1	@
	uxtb	r0, r0	@ D.44834,
	strb	r0, [r5, #0]	@ D.44834, <variable>.aspect_ratio_info_present_flag
	cmp	r0, #0	@ D.44834,
	streqb	r0, [r5, #15]	@ D.44834, <variable>.aspect_ratio_idc
	bne	.L3413	@,
.L3390:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC195	@,
	movt	r1, #:upper16:.LC195	@,
	bl	u_1	@
	uxtb	r2, r0	@ D.44849,
	strb	r2, [r5, #1]	@ D.44849, <variable>.overscan_info_present_flag
	cmp	r2, #0	@ D.44849,
	bne	.L3414	@,
.L3391:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC197	@,
	movt	r1, #:upper16:.LC197	@,
	bl	u_1	@
	uxtb	r3, r0	@ D.44856,
	strb	r3, [r5, #3]	@ D.44856, <variable>.video_signal_type_present_flag
	cmp	r3, #0	@ D.44856,
	moveq	r3, #5	@ tmp229,
	streq	r3, [r5, #28]	@ tmp229, <variable>.video_format
	bne	.L3415	@,
.L3393:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC204	@,
	movt	r1, #:upper16:.LC204	@,
	bl	u_1	@
	uxtb	r0, r0	@ D.44877,
	strb	r0, [r5, #6]	@ D.44877, <variable>.chroma_location_info_present_flag
	cmp	r0, #0	@ D.44877,
	bne	.L3416	@,
.L3394:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC207	@,
	movt	r1, #:upper16:.LC207	@,
	bl	u_1	@
	uxtb	r1, r0	@ D.44884,
	strb	r1, [r5, #8]	@ D.44884, <variable>.timing_info_present_flag
	cmp	r1, #0	@ D.44884,
	bne	.L3417	@,
.L3395:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC211	@,
	movt	r1, #:upper16:.LC211	@,
	bl	u_1	@
	uxtb	r0, r0	@ D.44904,
	strb	r0, [r5, #7]	@ D.44904, <variable>.nal_hrd_parameters_present_flag
	cmp	r0, #0	@ D.44904,
	beq	.L3396	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC212	@,
	movt	r1, #:upper16:.LC212	@,
	bl	ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC213	@,
	movt	r2, #:upper16:.LC213	@,
	str	r0, [r5, #96]	@, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC214	@,
	movt	r2, #:upper16:.LC214	@,
	strb	r0, [r5, #92]	@, <variable>.nal_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	ldr	r1, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	cmp	r1, #31	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #93]	@, <variable>.nal_hrd_parameters.cpb_size_scale
	bhi	.L3402	@,
	movw	lr, #59164	@ tmp254,
	ldr	r8, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.9283, pVUI
	moveq	r7, r5	@ ivtmp.9272, pVUI
	bne	.L3402	@,
.L3400:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC216	@,
	movt	r1, #:upper16:.LC216	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	ue_v	@
	movw	r1, #:lower16:.LC217	@,
	movt	r1, #:upper16:.LC217	@,
	str	r0, [r6, #100]	@, <variable>.nal_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC218	@,
	movt	r1, #:upper16:.LC218	@,
	str	r0, [r6, #228]	@, <variable>.nal_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	ldr	r2, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.9283, ivtmp.9283,
	cmp	r2, r8	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #60]	@, <variable>.nal_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.9272, ivtmp.9272,
	bcs	.L3400	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC219	@,
	movt	r2, #:upper16:.LC219	@,
	bl	u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC220	@,
	movt	r2, #:upper16:.LC220	@,
	str	r0, [r5, #356]	@, <variable>.nal_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC221	@,
	movt	r2, #:upper16:.LC221	@,
	str	r0, [r5, #360]	@, <variable>.nal_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC222	@,
	movt	r2, #:upper16:.LC222	@,
	str	r0, [r5, #364]	@, <variable>.nal_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	str	r0, [r5, #368]	@, <variable>.nal_hrd_parameters.time_offset_length
.L3396:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC223	@,
	movt	r1, #:upper16:.LC223	@,
	bl	u_1	@
	uxtb	ip, r0	@ D.44934,
	strb	ip, [r5, #10]	@ D.44934, <variable>.vcl_hrd_parameters_present_flag
	cmp	ip, #0	@ D.44934,
	bne	.L3418	@,
.L3401:
	ldrb	lr, [r5, #7]	@ zero_extendqisi2	@ <variable>.nal_hrd_parameters_present_flag, <variable>.nal_hrd_parameters_present_flag
	cmp	lr, #0	@ <variable>.nal_hrd_parameters_present_flag,
	bne	.L3405	@,
	ldrb	r2, [r5, #10]	@ zero_extendqisi2	@ <variable>.vcl_hrd_parameters_present_flag, <variable>.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vcl_hrd_parameters_present_flag,
	bne	.L3405	@,
.L3406:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC225	@,
	movt	r1, #:upper16:.LC225	@,
	bl	u_1	@
	movw	r1, #:lower16:.LC226	@,
	movt	r1, #:upper16:.LC226	@,
	strb	r0, [r5, #11]	@, <variable>.pic_struct_present_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	uxtb	ip, r0	@ D.44968,
	strb	ip, [r5, #12]	@ D.44968, <variable>.bitstream_restriction_flag
	cmp	ip, #0	@ D.44968,
	bne	.L3419	@,
	movw	lr, #59164	@ tmp304,
	ldr	r1, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3408	@,
.L3409:
	mov	r0, #0	@ D.44919,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3405:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC224	@,
	movt	r1, #:upper16:.LC224	@,
	bl	u_1	@
	strb	r0, [r5, #14]	@, <variable>.low_delay_hrd_flag
	b	.L3406	@
.L3419:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC227	@,
	movt	r1, #:upper16:.LC227	@,
	bl	u_1	@
	movw	r1, #:lower16:.LC228	@,
	movt	r1, #:upper16:.LC228	@,
	strb	r0, [r5, #13]	@, <variable>.motion_vectors_over_pic_boundaries_flag
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC229	@,
	movt	r1, #:upper16:.LC229	@,
	str	r0, [r5, #684]	@, <variable>.max_bytes_per_pic_denom
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC230	@,
	movt	r1, #:upper16:.LC230	@,
	str	r0, [r5, #688]	@, <variable>.max_bits_per_mb_denom
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC231	@,
	movt	r1, #:upper16:.LC231	@,
	str	r0, [r5, #696]	@, <variable>.log2_max_mv_length_horizontal
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC232	@,
	movt	r1, #:upper16:.LC232	@,
	str	r0, [r5, #692]	@, <variable>.log2_max_mv_length_vertical
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC233	@,
	movt	r1, #:upper16:.LC233	@,
	str	r0, [r5, #700]	@, <variable>.num_reorder_frames
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	str	r0, [r5, #704]	@, <variable>.max_dec_frame_buffering
	movw	r0, #59164	@ tmp302,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3409	@,
.L3408:
	mvn	r0, #0	@ D.44919,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3413:
	mov	r1, #8	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC192	@,
	movt	r2, #:upper16:.LC192	@,
	bl	u_v	@
	uxtb	r1, r0	@ D.44839,
	strb	r1, [r5, #15]	@ D.44839, <variable>.aspect_ratio_idc
	cmp	r1, #255	@ D.44839,
	bne	.L3390	@,
	mov	r1, #16	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC193	@,
	movt	r2, #:upper16:.LC193	@,
	bl	u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC194	@,
	movt	r2, #:upper16:.LC194	@,
	str	r0, [r5, #16]	@, <variable>.sar_width
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	str	r0, [r5, #20]	@, <variable>.sar_height
	b	.L3390	@
.L3417:
	mov	r1, #32	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC208	@,
	movt	r2, #:upper16:.LC208	@,
	bl	u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC209	@,
	movt	r2, #:upper16:.LC209	@,
	str	r0, [r5, #52]	@, <variable>.num_units_in_tick
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	str	r0, [r5, #56]	@, <variable>.time_scale
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	uxtb	r2, r0	@ D.44893,
	strb	r2, [r5, #9]	@ D.44893, <variable>.fixed_frame_rate_flag
	cmp	r2, #1	@ D.44893,
	bne	.L3395	@,
	ldr	r1, [r5, #52]	@ D.44897, <variable>.num_units_in_tick
	cmp	r1, #0	@ D.44897,
	beq	.L3395	@,
	ldr	r0, [r5, #56]	@, <variable>.time_scale
	bl	__aeabi_uidiv	@
	movw	r3, #57728	@ tmp240,
	mov	ip, r0, lsr #1	@ tmp245,,
	str	ip, [r4, r3]	@ tmp245, <variable>.frame_rate
	b	.L3395	@
.L3416:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC205	@,
	movt	r1, #:upper16:.LC205	@,
	bl	ue_v	@
	movw	r1, #:lower16:.LC206	@,
	movt	r1, #:upper16:.LC206	@,
	str	r0, [r5, #44]	@, <variable>.chroma_sample_loc_type_top_field
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	str	r0, [r5, #48]	@, <variable>.chroma_sample_loc_type_bottom_field
	b	.L3394	@
.L3415:
	mov	r1, #3	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC198	@,
	movt	r2, #:upper16:.LC198	@,
	bl	u_v	@
	movw	r1, #:lower16:.LC199	@,
	movt	r1, #:upper16:.LC199	@,
	str	r0, [r5, #28]	@, <variable>.video_format
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC200	@,
	movt	r1, #:upper16:.LC200	@,
	strb	r0, [r5, #4]	@, <variable>.video_full_range_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	uxtb	ip, r0	@ D.44865,
	strb	ip, [r5, #5]	@ D.44865, <variable>.colour_description_present_flag
	cmp	ip, #0	@ D.44865,
	beq	.L3393	@,
	mov	r1, #8	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC201	@,
	movt	r2, #:upper16:.LC201	@,
	bl	u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC202	@,
	movt	r2, #:upper16:.LC202	@,
	str	r0, [r5, #32]	@, <variable>.colour_primaries
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC203	@,
	movt	r2, #:upper16:.LC203	@,
	str	r0, [r5, #36]	@, <variable>.transfer_characteristics
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	str	r0, [r5, #40]	@, <variable>.matrix_coefficients
	b	.L3393	@
.L3414:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC196	@,
	movt	r1, #:upper16:.LC196	@,
	bl	u_1	@
	strb	r0, [r5, #2]	@, <variable>.overscan_appropriate_flag
	b	.L3391	@
.L3418:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC212	@,
	movt	r1, #:upper16:.LC212	@,
	bl	ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC213	@,
	movt	r2, #:upper16:.LC213	@,
	str	r0, [r5, #408]	@, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC214	@,
	movt	r2, #:upper16:.LC214	@,
	strb	r0, [r5, #404]	@, <variable>.vcl_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	ldr	r3, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	cmp	r3, #31	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #405]	@, <variable>.vcl_hrd_parameters.cpb_size_scale
	bhi	.L3402	@,
	movw	r0, #59164	@ tmp274,
	ldr	r8, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.9264, pVUI
	moveq	r7, r5	@ ivtmp.9277, pVUI
	bne	.L3402	@,
.L3404:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC216	@,
	movt	r1, #:upper16:.LC216	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	ue_v	@
	movw	r1, #:lower16:.LC217	@,
	movt	r1, #:upper16:.LC217	@,
	str	r0, [r6, #412]	@, <variable>.vcl_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC218	@,
	movt	r1, #:upper16:.LC218	@,
	str	r0, [r6, #540]	@, <variable>.vcl_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	ldr	r1, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.9264, ivtmp.9264,
	cmp	r1, r8	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #372]	@, <variable>.vcl_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.9277, ivtmp.9277,
	bcs	.L3404	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC219	@,
	movt	r2, #:upper16:.LC219	@,
	bl	u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC220	@,
	movt	r2, #:upper16:.LC220	@,
	str	r0, [r5, #668]	@, <variable>.vcl_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC221	@,
	movt	r2, #:upper16:.LC221	@,
	str	r0, [r5, #672]	@, <variable>.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC222	@,
	movt	r2, #:upper16:.LC222	@,
	str	r0, [r5, #676]	@, <variable>.vcl_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	str	r0, [r5, #680]	@, <variable>.vcl_hrd_parameters.time_offset_length
	b	.L3401	@
.L3402:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC215	@,
	movt	r1, #:upper16:.LC215	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44919,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	vui_parameters, .-vui_parameters
	.align	2
	.global	ProcessSPS
	.type	ProcessSPS, %function
ProcessSPS:
	.fnstart
.LFB1643:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pSPS, pSPS
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	beq	.L3501	@,
	ldr	r3, [r5, #736]	@ D.45254, <variable>.profile_idc
	cmp	r3, #100	@ D.45254,
	cmpne	r3, #110	@, D.45254,
	movne	r2, #0	@, tmp220
	moveq	r2, #1	@, tmp220
	beq	.L3423	@,
	cmp	r3, #122	@ D.45254,
	beq	.L3423	@,
	cmp	r3, #144	@ D.45254,
	beq	.L3423	@,
	cmp	r3, #83	@ D.45254,
	beq	.L3423	@,
	cmp	r3, #86	@ D.45254,
	strneb	r2, [r5, #25]	@ tmp220, <variable>.seq_scaling_matrix_present_flag
	movne	r3, #1	@ tmp415,
	strne	r3, [r5, #748]	@ tmp415, <variable>.chroma_format_idc
	beq	.L3423	@,
.L3433:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC244	@,
	movt	r1, #:upper16:.LC244	@,
	bl	ue_v	@
	cmp	r0, #12	@ D.45371,
	str	r0, [r5, #2904]	@ D.45371, <variable>.log2_max_frame_num_minus4
	bhi	.L3449	@,
	movw	r6, #59164	@ tmp419,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3449	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC246	@,
	movt	r1, #:upper16:.LC246	@,
	bl	ue_v	@
	cmp	r0, #2	@ D.45377,
	str	r0, [r5, #2908]	@ D.45377, <variable>.pic_order_cnt_type
	bhi	.L3451	@,
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3451	@,
	cmp	r0, #0	@ D.45377,
	beq	.L3502	@,
	cmp	r0, #1	@ D.45377,
	beq	.L3503	@,
.L3455:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC256	@,
	movt	r1, #:upper16:.LC256	@,
	movw	r6, #59164	@ tmp450,
	bl	ue_v	@
	str	r0, [r5, #3952]	@, <variable>.num_ref_frames
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	beq	.L3504	@,
.L3456:
	mvn	r0, #0	@ D.45250,
.L3422:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3423:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC234	@,
	movt	r1, #:upper16:.LC234	@,
	bl	ue_v	@
	cmp	r0, #1	@ D.45263,
	str	r0, [r5, #748]	@ D.45263, <variable>.chroma_format_idc
	bhi	.L3425	@,
	movw	r6, #59164	@ tmp222,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3425	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC236	@,
	movt	r1, #:upper16:.LC236	@,
	bl	ue_v	@
	uxth	r2, r0	@ D.45270,
	add	r2, r2, #8	@ D.45274, D.45270,
	str	r2, [r5, #752]	@ D.45274, <variable>.bit_depth_luma
	cmp	r2, #8	@ D.45274,
	beq	.L3505	@,
.L3427:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC237	@,
	movt	r1, #:upper16:.LC237	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:g_event_report	@ tmp230,
	movt	r1, #:upper16:g_event_report	@ tmp230,
	ldr	ip, [r1, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L3428	@,
	mov	r2, #0	@ tmp232,
	str	r2, [fp, #-60]	@ tmp232, para
	ldr	lr, [r5, #752]	@ <variable>.bit_depth_luma, <variable>.bit_depth_luma
	movw	r3, #59224	@ tmp235,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r1, #119	@,
	sub	r2, fp, #60	@,,
	mov	r3, #8	@,
	str	lr, [fp, #-56]	@ <variable>.bit_depth_luma, para
	blx	ip	@ g_event_report
.L3428:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC238	@,
	movt	r1, #:upper16:.LC238	@,
	bl	ue_v	@
	uxth	ip, r0	@ D.45284,
	add	r2, ip, #8	@ D.45288, D.45284,
	str	r2, [r5, #756]	@ D.45288, <variable>.bit_depth_chroma
	cmp	r2, #8	@ D.45288,
	beq	.L3506	@,
.L3429:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC239	@,
	movt	r1, #:upper16:.LC239	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp244,
	movt	r3, #:upper16:g_event_report	@ tmp244,
	ldr	ip, [r3, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L3430	@,
	mov	r0, #0	@ tmp246,
	str	r0, [fp, #-60]	@ tmp246, para
	ldr	lr, [r5, #756]	@ <variable>.bit_depth_chroma, <variable>.bit_depth_chroma
	movw	r2, #59224	@ tmp249,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	mov	r1, #119	@,
	sub	r2, fp, #60	@,,
	mov	r3, #8	@,
	str	lr, [fp, #-56]	@ <variable>.bit_depth_chroma, para
	blx	ip	@ g_event_report
.L3430:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC240	@,
	movt	r1, #:upper16:.LC240	@,
	bl	u_1	@
	cmp	r0, #0	@,
	bne	.L3431	@,
	movw	r1, #59164	@ tmp254,
	ldr	ip, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3431	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC242	@,
	movt	r1, #:upper16:.LC242	@,
	bl	u_1	@
	uxtb	r3, r0	@ D.45302,
	strb	r3, [r5, #25]	@ D.45302, <variable>.seq_scaling_matrix_present_flag
	cmp	r3, #1	@ D.45302,
	bne	.L3433	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	add	r6, r5, #2672	@ D.45316, pSPS,
	bl	u_1	@
	add	r6, r6, #8	@ D.45316, D.45316,
	add	sl, r5, #760	@ D.45313, pSPS,
	cmp	r0, #1	@ temp.9349,
	str	r0, [fp, #-84]	@ temp.9349, q4x4defaultflag
	strb	r0, [r5, #4]	@ temp.9349, <variable>.seq_scaling_list_present_flag
	beq	.L3434	@,
.L3496:
	ldr	lr, .L3514	@ tmp270,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp270,,,,
	stmia	r6, {r0, r1, r2, r3}	@ D.45316,,,,
.L3435:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	cmp	r0, #1	@ temp.9388,
	str	r0, [fp, #-80]	@ temp.9388, q4x4defaultflag
	strb	r0, [r5, #5]	@ temp.9388, <variable>.seq_scaling_list_present_flag
	beq	.L3436	@,
	add	r7, r6, #16	@ tmp570, D.45316,
	mov	r1, r6	@, D.45316
	mov	r2, #16	@,
	mov	r0, r7	@, tmp570
	bl	memcpy	@
.L3437:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	cmp	r0, #1	@ temp.9396,
	str	r0, [fp, #-76]	@ temp.9396, q4x4defaultflag
	strb	r0, [r5, #6]	@ temp.9396, <variable>.seq_scaling_list_present_flag
	beq	.L3438	@,
	mov	r1, r7	@, tmp570
	add	r0, r6, #32	@, D.45316,
	mov	r2, #16	@,
	bl	memcpy	@
.L3439:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	cmp	r0, #1	@ temp.9405,
	str	r0, [fp, #-72]	@ temp.9405, q4x4defaultflag
	strb	r0, [r5, #7]	@ temp.9405, <variable>.seq_scaling_list_present_flag
	beq	.L3440	@,
	add	r7, r6, #48	@ tmp572, D.45316,
	ldr	r1, .L3514+4	@,
	mov	r2, #16	@,
	mov	r0, r7	@, tmp572
	bl	memcpy	@
.L3441:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	cmp	r0, #1	@ temp.9413,
	str	r0, [fp, #-68]	@ temp.9413, q4x4defaultflag
	strb	r0, [r5, #8]	@ temp.9413, <variable>.seq_scaling_list_present_flag
	beq	.L3442	@,
	add	r8, r6, #64	@ tmp574, D.45316,
	mov	r1, r7	@, tmp572
	mov	r2, #16	@,
	mov	r0, r8	@, tmp574
	bl	memcpy	@
.L3443:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	cmp	r0, #1	@ D.45307,
	str	r0, [fp, #-64]	@ D.45307, q4x4defaultflag
	strb	r0, [r5, #9]	@ D.45307, <variable>.seq_scaling_list_present_flag
	beq	.L3507	@,
	add	r0, r6, #80	@, D.45316,
	mov	r1, r8	@, tmp574
	mov	r2, #16	@,
	bl	memcpy	@
.L3445:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	add	r7, r5, #1136	@ D.45350, pSPS,
	bl	u_1	@
	add	r6, r5, #2768	@ D.45353, pSPS,
	add	r7, r7, #8	@ D.45350, D.45350,
	add	r6, r6, #8	@ D.45353, D.45353,
	cmp	r0, #1	@ temp.9422,
	str	r0, [fp, #-52]	@ temp.9422, q8x8defaultflag
	strb	r0, [r5, #10]	@ temp.9422, <variable>.seq_scaling_list_present_flag
	beq	.L3446	@,
.L3497:
	ldr	lr, .L3514+8	@ tmp390,
	mov	ip, r6	@ D.45353, D.45353
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp392,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.45353,,,,
	mov	r8, ip	@ D.45353, D.45353
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp583,,,,
	stmia	r8!, {r0, r1, r2, r3}	@ D.45353,,,,
	mov	ip, r8	@ D.45353, D.45353
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp585,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.45353,,,,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp585,,,,
	stmia	ip, {r0, r1, r2, r3}	@ D.45353,,,,
.L3447:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	cmp	r0, #1	@ D.45343,
	str	r0, [fp, #-48]	@ D.45343, q8x8defaultflag
	strb	r0, [r5, #11]	@ D.45343, <variable>.seq_scaling_list_present_flag
	beq	.L3508	@,
	add	r0, r6, #64	@, D.45353,
	ldr	r1, .L3514+12	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3433	@
.L3506:
	movw	r1, #59164	@ tmp241,
	ldr	r0, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3430	@,
	b	.L3429	@
.L3505:
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3428	@,
	b	.L3427	@
.L3502:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC248	@,
	movt	r1, #:upper16:.LC248	@,
	bl	ue_v	@
	cmp	r0, #12	@ D.45385,
	str	r0, [r5, #2912]	@ D.45385, <variable>.log2_max_pic_order_cnt_lsb_minus4
	bhi	.L3454	@,
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3455	@,
.L3454:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC249	@,
	movt	r1, #:upper16:.LC249	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3425:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC235	@,
	movt	r1, #:upper16:.LC235	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3449:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC245	@,
	movt	r1, #:upper16:.LC245	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3431:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC241	@,
	movt	r1, #:upper16:.LC241	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3503:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC250	@,
	movt	r1, #:upper16:.LC250	@,
	bl	u_1	@
	strb	r0, [r5, #16]	@, <variable>.delta_pic_order_always_zero_flag
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC251	@,
	movt	r1, #:upper16:.LC251	@,
	bl	se_v	@
	str	r0, [r5, #2916]	@, <variable>.offset_for_non_ref_pic
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC252	@,
	movt	r1, #:upper16:.LC252	@,
	bl	se_v	@
	str	r0, [r5, #2920]	@, <variable>.offset_for_top_to_bottom_field
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC253	@,
	movt	r1, #:upper16:.LC253	@,
	bl	ue_v	@
	cmp	r0, #255	@ prephitmp.9311,
	mov	r3, r0	@ prephitmp.9311,
	str	r0, [r5, #2924]	@ prephitmp.9311, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bhi	.L3457	@,
	movw	r8, #59164	@ tmp441,
	ldr	r6, [r4, r8]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r6, #0	@ <variable>.SeErrFlg,
	addeq	r7, r5, #2928	@ ivtmp.9328, pSPS,
	beq	.L3458	@,
	b	.L3457	@
.L3459:
	bl	se_v	@
	str	r0, [r7], #4	@, <variable>.offset_for_ref_frame
	ldr	r2, [r4, r8]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	ldr	r3, [r5, #2924]	@ prephitmp.9311, <variable>.num_ref_frames_in_pic_order_cnt_cycle
.L3458:
	cmp	r6, r3	@ i, prephitmp.9311
	movw	r1, #:lower16:.LC255	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC255	@,
	add	r6, r6, #1	@ i, i,
	bcc	.L3459	@,
	movw	r0, #59164	@ tmp447,
	ldr	lr, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	b	.L3455	@
.L3504:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC257	@,
	movt	r1, #:upper16:.LC257	@,
	bl	u_1	@
	strb	r0, [r5, #17]	@, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC258	@,
	movt	r1, #:upper16:.LC258	@,
	movw	r7, #509	@ tmp458,
	bl	ue_v	@
	sub	r3, r0, #1	@ tmp457, D.45422,
	mov	r2, r0	@ D.45422,
	cmp	r3, r7	@ tmp457, tmp458
	str	r0, [r5, #3956]	@ D.45422, <variable>.pic_width_in_mbs_minus1
	bhi	.L3460	@,
	ldr	lr, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L3461	@,
.L3460:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC259	@,
	movt	r1, #:upper16:.LC259	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3451:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC247	@,
	movt	r1, #:upper16:.LC247	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3434:
	mov	r0, r4	@, pH264Ctx
	mov	r1, sl	@, D.45313
	mov	r2, r6	@, D.45316
	mov	r3, #16	@,
	sub	r8, fp, #84	@ tmp267,,
	str	r8, [sp, #0]	@ tmp267,
	bl	Scaling_List	@
	ldr	r7, [fp, #-84]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r7, #1	@ q4x4defaultflag,
	bne	.L3435	@,
	b	.L3496	@
.L3446:
	mov	r0, r4	@, pH264Ctx
	mov	r1, r7	@, D.45350
	mov	r2, r6	@, D.45353
	mov	r3, #64	@,
	sub	lr, fp, #52	@ tmp387,,
	str	lr, [sp, #0]	@ tmp387,
	bl	Scaling_List	@
	ldr	r0, [fp, #-52]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r0, #1	@ q8x8defaultflag,
	bne	.L3447	@,
	b	.L3497	@
.L3507:
	add	r6, r6, #80	@ tmp575, D.45316,
	add	r1, sl, #320	@, D.45313,
	mov	r0, r4	@, pH264Ctx
	mov	r3, #16	@,
	mov	r2, r6	@, tmp575
	sub	ip, fp, #64	@ tmp363,,
	str	ip, [sp, #0]	@ tmp363,
	bl	Scaling_List	@
	ldr	r2, [fp, #-64]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r2, #1	@ q4x4defaultflag,
	bne	.L3445	@,
	mov	r0, r6	@, tmp575
	ldr	r1, .L3514+4	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3445	@
.L3508:
	add	r6, r6, #64	@ tmp573, D.45353,
	add	r1, r7, #256	@, D.45350,
	mov	r0, r4	@, pH264Ctx
	mov	r3, #64	@,
	mov	r2, r6	@, tmp573
	sub	lr, fp, #48	@ tmp399,,
	str	lr, [sp, #0]	@ tmp399,
	bl	Scaling_List	@
	ldr	r1, [fp, #-48]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r1, #1	@ q8x8defaultflag,
	bne	.L3433	@,
	mov	r0, r6	@, tmp573
	ldr	r1, .L3514+12	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3433	@
.L3442:
	add	r8, r6, #64	@ tmp574, D.45316,
	mov	r3, #16	@,
	mov	r0, r4	@, pH264Ctx
	add	r1, sl, #256	@, D.45313,
	mov	r2, r8	@, tmp574
	sub	r7, fp, #68	@ tmp348,,
	str	r7, [sp, #0]	@ tmp348,
	bl	Scaling_List	@
	ldr	r3, [fp, #-68]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r3, #1	@ q4x4defaultflag,
	bne	.L3443	@,
	mov	r0, r8	@, tmp574
	ldr	r1, .L3514+4	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3443	@
.L3440:
	add	r7, r6, #48	@ tmp572, D.45316,
	add	r1, sl, #192	@, D.45313,
	mov	r0, r4	@, pH264Ctx
	mov	r3, #16	@,
	mov	r2, r7	@, tmp572
	sub	lr, fp, #72	@ tmp327,,
	str	lr, [sp, #0]	@ tmp327,
	bl	Scaling_List	@
	ldr	r1, [fp, #-72]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r1, #1	@ q4x4defaultflag,
	bne	.L3441	@,
	mov	r0, r7	@, tmp572
	ldr	r1, .L3514+4	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3441	@
.L3438:
	add	r7, r6, #32	@ tmp571, D.45316,
	mov	r0, r4	@, pH264Ctx
	add	r1, sl, #128	@, D.45313,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp571
	sub	r8, fp, #76	@ tmp305,,
	str	r8, [sp, #0]	@ tmp305,
	bl	Scaling_List	@
	ldr	r0, [fp, #-76]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r0, #1	@ q4x4defaultflag,
	bne	.L3439	@,
	mov	r0, r7	@, tmp571
	ldr	r1, .L3514	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3439	@
.L3436:
	add	r7, r6, #16	@ tmp570, D.45316,
	mov	r0, r4	@, pH264Ctx
	add	r1, sl, #64	@, D.45313,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp570
	sub	ip, fp, #80	@ tmp284,,
	str	ip, [sp, #0]	@ tmp284,
	bl	Scaling_List	@
	ldr	r2, [fp, #-80]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r2, #1	@ q4x4defaultflag,
	bne	.L3437	@,
	mov	r0, r7	@, tmp570
	ldr	r1, .L3514	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3437	@
.L3501:
	mov	r0, r5	@, pSPS
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #9353	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3461:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC260	@,
	movt	r1, #:upper16:.LC260	@,
	bl	ue_v	@
	str	r0, [r5, #3960]	@, <variable>.pic_height_in_map_units_minus1
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC261	@,
	movt	r1, #:upper16:.LC261	@,
	bl	u_1	@
	uxtb	r0, r0	@ D.45433,
	strb	r0, [r5, #18]	@ D.45433, <variable>.frame_mbs_only_flag
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	cmp	r0, #0	@ D.45433,
	bne	.L3462	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC262	@,
	movt	r1, #:upper16:.LC262	@,
	bl	u_1	@
	ldr	ip, [r5, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	r3, ip, #1	@ prephitmp.9364, <variable>.pic_height_in_map_units_minus1,
	cmp	r3, #255	@ prephitmp.9364,
	strb	r0, [r5, #19]	@, <variable>.mb_adaptive_frame_field_flag
	bhi	.L3493	@,
	ldr	r8, [r5, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	r8, r8, #1	@ prephitmp.9305, <variable>.pic_width_in_mbs_minus1,
	cmp	r8, #3	@ prephitmp.9305,
	bls	.L3493	@,
	cmp	r3, #1	@ prephitmp.9364,
	movhi	sl, #2	@ temp,
	bls	.L3493	@,
.L3494:
	mul	lr, sl, r3	@ tmp475, temp, prephitmp.9364
	mov	r8, r8, asl #4	@ PicWidthInSmp, prephitmp.9305,
	mov	r0, #3	@ tmp478,
	mov	r7, lr, asl #4	@ PicHeightInSmp, tmp475,
	mul	r1, r8, r7	@ tmp476, PicWidthInSmp, PicHeightInSmp
	mov	r3, r1, lsr #1	@ tmp477, tmp476,
	mul	r1, r0, r3	@ pic_size, tmp478, tmp477
	cmp	r1, #100663296	@ pic_size,
	bhi	.L3509	@,
	ldr	r2, [r5, #740]	@ D.45467, <variable>.level_idc
	sub	ip, r2, #10	@ tmp480, D.45467,
	cmp	ip, #31	@ tmp480,
	ldrls	pc, [pc, ip, asl #2]	@ tmp480
	b	.L3466	@
.L3475:
	.word	.L3467
	.word	.L3468
	.word	.L3469
	.word	.L3469
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3469
	.word	.L3470
	.word	.L3471
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3471
	.word	.L3472
	.word	.L3473
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3466
	.word	.L3474
	.word	.L3474
.L3457:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC254	@,
	movt	r1, #:upper16:.LC254	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3473:
	mov	r0, #7864320	@ size,
.L3476:
	bl	__aeabi_uidiv	@
	movw	r1, #:lower16:.LC266	@,
	movt	r1, #:upper16:.LC266	@,
	cmp	r0, #16	@,
	movcc	r6, r0	@ size.9334,
	movcs	r6, #16	@ size.9334,
	mov	r0, #21	@,
	mov	r2, r6	@, size.9334
	bl	dprint_vfmw	@
	ldr	r2, [r5, #3952]	@ D.45474, <variable>.num_ref_frames
	cmp	r2, r6	@ D.45474, size.9334
	bhi	.L3477	@,
	movw	r0, #59164	@ tmp486,
	ldr	r9, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r9, #0	@ <variable>.SeErrFlg,
	beq	.L3478	@,
.L3477:
	mov	r3, r6	@, size.9334
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC267	@,
	movt	r1, #:upper16:.LC267	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #3952]	@ temp.9369, <variable>.num_ref_frames
	cmp	r3, #16	@ temp.9369,
	bhi	.L3498	@,
	cmp	r6, r3	@ size.9334, temp.9369
	movcc	r6, r3	@ size.9334, temp.9369
.L3498:
	str	r6, [r5, #3952]	@ size.9334, <variable>.num_ref_frames
.L3478:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC268	@,
	movt	r1, #:upper16:.LC268	@,
	movw	r9, #59164	@ tmp491,
	bl	u_1	@
	strb	r0, [r5, #20]	@, <variable>.direct_8x8_inference_flag
	ldr	r2, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC269	@,
	movt	r1, #:upper16:.LC269	@,
	bl	u_1	@
	uxtb	r0, r0	@ D.45485,
	strb	r0, [r5, #21]	@ D.45485, <variable>.frame_cropping_flag
	ldr	r3, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	cmp	r0, #0	@ D.45485,
	bne	.L3510	@,
.L3480:
	mov	r3, r8, lsr #1	@ tmp523, PicWidthInSmp,
	mov	r0, r7, lsr #1	@ tmp524, PicHeightInSmp,
	str	r8, [r5, #3984]	@ PicWidthInSmp, <variable>.disp_width
	str	r3, [r5, #3992]	@ tmp523, <variable>.disp_center_x
	str	r0, [r5, #3996]	@ tmp524, <variable>.disp_center_y
	str	r7, [r5, #3988]	@ PicHeightInSmp, <variable>.disp_height
.L3482:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC274	@,
	movt	r1, #:upper16:.LC274	@,
	bl	u_1	@
	movw	r2, #59164	@ tmp527,
	uxtb	r3, r0	@ D.45523,
	strb	r3, [r5, #22]	@ D.45523, <variable>.vui_parameters_present_flag
	ldr	r2, [r4, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3456	@,
	cmp	r3, #0	@ D.45523,
	add	r1, r2, #2	@ tmp529, tmp529,
	str	r1, [r5, #68]	@ tmp529, <variable>.vui_seq_parameters.matrix_coefficients
	bne	.L3511	@,
	mov	r0, r3	@ prephitmp.9309, D.45523
	mov	lr, #5	@ tmp536,
	strb	r3, [r5, #43]	@ D.45523, <variable>.vui_seq_parameters.aspect_ratio_idc
	str	lr, [r5, #56]	@ tmp536, <variable>.vui_seq_parameters.video_format
.L3485:
	str	r7, [sp, #0]	@ PicHeightInSmp,
	mov	r3, r8	@, PicWidthInSmp
	ldr	r1, [r5, #44]	@, <variable>.vui_seq_parameters.sar_width
	ldr	r2, [r5, #48]	@, <variable>.vui_seq_parameters.sar_height
	bl	H264GetDar	@
	ldr	r3, [r5, #3952]	@ temp.9379, <variable>.num_ref_frames
	cmp	r3, #0	@ temp.9379,
	str	r0, [r5, #52]	@, <variable>.vui_seq_parameters.aspect_ratio
	beq	.L3489	@,
	cmp	r6, r3	@ size.9334, temp.9379
	movcs	r6, r3	@ size.9334, temp.9379
.L3489:
	ldr	r1, [r4, #0]	@ D.45556, <variable>.pstExtraData
	movw	r3, #13584	@ tmp537,
	cmp	r6, #16	@ size.9334,
	movcs	r6, #16	@ size.9335,
	str	r6, [r4, r3]	@ size.9335, <variable>.TrueDpbSize
	ldr	r0, [r1, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L3512	@,
.L3490:
	cmp	r7, #1920	@ PicHeightInSmp,
	bcc	.L3492	@,
	cmp	r6, #16	@ size.9335,
	movcs	r6, #16	@ size.9335,
.L3492:
	add	r6, r6, #1	@ tmp563, size.9335,
	mov	r0, #0	@ D.45250,
	str	r6, [r5, #3980]	@ tmp563, <variable>.dpb_size_plus1
	b	.L3422	@
.L3512:
	ldr	r2, [r1, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r2, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3490	@,
	ldr	ip, [r1, #768]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r2, [r1, #744]	@ MaxWidth, <variable>.stChanOption.s32MaxWidth
	cmp	r6, ip	@ size.9335, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r3, [r1, #748]	@ MaxHeight, <variable>.stChanOption.s32MaxHeight
	bhi	.L3513	@,
	cmp	r2, r8	@ MaxWidth, PicWidthInSmp
	cmpcs	r3, r7	@, MaxHeight, PicHeightInSmp
	bcs	.L3490	@,
	movw	r1, #:lower16:g_event_report	@ tmp556,
	movt	r1, #:upper16:g_event_report	@ tmp556,
	ldr	ip, [r1, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L3456	@,
	movw	r0, #59224	@ tmp559,
	strh	r2, [fp, #-56]	@ movhi	@ MaxWidth, para
	strh	r3, [fp, #-54]	@ movhi	@ MaxHeight, para
	mov	r1, #107	@,
	strh	r8, [fp, #-60]	@ movhi	@ PicWidthInSmp, para
	sub	r2, fp, #60	@,,
	strh	r7, [fp, #-58]	@ movhi	@ PicHeightInSmp, para
	mov	r3, #8	@,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	ip	@ g_event_report
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3511:
	mov	r0, r4	@, pH264Ctx
	add	r1, r5, #28	@, pSPS,
	bl	vui_parameters	@
	cmp	r0, #0	@,
	bne	.L3500	@,
	ldrb	ip, [r5, #40]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.bitstream_restriction_flag, <variable>.vui_seq_parameters.bitstream_restriction_flag
	cmp	ip, #0	@ <variable>.vui_seq_parameters.bitstream_restriction_flag,
	beq	.L3500	@,
	ldr	r2, [r5, #732]	@ D.45539, <variable>.vui_seq_parameters.max_dec_frame_buffering
	cmp	r6, r2	@ size.9334, D.45539
	bcc	.L3487	@,
	cmp	r2, #0	@ D.45539,
	bne	.L3488	@,
.L3487:
	movw	r1, #:lower16:.LC275	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC275	@,
	mov	r3, r6	@, size.9334
	bl	dprint_vfmw	@
.L3500:
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.9309, <variable>.vui_seq_parameters.aspect_ratio_idc
	b	.L3485	@
.L3488:
	ldr	r6, [r5, #3952]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.9309, <variable>.vui_seq_parameters.aspect_ratio_idc
	cmp	r2, r6	@ D.45539, <variable>.num_ref_frames
	movcs	r6, r2	@ size.9334, D.45539
	b	.L3485	@
.L3510:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC270	@,
	movt	r1, #:upper16:.LC270	@,
	bl	ue_v	@
	movw	r1, #:lower16:.LC271	@,
	movt	r1, #:upper16:.LC271	@,
	str	r0, [r5, #3964]	@, <variable>.frame_crop_left_offset
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC272	@,
	movt	r1, #:upper16:.LC272	@,
	str	r0, [r5, #3968]	@, <variable>.frame_crop_right_offset
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	str	r0, [r5, #3972]	@, <variable>.frame_crop_top_offset
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	ldr	ip, [r5, #3972]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r1, [r5, #3964]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	mov	r3, sl, asl #1	@ tmp508, temp,
	ldr	r2, [r5, #3968]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	mov	ip, ip, asl #1	@ tmp505, <variable>.frame_crop_top_offset,
	mov	r1, r1, asl #1	@ D.45495, <variable>.frame_crop_left_offset,
	mul	sl, sl, ip	@ D.45500, temp, tmp505
	rsb	ip, r1, r8	@ tmp502, D.45495, PicWidthInSmp
	sub	r2, ip, r2, asl #1	@ D.45498, tmp502, <variable>.frame_crop_right_offset,
	rsb	ip, sl, r7	@ tmp507, D.45500, PicHeightInSmp
	mls	r3, r0, r3, ip	@ D.45504, D.45494, tmp508, tmp507
	str	r0, [r5, #3976]	@ D.45494, <variable>.frame_crop_bottom_offset
	cmp	r2, #0	@ D.45498,
	cmpgt	r3, #0	@, D.45504,
	ble	.L3480	@,
	add	lr, r1, r2, lsr #1	@, tmp520, D.45495, D.45498,
	add	sl, sl, r3, lsr #1	@, tmp522, D.45500, D.45504,
	str	lr, [r5, #3992]	@ tmp520, <variable>.disp_center_x
	str	sl, [r5, #3996]	@ tmp522, <variable>.disp_center_y
	str	r2, [r5, #3984]	@ D.45498, <variable>.disp_width
	str	r3, [r5, #3988]	@ D.45504, <variable>.disp_height
	b	.L3482	@
.L3513:
	movw	lr, #:lower16:g_event_report	@ tmp541,
	movt	lr, #:upper16:g_event_report	@ tmp541,
	ldr	ip, [lr, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L3456	@,
	str	r6, [fp, #-60]	@ size.9335, para
	movw	r3, #59224	@ tmp546,
	ldr	lr, [r1, #768]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	sub	r2, fp, #60	@,,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r1, #106	@,
	mov	r3, #8	@,
	str	lr, [fp, #-56]	@ <variable>.stChanOption.s32MaxRefFrameNum, para
	blx	ip	@ g_event_report
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3470:
	movw	r0, #:lower16:1824768	@ size,
	movt	r0, #:upper16:1824768	@ size,
	b	.L3476	@
.L3471:
	movw	r0, #:lower16:3110400	@ size,
	movt	r0, #:upper16:3110400	@ size,
	b	.L3476	@
.L3474:
	mov	r0, #12582912	@ size,
	b	.L3476	@
.L3472:
	movw	r0, #:lower16:6912000	@ size,
	movt	r0, #:upper16:6912000	@ size,
	b	.L3476	@
.L3469:
	movw	r0, #:lower16:912384	@ size,
	movt	r0, #:upper16:912384	@ size,
	b	.L3476	@
.L3468:
	movw	r0, #:lower16:345600	@ size,
	movt	r0, #:upper16:345600	@ size,
	b	.L3476	@
.L3467:
	movw	r0, #:lower16:152064	@ size,
	movt	r0, #:upper16:152064	@ size,
	b	.L3476	@
.L3466:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC265	@,
	movt	r1, #:upper16:.LC265	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3509:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3493:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC263	@,
	movt	r1, #:upper16:.LC263	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45250,
	b	.L3422	@
.L3462:
	ldr	r3, [r5, #3960]	@ temp.9365, <variable>.pic_height_in_map_units_minus1
	strb	r2, [r5, #19]	@ <variable>.SeErrFlg, <variable>.mb_adaptive_frame_field_flag
	sub	r2, r3, #1	@ tmp567, temp.9365,
	cmp	r2, r7	@ tmp567, tmp458
	bhi	.L3493	@,
	ldr	r7, [r5, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	mov	sl, #1	@ temp,
	add	r3, r3, #1	@ prephitmp.9364, temp.9365,
	add	r8, r7, sl	@ prephitmp.9305, <variable>.pic_width_in_mbs_minus1,
	b	.L3494	@
.L3515:
	.align	2
.L3514:
	.word	.LANCHOR2+80
	.word	.LANCHOR2+96
	.word	.LANCHOR2+112
	.word	.LANCHOR2+176
	.fnend
	.size	ProcessSPS, .-ProcessSPS
	.align	2
	.global	H264_DecSPS
	.type	H264_DecSPS, %function
H264_DecSPS:
	.fnstart
.LFB1645:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC276	@,
	movt	r2, #:upper16:.LC276	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	u_v	@
	movw	r1, #:lower16:.LC277	@,
	movt	r1, #:upper16:.LC277	@,
	mov	r5, r0	@ D.45656,
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC278	@,
	movt	r1, #:upper16:.LC278	@,
	str	r0, [fp, #-68]	@, %sfp
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC279	@,
	movt	r1, #:upper16:.LC279	@,
	str	r0, [fp, #-64]	@, %sfp
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC280	@,
	movt	r1, #:upper16:.LC280	@,
	str	r0, [fp, #-60]	@, %sfp
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC281	@,
	movt	r2, #:upper16:.LC281	@,
	str	r0, [fp, #-56]	@, %sfp
	mov	r0, r4	@, pH264Ctx
	bl	u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC282	@,
	movt	r2, #:upper16:.LC282	@,
	bl	u_v	@
	movw	r1, #:lower16:.LC283	@,
	movt	r1, #:upper16:.LC283	@,
	mov	r6, r0	@ D.45661,
	mov	r0, r4	@, pH264Ctx
	bl	ue_v	@
	mov	r7, r0	@ seq_parameter_set_id,
	movw	r0, #59164	@ tmp160,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3517	@,
	movw	r8, #13576	@ tmp162,
	ldr	r2, [r4, r8]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r1, r2, #1	@ tmp163, <variable>.MaxSpsNum,
	cmp	r7, r1	@ seq_parameter_set_id, tmp163
	bhi	.L3535	@,
	sub	r9, r5, #66	@ tmp174, D.45656,
	mov	r8, r5	@ profile_idc, D.45656
	cmp	r9, #78	@ tmp174,
	ldrls	pc, [pc, r9, asl #2]	@ tmp174
	b	.L3520	@
.L3525:
	.word	.L3521
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3522
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3522
	.word	.L3520
	.word	.L3520
	.word	.L3522
	.word	.L3520
	.word	.L3523
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3522
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3524
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3524
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3520
	.word	.L3524
.L3523:
	movw	r1, #:lower16:.LC286	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC286	@,
	bl	dprint_vfmw	@
.L3522:
	cmp	r6, #9	@ level_idc,
	mov	r2, r6	@ level_idc, D.45661
	bls	.L3534	@,
.L3526:
	cmp	r6, #41	@ level_idc,
	bhi	.L3534	@,
	mov	r9, #4000	@ tmp181,
	movw	r6, #13588	@ tmp182,
	mul	r5, r9, r7	@ D.45690, tmp181, seq_parameter_set_id
	ldr	sl, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r3, r5, sl	@ D.45691, D.45690, <variable>.SPS
	ldrb	sl, [r3, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	sl, #0	@ <variable>.is_valid,
	beq	.L3528	@,
.L3539:
	ldr	ip, [fp, #-68]	@, %sfp
	movw	sl, #:lower16:.LANCHOR1	@ tmp185,
	movt	sl, #:upper16:.LANCHOR1	@ tmp185,
	ldr	r3, [fp, #-64]	@, %sfp
	ldr	lr, [fp, #-60]	@, %sfp
	mov	r0, r4	@, pH264Ctx
	strb	ip, [sl, #68]	@, sps_tmp.constrained_set0_flag
	add	r1, sl, #68	@, tmp185,
	ldr	ip, [fp, #-56]	@, %sfp
	strb	r3, [sl, #69]	@, sps_tmp.constrained_set1_flag
	strb	lr, [sl, #70]	@, sps_tmp.constrained_set2_flag
	strb	ip, [sl, #71]	@, sps_tmp.constrained_set3_flag
	str	r2, [sl, #808]	@ level_idc, sps_tmp.level_idc
	str	r8, [sl, #804]	@ profile_idc, sps_tmp.profile_idc
	str	r7, [sl, #812]	@ seq_parameter_set_id, sps_tmp.seq_parameter_set_id
	bl	ProcessSPS	@
	cmp	r0, #0	@,
	bne	.L3536	@,
	ldr	r1, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r0, sl, #68	@, tmp185,
	add	r1, r5, r1	@, D.45690, <variable>.SPS
	bl	SPSEqual	@
	cmp	r0, #0	@,
	bne	.L3537	@,
.L3530:
	cmp	r8, #83	@ profile_idc,
	cmpne	r8, #86	@, profile_idc,
	beq	.L3538	@,
.L3532:
	mov	r0, #0	@ D.45666,
.L3519:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3538:
	mov	r0, r4	@, pH264Ctx
	bl	Sps_SvcExt	@
	cmp	r0, #0	@,
	beq	.L3532	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC291	@,
	movt	r1, #:upper16:.LC291	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45666,
	b	.L3519	@
.L3534:
	mov	r9, #4000	@ tmp181,
	mov	r3, #41	@,
	mul	r5, r9, r7	@ D.45690, tmp181, seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC289	@,
	movw	r6, #13588	@ tmp182,
	movt	r1, #:upper16:.LC289	@,
	bl	dprint_vfmw	@
	ldr	sl, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	mov	r2, #41	@ level_idc,
	add	r3, r5, sl	@ D.45691, D.45690, <variable>.SPS
	ldrb	sl, [r3, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	sl, #0	@ <variable>.is_valid,
	bne	.L3539	@,
.L3528:
	str	r8, [r3, #736]	@ profile_idc, <variable>.profile_idc
	mov	r0, r4	@, pH264Ctx
	ldr	r3, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	mov	r9, #1	@ tmp220,
	ldr	r1, [fp, #-68]	@, %sfp
	strb	r1, [r3, r5]	@, <variable>.constrained_set0_flag
	ldr	ip, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	ldr	r1, [fp, #-64]	@, %sfp
	add	lr, ip, r5	@ tmp221, <variable>.SPS, D.45690
	strb	r1, [lr, #1]	@, <variable>.constrained_set1_flag
	ldr	r3, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [fp, #-60]	@, %sfp
	add	ip, r3, r5	@ tmp227, <variable>.SPS, D.45690
	strb	lr, [ip, #2]	@, <variable>.constrained_set2_flag
	ldr	r1, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	ldr	ip, [fp, #-56]	@, %sfp
	add	r3, r1, r5	@ tmp233, <variable>.SPS, D.45690
	strb	ip, [r3, #3]	@, <variable>.constrained_set3_flag
	ldr	lr, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r1, lr, r5	@ tmp239, <variable>.SPS, D.45690
	str	r2, [r1, #740]	@ level_idc, <variable>.level_idc
	ldr	ip, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r3, ip, r5	@ tmp244, <variable>.SPS, D.45690
	str	r7, [r3, #744]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	lr, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r1, r5, lr	@, D.45690, <variable>.SPS
	bl	ProcessSPS	@
	cmp	r0, #0	@,
	bne	.L3540	@,
	ldr	r3, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	lr, r3, r5	@ tmp267, <variable>.SPS, D.45690
	strb	r9, [lr, #24]	@ tmp220, <variable>.is_refreshed
	ldr	r0, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r5, r0, r5	@ tmp274, <variable>.SPS, D.45690
	strb	r9, [r5, #23]	@ tmp220, <variable>.is_valid
	b	.L3530	@
.L3517:
	mvn	r0, #0	@ D.45666,
	b	.L3519	@
.L3520:
	mov	r2, r5	@, D.45656
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC288	@,
	movt	r1, #:upper16:.LC288	@,
	bl	dprint_vfmw	@
	cmp	r6, #9	@ level_idc,
	mov	r8, #100	@ profile_idc,
	mov	r2, r6	@ level_idc, D.45661
	bhi	.L3526	@,
	b	.L3534	@
.L3521:
	movw	r1, #:lower16:.LC285	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC285	@,
	bl	dprint_vfmw	@
	cmp	r6, #9	@ level_idc,
	mov	r2, r6	@ level_idc, D.45661
	bhi	.L3526	@,
	b	.L3534	@
.L3524:
	movw	r1, #:lower16:.LC287	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC287	@,
	bl	dprint_vfmw	@
	cmp	r6, #9	@ level_idc,
	mov	r2, r6	@ level_idc, D.45661
	bhi	.L3526	@,
	b	.L3534	@
.L3537:
	mov	r2, #1	@ tmp205,
	strb	r2, [sl, #91]	@ tmp205, sps_tmp.is_valid
	strb	r2, [sl, #92]	@ tmp205, sps_tmp.is_refreshed
	add	r1, sl, #68	@, tmp185,
	ldr	r0, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	mov	r2, r9	@, tmp181
	add	r0, r5, r0	@, D.45690, <variable>.SPS
	bl	memmove	@
	b	.L3530	@
.L3536:
	mov	r3, r7	@, seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC290	@,
	movw	r2, #9913	@,
	movt	r1, #:upper16:.LC290	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45666,
	b	.L3519	@
.L3535:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC284	@,
	movt	r1, #:upper16:.LC284	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r8]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, r3, #1	@ tmp167, <variable>.MaxSpsNum,
	cmp	r7, ip	@ seq_parameter_set_id, tmp167
	bls	.L3517	@,
	movw	lr, #:lower16:g_event_report	@ tmp169,
	movt	lr, #:upper16:g_event_report	@ tmp169,
	ldr	ip, [lr, #0]	@ g_event_report.776, g_event_report
	cmp	ip, #0	@ g_event_report.776,
	beq	.L3517	@,
	str	r3, [fp, #-48]	@ <variable>.MaxSpsNum, para
	movw	r3, #59224	@ tmp172,
	str	r7, [fp, #-52]	@ seq_parameter_set_id, para
	mov	r1, #109	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	sub	r2, fp, #52	@,,
	mov	r3, #8	@,
	blx	ip	@ g_event_report.776
	mvn	r0, #0	@ D.45666,
	b	.L3519	@
.L3540:
	movw	r2, #9936	@,
	mov	r3, r7	@, seq_parameter_set_id
	mov	r0, r9	@, tmp220
	movw	r1, #:lower16:.LC290	@,
	movt	r1, #:upper16:.LC290	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	mvn	r0, #0	@ D.45666,
	add	ip, r1, r5	@ tmp253, <variable>.SPS, D.45690
	strb	r9, [ip, #24]	@ tmp220, <variable>.is_refreshed
	ldr	r2, [r4, r6]	@ <variable>.SPS, <variable>.SPS
	add	r5, r2, r5	@ tmp260, <variable>.SPS, D.45690
	strb	sl, [r5, #23]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3519	@
	.fnend
	.size	H264_DecSPS, .-H264_DecSPS
	.align	2
	.global	ProcessPPS
	.type	ProcessPPS, %function
ProcessPPS:
	.fnstart
.LFB1638:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pPPS, pPPS
	movw	r1, #:lower16:.LC292	@,
	movt	r1, #:upper16:.LC292	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	u_1	@
	movw	r6, #59164	@ tmp188,
	strb	r0, [r5, #0]	@, <variable>.entropy_coding_mode_flag
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3577	@,
.L3542:
	mvn	r0, #0	@ D.44573,
.L3545:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3577:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC293	@,
	movt	r1, #:upper16:.LC293	@,
	bl	u_1	@
	strb	r0, [r5, #1]	@, <variable>.pic_order_present_flag
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3542	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC294	@,
	movt	r1, #:upper16:.LC294	@,
	bl	ue_v	@
	cmp	r0, #0	@ D.44578,
	str	r0, [r5, #32]	@ D.44578, <variable>.num_slice_groups_minus1
	bne	.L3543	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3543	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC296	@,
	movt	r1, #:upper16:.LC296	@,
	bl	ue_v	@
	cmp	r0, #31	@ D.44588,
	str	r0, [r5, #36]	@ D.44588, <variable>.num_ref_idx_l0_active_minus1
	bhi	.L3546	@,
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3546	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC298	@,
	movt	r1, #:upper16:.LC298	@,
	bl	ue_v	@
	cmp	r0, #31	@ D.44594,
	str	r0, [r5, #40]	@ D.44594, <variable>.num_ref_idx_l1_active_minus1
	bhi	.L3548	@,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3549	@,
.L3548:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC299	@,
	movt	r1, #:upper16:.LC299	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44573,
	b	.L3545	@
.L3549:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC300	@,
	movt	r1, #:upper16:.LC300	@,
	bl	u_1	@
	strb	r0, [r5, #2]	@, <variable>.weighted_pred_flag
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3542	@,
	mov	r0, r4	@, pH264Ctx
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC301	@,
	movt	r2, #:upper16:.LC301	@,
	bl	u_v	@
	cmp	r0, #2	@ D.44604,
	str	r0, [r5, #44]	@ D.44604, <variable>.weighted_bipred_idc
	bhi	.L3578	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC303	@,
	movt	r1, #:upper16:.LC303	@,
	bl	se_v	@
	movw	r1, #:lower16:.LC304	@,
	movt	r1, #:upper16:.LC304	@,
	str	r0, [r5, #48]	@, <variable>.pic_init_qp_minus26
	mov	r0, r4	@, pH264Ctx
	bl	se_v	@
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC305	@,
	movt	r1, #:upper16:.LC305	@,
	bl	se_v	@
	movw	r1, #:lower16:.LC306	@,
	movt	r1, #:upper16:.LC306	@,
	str	r0, [r5, #52]	@, <variable>.chroma_qp_index_offset
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC307	@,
	movt	r1, #:upper16:.LC307	@,
	strb	r0, [r5, #3]	@, <variable>.deblocking_filter_control_present_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	movw	r1, #:lower16:.LC308	@,
	movt	r1, #:upper16:.LC308	@,
	strb	r0, [r5, #4]	@, <variable>.constrained_intra_pred_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	uxtb	r8, r0	@ D.44617,
	strb	r8, [r5, #17]	@ D.44617, <variable>.redundant_pic_cnt_present_flag
	cmp	r8, #0	@ D.44617,
	beq	.L3551	@,
	movw	r1, #:lower16:.LC309	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC309	@,
	bl	dprint_vfmw	@
.L3551:
	ldr	lr, [r5, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	add	r3, r4, #13504	@, pH264Ctx,
	mov	r8, #0	@ tmp225,
	add	r0, r3, #24	@,,
	str	r8, [r5, #60]	@ tmp225, <variable>.transform_8x8_mode_flag
	str	lr, [r5, #56]	@ <variable>.chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	strb	r8, [r5, #18]	@ tmp225, <variable>.pic_scaling_matrix_present_flag
	bl	BsResidBits	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [ip, #72]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r1, r2, #3	@ tmp231, <variable>.nal_trail_zero_bit_num,
	cmp	r0, r1	@, tmp231
	bcs	.L3579	@,
.L3552:
	mov	r0, #0	@ D.44573,
	b	.L3545	@
.L3579:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC310	@,
	movt	r1, #:upper16:.LC310	@,
	bl	u_1	@
	movw	r1, #:lower16:.LC311	@,
	movt	r1, #:upper16:.LC311	@,
	str	r0, [r5, #60]	@, <variable>.transform_8x8_mode_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	uxtb	r0, r0	@ D.44632,
	strb	r0, [r5, #18]	@ D.44632, <variable>.pic_scaling_matrix_present_flag
	cmp	r0, #1	@ D.44632,
	beq	.L3580	@,
.L3553:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC313	@,
	movt	r1, #:upper16:.LC313	@,
	bl	se_v	@
	add	r3, r0, #12	@ tmp314, D.44718,
	str	r0, [r5, #56]	@ D.44718, <variable>.second_chroma_qp_index_offset
	cmp	r3, #24	@ tmp314,
	bhi	.L3573	@,
	movw	r1, #59164	@ tmp315,
	ldr	r2, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	beq	.L3552	@,
.L3573:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC314	@,
	movt	r1, #:upper16:.LC314	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44573,
	b	.L3545	@
.L3543:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC295	@,
	movt	r1, #:upper16:.LC295	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:g_event_report	@ tmp198,
	movt	r2, #:upper16:g_event_report	@ tmp198,
	ldr	ip, [r2, #0]	@ g_event_report.729, g_event_report
	cmp	ip, #0	@ g_event_report.729,
	beq	.L3542	@,
	mov	r2, #0	@,
	movw	lr, #59224	@ tmp199,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.729
	mvn	r0, #0	@ D.44573,
	b	.L3545	@
.L3546:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC297	@,
	movt	r1, #:upper16:.LC297	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44573,
	b	.L3545	@
.L3580:
	add	r9, r5, #1984	@ ivtmp.9543, pPPS,
	sub	r6, fp, #76	@ ivtmp.9538,,
	add	r7, r5, #64	@, pPPS,
	str	r7, [fp, #-84]	@, %sfp
	mov	sl, r9	@ ivtmp.9569, ivtmp.9543
	mov	r7, r8	@ i.9557, ivtmp.9544
	str	r9, [fp, #-80]	@ ivtmp.9543, %sfp
.L3562:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC243	@,
	movt	r1, #:upper16:.LC243	@,
	bl	u_1	@
	add	r1, r5, r7	@ tmp237, pPPS, i.9557
	mov	r2, #16	@,
	str	r0, [r6, #0]	@ D.44637, q4x4defaultflag
	mov	ip, r0	@ D.44637,
	strb	ip, [r1, #5]	@ D.44637, <variable>.pic_scaling_list_present_flag
	add	r0, r8, r9	@, ivtmp.9544, ivtmp.9543
	ldr	r3, [r6, #0]	@ tmp239, q4x4defaultflag
	cmp	r3, #1	@ tmp239,
	beq	.L3581	@,
	rsbs	ip, r7, #1	@ D.44660, i.9557
	movcc	ip, #0	@ D.44660
	cmp	r7, #0	@ i.9557,
	cmpne	r7, #3	@, i.9557,
	bne	.L3558	@,
	movw	lr, #13588	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r3, [r4, lr]	@ <variable>.SPS, <variable>.SPS
	mov	lr, #4000	@,
	mla	r3, lr, r1, r3	@ D.44668,, <variable>.seq_parameter_set_id, <variable>.SPS
	ldrb	r1, [r3, #25]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r1, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L3582	@,
	ldr	r3, .L3586	@,
	cmp	ip, #0	@ D.44660,
	ldr	r1, .L3586+4	@,
	movne	r1, r3	@,
	bl	memcpy	@
.L3555:
	add	r7, r7, #1	@ i.9557, i.9557,
	ldr	ip, [fp, #-80]	@, %sfp
	ldr	r1, [fp, #-84]	@, %sfp
	cmp	r7, #6	@ i.9557,
	add	lr, ip, #16	@,,
	add	r6, r6, #4	@ ivtmp.9538, ivtmp.9538,
	add	r0, r1, #64	@,,
	str	lr, [fp, #-80]	@, %sfp
	add	r8, r8, #16	@ ivtmp.9544, ivtmp.9544,
	add	sl, sl, #16	@ ivtmp.9569, ivtmp.9569,
	str	r0, [fp, #-84]	@, %sfp
	bne	.L3562	@,
	add	r8, r5, #2080	@, pPPS,
	mov	r7, #0	@ ivtmp.9523,
	add	r9, r5, #448	@ ivtmp.9526, pPPS,
	sub	r6, fp, #52	@ ivtmp.9528,,
	str	r8, [fp, #-80]	@, %sfp
	mov	sl, r8	@ ivtmp.9522,
	mov	r8, r7	@ i, ivtmp.9523
	str	r5, [fp, #-84]	@ pPPS, %sfp
.L3572:
	ldr	r2, [r5, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	mov	r3, #0	@ prephitmp.9504,
	cmp	r2, #1	@ <variable>.transform_8x8_mode_flag,
	movne	r2, #0	@,
	strne	r2, [r6, #0]	@, q8x8defaultflag
	beq	.L3583	@,
.L3564:
	ldr	r1, [fp, #-84]	@, %sfp
	mov	r2, #64	@,
	ldr	lr, [fp, #-80]	@, %sfp
	strb	r3, [r1, #11]	@ prephitmp.9504, <variable>.pic_scaling_list_present_flag
	add	r0, lr, r7	@,, ivtmp.9523
	ldr	r3, [r6, #0]	@ tmp284, q8x8defaultflag
	cmp	r3, #1	@ tmp284,
	beq	.L3584	@,
	movw	ip, #13588	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r3, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	mov	lr, #4000	@,
	mla	r3, lr, r1, r3	@ temp.9563,, <variable>.seq_parameter_set_id, <variable>.SPS
	ldrb	r1, [r3, #25]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r1, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L3585	@,
	ldr	lr, .L3586+8	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L3586+12	@,
	movne	r1, lr	@,
	bl	memcpy	@
.L3566:
	add	r8, r8, #1	@ i, i,
	ldr	ip, [fp, #-84]	@, %sfp
	cmp	r8, #2	@ i,
	add	sl, sl, #64	@ ivtmp.9522, ivtmp.9522,
	add	r0, ip, #1	@,,
	add	r7, r7, #64	@ ivtmp.9523, ivtmp.9523,
	add	r9, r9, #256	@ ivtmp.9526, ivtmp.9526,
	add	r6, r6, #4	@ ivtmp.9528, ivtmp.9528,
	str	r0, [fp, #-84]	@, %sfp
	beq	.L3553	@,
	b	.L3572	@
.L3558:
	mov	r0, sl	@, ivtmp.9569
	sub	r1, sl, #16	@, ivtmp.9569,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3555	@
.L3581:
	ldr	r2, [fp, #-80]	@, %sfp
	mov	r0, r4	@, pH264Ctx
	ldr	r1, [fp, #-84]	@, %sfp
	add	r3, r3, #15	@,,
	str	r6, [sp, #0]	@ ivtmp.9538,
	bl	Scaling_List	@
	ldr	r2, [r6, #0]	@ tmp240, q4x4defaultflag
	cmp	r2, #1	@ tmp240,
	bne	.L3555	@,
	ldr	lr, .L3586+4	@,
	cmp	r7, #2	@ i.9557,
	ldr	r1, .L3586	@,
	mov	r2, #16	@,
	ldr	r0, [fp, #-80]	@, %sfp
	movhi	r1, lr	@,
	bl	memcpy	@
	b	.L3555	@
.L3578:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC302	@,
	movt	r1, #:upper16:.LC302	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44573,
	b	.L3545	@
.L3582:
	add	r2, r3, #2672	@ tmp261, D.44668,
	add	r0, r8, r9	@, ivtmp.9544, ivtmp.9543
	add	ip, r2, #8	@ tmp261, tmp261,
	mov	r2, #16	@,
	add	r1, ip, r8	@, tmp261, ivtmp.9544
	bl	memcpy	@
	b	.L3555	@
.L3585:
	ldr	r1, [fp, #-80]	@, %sfp
	add	r2, r3, #2768	@ tmp299, temp.9563,
	add	r3, r2, #8	@ tmp299, tmp299,
	mov	r2, #64	@,
	add	r0, r1, r7	@,, ivtmp.9523
	add	r1, r3, r7	@, tmp299, ivtmp.9523
	bl	memcpy	@
	b	.L3566	@
.L3584:
	mov	r3, r2	@,
	mov	r0, r4	@, pH264Ctx
	mov	r1, r9	@, ivtmp.9526
	mov	r2, sl	@, ivtmp.9522
	str	r6, [sp, #0]	@ ivtmp.9528,
	bl	Scaling_List	@
	ldr	r0, [r6, #0]	@ tmp285, q8x8defaultflag
	cmp	r0, #1	@ tmp285,
	bne	.L3566	@,
	ldr	ip, .L3586+8	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L3586+12	@,
	mov	r2, #64	@,
	mov	r0, sl	@, ivtmp.9522
	movne	r1, ip	@,
	bl	memcpy	@
	b	.L3566	@
.L3583:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC312	@,
	movt	r1, #:upper16:.LC312	@,
	bl	u_1	@
	uxtb	r3, r0	@ prephitmp.9504, D.44686
	str	r0, [r6, #0]	@ D.44686, q8x8defaultflag
	b	.L3564	@
.L3587:
	.align	2
.L3586:
	.word	.LANCHOR2+80
	.word	.LANCHOR2+96
	.word	.LANCHOR2+176
	.word	.LANCHOR2+112
	.fnend
	.size	ProcessPPS, .-ProcessPPS
	.align	2
	.global	H264_DecPPS
	.type	H264_DecPPS, %function
H264_DecPPS:
	.fnstart
.LFB1637:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC315	@,
	movt	r1, #:upper16:.LC315	@,
	mov	r6, r0	@ pH264Ctx, pH264Ctx
	bl	ue_v	@
	movw	r4, #13580	@ tmp145,
	mov	r5, r0	@ pic_parameter_set_id,
	ldr	r0, [r6, r4]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp146, <variable>.MaxPpsNum,
	cmp	r5, r3	@ pic_parameter_set_id, tmp146
	bhi	.L3599	@,
	mov	r0, r6	@, pH264Ctx
	movw	r1, #:lower16:.LC317	@,
	movt	r1, #:upper16:.LC317	@,
	bl	ue_v	@
	movw	r2, #13576	@ tmp158,
	mov	r3, r0	@ seq_parameter_set_id,
	ldr	r0, [r6, r2]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, r0, #1	@ tmp159, <variable>.MaxSpsNum,
	cmp	r3, ip	@ seq_parameter_set_id, tmp159
	bhi	.L3600	@,
	movw	r2, #13588	@ tmp163,
	mov	r0, #4000	@ tmp165,
	ldr	ip, [r6, r2]	@ <variable>.SPS, <variable>.SPS
	mla	lr, r0, r3, ip	@ tmp166, tmp165, seq_parameter_set_id, <variable>.SPS
	ldrb	r1, [lr, #23]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	beq	.L3601	@,
	mov	sl, #2208	@ tmp169,
	movw	r7, #13592	@ tmp170,
	mul	r4, sl, r5	@ D.44537, tmp169, pic_parameter_set_id
	ldr	r8, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	r2, r4, r8	@ D.44538, D.44537, <variable>.PPS
	ldrb	r8, [r2, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r8, #0	@ <variable>.is_valid,
	bne	.L3602	@,
	str	r5, [r2, #24]	@ pic_parameter_set_id, <variable>.pic_parameter_set_id
	mov	r0, r6	@, pH264Ctx
	ldr	r2, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	ip, r2, r4	@ tmp201, <variable>.PPS, D.44537
	str	r3, [ip, #28]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r1, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	r1, r4, r1	@, D.44537, <variable>.PPS
	bl	ProcessPPS	@
	cmp	r0, #0	@ D.44551
	bne	.L3603	@,
	ldr	ip, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	mov	lr, #1	@ tmp226,
	add	r1, ip, r4	@ tmp224, <variable>.PPS, D.44537
	strb	lr, [r1, #20]	@ tmp226, <variable>.is_refreshed
	ldr	r3, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	r4, r3, r4	@ tmp231, <variable>.PPS, D.44537
	strb	lr, [r4, #19]	@ tmp226, <variable>.is_valid
.L3591:
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L3602:
	movw	r8, #:lower16:.LANCHOR1	@ tmp173,
	movt	r8, #:upper16:.LANCHOR1	@ tmp173,
	mov	lr, #4096	@ tmp175,
	add	r1, r8, #4064	@, tmp173,
	str	r5, [r8, #4092]	@ pic_parameter_set_id, pps_tmp.pic_parameter_set_id
	add	r1, r1, #4	@,,
	mov	r0, r6	@, pH264Ctx
	str	r3, [r8, lr]	@ seq_parameter_set_id, pps_tmp.seq_parameter_set_id
	bl	ProcessPPS	@
	subs	r5, r0, #0	@ D.44542,
	bne	.L3604	@,
	ldr	r3, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	ip, r8, #4064	@, tmp173,
	add	r0, ip, #4	@,,
	add	r1, r4, r3	@, D.44537, <variable>.PPS
	bl	PPSEqual	@
	cmp	r0, #0	@ D.44546
	beq	.L3591	@,
	mov	lr, #1	@ tmp187,
	strb	lr, [r8, #4087]	@ tmp187, pps_tmp.is_valid
	strb	lr, [r8, #4088]	@ tmp187, pps_tmp.is_refreshed
	add	r2, r8, #4064	@, tmp173,
	ldr	r0, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	r1, r2, #4	@,,
	mov	r2, sl	@, tmp169
	add	r0, r4, r0	@, D.44537, <variable>.PPS
	bl	memmove	@
	mov	r0, r5	@ D.44521, D.44542
	b	.L3591	@
.L3599:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC316	@,
	movt	r1, #:upper16:.LC316	@,
	bl	dprint_vfmw	@
	ldr	r3, [r6, r4]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r2, r3, #1	@ tmp150, <variable>.MaxPpsNum,
	cmp	r5, r2	@ pic_parameter_set_id, tmp150
	bhi	.L3605	@,
.L3590:
	mvn	r0, #0	@ D.44521,
	b	.L3591	@
.L3605:
	movw	r1, #:lower16:g_event_report	@ tmp152,
	movt	r1, #:upper16:g_event_report	@ tmp152,
	ldr	ip, [r1, #0]	@ g_event_report.727, g_event_report
	cmp	ip, #0	@ g_event_report.727,
	beq	.L3590	@,
	movw	lr, #59224	@ tmp155,
	str	r3, [fp, #-40]	@ <variable>.MaxPpsNum, para
	str	r5, [fp, #-44]	@ pic_parameter_set_id, para
	mov	r1, #110	@,
	ldr	r0, [r6, lr]	@, <variable>.ChanID
	sub	r2, fp, #44	@,,
	mov	r3, #8	@,
	blx	ip	@ g_event_report.727
	mvn	r0, #0	@ D.44521,
	b	.L3591	@
.L3604:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC319	@,
	movt	r1, #:upper16:.LC319	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44521,
	b	.L3591	@
.L3600:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC284	@,
	movt	r1, #:upper16:.LC284	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44521,
	b	.L3591	@
.L3601:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC318	@,
	movt	r1, #:upper16:.LC318	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44521,
	b	.L3591	@
.L3603:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC319	@,
	movt	r1, #:upper16:.LC319	@,
	bl	dprint_vfmw	@
	ldr	r2, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	mov	r1, #1	@ tmp212,
	mvn	r0, #0	@ D.44521,
	add	ip, r2, r4	@ tmp210, <variable>.PPS, D.44537
	strb	r1, [ip, #20]	@ tmp212, <variable>.is_refreshed
	ldr	r3, [r6, r7]	@ <variable>.PPS, <variable>.PPS
	add	r4, r3, r4	@ tmp217, <variable>.PPS, D.44537
	strb	r8, [r4, #19]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3591	@
	.fnend
	.size	H264_DecPPS, .-H264_DecPPS
	.align	2
	.global	ProcessSliceHeaderFirstPart
	.type	ProcessSliceHeaderFirstPart, %function
ProcessSliceHeaderFirstPart:
	.fnstart
.LFB1630:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC320	@,
	movt	r1, #:upper16:.LC320	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	ue_v	@
	movw	r1, #13580	@ tmp160,
	mov	r5, r0	@ tmp_pic_parameter_set_id,
	ldr	r0, [r4, r1]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp161, <variable>.MaxPpsNum,
	cmp	r5, r3	@ tmp_pic_parameter_set_id, tmp161
	bhi	.L3607	@,
	movw	ip, #59164	@ tmp163,
	ldr	r2, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3607	@,
	mov	r0, r4	@, pH264Ctx
	mov	r1, r5	@, tmp_pic_parameter_set_id
	bl	PPSSPSCheckTmpId	@
	cmp	r0, #0	@,
	bne	.L3634	@,
	movw	r3, #13592	@ tmp168,
	mov	r6, #2208	@ tmp170,
	ldr	ip, [r4, r3]	@ <variable>.PPS, <variable>.PPS
	movw	r2, #20691	@ tmp177,
	movw	lr, #20700	@ tmp167,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r1, #13588	@ tmp172,
	str	r5, [r4, lr]	@ tmp_pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mla	r6, r6, r5, ip	@ pPPS, tmp170, tmp_pic_parameter_set_id, <variable>.PPS
	ldr	r3, [r4, r1]	@ <variable>.SPS, <variable>.SPS
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	mov	r5, #4000	@ tmp175,
	ldr	lr, [r6, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r5, r5, lr, r3	@ pSPS, tmp175, <variable>.seq_parameter_set_id, <variable>.SPS
	beq	.L3611	@,
	ldr	r0, [r5, #3952]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	cmp	r0, #0	@ <variable>.num_ref_frames,
	bne	.L3612	@,
.L3611:
	movw	ip, #20688	@ tmp180,
	ldrb	r1, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L3612	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC323	@,
	movt	r1, #:upper16:.LC323	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3612:
	ldr	lr, [r5, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC324	@,
	movt	r2, #:upper16:.LC324	@,
	add	r1, lr, #4	@, <variable>.log2_max_frame_num_minus4,
	bl	u_v	@
	movw	r1, #59164	@ tmp187,
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	movw	r2, #20708	@ tmp186,
	cmp	r3, #0	@ <variable>.SeErrFlg,
	str	r0, [r4, r2]	@ D.43962, <variable>.CurrSlice.frame_num
	bne	.L3613	@,
	movw	r8, #20691	@ tmp189,
	ldrb	r7, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r7, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3635	@,
.L3614:
	movw	r7, #20689	@ tmp195,
	movw	r8, #20690	@ tmp198,
	mov	r3, #0	@ tmp196,
	strb	r3, [r4, r7]	@ tmp196, <variable>.CurrSlice.field_pic_flag
	strb	r3, [r4, r8]	@ tmp196, <variable>.CurrSlice.bottom_field_flag
	ldrb	r0, [r5, #18]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r0, r3	@ <variable>.frame_mbs_only_flag,
	beq	.L3636	@,
	ldr	r2, [r5, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r1, [r5, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	ip, r2, #1	@ tmp282, <variable>.pic_height_in_map_units_minus1,
	mla	r2, r1, ip, ip	@ D.43988, <variable>.pic_width_in_mbs_minus1, tmp282, tmp282
.L3632:
	mov	r1, #1	@ iftmp.698,
.L3619:
	cmp	r3, #0	@ prephitmp.9660,
	mul	r2, r1, r2	@ pic_size, iftmp.698, D.43988
	movne	r3, #0	@ prephitmp.9630,
	bne	.L3621	@,
	ldrb	r1, [r5, #19]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	subs	r3, r1, #0	@ prephitmp.9630, <variable>.mb_adaptive_frame_field_flag,
	movne	r3, #1	@ prephitmp.9630
.L3621:
	movw	ip, #20689	@ tmp219,
	movw	r0, #20692	@ tmp217,
	ldrb	lr, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	strb	r3, [r4, r0]	@ prephitmp.9630, <variable>.CurrSlice.MbaffFrameFlag
	cmp	lr, #1	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L3622	@,
	cmp	r3, #1	@ prephitmp.9630,
	beq	.L3622	@,
	movw	r0, #20740	@ tmp225,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r2, lr	@ pic_size, <variable>.CurrSlice.first_mb_in_slice
	bls	.L3637	@,
.L3624:
	movw	r8, #20691	@ tmp228,
	ldrb	r7, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r7, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3638	@,
.L3625:
	movw	r7, #19804	@ tmp236,
	movw	r8, #19808	@ tmp238,
	mov	lr, #0	@ tmp237,
	str	lr, [r4, r8]	@ tmp237, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	str	lr, [r4, r7]	@ tmp237, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	r1, [r5, #2908]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r1, #0	@ <variable>.pic_order_cnt_type,
	beq	.L3639	@,
.L3627:
	movw	r7, #19852	@ tmp250,
	movw	r8, #19856	@ tmp252,
	mov	r1, #0	@ tmp251,
	str	r1, [r4, r8]	@ tmp251, <variable>.CurrPOC.delta_pic_order_cnt
	str	r1, [r4, r7]	@ tmp251, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r3, [r5, #2908]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r3, #1	@ <variable>.pic_order_cnt_type,
	beq	.L3640	@,
.L3628:
	movw	r5, #59164	@ tmp263,
	ldr	r2, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3613	@,
	ldrb	r3, [r6, #17]	@ zero_extendqisi2	@ <variable>.redundant_pic_cnt_present_flag, <variable>.redundant_pic_cnt_present_flag
	cmp	r3, #0	@ <variable>.redundant_pic_cnt_present_flag,
	beq	.L3629	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC336	@,
	movt	r1, #:upper16:.LC336	@,
	bl	ue_v	@
	cmp	r0, #0	@,
	bne	.L3630	@,
	ldr	r1, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3630	@,
.L3629:
	mov	r0, r4	@, pH264Ctx
	bl	IsNewPic	@
	movw	r2, #20693	@ tmp272,
	uxtb	ip, r0	@ D.44060,
	strb	ip, [r4, r2]	@ D.44060, <variable>.CurrSlice.new_pic_flag
	cmp	ip, #0	@ D.44060,
	bne	.L3631	@,
	movw	lr, #22376	@ tmp275,
	movw	r0, #20740	@ tmp274,
	ldr	r3, [r4, lr]	@ <variable>.PrevSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r1, r3	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	bls	.L3641	@,
.L3631:
	mov	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3613:
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3636:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC326	@,
	movt	r1, #:upper16:.LC326	@,
	bl	u_1	@
	uxtb	r3, r0	@ D.43978,
	strb	r3, [r4, r7]	@ D.43978, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ D.43978,
	bne	.L3642	@,
.L3617:
	ldr	ip, [r5, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldrb	lr, [r5, #18]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r1, [r5, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	r2, ip, #1	@ tmp211, <variable>.pic_width_in_mbs_minus1,
	cmp	lr, #0	@ <variable>.frame_mbs_only_flag,
	mla	r2, r1, r2, r2	@ D.43988, <variable>.pic_height_in_map_units_minus1, tmp211, tmp211
	moveq	r1, #2	@ iftmp.698,
	beq	.L3619	@,
	movw	r3, #20689	@ tmp214,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9660, <variable>.CurrSlice.field_pic_flag
	b	.L3632	@
.L3635:
	cmp	r0, #0	@ D.43962,
	movw	ip, #20704	@ tmp191,
	str	r0, [r4, ip]	@ D.43962, <variable>.CurrSlice.prev_frame_num
	beq	.L3614	@,
	movw	r1, #:lower16:.LC325	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC325	@,
	bl	dprint_vfmw	@
	b	.L3614	@
.L3622:
	movw	r1, #20740	@ tmp222,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r3, r2, lsr #1	@ <variable>.CurrSlice.first_mb_in_slice, pic_size,
	bcc	.L3624	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC328	@,
	movt	r1, #:upper16:.LC328	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3607:
	mov	r2, r5	@, tmp_pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC321	@,
	movt	r1, #:upper16:.LC321	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3639:
	ldr	ip, [r5, #2912]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	mov	r0, r4	@, pH264Ctx
	movw	r2, #:lower16:.LC332	@,
	movt	r2, #:upper16:.LC332	@,
	add	r1, ip, #4	@, <variable>.log2_max_pic_order_cnt_lsb_minus4,
	bl	u_v	@
	str	r0, [r4, r7]	@, <variable>.CurrPOC.pic_order_cnt_lsb
	ldrb	r0, [r6, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #0	@ <variable>.pic_order_present_flag,
	beq	.L3627	@,
	movw	r2, #20689	@ tmp246,
	ldrb	r7, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r7, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L3627	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC333	@,
	movt	r1, #:upper16:.LC333	@,
	bl	se_v	@
	str	r0, [r4, r8]	@, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	b	.L3627	@
.L3640:
	ldrb	lr, [r5, #16]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	cmp	lr, #0	@ <variable>.delta_pic_order_always_zero_flag,
	bne	.L3628	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC334	@,
	movt	r1, #:upper16:.LC334	@,
	bl	se_v	@
	str	r0, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldrb	r5, [r6, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r5, #1	@ <variable>.pic_order_present_flag,
	bne	.L3628	@,
	movw	ip, #20689	@ tmp259,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r0, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L3628	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC335	@,
	movt	r1, #:upper16:.LC335	@,
	bl	se_v	@
	str	r0, [r4, r8]	@, <variable>.CurrPOC.delta_pic_order_cnt
	b	.L3628	@
.L3637:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC329	@,
	movt	r1, #:upper16:.LC329	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3638:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC330	@,
	movt	r1, #:upper16:.LC330	@,
	bl	ue_v	@
	movw	r2, #20728	@ tmp231,
	cmp	r0, #65536	@ D.44015,
	str	r0, [r4, r2]	@ D.44015, <variable>.CurrSlice.idr_pic_id
	bcs	.L3626	@,
	movw	r3, #59164	@ tmp233,
	ldr	ip, [r4, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	beq	.L3625	@,
.L3626:
	movw	r1, #:lower16:.LC331	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC331	@,
	bl	dprint_vfmw	@
	b	.L3625	@
.L3642:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC327	@,
	movt	r1, #:upper16:.LC327	@,
	bl	u_1	@
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ prephitmp.9660, <variable>.CurrSlice.field_pic_flag
	strb	r0, [r4, r8]	@, <variable>.CurrSlice.bottom_field_flag
	b	.L3617	@
.L3634:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC322	@,
	movt	r1, #:upper16:.LC322	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3630:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC337	@,
	movt	r1, #:upper16:.LC337	@,
	bl	dprint_vfmw	@
	movw	r0, #:lower16:g_event_report	@ tmp270,
	movt	r0, #:upper16:g_event_report	@ tmp270,
	ldr	ip, [r0, #0]	@ g_event_report.701, g_event_report
	cmp	ip, #0	@ g_event_report.701,
	beq	.L3613	@,
	mov	r2, #0	@,
	movw	lr, #59224	@ tmp271,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.701
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3641:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC338	@,
	movt	r1, #:upper16:.LC338	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43940,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	ProcessSliceHeaderFirstPart, .-ProcessSliceHeaderFirstPart
	.align	2
	.global	DecMMCO
	.type	DecMMCO, %function
DecMMCO:
	.fnstart
.LFB1628:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ save
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	moveq	r6, r1	@ MMCONum.9701, save
	movweq	r7, #59164	@ tmp297,
	beq	.L3645	@,
	mov	r5, #0	@ MMCONum,
	movw	sl, #2004	@ tmp286,
	movw	r9, #59164	@ tmp291,
	b	.L3646	@
.L3648:
	cmp	r3, #2	@ prephitmp.9677,
	beq	.L3679	@,
.L3649:
	cmp	r3, #3	@ prephitmp.9677,
	cmpne	r3, #6	@, prephitmp.9677,
	beq	.L3680	@,
.L3650:
	cmp	r3, #4	@ prephitmp.9677,
	beq	.L3681	@,
.L3651:
	cmp	r3, #6	@ prephitmp.9677,
	bhi	.L3652	@,
.L3683:
	ldr	lr, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3652	@,
	cmp	r3, #0	@ prephitmp.9677,
	beq	.L3655	@,
	add	r5, r5, #1	@ MMCONum, MMCONum,
	cmp	r5, #100	@ MMCONum,
	beq	.L3682	@,
.L3646:
	movw	r3, #26388	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC340	@,
	movt	r1, #:upper16:.LC340	@,
	ldr	r8, [r4, r3]	@ D.43791, <variable>.CurrMarkIdx
	bl	ue_v	@
	mov	r7, r5, asl #2	@ tmp282, MMCONum,
	add	ip, r7, r5	@ tmp153, tmp282, MMCONum
	mul	r2, sl, r8	@ tmp155, tmp286, D.43791
	add	r1, r2, ip, asl #2	@, tmp157, tmp155, tmp153,
	mov	r3, r0	@ prephitmp.9677,
	cmp	r0, #1	@ prephitmp.9677,
	cmpne	r0, #3	@, prephitmp.9677,
	add	r0, r1, r4	@ tmp158, tmp157, pH264Ctx
	add	r6, r0, #22272	@ tmp159, tmp158,
	add	r6, r6, #104	@ tmp159, tmp159,
	str	r3, [r6, #8]	@ prephitmp.9677, <variable>.memory_management_control_operation
	bne	.L3648	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC341	@,
	movt	r1, #:upper16:.LC341	@,
	bl	ue_v	@
	ldr	r3, [r6, #8]	@ prephitmp.9677, <variable>.memory_management_control_operation
	cmp	r3, #2	@ prephitmp.9677,
	str	r0, [r6, #12]	@, <variable>.difference_of_pic_nums_minus1
	bne	.L3649	@,
.L3679:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC342	@,
	movt	r1, #:upper16:.LC342	@,
	bl	ue_v	@
	mul	r3, sl, r8	@ tmp194, tmp286, D.43791
	add	r2, r7, r5	@ tmp192, tmp282, MMCONum
	add	ip, r3, r2, asl #2	@, tmp196, tmp194, tmp192,
	add	r1, ip, r4	@ tmp197, tmp196, pH264Ctx
	add	r3, r1, #22272	@ tmp208, tmp197,
	add	ip, r3, #104	@ tmp208, tmp208,
	add	r1, r3, #112	@ tmp198, tmp198,
	ldr	r3, [ip, #8]	@ prephitmp.9677, <variable>.memory_management_control_operation
	cmp	r3, #3	@ prephitmp.9677,
	cmpne	r3, #6	@, prephitmp.9677,
	str	r0, [r1, #8]	@, <variable>.long_term_pic_num
	bne	.L3650	@,
.L3680:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC343	@,
	movt	r1, #:upper16:.LC343	@,
	bl	ue_v	@
	mul	r3, sl, r8	@ tmp222, tmp286, D.43791
	add	r2, r7, r5	@ tmp220, tmp282, MMCONum
	add	ip, r3, r2, asl #2	@, tmp224, tmp222, tmp220,
	add	r1, ip, r4	@ tmp225, tmp224, pH264Ctx
	add	r3, r1, #22272	@ tmp236, tmp225,
	add	ip, r3, #104	@ tmp236, tmp236,
	add	r1, r3, #112	@ tmp226, tmp226,
	ldr	r3, [ip, #8]	@ prephitmp.9677, <variable>.memory_management_control_operation
	cmp	r3, #4	@ prephitmp.9677,
	str	r0, [r1, #12]	@, <variable>.long_term_frame_idx
	bne	.L3651	@,
.L3681:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC344	@,
	movt	r1, #:upper16:.LC344	@,
	bl	ue_v	@
	mul	r8, sl, r8	@ tmp243, tmp286, D.43791
	add	r2, r7, r5	@ tmp241, tmp282, MMCONum
	add	ip, r8, r2, asl #2	@, tmp245, tmp243, tmp241,
	add	r1, ip, r4	@ tmp246, tmp245, pH264Ctx
	add	r3, r1, #22272	@ tmp257, tmp246,
	add	ip, r3, #104	@ tmp257, tmp257,
	add	r1, r3, #120	@ tmp247, tmp247,
	ldr	r3, [ip, #8]	@ prephitmp.9677, <variable>.memory_management_control_operation
	cmp	r3, #6	@ prephitmp.9677,
	str	r0, [r1, #8]	@, <variable>.max_long_term_frame_idx_plus1
	bls	.L3683	@,
.L3652:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC345	@,
	movt	r1, #:upper16:.LC345	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43790,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3655:
	mov	r0, #0	@ D.43790,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3645:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC340	@,
	movt	r1, #:upper16:.LC340	@,
	bl	ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r8, #0	@, D.43834
	moveq	r8, #1	@, D.43834
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r5, r0	@ memory_management_control_operation,
	beq	.L3684	@,
.L3656:
	cmp	r5, #2	@ memory_management_control_operation,
	beq	.L3685	@,
.L3657:
	cmp	r5, #6	@ memory_management_control_operation,
	orreq	r8, r8, #1	@,, tmp275, D.43834
	cmp	r8, #0	@ tmp275,
	bne	.L3686	@,
.L3658:
	cmp	r5, #4	@ memory_management_control_operation,
	beq	.L3687	@,
	cmp	r5, #6	@ memory_management_control_operation,
	bhi	.L3661	@,
.L3660:
	ldr	r0, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3661	@,
	cmp	r5, #0	@ memory_management_control_operation,
	beq	.L3655	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC340	@,
	movt	r1, #:upper16:.LC340	@,
	add	r6, r6, #1	@ tmp298, MMCONum.9701,
	bl	ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r8, #0	@, D.43834
	moveq	r8, #1	@, D.43834
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r5, r0	@ memory_management_control_operation,
	beq	.L3688	@,
.L3667:
	cmp	r5, #2	@ memory_management_control_operation,
	beq	.L3689	@,
.L3668:
	cmp	r5, #6	@ memory_management_control_operation,
	orreq	r8, r8, #1	@,, tmp311, D.43834
	cmp	r8, #0	@ tmp311,
	bne	.L3690	@,
.L3669:
	cmp	r5, #4	@ memory_management_control_operation,
	beq	.L3675	@,
	cmp	r5, #6	@ memory_management_control_operation,
	bhi	.L3661	@,
.L3676:
	ldr	r3, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3661	@,
	cmp	r5, #0	@ memory_management_control_operation,
	beq	.L3655	@,
	add	r6, r6, #1	@ MMCONum.9701, tmp298,
	cmp	r6, #100	@ MMCONum.9701,
	bne	.L3645	@,
.L3678:
	mvn	r0, #0	@ D.43790,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3682:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC339	@,
	movt	r1, #:upper16:.LC339	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43790,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3686:
	movw	r1, #:lower16:.LC343	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC343	@,
	bl	ue_v	@
	b	.L3658	@
.L3684:
	movw	r1, #:lower16:.LC341	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC341	@,
	bl	ue_v	@
	b	.L3656	@
.L3690:
	movw	r1, #:lower16:.LC343	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC343	@,
	bl	ue_v	@
	b	.L3669	@
.L3688:
	movw	r1, #:lower16:.LC341	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC341	@,
	bl	ue_v	@
	b	.L3667	@
.L3687:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC344	@,
	movt	r1, #:upper16:.LC344	@,
	bl	ue_v	@
	b	.L3660	@
.L3685:
	movw	r1, #:lower16:.LC342	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC342	@,
	bl	ue_v	@
	b	.L3657	@
.L3689:
	movw	r1, #:lower16:.LC342	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC342	@,
	bl	ue_v	@
	b	.L3668	@
.L3675:
	movw	r1, #:lower16:.LC344	@,
	mov	r0, r4	@, pH264Ctx
	movt	r1, #:upper16:.LC344	@,
	bl	ue_v	@
	b	.L3676	@
.L3661:
	movw	r1, #:lower16:.LC345	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC345	@,
	bl	dprint_vfmw	@
	b	.L3678	@
	.fnend
	.size	DecMMCO, .-DecMMCO
	.align	2
	.global	dec_ref_pic_marking
	.type	dec_ref_pic_marking, %function
dec_ref_pic_marking:
	.fnstart
.LFB1629:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #20693	@ tmp150,
	ldrb	r8, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	movw	r3, #26388	@ tmp149,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r6, [r0, r3]	@ tmpMarkIdx, <variable>.CurrMarkIdx
	cmp	r8, #0	@ <variable>.CurrSlice.new_pic_flag,
	bne	.L3692	@,
	movw	ip, #2004	@ tmp158,
	mov	r5, r6	@ tmpMarkIdx.9726, tmpMarkIdx
	mla	r2, ip, r6, r0	@ tmp159, tmp158, tmpMarkIdx, pH264Ctx
	add	r7, r2, #22272	@ tmp160, tmp159,
	add	r7, r7, #104	@ tmp160, tmp160,
	ldrb	r1, [r7, #4]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L3695	@,
	movw	lr, #20691	@ tmp162,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3704	@,
.L3696:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC349	@,
	movt	r1, #:upper16:.LC349	@,
	bl	u_1	@
	movw	r2, #2004	@ tmp188,
	mla	r5, r2, r5, r4	@ tmp189, tmp188, tmpMarkIdx.9726, pH264Ctx
	movw	r1, #:lower16:.LC350	@,
	movt	r1, #:upper16:.LC350	@,
	add	ip, r5, #22272	@ tmp190, tmp189,
	add	r5, ip, #104	@ tmp190, tmp190,
	uxtb	r2, r0	@ D.43886,
	mov	r0, #16	@,
	strb	r2, [r5, #7]	@ D.43886, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	dprint_vfmw	@
	ldrb	r1, [r5, #7]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r1, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L3705	@,
.L3698:
	mov	r0, #0	@ D.43896,
.L3697:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L3692:
	movw	lr, #20691	@ tmp162,
	rsbs	r5, r6, #1	@ tmpMarkIdx.9726, tmpMarkIdx
	movcc	r5, #0	@ tmpMarkIdx.9726
	str	r5, [r0, r3]	@ tmpMarkIdx.9726, <variable>.CurrMarkIdx
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	bne	.L3696	@,
.L3704:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC346	@,
	movt	r1, #:upper16:.LC346	@,
	bl	u_1	@
	movw	r3, #2004	@ tmp167,
	mla	r2, r3, r5, r4	@ tmp168, tmp167, tmpMarkIdx.9726, pH264Ctx
	movw	r1, #:lower16:.LC347	@,
	movt	r1, #:upper16:.LC347	@,
	add	r5, r2, #22272	@ tmp169, tmp168,
	add	r5, r5, #104	@ tmp169, tmp169,
	strb	r0, [r5, #5]	@, <variable>.no_output_of_prior_pics_flag
	mov	r0, r4	@, pH264Ctx
	bl	u_1	@
	ldrb	r2, [r5, #5]	@ zero_extendqisi2	@, <variable>.no_output_of_prior_pics_flag
	movw	r1, #:lower16:.LC348	@,
	movt	r1, #:upper16:.LC348	@,
	strb	r0, [r5, #6]	@, <variable>.long_term_reference_flag
	mov	r0, #16	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.43896,
	b	.L3697	@
.L3695:
	movw	r1, #20691	@ tmp215,
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r3, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3706	@,
	movw	r1, #:lower16:.LC349	@,
	movt	r1, #:upper16:.LC349	@,
	ldrb	r5, [r7, #7]	@ zero_extendqisi2	@ D.43911, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	u_1	@
	cmp	r5, r0	@ D.43911,
	bne	.L3707	@,
	ldrb	r2, [r7, #7]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L3698	@,
	mov	r0, r4	@, pH264Ctx
	mov	r1, r8	@, <variable>.CurrSlice.new_pic_flag
	bl	DecMMCO	@
	b	.L3697	@
.L3705:
	mov	r0, r4	@, pH264Ctx
	mov	r1, #1	@,
	bl	DecMMCO	@
	cmn	r0, #1	@ D.43892,
	mov	r7, r0	@ D.43892,
	movne	r3, #1	@ tmp213,
	movne	r0, #0	@ D.43896,
	strneb	r3, [r5, #4]	@ tmp213, <variable>.is_valid
	bne	.L3697	@,
	movw	lr, #26388	@ tmp206,
	mov	r0, #0	@ tmp204,
	movw	r1, #:lower16:.LC351	@,
	strb	r0, [r5, #4]	@ tmp204, <variable>.is_valid
	movt	r1, #:upper16:.LC351	@,
	mov	r0, #1	@,
	str	r6, [r4, lr]	@ tmpMarkIdx, <variable>.CurrMarkIdx
	bl	dprint_vfmw	@
	mov	r0, r7	@ D.43896, D.43892
	b	.L3697	@
.L3706:
	movw	r1, #:lower16:.LC346	@,
	movt	r1, #:upper16:.LC346	@,
	ldrb	r5, [r7, #5]	@ zero_extendqisi2	@ D.43899, <variable>.no_output_of_prior_pics_flag
	bl	u_1	@
	cmp	r5, r0	@ D.43899,
	bne	.L3708	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC347	@,
	movt	r1, #:upper16:.LC347	@,
	ldrb	r4, [r7, #6]	@ zero_extendqisi2	@ D.43905, <variable>.long_term_reference_flag
	bl	u_1	@
	cmp	r4, r0	@ D.43905,
	beq	.L3698	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC353	@,
	movt	r1, #:upper16:.LC353	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43896,
	b	.L3697	@
.L3707:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC354	@,
	movt	r1, #:upper16:.LC354	@,
	bl	dprint_vfmw	@
	movw	r0, #59168	@ tmp243,
	ldr	ip, [r4, r0]	@ <variable>.TotalNal, <variable>.TotalNal
	movw	r1, #59188	@ tmp239,
	movw	r3, #59204	@ tmp241,
	ldr	r2, [r4, r1]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	ldr	r3, [r4, r3]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC355	@,
	movt	r1, #:upper16:.LC355	@,
	str	ip, [sp, #0]	@ <variable>.TotalNal,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43896,
	b	.L3697	@
.L3708:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC352	@,
	movt	r1, #:upper16:.LC352	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43896,
	b	.L3697	@
	.fnend
	.size	dec_ref_pic_marking, .-dec_ref_pic_marking
	.align	2
	.global	pred_weight_table
	.type	pred_weight_table, %function
pred_weight_table:
	.fnstart
.LFB1627:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #13592	@ tmp163,
	movw	r6, #20700	@ tmp164,
	ldr	r4, [r0, sl]	@ <variable>.PPS, <variable>.PPS
	ldr	ip, [r0, r6]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	lr, #2208	@ tmp167,
	movw	r1, #13588	@ tmp169,
	mov	r7, #4000	@ tmp172,
	ldr	r3, [r0, r1]	@ <variable>.SPS, <variable>.SPS
	movw	r1, #:lower16:.LC356	@,
	mla	r9, lr, ip, r4	@, tmp167, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	movt	r1, #:upper16:.LC356	@,
	mov	r5, r0	@ pH264Ctx, pH264Ctx
	movw	r6, #20752	@ tmp175,
	mov	r4, #1	@ tmp176,
	str	r9, [fp, #-48]	@, %sfp
	ldr	r2, [r9, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	r7, r7, r2, r3	@ pSPS, tmp172, <variable>.seq_parameter_set_id, <variable>.SPS
	bl	ue_v	@
	str	r0, [r5, r6]	@ prephitmp.9780, <variable>.CurrSlice.luma_log2_weight_denom
	mov	sl, r4, asl r0	@ y_default_weight, tmp176,
	ldr	r9, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r9, #0	@ <variable>.chroma_format_idc,
	bne	.L3735	@,
.L3711:
	cmp	r0, #7	@ prephitmp.9780,
	bhi	.L3734	@,
	movw	ip, #20756	@ tmp183,
	ldr	r0, [r5, ip]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	cmp	r0, #7	@ <variable>.CurrSlice.chroma_log2_weight_denom,
	bhi	.L3734	@,
	movw	r1, #59164	@ tmp186,
	ldr	r2, [r5, r1]	@ prephitmp.9746, <variable>.SeErrFlg
	cmp	r2, #0	@ prephitmp.9746,
	bne	.L3713	@,
	add	r8, r5, #20736	@ ivtmp.9775, pH264Ctx,
	mov	r6, r2	@ i, prephitmp.9746
	add	r4, r8, #24	@ ivtmp.9775, ivtmp.9775,
	movw	r8, #20744	@ tmp247,
	b	.L3722	@
.L3718:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L3736	@,
.L3719:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_v
.L3721:
	ldr	r2, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.9775, ivtmp.9775,
	cmp	r2, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	bcc	.L3737	@,
.L3722:
	mov	r0, r5	@, pH264Ctx
	movw	r1, #:lower16:.LC359	@,
	movt	r1, #:upper16:.LC359	@,
	bl	u_1	@
	cmp	r0, #0	@ D.43720
	streq	r0, [r4, #768]	@ D.43720, <variable>.CurrSlice.wp_offset_l0_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l0_y
	beq	.L3718	@,
	mov	r0, r5	@, pH264Ctx
	movw	r1, #:lower16:.LC360	@,
	movt	r1, #:upper16:.LC360	@,
	bl	se_v	@
	movw	r1, #:lower16:.LC361	@,
	movt	r1, #:upper16:.LC361	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l0_y
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l0_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L3719	@,
.L3736:
	movw	r1, #:lower16:.LC362	@,
	mov	r0, r5	@, pH264Ctx
	movt	r1, #:upper16:.LC362	@,
	bl	u_1	@
	cmp	r0, #0	@ D.43729
	bne	.L3738	@,
	ldr	r2, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	str	r0, [r4, #1024]	@ D.43729, <variable>.CurrSlice.wp_offset_l0_v
	cmp	r2, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_u
	str	r0, [r4, #896]	@ D.43729, <variable>.CurrSlice.wp_offset_l0_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_v
	add	r4, r4, #4	@ ivtmp.9775, ivtmp.9775,
	bcs	.L3722	@,
.L3737:
	ldr	r0, [fp, #-48]	@, %sfp
	ldr	r3, [r0, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	r3, #1	@ <variable>.weighted_bipred_idc,
	beq	.L3739	@,
.L3723:
	movw	r2, #59164	@ tmp229,
	ldr	r0, [r5, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@, D.43719,
	b	.L3716	@
.L3734:
	movw	lr, #59164	@ tmp185,
	ldr	r2, [r5, lr]	@ prephitmp.9746, <variable>.SeErrFlg
.L3713:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC358	@,
	movt	r1, #:upper16:.LC358	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43719,
.L3716:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3738:
	movw	r1, #:lower16:.LC363	@,
	mov	r0, r5	@, pH264Ctx
	movt	r1, #:upper16:.LC363	@,
	bl	se_v	@
	movw	r1, #:lower16:.LC364	@,
	movt	r1, #:upper16:.LC364	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l0_u
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	movw	r1, #:lower16:.LC363	@,
	movt	r1, #:upper16:.LC363	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l0_u
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	movw	r1, #:lower16:.LC364	@,
	movt	r1, #:upper16:.LC364	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l0_v
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l0_v
	b	.L3721	@
.L3735:
	mov	r0, r5	@, pH264Ctx
	movw	r1, #:lower16:.LC357	@,
	movt	r1, #:upper16:.LC357	@,
	bl	ue_v	@
	movw	r2, #20756	@ tmp179,
	mov	r3, r0	@ D.43710,
	ldr	r0, [r5, r6]	@ prephitmp.9780, <variable>.CurrSlice.luma_log2_weight_denom
	mov	r9, r4, asl r3	@ uv_default_weight, tmp176,
	str	r3, [r5, r2]	@ D.43710, <variable>.CurrSlice.chroma_log2_weight_denom
	b	.L3711	@
.L3739:
	movw	lr, #20688	@ tmp208,
	ldrb	ip, [r5, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L3723	@,
	add	r4, r5, #20992	@ ivtmp.9765, pH264Ctx,
	mov	r6, #0	@ i.9779,
	add	r4, r4, #152	@ ivtmp.9765, ivtmp.9765,
	movw	r8, #20748	@ tmp240,
	b	.L3729	@
.L3725:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L3740	@,
.L3726:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_v
.L3728:
	ldr	r1, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r6, r6, #1	@ i.9779, i.9779,
	add	r4, r4, #4	@ ivtmp.9765, ivtmp.9765,
	cmp	r1, r6	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.9779
	bcc	.L3723	@,
.L3729:
	mov	r0, r5	@, pH264Ctx
	movw	r1, #:lower16:.LC365	@,
	movt	r1, #:upper16:.LC365	@,
	bl	u_1	@
	cmp	r0, #0	@ D.43745
	streq	r0, [r4, #768]	@ D.43745, <variable>.CurrSlice.wp_offset_l1_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l1_y
	beq	.L3725	@,
	mov	r0, r5	@, pH264Ctx
	movw	r1, #:lower16:.LC366	@,
	movt	r1, #:upper16:.LC366	@,
	bl	se_v	@
	movw	r1, #:lower16:.LC367	@,
	movt	r1, #:upper16:.LC367	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l1_y
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l1_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L3726	@,
.L3740:
	movw	r1, #:lower16:.LC368	@,
	mov	r0, r5	@, pH264Ctx
	movt	r1, #:upper16:.LC368	@,
	bl	u_1	@
	cmp	r0, #0	@ D.43753
	bne	.L3741	@,
	str	r0, [r4, #1024]	@ D.43753, <variable>.CurrSlice.wp_offset_l1_v
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_u
	str	r0, [r4, #896]	@ D.43753, <variable>.CurrSlice.wp_offset_l1_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_v
	b	.L3728	@
.L3741:
	movw	r1, #:lower16:.LC369	@,
	mov	r0, r5	@, pH264Ctx
	movt	r1, #:upper16:.LC369	@,
	bl	se_v	@
	movw	r1, #:lower16:.LC370	@,
	movt	r1, #:upper16:.LC370	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l1_u
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	movw	r1, #:lower16:.LC369	@,
	movt	r1, #:upper16:.LC369	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l1_u
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	movw	r1, #:lower16:.LC370	@,
	movt	r1, #:upper16:.LC370	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l1_v
	mov	r0, r5	@, pH264Ctx
	bl	se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l1_v
	b	.L3728	@
	.fnend
	.size	pred_weight_table, .-pred_weight_table
	.align	2
	.global	ref_pic_list_reordering
	.type	ref_pic_list_reordering, %function
ref_pic_list_reordering:
	.fnstart
.LFB1626:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #20700	@ tmp161,
	movw	r1, #13592	@ tmp163,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	ldr	r5, [r0, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	sl, #2208	@ tmp165,
	ldr	r0, [r0, r1]	@ <variable>.PPS, <variable>.PPS
	movw	r3, #20689	@ tmp177,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r2, #13588	@ tmp159,
	mov	r3, #4000	@ tmp169,
	mla	r1, sl, r5, r0	@ tmp166, tmp165, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	ldr	r5, [r4, r2]	@ <variable>.SPS, <variable>.SPS
	movw	r0, #19897	@ tmp174,
	mov	sl, #0	@ tmp172,
	ldr	ip, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	strb	sl, [r4, r0]	@ tmp172, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	movw	r0, #19896	@ tmp171,
	strb	sl, [r4, r0]	@ tmp172, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	mov	sl, #1	@ tmp184,
	mla	r2, r3, ip, r5	@ pSPS, tmp169, <variable>.seq_parameter_set_id, <variable>.SPS
	movw	r5, #20688	@ tmp185,
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	ldr	r1, [r2, #2904]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	addne	r1, r1, #5	@ tmp179, <variable>.log2_max_frame_num_minus4,
	addeq	r1, r1, #4	@ tmp182, <variable>.log2_max_frame_num_minus4,
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	mov	sl, sl, asl r1	@ MaxPicNum, tmp184,
	bls	.L3776	@,
.L3745:
	movw	r2, #59164	@ tmp238,
	ldr	r3, [r4, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@ D.43628,
	ldmnefd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3765:
	mov	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3776:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC371	@,
	movt	r1, #:upper16:.LC371	@,
	bl	u_1	@
	movw	r3, #19896	@ tmp188,
	uxtb	r0, r0	@ D.43616,
	strb	r0, [r4, r3]	@ D.43616, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r0, #0	@ D.43616,
	ldreqb	r3, [r4, r5]	@ zero_extendqisi2	@ prephitmp.9796, <variable>.CurrSlice.slice_type
	beq	.L3747	@,
	movw	r7, #20744	@ tmp191,
	ldr	r6, [r4, r7]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmn	r6, #2	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	beq	.L3748	@,
	add	r8, r4, #19712	@ ivtmp.9818, pH264Ctx,
	mov	r6, #0	@ i,
	add	r5, r8, #188	@ ivtmp.9818, ivtmp.9818,
	movw	r8, #59164	@ tmp249,
	b	.L3759	@
.L3755:
	bl	ue_v	@
	str	r0, [r5, #528]	@, <variable>.CurrReorder.long_term_pic_idx_l0
.L3758:
	ldr	ip, [r4, r7]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r5, r5, #4	@ ivtmp.9818, ivtmp.9818,
	add	r3, ip, #2	@ prephitmp.9824, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	cmp	r3, r6	@ prephitmp.9824, i
	bls	.L3754	@,
.L3759:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC372	@,
	movt	r1, #:upper16:.LC372	@,
	bl	ue_v	@
	movw	r1, #:lower16:.LC376	@,
	movt	r1, #:upper16:.LC376	@,
	mov	r2, r0	@ D.43621,
	cmp	r2, #3	@ D.43621,
	mov	r0, r4	@, pH264Ctx
	str	r2, [r5, #0]	@ D.43621, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	bhi	.L3777	@,
	ldr	r3, [r4, r8]	@ prephitmp.9829, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.9829,
	bne	.L3750	@,
	cmp	r2, #3	@ D.43621,
	beq	.L3778	@,
	cmp	r2, #2	@ D.43621,
	add	r6, r6, #1	@ i, i,
	beq	.L3755	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC374	@,
	movt	r1, #:upper16:.LC374	@,
	bl	ue_v	@
	cmp	sl, r0	@ MaxPicNum, D.43632
	str	r0, [r5, #264]	@ D.43632, <variable>.CurrReorder.abs_diff_pic_num_minus1_l0
	bls	.L3779	@,
	ldr	r3, [r4, r8]	@ prephitmp.9825, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.9825,
	beq	.L3758	@,
.L3757:
	mov	r2, r0	@, D.43632
	movw	r1, #:lower16:.LC375	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC375	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3778:
	movw	r3, #20744	@ tmp198,
	ldr	r2, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r3, r2, #2	@ prephitmp.9824, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
.L3754:
	cmp	r6, r3	@ i, prephitmp.9824
	beq	.L3760	@,
.L3775:
	movw	r3, #20688	@ tmp215,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9796, <variable>.CurrSlice.slice_type
.L3747:
	cmp	r3, #1	@ prephitmp.9796,
	bne	.L3745	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC378	@,
	movt	r1, #:upper16:.LC378	@,
	bl	u_1	@
	movw	r1, #19897	@ tmp218,
	uxtb	r0, r0	@ D.43652,
	strb	r0, [r4, r1]	@ D.43652, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r0, #0	@ D.43652,
	beq	.L3745	@,
	movw	r8, #20748	@ tmp220,
	ldr	ip, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmn	ip, #2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	beq	.L3745	@,
	add	r7, r4, #19968	@ ivtmp.9811, pH264Ctx,
	mov	r5, #0	@ i.9827,
	add	r6, r7, #64	@ ivtmp.9811, ivtmp.9811,
	movw	r7, #59164	@ tmp244,
	b	.L3771	@
.L3770:
	add	r5, r5, #1	@ i.9827, i.9827,
	cmp	r3, r5	@ D.43676, i.9827
	bls	.L3745	@,
.L3771:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC379	@,
	movt	r1, #:upper16:.LC379	@,
	bl	ue_v	@
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	mov	r2, r0	@ D.43656,
	cmp	r2, #3	@ D.43656,
	mov	r0, r4	@, pH264Ctx
	str	r2, [r6, #0]	@ D.43656, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	bhi	.L3780	@,
	ldr	r3, [r4, r7]	@ prephitmp.9798, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.9798,
	bne	.L3763	@,
	cmp	r2, #3	@ D.43656,
	beq	.L3765	@,
	cmp	r2, #2	@ D.43656,
	bne	.L3781	@,
	bl	ue_v	@
	str	r0, [r6, #524]	@, <variable>.CurrReorder.long_term_pic_idx_l1
.L3769:
	ldr	r2, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r6, r6, #4	@ ivtmp.9811, ivtmp.9811,
	add	r3, r2, #2	@ D.43676, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r3, r5	@ D.43676, i.9827
	bne	.L3770	@,
	add	lr, r5, #4992	@ tmp234, i.9827,
	add	ip, lr, #16	@ tmp234, tmp234,
	ldr	r1, [r4, ip, asl #2]	@ tmp236, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	cmp	r1, #3	@ tmp236,
	beq	.L3770	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3781:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC381	@,
	movt	r1, #:upper16:.LC381	@,
	bl	ue_v	@
	cmp	sl, r0	@ MaxPicNum, D.43665
	str	r0, [r6, #264]	@ D.43665, <variable>.CurrReorder.abs_diff_pic_num_minus1_l1
	bls	.L3782	@,
	ldr	r3, [r4, r7]	@ prephitmp.9828, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.9828,
	beq	.L3769	@,
.L3768:
	mov	r2, r0	@, D.43665
	movw	r1, #:lower16:.LC382	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC382	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3780:
	movw	r0, #59164	@ tmp224,
	ldr	r3, [r4, r0]	@ prephitmp.9798, <variable>.SeErrFlg
.L3763:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC380	@,
	movt	r1, #:upper16:.LC380	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3777:
	movw	lr, #59164	@ tmp195,
	ldr	r3, [r4, lr]	@ prephitmp.9829, <variable>.SeErrFlg
.L3750:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC373	@,
	movt	r1, #:upper16:.LC373	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3782:
	movw	lr, #59164	@ tmp225,
	ldr	r3, [r4, lr]	@ prephitmp.9828, <variable>.SeErrFlg
	b	.L3768	@
.L3748:
	mov	r6, #0	@ i,
.L3760:
	add	r2, r6, #4928	@ tmp208, i,
	add	r6, r2, #46	@ tmp208, tmp208,
	add	r6, r4, r6, asl #2	@, tmp212, pH264Ctx, tmp208,
	ldr	lr, [r6, #4]	@ tmp214, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	cmp	lr, #3	@ tmp214,
	beq	.L3775	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC377	@,
	movt	r1, #:upper16:.LC377	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43628,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L3779:
	movw	r1, #59164	@ tmp196,
	ldr	r3, [r4, r1]	@ prephitmp.9825, <variable>.SeErrFlg
	b	.L3757	@
	.fnend
	.size	ref_pic_list_reordering, .-ref_pic_list_reordering
	.align	2
	.global	ProcessSliceHeaderSecondPart
	.type	ProcessSliceHeaderSecondPart, %function
ProcessSliceHeaderSecondPart:
	.fnstart
.LFB1631:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #13580	@ tmp155,
	ldr	r1, [r0, r2]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r5, #20700	@ tmp154,
	ldr	r2, [r0, r5]	@ D.44078, <variable>.CurrSlice.pic_parameter_set_id
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	sub	r3, r1, #1	@ tmp156, <variable>.MaxPpsNum,
	cmp	r3, r2	@ tmp156, D.44078
	bcc	.L3784	@,
	movw	lr, #59164	@ tmp158,
	ldr	ip, [r0, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3784	@,
	bl	PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L3816	@,
	ldr	r6, [r4, r5]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r8, #20688	@ tmp168,
	mov	r7, #2208	@ tmp166,
	ldrb	r5, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	r0, #13592	@ tmp162,
	mul	r7, r7, r6	@ tmp164, tmp166, <variable>.CurrSlice.pic_parameter_set_id
	cmp	r5, #1	@ <variable>.CurrSlice.slice_type,
	ldr	r6, [r4, r0]	@ <variable>.PPS, <variable>.PPS
	add	r5, r7, r6	@ pPPS, tmp164, <variable>.PPS
	beq	.L3817	@,
.L3788:
	ldr	r2, [r5, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movw	sl, #20688	@ tmp177,
	movw	r8, #20744	@ tmp173,
	ldrb	r3, [r4, sl]	@ zero_extendqisi2	@ prephitmp.9871, <variable>.CurrSlice.slice_type
	movw	r9, #20748	@ tmp175,
	str	r2, [r4, r8]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	r3, #1	@ prephitmp.9871,
	ldr	r2, [r5, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	str	r2, [r4, r9]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bls	.L3818	@,
.L3789:
	cmp	r3, #2	@ prephitmp.9871,
	mov	r0, r4	@, pH264Ctx
	movweq	r3, #20688	@ tmp207,
	movweq	r2, #20744	@ tmp205,
	ldreqb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9871, <variable>.CurrSlice.slice_type
	moveq	r1, #32	@ tmp206,
	streq	r1, [r4, r2]	@ tmp206, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	r3, #1	@ prephitmp.9871,
	movwne	r3, #20748	@ tmp208,
	movne	r2, #32	@ tmp209,
	strne	r2, [r4, r3]	@ tmp209, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	ref_pic_list_reordering	@
	cmp	r0, #0	@,
	bne	.L3819	@,
	ldrb	r8, [r5, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r8, #0	@ <variable>.weighted_pred_flag,
	beq	.L3800	@,
	movw	r1, #20688	@ tmp212,
	ldrb	r2, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #0	@ <variable>.CurrSlice.slice_type,
	moveq	r3, #1	@ prephitmp.9846,
	beq	.L3803	@
.L3800:
	ldr	lr, [r5, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	lr, #1	@ <variable>.weighted_bipred_idc,
	beq	.L3820	@,
.L3802:
	mov	r3, #0	@ prephitmp.9846,
.L3803:
	movw	r8, #20695	@ tmp217,
	mov	r2, r3	@, prephitmp.9846
	strb	r3, [r4, r8]	@ prephitmp.9846, <variable>.CurrSlice.apply_weights_flag
	mov	r0, #19	@,
	movw	r1, #:lower16:.LC392	@,
	movt	r1, #:upper16:.LC392	@,
	bl	dprint_vfmw	@
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSlice.apply_weights_flag, <variable>.CurrSlice.apply_weights_flag
	movw	r1, #20756	@ tmp222,
	movw	r2, #20752	@ tmp220,
	cmp	r0, #0	@ <variable>.CurrSlice.apply_weights_flag,
	mov	r3, #0	@ tmp221,
	str	r3, [r4, r1]	@ tmp221, <variable>.CurrSlice.chroma_log2_weight_denom
	str	r3, [r4, r2]	@ tmp221, <variable>.CurrSlice.luma_log2_weight_denom
	bne	.L3821	@,
.L3804:
	movw	ip, #20720	@ tmp227,
	ldr	lr, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L3822	@,
.L3805:
	movw	r8, #22296	@ tmp230,
	mov	r3, #0	@ tmp231,
	str	r3, [r4, r8]	@ tmp231, <variable>.CurrSlice.cabac_init_idc
	ldrb	r2, [r7, r6]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r2, #0	@ <variable>.entropy_coding_mode_flag,
	beq	.L3806	@,
	movw	r0, #20688	@ tmp233,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	bls	.L3823	@,
.L3806:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC397	@,
	movt	r1, #:upper16:.LC397	@,
	movw	r6, #22304	@ tmp242,
	bl	se_v	@
	movw	r7, #22308	@ tmp244,
	movw	r8, #22312	@ tmp246,
	movw	r3, #22300	@ tmp241,
	mov	r1, #0	@ tmp243,
	str	r1, [r4, r8]	@ tmp243, <variable>.CurrSlice.slice_beta_offset_div2
	str	r1, [r4, r6]	@ tmp243, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r1, [r4, r7]	@ tmp243, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r4, r3]	@, <variable>.CurrSlice.slice_qp_delta
	ldrb	r2, [r5, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r2, #0	@ <variable>.deblocking_filter_control_present_flag,
	bne	.L3824	@,
.L3808:
	mov	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3824:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC398	@,
	movt	r1, #:upper16:.LC398	@,
	bl	ue_v	@
	cmp	r0, #2	@ D.44172,
	str	r0, [r4, r6]	@ D.44172, <variable>.CurrSlice.disable_deblocking_filter_idc
	bhi	.L3809	@,
	movw	r5, #59164	@ tmp251,
	ldr	lr, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3809	@,
	cmp	r0, #1	@ D.44172,
	beq	.L3808	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC400	@,
	movt	r1, #:upper16:.LC400	@,
	bl	se_v	@
	add	ip, r0, #6	@ tmp256, D.44180,
	str	r0, [r4, r7]	@ D.44180, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	cmp	ip, #12	@ tmp256,
	bhi	.L3811	@,
	ldr	r0, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3811	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC402	@,
	movt	r1, #:upper16:.LC402	@,
	bl	se_v	@
	add	r2, r0, #6	@ tmp262, D.44188,
	str	r0, [r4, r8]	@ D.44188, <variable>.CurrSlice.slice_beta_offset_div2
	cmp	r2, #12	@ tmp262,
	bhi	.L3813	@,
	ldr	r3, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3808	@,
.L3813:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC403	@,
	movt	r1, #:upper16:.LC403	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3821:
	mov	r0, r4	@, pH264Ctx
	bl	pred_weight_table	@
	cmp	r0, #0	@,
	beq	.L3804	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC393	@,
	movt	r1, #:upper16:.LC393	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3822:
	mov	r0, r4	@, pH264Ctx
	bl	dec_ref_pic_marking	@
	cmp	r0, #0	@,
	beq	.L3805	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC394	@,
	movt	r1, #:upper16:.LC394	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3820:
	movw	ip, #20688	@ tmp215,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L3802	@,
	mov	r3, #1	@ prephitmp.9846,
	b	.L3803	@
.L3817:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC385	@,
	movt	r1, #:upper16:.LC385	@,
	movw	r9, #20694	@ tmp171,
	bl	u_1	@
	strb	r0, [r4, r9]	@, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	b	.L3788	@
.L3818:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC386	@,
	movt	r1, #:upper16:.LC386	@,
	bl	u_1	@
	cmp	r0, #0	@,
	ldreq	r3, [r4, r8]	@ prephitmp.9848, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L3825	@,
.L3791:
	movw	ip, #20689	@ tmp187,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r2, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L3792	@,
	cmp	r3, #15	@ prephitmp.9848,
	bhi	.L3793	@,
	movw	lr, #20748	@ tmp189,
	ldr	r3, [r4, lr]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r3, #15	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L3794	@,
	movw	ip, #20688	@ tmp191,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L3794	@,
.L3793:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC389	@,
	movt	r1, #:upper16:.LC389	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3794:
	movw	lr, #59164	@ tmp193,
	ldr	r3, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3793	@,
.L3815:
	movw	r3, #20688	@ tmp203,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9871, <variable>.CurrSlice.slice_type
	b	.L3789	@
.L3784:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC321	@,
	movt	r1, #:upper16:.LC321	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3823:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC395	@,
	movt	r1, #:upper16:.LC395	@,
	bl	ue_v	@
	cmp	r0, #2	@ D.44162,
	str	r0, [r4, r8]	@ D.44162, <variable>.CurrSlice.cabac_init_idc
	bhi	.L3807	@,
	movw	ip, #59164	@ tmp237,
	ldr	lr, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L3806	@,
.L3807:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC396	@,
	movt	r1, #:upper16:.LC396	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3792:
	cmp	r3, #31	@ prephitmp.9848,
	bhi	.L3795	@,
	movw	ip, #20748	@ tmp197,
	ldr	r0, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r0, #31	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L3796	@,
	movw	lr, #20688	@ tmp199,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L3796	@,
.L3795:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC390	@,
	movt	r1, #:upper16:.LC390	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3796:
	movw	ip, #59164	@ tmp201,
	ldr	r0, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3815	@,
	b	.L3795	@
.L3825:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC387	@,
	movt	r1, #:upper16:.LC387	@,
	bl	ue_v	@
	ldrb	r1, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	mov	r3, r0	@ prephitmp.9848,
	str	r0, [r4, r8]	@ prephitmp.9848, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L3791	@,
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC388	@,
	movt	r1, #:upper16:.LC388	@,
	bl	ue_v	@
	ldr	r3, [r4, r8]	@ prephitmp.9848, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	str	r0, [r4, r9]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	b	.L3791	@
.L3811:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC401	@,
	movt	r1, #:upper16:.LC401	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3809:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC399	@,
	movt	r1, #:upper16:.LC399	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3816:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC322	@,
	movt	r1, #:upper16:.LC322	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L3819:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC391	@,
	movt	r1, #:upper16:.LC391	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44082,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	ProcessSliceHeaderSecondPart, .-ProcessSliceHeaderSecondPart
	.align	2
	.global	H264_DecSlice
	.type	H264_DecSlice, %function
H264_DecSlice:
	.fnstart
.LFB1635:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	movw	r0, #59168	@ tmp162,
	movw	r1, #:lower16:.LC404	@,
	ldr	lr, [r4, r0]	@ <variable>.TotalNal, <variable>.TotalNal
	movt	r1, #:upper16:.LC404	@,
	mov	r0, #22	@,
	sub	r2, lr, #1	@, <variable>.TotalNal,
	bl	dprint_vfmw	@
	ldr	r5, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	ip, #20691	@ tmp165,
	movw	r3, #20720	@ tmp169,
	mov	r0, r4	@, pH264Ctx
	ldrb	r1, [r5, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	strb	r1, [r4, ip]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r2, [r5, #76]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r2, [r4, r3]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	bl	ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L3830	@,
	mov	r0, r4	@, pH264Ctx
	bl	ProcessSliceHeaderSecondPart	@
	cmp	r0, #0	@,
	bne	.L3830	@,
	movw	r2, #59148	@ tmp177,
	ldr	r3, [r4, r2]	@ temp.9924, <variable>.SliceParaNum
	cmp	r3, #0	@ temp.9924,
	beq	.L3832	@,
	add	r2, r4, #57088	@ tmp184, pH264Ctx,
	mov	r5, r3, asl #2	@ D.57189, temp.9924,
	add	lr, r2, #4	@ tmp184, tmp184,
	sub	ip, r5, #4	@ tmp249, D.57189,
	ubfx	ip, ip, #2, #1	@ tmp250, tmp249,,
	ldr	r3, [lr, #0]	@ D.44357, <variable>.pSliceNal
	ldr	r1, [r3, #8]	@ Addr0, <variable>.streamBuffer
	cmp	r1, #0	@ Addr0,
	ldrne	r6, [r3, #12]	@ Size0, <variable>.bitstream_length
	beq	.L3908	@,
.L3882:
	ldr	lr, [r3, #36]	@ Addr1, <variable>.streamBuffer
	mov	r2, #4	@ ivtmp.9905,
	cmp	lr, #0	@ Addr1,
	ldrne	r0, [r3, #40]	@ Size1, <variable>.bitstream_length
	moveq	r0, lr	@ Size1, Addr1
	cmp	lr, #0	@ Addr1,
	add	r3, r6, r0	@ Size, Size0, Size1
	movne	r1, lr	@ PrevNalAddr, Addr1
	movne	r6, r0	@ PrevNalSize, Size1
	cmp	r2, r5	@ ivtmp.9905, D.57189
	beq	.L3832	@,
	cmp	ip, #0	@ tmp250,
	beq	.L3844	@,
	add	lr, r4, r2	@ tmp279, pH264Ctx, ivtmp.9905
	add	ip, lr, #57088	@ tmp281, tmp279,
	add	r0, ip, r2	@ tmp281, tmp281,
	ldr	ip, [r0, #0]	@ D.44357, <variable>.pSliceNal
	ldr	lr, [ip, #8]	@ Addr0, <variable>.streamBuffer
	ldr	r0, [ip, #36]	@ Addr1, <variable>.streamBuffer
	cmp	lr, #0	@ Addr0,
	ldrne	r7, [ip, #12]	@ Size0, <variable>.bitstream_length
	moveq	r7, lr	@ Size0, Addr0
	cmp	r0, #0	@ Addr1,
	ldrne	ip, [ip, #40]	@ Size1, <variable>.bitstream_length
	moveq	ip, r0	@ Size1, Addr1
	cmp	r1, #0	@ PrevNalAddr,
	addeq	r3, r7, r3	@ D.44377, Size0, Size
	addeq	r3, r3, ip	@ Size, D.44377, Size1
	bne	.L3909	@,
.L3892:
	cmp	r0, #0	@ Addr1,
	moveq	r1, lr	@ PrevNalAddr, Addr0
	moveq	r6, r7	@ PrevNalSize, Size0
	movne	r1, r0	@ PrevNalAddr, Addr1
	movne	r6, ip	@ PrevNalSize, Size1
	b	.L3905	@
.L3876:
	rsb	r7, r7, ip	@ tmp300, PrevNalSize, Addr0
	rsb	lr, lr, r7	@ tmp301, PrevNalAddr, tmp300
	add	lr, lr, r6	@ Size0.9907, tmp301, Size0
.L3903:
	add	r3, r0, r3	@ Size.9914, Size1, Size
	add	r3, r3, lr	@ Size, Size.9914, Size0.9907
.L3901:
	cmp	r1, #0	@ Addr1,
	moveq	r1, ip	@ PrevNalAddr, Addr0
	movne	r6, r0	@ PrevNalSize, Size1
.L3905:
	add	r2, r2, #4	@ ivtmp.9905, tmp251,
	cmp	r2, r5	@ ivtmp.9905, D.57189
	beq	.L3832	@,
.L3844:
	add	lr, r4, r2	@ tmp254, pH264Ctx, ivtmp.9905
	add	r0, lr, #57088	@ tmp255, tmp254,
	ldr	ip, [r0, #4]	@ D.44357, <variable>.pSliceNal
	ldr	lr, [ip, #8]	@ Addr0, <variable>.streamBuffer
	ldr	r0, [ip, #36]	@ Addr1, <variable>.streamBuffer
	cmp	lr, #0	@ Addr0,
	ldrne	r7, [ip, #12]	@ Size0, <variable>.bitstream_length
	moveq	r7, lr	@ Size0, Addr0
	cmp	r0, #0	@ Addr1,
	moveq	ip, r0	@ Size1, Addr1
	ldrne	ip, [ip, #40]	@ Size1, <variable>.bitstream_length
	cmp	r1, #0	@ PrevNalAddr,
	addeq	r3, r7, r3	@ D.44377, Size0, Size
	addeq	r3, r3, ip	@ Size, D.44377, Size1
	beq	.L3841	@,
	cmp	lr, r1	@ Addr0, PrevNalAddr
	add	r3, ip, r3	@ Size.9914, Size1, Size
	rsbhi	r1, r1, lr	@ tmp187, PrevNalAddr, Addr0
	rsbhi	r6, r6, r1	@ tmp188, PrevNalSize, tmp187
	movls	r6, r7	@ Size0.9907, Size0
	addhi	r6, r6, r7	@ Size0.9907, tmp188, Size0
	add	r3, r3, r6	@ Size, Size.9914, Size0.9907
.L3841:
	cmp	r0, #0	@ Addr1,
	add	r2, r2, #4	@ tmp251, ivtmp.9905,
	movne	r7, ip	@ PrevNalSize, Size1
	add	ip, r4, r2	@ tmp265, pH264Ctx, tmp251
	add	r1, ip, #57088	@ tmp266, tmp265,
	movne	lr, r0	@ PrevNalAddr, Addr1
	ldr	r0, [r1, #4]	@ D.44357, <variable>.pSliceNal
	ldr	ip, [r0, #8]	@ Addr0, <variable>.streamBuffer
	cmp	ip, #0	@ Addr0,
	ldrne	r6, [r0, #12]	@ Size0, <variable>.bitstream_length
	moveq	r6, ip	@ Size0, Addr0
.L3897:
	ldr	r1, [r0, #36]	@ Addr1, <variable>.streamBuffer
	cmp	r1, #0	@ Addr1,
	ldrne	r0, [r0, #40]	@ Size1, <variable>.bitstream_length
	moveq	r0, r1	@ Size1, Addr1
	cmp	lr, #0	@ PrevNalAddr,
	addeq	r3, r6, r3	@ D.44377, Size0, Size
	addeq	r3, r3, r0	@ Size, D.44377, Size1
	beq	.L3901	@,
	cmp	ip, lr	@ Addr0, PrevNalAddr
	bhi	.L3876	@,
	mov	lr, r6	@ Size0.9907, Size0
	b	.L3903	@
.L3832:
	movw	ip, #56388	@ tmp190,
	movw	r1, #56384	@ tmp191,
	ldr	r2, [r4, ip]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movw	r5, #1620	@ tmp194,
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	movw	lr, #59208	@ tmp189,
	str	r3, [r4, lr]	@ Size, <variable>.MaxBytesReceived
	mul	ip, r0, r2	@ TotalMbs, <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_height_in_mb
	cmp	ip, r5	@ TotalMbs, tmp194
	movgt	ip, ip, asl #8	@ MaxStreamThr, TotalMbs,
	ble	.L3910	@,
.L3846:
	movw	r2, #59148	@ tmp200,
	movw	r1, #13572	@ tmp201,
	ldr	r2, [r4, r2]	@ D.44386, <variable>.SliceParaNum
	ldr	lr, [r4, r1]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r2, lr	@ D.44386, <variable>.MaxSliceNum
	bcs	.L3848	@,
	cmp	r3, ip	@ Size, MaxStreamThr
	bhi	.L3848	@,
	movw	r1, #20693	@ tmp213,
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	cmp	r0, #0	@ <variable>.CurrSlice.new_pic_flag,
	bne	.L3911	@,
.L3851:
	mov	r0, r4	@, pH264Ctx
	bl	PicTypeStatistic	@
	mov	r0, r4	@, pH264Ctx
	bl	DecList	@
	subs	r2, r0, #0	@ ret.9916,
	bne	.L3912	@,
	mov	r0, r4	@, pH264Ctx
	bl	IsRefListWrong	@
	subs	r5, r0, #0	@ ret,
	bne	.L3913	@,
	mov	r0, r4	@, pH264Ctx
	bl	CalcStreamBits	@
	mov	r0, r4	@, pH264Ctx
	bl	WriteSliceMsg	@
	mov	r0, r4	@, pH264Ctx
	bl	ExitSlice	@
	movw	ip, #59204	@ tmp242,
	ldr	r3, [r4, ip]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	movw	r2, #57712	@ tmp240,
	mov	r0, #1	@ tmp241,
	str	r0, [r4, r2]	@ tmp241, <variable>.AllowStartDec
	add	r1, r3, r0	@ tmp245, <variable>.SliceNumInPic,
	str	r1, [r4, ip]	@ tmp245, <variable>.SliceNumInPic
.L3829:
	mov	r0, r5	@, ret
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L3910:
	add	r0, ip, ip, asl #1	@, tmp197, TotalMbs, TotalMbs,
	movw	r5, #32769	@ tmp199,
	mov	ip, r0, asl #8	@ tmp198, tmp197,
	cmp	ip, r5	@ tmp198, tmp199
	movgt	ip, ip, asr #1	@ MaxStreamThr, tmp198,
	movle	ip, #16384	@ MaxStreamThr,
	b	.L3846	@
.L3908:
	mov	r6, r1	@ Size0, Addr0
	b	.L3882	@
.L3909:
	cmp	lr, r1	@ Addr0, PrevNalAddr
	bls	.L3914	@,
	rsb	r6, r6, lr	@ tmp291, PrevNalSize, Addr0
	rsb	r1, r1, r6	@ tmp292, PrevNalAddr, tmp291
	add	r1, r1, r7	@ Size0.9907, tmp292, Size0
.L3894:
	add	r3, ip, r3	@ Size.9914, Size1, Size
	add	r3, r3, r1	@ Size, Size.9914, Size0.9907
	b	.L3892	@
.L3911:
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC408	@,
	movt	r1, #:upper16:.LC408	@,
	movw	r5, #55795	@ tmp227,
	bl	dprint_vfmw	@
	movw	r2, #20691	@ tmp216,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r1, #59204	@ tmp221,
	ldrb	ip, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r0, #0	@ tmp222,
	cmp	r3, #5	@ <variable>.CurrSlice.nal_unit_type,
	str	r0, [r4, r1]	@ tmp222, <variable>.SliceNumInPic
	mov	r0, r4	@, pH264Ctx
	movweq	r3, #59188	@ tmp219,
	ldreq	r2, [r4, r3]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	movweq	r3, #59200	@ tmp218,
	streq	r2, [r4, r3]	@ <variable>.TotalPicNum, <variable>.IDRPicOfCurrPic
	movw	r3, #59188	@ tmp223,
	ldr	r2, [r4, r3]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	cmp	ip, #0	@ <variable>.CurrPic.structure,
	add	r5, r2, #1	@ tmp226, <variable>.TotalPicNum,
	str	r5, [r4, r3]	@ tmp226, <variable>.TotalPicNum
	movweq	r3, #59192	@ tmp229,
	movwne	r3, #59196	@ tmp233,
	ldr	ip, [r4, r3]	@ <variable>.TotalFieldNum,
	add	r2, ip, #1	@ tmp236, <variable>.TotalFieldNum,
	str	r2, [r4, r3]	@ tmp236,
	bl	InitPic	@
	cmn	r0, #2	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3829	@,
	cmp	r0, #0	@ ret,
	bne	.L3915	@,
	mov	r0, r4	@, pH264Ctx
	bl	WritePicMsg	@
	b	.L3851	@
.L3914:
	mov	r1, r7	@ Size0.9907, Size0
	b	.L3894	@
.L3830:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC405	@,
	movt	r1, #:upper16:.LC405	@,
	bl	dprint_vfmw	@
	movw	r3, #:lower16:g_event_report	@ tmp179,
	movt	r3, #:upper16:g_event_report	@ tmp179,
	ldr	ip, [r3, #0]	@ g_event_report.9912, g_event_report
	cmp	ip, #0	@ g_event_report.9912,
	beq	.L3833	@,
	sub	r2, fp, #28	@ tmp182,,
	movw	r1, #59224	@ tmp181,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mvn	r5, #0	@ tmp180,
	mov	r1, #100	@,
	str	r5, [r2, #-8]!	@ tmp180,
	add	r3, r5, #5	@,,
	blx	ip	@ g_event_report.9912
.L3833:
	mov	r0, r4	@, pH264Ctx
	mvn	r5, #0	@ ret,
	bl	ClearCurrSlice	@
	b	.L3829	@
.L3848:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC406	@,
	movt	r1, #:upper16:.LC406	@,
	str	ip, [sp, #0]	@ MaxStreamThr,
	bl	dprint_vfmw	@
	movw	ip, #59148	@ tmp204,
	movw	r3, #13572	@ tmp205,
	ldr	r1, [r4, ip]	@ temp.9917, <variable>.SliceParaNum
	ldr	r2, [r4, r3]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r1, r2	@ temp.9917, <variable>.MaxSliceNum
	bcc	.L3850	@,
	movw	r5, #:lower16:g_event_report	@ tmp207,
	movt	r5, #:upper16:g_event_report	@ tmp207,
	ldr	ip, [r5, #0]	@ g_event_report.9920, g_event_report
	cmp	ip, #0	@ g_event_report.9920,
	beq	.L3850	@,
	movw	lr, #59224	@ tmp210,
	str	r1, [fp, #-36]	@ temp.9917, para
	str	r2, [fp, #-32]	@ <variable>.MaxSliceNum, para
	mov	r1, #108	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	sub	r2, fp, #36	@,,
	mov	r3, #8	@,
	blx	ip	@ g_event_report.9920
.L3850:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC407	@,
	movt	r1, #:upper16:.LC407	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_ClearCurrPic	@
	b	.L3829	@
.L3912:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC410	@,
	movt	r1, #:upper16:.LC410	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	b	.L3829	@
.L3913:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC411	@,
	movt	r1, #:upper16:.LC411	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	b	.L3829	@
.L3915:
	movw	r1, #:lower16:.LC409	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC409	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	b	.L3829	@
	.fnend
	.size	H264_DecSlice, .-H264_DecSlice
	.align	2
	.global	SliceCheck
	.type	SliceCheck, %function
SliceCheck:
	.fnstart
.LFB1622:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC412	@,
	movt	r1, #:upper16:.LC412	@,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	bl	ue_v	@
	movw	r5, #59164	@ tmp140,
	ldr	r3, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	movw	r2, #20740	@ tmp139,
	cmp	r3, #0	@ <variable>.SeErrFlg,
	str	r0, [r4, r2]	@ D.43451, <variable>.CurrSlice.first_mb_in_slice
	bne	.L3917	@,
	cmp	r0, #262144	@ D.43451,
	bcs	.L3925	@,
	movw	r1, #13564	@ tmp145,
	mov	r3, #13568	@ tmp144,
	ldr	r2, [r4, r1]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	ldr	lr, [r4, r3]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	mul	ip, r2, lr	@ tmp146, <variable>.CurWidthInMb, <variable>.CurHeightInMb
	sub	r1, ip, #1	@ tmp149, tmp146,
	cmp	r0, r1	@ D.43451, tmp149
	bls	.L3926	@,
.L3917:
	mvn	r0, #0	@ D.43455,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3925:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC413	@,
	movt	r1, #:upper16:.LC413	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43455,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3926:
	mov	r0, r4	@, pH264Ctx
	movw	r1, #:lower16:.LC414	@,
	movt	r1, #:upper16:.LC414	@,
	bl	ue_v	@
	movw	r1, #:lower16:.LC415	@,
	movt	r1, #:upper16:.LC415	@,
	mov	r6, r0	@ SliceType,
	mov	r0, #19	@,
	mov	r2, r6	@, SliceType
	bl	dprint_vfmw	@
	ldr	r0, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3917	@,
	cmp	r6, #9	@ SliceType,
	bls	.L3927	@,
.L3920:
	mov	r2, r6	@, SliceType
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC416	@,
	movt	r1, #:upper16:.LC416	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43455,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3927:
	mov	r2, #1	@ tmp155,
	mov	r3, r2, asl r6	@ tmp154, tmp155,
	ands	r1, r3, #660	@ tmp156, tmp154,
	movwne	r3, #20688	@ tmp160,
	movne	r2, #2	@ tmp161,
	strneb	r2, [r4, r3]	@ tmp161, <variable>.CurrSlice.slice_type
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	movw	r0, #:lower16:297	@ tmp157,
	movt	r0, #:upper16:297	@ tmp157,
	and	r0, r3, r0	@ tmp157, tmp154, tmp157
	cmp	r0, #0	@ tmp157,
	movwne	r3, #20688	@ tmp163,
	movne	r0, r1	@ D.43455, tmp156
	strneb	r1, [r4, r3]	@ tmp156, <variable>.CurrSlice.slice_type
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	tst	r3, #66	@ tmp154,
	movwne	r3, #20688	@ tmp166,
	strneb	r2, [r4, r3]	@ tmp155, <variable>.CurrSlice.slice_type
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	b	.L3920	@
	.fnend
	.size	SliceCheck, .-SliceCheck
	.align	2
	.global	InquireSliceProperty
	.type	InquireSliceProperty, %function
InquireSliceProperty:
	.fnstart
.LFB1661:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #59168	@ tmp146,
	ldr	lr, [r0, r5]	@ <variable>.TotalNal, <variable>.TotalNal
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r6, r1	@ IsNewPic, IsNewPic
	mov	r5, r2	@ IsSizeChanged, IsSizeChanged
	mov	r0, #22	@,
	sub	r2, lr, #1	@, <variable>.TotalNal,
	movw	r1, #:lower16:.LC404	@,
	movt	r1, #:upper16:.LC404	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ tmp149,
	str	r0, [r5, #0]	@ tmp149,* IsSizeChanged
	movw	r2, #20691	@ tmp151,
	str	r0, [r6, #0]	@ tmp149,* IsNewPic
	movw	r3, #20720	@ tmp154,
	ldr	ip, [r4, #368]	@ D.46857, <variable>.pCurrNal
	mov	r0, r4	@, pH264Ctx
	ldrb	r1, [ip, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	strb	r1, [r4, r2]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r2, [ip, #76]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r2, [r4, r3]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	bl	SliceCheck	@
	cmp	r0, #0	@,
	beq	.L3929	@,
.L3938:
	mvn	r0, #0	@ D.46863,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3929:
	mov	r0, r4	@, pH264Ctx
	bl	ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L3939	@,
	movw	r1, #20693	@ tmp157,
	movw	r3, #20700	@ tmp162,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	movw	lr, #13592	@ tmp164,
	movw	r2, #13588	@ tmp160,
	movw	r1, #13564	@ tmp172,
	cmp	ip, #1	@ <variable>.CurrSlice.new_pic_flag,
	movne	r0, #0	@, tmp159
	moveq	r0, #1	@, tmp159
	str	r0, [r6, #0]	@ tmp159,* IsNewPic
	ldr	r0, [r4, lr]	@ <variable>.PPS, <variable>.PPS
	mov	ip, #2208	@ tmp166,
	ldr	r6, [r4, r3]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	lr, #13568	@ tmp173,
	ldr	r2, [r4, r2]	@ <variable>.SPS, <variable>.SPS
	ldr	r1, [r4, r1]	@ oldw, <variable>.CurWidthInMb
	mla	r3, ip, r6, r0	@ tmp167, tmp166, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	mov	r0, #4000	@ tmp170,
	ldr	ip, [r4, lr]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	ldr	r6, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	mla	lr, r0, r6, r2	@ pSPS, tmp170, <variable>.seq_parameter_set_id, <variable>.SPS
	ldrb	r0, [lr, #18]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r6, [lr, #3960]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r2, r0, #2	@ tmp175, <variable>.frame_mbs_only_flag,
	ldr	r0, [lr, #3956]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	mla	r2, r6, r2, r2	@ tmp178, <variable>.pic_height_in_map_units_minus1, tmp175, tmp175
	add	r0, r0, #1	@ tmp182, <variable>.pic_width_in_mbs_minus1,
	cmp	r1, r0	@ oldw, tmp182
	cmpeq	ip, r2	@, <variable>.CurHeightInMb, tmp178
	movw	r0, #26632	@ tmp189,
	ldreq	r2, [r5, #0]	@ cstore.9961,* IsSizeChanged
	movne	r2, #1	@ cstore.9961,
	str	r2, [r5, #0]	@ cstore.9961,* IsSizeChanged
	ldr	ip, [r4, r0]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r0, [lr, #3980]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	add	r3, ip, #1	@ tmp190, <variable>.DPB.size,
	cmp	r0, r3	@ <variable>.dpb_size_plus1, tmp190
	movhi	r3, #1	@ tmp206,
	strhi	r3, [r5, #0]	@ tmp206,* IsSizeChanged
	bls	.L3940	@,
.L3936:
	movw	lr, #59188	@ tmp195,
	ldr	r2, [r4, lr]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	cmp	r1, #0	@ oldw,
	cmpne	r2, #0	@, <variable>.TotalPicNum,
	beq	.L3935	@,
	movw	r3, #:lower16:g_event_report	@ tmp202,
	movt	r3, #:upper16:g_event_report	@ tmp202,
	ldr	ip, [r3, #0]	@ g_event_report.845, g_event_report
	cmp	ip, #0	@ g_event_report.845,
	beq	.L3935	@,
	mov	r2, #0	@,
	movw	r1, #59224	@ tmp203,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r3, r2	@,
	mov	r1, #120	@,
	blx	ip	@ g_event_report.845
	mov	r0, #0	@ D.46863,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3940:
	cmp	r2, #1	@ cstore.9961,
	beq	.L3936	@,
.L3935:
	mov	r0, #0	@ D.46863,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3939:
	movw	r1, #:lower16:.LC405	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC405	@,
	bl	dprint_vfmw	@
	b	.L3938	@
	.fnend
	.size	InquireSliceProperty, .-InquireSliceProperty
	.align	2
	.global	H264_DecOneNal
	.type	H264_DecOneNal, %function
H264_DecOneNal:
	.fnstart
.LFB1654:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #368]	@ temp.10045, <variable>.pCurrNal
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	mov	r8, r1	@ NalMode, NalMode
	ldr	r3, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r3, #0	@ <variable>.nal_segment,
	beq	.L3942	@,
	movw	ip, #59208	@ tmp179,
	mov	r3, #0	@ i,
	ldr	r1, [r0, ip]	@ prephitmp.10001, <variable>.MaxBytesReceived
.L3943:
	rsb	r7, r3, r3, asl #3	@, tmp183, i, i,
	add	r3, r3, #1	@ i, i,
	add	r6, r2, r7, asl #2	@, tmp185, temp.10045, tmp183,
	ldr	r5, [r6, #12]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r1, r1, r5	@ prephitmp.10001, prephitmp.10001, <variable>.bitstream_length
	str	r1, [r4, ip]	@ prephitmp.10001, <variable>.MaxBytesReceived
	ldr	r0, [r2, #68]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r0, r3	@ <variable>.nal_segment, i
	bhi	.L3943	@,
.L3942:
	add	lr, r4, #13504	@ D.46388, pH264Ctx,
	mov	sl, #0	@ tmp190,
	add	r6, lr, #24	@ D.46388, D.46388,
	strb	sl, [r2, #0]	@ tmp190, <variable>.nal_used_segment
	mov	r1, #32	@,
	movw	r7, #59168	@ tmp208,
	mov	r0, r6	@, D.46388
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	and	r1, r0, #31	@ tmp195, nal_header,
	strb	r1, [r3, #2]	@ tmp195, <variable>.nal_unit_type
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	ip, r0, #5, #2	@ tmp199, nal_header,,
	ubfx	r2, r0, #7, #1	@ tmp202, nal_header,,
	mov	r5, r0	@ nal_header,
	movw	r1, #:lower16:.LC417	@,
	mov	r0, #22	@,
	str	ip, [r3, #76]	@ tmp199, <variable>.nal_ref_idc
	movt	r1, #:upper16:.LC417	@,
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [ip, #80]	@ tmp202, <variable>.forbidden_bit
	ldr	ip, [r4, #368]	@ temp.10016, <variable>.pCurrNal
	ldr	r3, [ip, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r2, r3, #32	@ tmp204, <variable>.nal_bitoffset,
	str	r2, [ip, #64]	@ tmp204, <variable>.nal_bitoffset
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r3, #59164	@ tmp205,
	str	sl, [r4, r3]	@ tmp190, <variable>.SeErrFlg
	ldr	r2, [r4, r7]	@, <variable>.TotalNal
	ldrb	r3, [ip, #2]	@ zero_extendqisi2	@, <variable>.nal_unit_type
	bl	dprint_vfmw	@
	ldr	r3, [r4, r7]	@ prephitmp.9995, <variable>.TotalNal
	movw	r2, #371	@ tmp213,
	cmp	r3, r2	@ prephitmp.9995, tmp213
	beq	.L3990	@,
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r2, #59168	@ tmp216,
	add	ip, r3, #1	@ tmp217, prephitmp.9995,
	str	ip, [r4, r2]	@ tmp217, <variable>.TotalNal
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ prephitmp.10052, <variable>.nal_unit_type
	cmp	r2, #20	@ prephitmp.10052,
	beq	.L3991	@,
.L3945:
	sub	lr, r2, #1	@ tmp291, prephitmp.10052,
	cmp	lr, #29	@ tmp291,
	ldrls	pc, [pc, lr, asl #2]	@ tmp291
	b	.L3952	@
.L3964:
	.word	.L3953
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3953
	.word	.L3954
	.word	.L3955
	.word	.L3956
	.word	.L3957
	.word	.L3958
	.word	.L3959
	.word	.L3960
	.word	.L3961
	.word	.L3952
	.word	.L3955
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3962
	.word	.L3953
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3952
	.word	.L3963
.L3963:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC435	@,
	mov	r2, #30	@,
	movt	r1, #:upper16:.LC435	@,
	bl	dprint_vfmw	@
	cmp	r8, #0	@ NalMode,
	beq	.L3992	@,
.L3975:
	mov	r1, #32	@,
	mov	r0, r6	@, D.46388
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r5, r0	@ D.46544,
	mov	r0, r6	@, D.46388
	bl	BsGet	@
	ldr	r3, .L3998	@ tmp397,
	and	r6, r5, #65280	@ tmp387, D.46544,
	mov	r1, r5, asl #24	@ tmp385, D.46544,
	orr	r1, r1, r5, lsr #24	@, tmp386, tmp385, D.46544,
	and	r5, r5, #16711680	@ tmp383, D.46544,
	orr	r1, r1, r6, asl #8	@, D.46552, tmp386, tmp387,
	and	ip, r0, #65280	@ tmp393, D.46545,
	mov	r2, r0, asl #24	@ tmp391, D.46545,
	orr	r2, r2, r0, lsr #24	@, tmp392, tmp391, D.46545,
	and	r0, r0, #16711680	@ tmp389, D.46545,
	orr	ip, r2, ip, asl #8	@, D.46560, tmp392, tmp393,
	ldmib	r3, {r2, r3}	@ phole ldm
	orr	r0, ip, r0, lsr #8	@, tmp395, D.46560, tmp389,
	orr	ip, r1, r5, lsr #8	@, tmp401, D.46552, tmp383,
	cmp	r0, r3	@ tmp395, tmp399
	cmpeq	ip, r2	@, tmp401, tmp405
	bne	.L3972	@,
	movw	r6, #:lower16:g_event_report	@ tmp428,
	movt	r6, #:upper16:g_event_report	@ tmp428,
	ldr	ip, [r6, #0]	@ g_event_report.10065, g_event_report
	cmp	ip, #0	@ g_event_report.10065,
	beq	.L3976	@,
	mov	r2, #0	@,
	movw	r7, #59224	@ tmp411,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	mov	r1, #112	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.10065
.L3976:
	mov	r7, #0	@ tmp413,
	mov	r0, r4	@, pH264Ctx
	str	r7, [r4, #364]	@ tmp413, <variable>.StartMode
	bl	DecVDM	@
	subs	r5, r0, #0	@ ret,
	beq	.L3950	@,
	b	.L3989	@
.L3952:
	mov	r3, r5	@, nal_header
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC436	@,
	movt	r1, #:upper16:.LC436	@,
	bl	dprint_vfmw	@
	cmp	r5, #256	@ nal_header,
	movweq	r5, #:lower16:g_event_report	@ tmp429,
	movteq	r5, #:upper16:g_event_report	@ tmp429,
	beq	.L3977	@,
	movw	r5, #:lower16:g_event_report	@ tmp429,
	movt	r5, #:upper16:g_event_report	@ tmp429,
	ldr	ip, [r5, #0]	@ g_event_report.10070, g_event_report
	cmp	ip, #0	@ g_event_report.10070,
	beq	.L3977	@,
	mov	r2, #0	@,
	movw	lr, #59224	@ tmp418,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r1, #102	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.10070
.L3977:
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	ldr	ip, [r5, #0]	@ g_event_report.10072, g_event_report
	cmp	ip, #0	@ g_event_report.10072,
	beq	.L3972	@,
.L3984:
	mov	r2, #0	@,
	movw	r3, #59224	@ tmp421,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	mov	r5, r2	@ ret, tmp3
	blx	ip	@ g_event_report.10072
	b	.L3950	@
.L3953:
	movw	r6, #59180	@ tmp293,
	mov	r0, #22	@,
	ldr	r3, [r4, r6]	@, <variable>.TotalSlice
	movw	r1, #:lower16:.LC422	@,
	movt	r1, #:upper16:.LC422	@,
	movw	r7, #20691	@ tmp295,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r3, #20720	@ tmp299,
	movw	r6, #20696	@ tmp302,
	mov	r0, r4	@, pH264Ctx
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	strb	r5, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r1, [ip, #76]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r1, [r4, r3]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldrb	r7, [ip, #6]	@ zero_extendqisi2	@ <variable>.IsFrameLastSegFlag, <variable>.IsFrameLastSegFlag
	ldrb	r2, [ip, #5]	@ zero_extendqisi2	@ <variable>.dsp_check_pic_over_flag, <variable>.dsp_check_pic_over_flag
	orr	r5, r7, r2	@ tmp307, <variable>.IsFrameLastSegFlag, <variable>.dsp_check_pic_over_flag
	strb	r5, [r4, r6]	@ tmp307, <variable>.CurrSlice.pic_over_flag
	bl	SliceCheck	@
	subs	r7, r0, #0	@ ret.10033,
	bne	.L3993	@,
	mov	r0, r4	@, pH264Ctx
	bl	H264_DecSlice	@
	cmn	r0, #2	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3950	@,
	cmp	r0, #0	@ ret,
	bne	.L3994	@,
	ldrb	r2, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.pic_over_flag, <variable>.CurrSlice.pic_over_flag
	cmp	r2, #1	@ <variable>.CurrSlice.pic_over_flag,
	bne	.L3950	@,
	movw	r6, #:lower16:g_event_report	@ tmp424,
	movt	r6, #:upper16:g_event_report	@ tmp424,
	ldr	ip, [r6, #0]	@ g_event_report.10036, g_event_report
	cmp	ip, #0	@ g_event_report.10036,
	beq	.L3968	@,
	movw	r1, #59224	@ tmp317,
	mov	r2, r0	@, ret
	mov	r3, r5	@, tmp2
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r1, #112	@,
	blx	ip	@ g_event_report.10036
.L3968:
	mov	r7, #0	@ tmp319,
	mov	r0, r4	@, pH264Ctx
	str	r7, [r4, #364]	@ tmp319, <variable>.StartMode
	bl	DecVDM	@
	subs	r5, r0, #0	@ ret,
	movweq	r3, #13561	@ tmp322,
	moveq	r2, #1	@ tmp323,
	streqb	r2, [r4, r3]	@ tmp323, <variable>.PicIsDecoded
	beq	.L3950	@,
.L3989:
	ldr	ip, [r6, #0]	@ g_event_report.10038, g_event_report
	cmp	ip, r7	@ g_event_report.10038,
	bne	.L3983	@,
.L3966:
	mvn	r5, #0	@ ret,
	b	.L3950	@
.L3954:
	mov	r2, #6	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC427	@,
	movt	r1, #:upper16:.LC427	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_DecSEI	@
	mov	r5, r0	@ ret,
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	cmp	r5, #0	@ ret,
	bne	.L3995	@,
.L3950:
	mov	r0, r5	@, ret
	sub	sp, fp, #36
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
.L3955:
	movw	r6, #59172	@ tmp340,
	mov	r0, #22	@,
	ldr	r3, [r4, r6]	@, <variable>.TotalSPS
	movw	r1, #:lower16:.LC425	@,
	movt	r1, #:upper16:.LC425	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_DecSPS	@
	mov	r5, r0	@ ret,
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	cmp	r5, #0	@ ret,
	bne	.L3996	@,
.L3971:
	ldr	r0, [r4, r6]	@ <variable>.TotalSPS,
	add	ip, r0, #1	@ tmp352, <variable>.TotalSPS,
	str	ip, [r4, r6]	@ tmp352,
	b	.L3950	@
.L3956:
	movw	r6, #59176	@ tmp326,
	mov	r2, #8	@,
	ldr	r3, [r4, r6]	@, <variable>.TotalPPS
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC424	@,
	movt	r1, #:upper16:.LC424	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	H264_DecPPS	@
	mov	r5, r0	@ ret,
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	cmp	r5, #0	@ ret,
	beq	.L3971	@,
	movw	r5, #:lower16:g_event_report	@ tmp329,
	movt	r5, #:upper16:g_event_report	@ tmp329,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC319	@,
	movt	r1, #:upper16:.LC319	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.10040, g_event_report
	cmp	ip, #0	@ g_event_report.10040,
	subne	r2, fp, #36	@ tmp332,,
	addne	r6, r6, #48	@ tmp331, tmp331,
	beq	.L3966	@,
.L3987:
	mvn	r7, #0	@ tmp344,
	mov	r1, #100	@,
	str	r7, [r2, #-4]!	@ tmp344,
	mov	r3, #4	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	blx	ip	@ g_event_report.10047
	ldr	ip, [r5, #0]	@ g_event_report.10049, g_event_report
	cmp	ip, #0	@ g_event_report.10049,
	beq	.L3966	@,
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.10049
	mov	r5, r7	@ ret, tmp344
	b	.L3950	@
.L3957:
	mov	r2, #9	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC429	@,
	movt	r1, #:upper16:.LC429	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	mov	r5, #0	@ ret,
	b	.L3950	@
.L3958:
	mov	r2, #10	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC430	@,
	movt	r1, #:upper16:.LC430	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	mov	r5, #0	@ ret,
	b	.L3950	@
.L3959:
	mov	r2, #11	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC432	@,
	movt	r1, #:upper16:.LC432	@,
	bl	dprint_vfmw	@
	mov	r1, #32	@,
	mov	r0, r6	@, D.46388
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r5, r0	@ D.46525,
	mov	r0, r6	@, D.46388
	bl	BsGet	@
	movw	r2, #:lower16:1128615492	@ tmp363,
	movw	r1, #:lower16:1213419593	@ tmp366,
	movt	r2, #:upper16:1128615492	@ tmp363,
	movt	r1, #:upper16:1213419593	@ tmp366,
	cmp	r0, r2	@, tmp363
	cmpeq	r5, r1	@, D.46525, tmp366
	bne	.L3973	@,
	movw	r5, #:lower16:g_event_report	@ tmp427,
	movt	r5, #:upper16:g_event_report	@ tmp427,
	movw	lr, #13560	@ tmp371,
	mov	r6, #1	@ tmp372,
	strb	r6, [r4, lr]	@ tmp372, <variable>.IsStreamEndFlag
	ldr	ip, [r5, #0]	@ g_event_report.10056, g_event_report
	cmp	ip, #0	@ g_event_report.10056,
	beq	.L3974	@,
	movw	r3, #59224	@ tmp375,
	mov	r2, #0	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r1, #117	@,
	mov	r3, r2	@,
	blx	ip	@ g_event_report.10056
.L3974:
	mov	r6, #0	@ tmp377,
	mov	r0, r4	@, pH264Ctx
	str	r6, [r4, #364]	@ tmp377, <variable>.StartMode
	bl	DecVDM	@
	cmp	r0, r6	@,
	bne	.L3997	@,
.L3973:
	mov	r0, r4	@, pH264Ctx
	mov	r5, #0	@ ret,
	bl	ClearCurrNal	@
	b	.L3950	@
.L3960:
	mov	r2, #12	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC431	@,
	movt	r1, #:upper16:.LC431	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	mov	r5, #0	@ ret,
	b	.L3950	@
.L3961:
	mov	r2, #13	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC433	@,
	movt	r1, #:upper16:.LC433	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	mov	r5, #0	@ ret,
	b	.L3950	@
.L3962:
	mov	r2, #19	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC434	@,
	movt	r1, #:upper16:.LC434	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	mov	r5, #0	@ ret,
	b	.L3950	@
.L3990:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC418	@,
	movt	r1, #:upper16:.LC418	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r3, [r4, r7]	@ prephitmp.9995, <variable>.TotalNal
	movw	r2, #59168	@ tmp216,
	add	ip, r3, #1	@ tmp217, prephitmp.9995,
	str	ip, [r4, r2]	@ tmp217, <variable>.TotalNal
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ prephitmp.10052, <variable>.nal_unit_type
	cmp	r2, #20	@ prephitmp.10052,
	bne	.L3945	@,
.L3991:
	mov	r1, #24	@,
	mov	r0, r6	@, D.46388
	bl	BsGet	@
	mov	r5, r0	@ nal_header,
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	r1, r5, #23, #1	@ tmp222, nal_header,,
	strb	r1, [r0, #3]	@ tmp222, <variable>.svc_extension_flag
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r3, #0	@ <variable>.svc_extension_flag,
	bne	.L3946	@,
	movw	ip, #57084	@ tmp226,
	movw	lr, #57082	@ tmp227,
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ prephitmp.10021, <variable>.SVC_NALUSVCEXT_S.quality_id
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ prephitmp.9999, <variable>.SVC_NALUSVCEXT_S.no_inter_layer_pred_flag
.L3947:
	cmp	r2, #0	@ prephitmp.10021,
	bne	.L3948	@,
	cmp	r3, #1	@ prephitmp.9999,
	bne	.L3948	@,
	movw	r0, #57080	@ tmp276,
	movw	ip, #57083	@ tmp283,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.SVC_NALUSVCEXT_S.idr_flag, <variable>.SVC_NALUSVCEXT_S.idr_flag
	mov	r0, #22	@,
	cmp	r3, #1	@ <variable>.SVC_NALUSVCEXT_S.idr_flag,
	moveq	r3, #5	@ tmp279,
	streqb	r3, [r1, #2]	@ tmp279, <variable>.nal_unit_type
	movw	r1, #57085	@ tmp285,
	movweq	r3, #57084	@ tmp281,
	ldrb	lr, [r4, r1]	@ zero_extendqisi2	@ <variable>.SVC_NALUSVCEXT_S.temporal_id, <variable>.SVC_NALUSVCEXT_S.temporal_id
	movw	r1, #:lower16:.LC420	@,
	ldreqb	r2, [r4, r3]	@ zero_extendqisi2	@ prephitmp.10021, <variable>.SVC_NALUSVCEXT_S.quality_id
	movt	r1, #:upper16:.LC420	@,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.SVC_NALUSVCEXT_S.dependency_id, <variable>.SVC_NALUSVCEXT_S.dependency_id
	str	lr, [sp, #0]	@ <variable>.SVC_NALUSVCEXT_S.temporal_id,
	bl	dprint_vfmw	@
	mov	r2, r5	@, nal_header
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC421	@,
	movt	r1, #:upper16:.LC421	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #368]	@ temp.10025, <variable>.pCurrNal
	ldr	r0, [r3, #64]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	ip, r0, #24	@ tmp289, <variable>.nal_bitoffset,
	str	ip, [r3, #64]	@ tmp289, <variable>.nal_bitoffset
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ prephitmp.10052, <variable>.nal_unit_type
	b	.L3945	@
.L3946:
	movw	r2, #57080	@ tmp228,
	ubfx	r0, r5, #22, #1	@ tmp231, nal_header,,
	strb	r0, [r4, r2]	@ tmp231, <variable>.SVC_NALUSVCEXT_S.idr_flag
	movw	r2, #57083	@ tmp242,
	movw	r3, #57081	@ tmp233,
	movw	lr, #57082	@ tmp240,
	ubfx	r0, r5, #12, #3	@ tmp245, nal_header,,
	strb	r0, [r4, r2]	@ tmp245, <variable>.SVC_NALUSVCEXT_S.dependency_id
	movw	r0, #57085	@ tmp251,
	ubfx	ip, r5, #16, #6	@ tmp236, nal_header,,
	strb	ip, [r4, r3]	@ tmp236, <variable>.SVC_NALUSVCEXT_S.priority_id
	movw	ip, #57084	@ tmp249,
	ubfx	r3, r5, #15, #1	@ prephitmp.9999, nal_header,,
	strb	r3, [r4, lr]	@ prephitmp.9999, <variable>.SVC_NALUSVCEXT_S.no_inter_layer_pred_flag
	ubfx	lr, r5, #5, #3	@ tmp254, nal_header,,
	strb	lr, [r4, r0]	@ tmp254, <variable>.SVC_NALUSVCEXT_S.temporal_id
	movw	lr, #57086	@ tmp256,
	ubfx	r2, r5, #8, #4	@ prephitmp.10021, nal_header,,
	strb	r2, [r4, ip]	@ prephitmp.10021, <variable>.SVC_NALUSVCEXT_S.quality_id
	ubfx	ip, r5, #4, #1	@ tmp259, nal_header,,
	strb	ip, [r4, lr]	@ tmp259, <variable>.SVC_NALUSVCEXT_S.use_ref_base_pic_flag
	movw	lr, #57087	@ tmp261,
	ubfx	r0, r5, #3, #1	@ tmp264, nal_header,,
	strb	r0, [r4, lr]	@ tmp264, <variable>.SVC_NALUSVCEXT_S.discardable_flag
	mov	r0, #57088	@ tmp266,
	ubfx	ip, r5, #2, #1	@ tmp269, nal_header,,
	strb	ip, [r4, r0]	@ tmp269, <variable>.SVC_NALUSVCEXT_S.output_flag
	movw	r0, #57089	@ tmp271,
	and	lr, r5, #3	@ tmp273, nal_header,
	strb	lr, [r4, r0]	@ tmp273, <variable>.SVC_NALUSVCEXT_S.reserved_three_2bits
	b	.L3947	@
.L3995:
	movw	r5, #:lower16:g_event_report	@ tmp355,
	movt	r5, #:upper16:g_event_report	@ tmp355,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC428	@,
	movt	r1, #:upper16:.LC428	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.10053, g_event_report
	cmp	ip, #0	@ g_event_report.10053,
	bne	.L3984	@,
.L3972:
	mov	r5, #0	@ ret,
	b	.L3950	@
.L3994:
	movw	lr, #:lower16:g_event_report	@ tmp312,
	movt	lr, #:upper16:g_event_report	@ tmp312,
	ldr	ip, [lr, #0]	@ g_event_report.10034, g_event_report
	cmp	ip, #0	@ g_event_report.10034,
	beq	.L3966	@,
.L3983:
	mov	r2, r7	@, tmp319
.L3985:
	movw	r3, #59224	@ tmp321,
	mov	r1, #113	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r3, r2	@,
	mvn	r5, #0	@ ret,
	blx	ip	@ g_event_report.10038
	b	.L3950	@
.L3992:
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	b	.L3975	@
.L3948:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC419	@,
	movt	r1, #:upper16:.LC419	@,
	mvn	r5, #0	@ ret,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	b	.L3950	@
.L3993:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC423	@,
	movt	r1, #:upper16:.LC423	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrSlice	@
	movw	r0, #:lower16:g_event_report	@ tmp310,
	movt	r0, #:upper16:g_event_report	@ tmp310,
	ldr	ip, [r0, #0]	@ g_event_report.825, g_event_report
	cmp	ip, #0	@ g_event_report.825,
	movne	r2, #0	@,
	bne	.L3985	@,
	mvn	r5, #0	@ ret,
	b	.L3950	@
.L3997:
	ldr	ip, [r5, #0]	@ g_event_report.10059, g_event_report
	cmp	ip, r6	@ g_event_report.10059,
	movne	r2, r6	@, tmp377
	bne	.L3985	@,
	mvn	r5, #0	@ ret,
	b	.L3950	@
.L3996:
	movw	r5, #:lower16:g_event_report	@ tmp343,
	movt	r5, #:upper16:g_event_report	@ tmp343,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC426	@,
	movt	r1, #:upper16:.LC426	@,
	bl	dprint_vfmw	@
	ldr	ip, [r5, #0]	@ g_event_report.10047, g_event_report
	cmp	ip, #0	@ g_event_report.10047,
	beq	.L3966	@,
	sub	r2, fp, #36	@ tmp346,,
	add	r6, r6, #52	@ tmp345, tmp345,
	b	.L3987	@
.L3999:
	.align	2
.L3998:
	.word	.LANCHOR2+432
	.fnend
	.size	H264_DecOneNal, .-H264_DecOneNal
	.align	2
	.global	H264DEC_DecodePacket
	.type	H264DEC_DecodePacket, %function
H264DEC_DecodePacket:
	.fnstart
.LFB1666:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pPacket
	mov	r2, #0	@ tmp153,
	mov	r4, r0	@ pH264Ctx, pH264Ctx
	str	r2, [fp, #-40]	@ tmp153, NewNum
	str	r2, [fp, #-36]	@ tmp153, ReadNum
	str	r2, [fp, #-32]	@ tmp153, RefNum
	beq	.L4030	@,
	ldr	r3, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r0, #57716	@ tmp171,
	ldr	ip, [r4, r0]	@ <variable>.HaveNalNotDecoded, <variable>.HaveNalNotDecoded
	ldr	r5, [r3, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	cmp	ip, #1	@ <variable>.HaveNalNotDecoded,
	movw	ip, #59212	@ tmp158,
	mov	r5, r5, asl #16	@ tmp160, <variable>.s32DecMode,
	and	r5, r5, #458752	@ tmp162, tmp160,
	str	r5, [r4, ip]	@ tmp162, <variable>.advanced_cfg
	ldr	r5, [r3, #0]	@ <variable>.s32RefErrThr, <variable>.s32RefErrThr
	movw	ip, #59216	@ tmp163,
	str	r5, [r4, ip]	@ <variable>.s32RefErrThr, <variable>.ref_error_thr
	movw	ip, #59164	@ tmp169,
	ldr	r5, [r3, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	str	r2, [r4, ip]	@ tmp153, <variable>.SeErrFlg
	movw	ip, #59220	@ tmp166,
	str	r5, [r4, ip]	@ <variable>.s32OutErrThr, <variable>.out_error_thr
	beq	.L4003	@,
	ldr	r0, [r3, #864]	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn, <variable>.stChanOption.u32DynamicFrameStoreAllocEn
	cmp	r0, #1	@ <variable>.stChanOption.u32DynamicFrameStoreAllocEn,
	beq	.L4031	@,
.L4004:
	mov	r0, r4	@, pH264Ctx
	bl	ReceivePacket	@
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r2, #0	@ tmp184,
	movw	r1, #57716	@ tmp183,
	movw	ip, #59260	@ tmp181,
	str	r2, [r4, r1]	@ tmp184, <variable>.HaveNalNotDecoded
	str	r3, [r4, ip]	@ <variable>.pCurrNal, <variable>.pLastNal
	cmp	r0, r2	@,
	movne	r0, r2	@ ret, tmp184
	beq	.L4006	@,
.L4002:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
.L4031:
	ldr	r3, [r3, #904]	@ <variable>.s32WaitFsFlag, <variable>.s32WaitFsFlag
	cmp	r3, #1	@ <variable>.s32WaitFsFlag,
	bne	.L4004	@,
	movw	r3, #59256	@ tmp175,
	ldr	lr, [r4, r3]	@ <variable>.u32SCDWrapAround, <variable>.u32SCDWrapAround
	cmp	lr, #1	@ <variable>.u32SCDWrapAround,
	bne	.L4004	@,
	movw	r1, #59260	@ tmp177,
	str	r2, [r4, r3]	@ tmp153, <variable>.u32SCDWrapAround
	ldr	r3, [r4, r1]	@ <variable>.pLastNal, <variable>.pLastNal
	str	r3, [r4, #368]	@ <variable>.pLastNal, <variable>.pCurrNal
	b	.L4005	@
.L4003:
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r3, #0	@ <variable>.pCurrNal,
	beq	.L4032	@,
.L4005:
	movw	lr, #57716	@ tmp287,
	mov	r5, #0	@ tmp288,
	str	r5, [r4, lr]	@ tmp288, <variable>.HaveNalNotDecoded
.L4006:
	mov	r1, #0	@ tmp187,
	add	r5, r4, #13504	@ D.47131, pH264Ctx,
	str	r1, [r3, #64]	@ tmp187, <variable>.nal_bitoffset
	add	r5, r5, #24	@ D.47131, D.47131,
	ldr	lr, [r4, #368]	@ temp.10104, <variable>.pCurrNal
	mov	r0, r5	@, D.47131
	ldr	r2, [lr, #12]	@, <variable>.bitstream_length
	ldr	r1, [lr, #8]	@, <variable>.streamBuffer
	bl	BsInit	@
	mov	r1, #32	@,
	mov	r0, r5	@, D.47131
	bl	BsGet	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	uxtb	ip, r0	@ nal_header,
	and	r1, ip, #31	@ nal_unit_type, nal_header,
	strb	r1, [r2, #2]	@ nal_unit_type, <variable>.nal_unit_type
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r1, #1	@ nal_unit_type,
	cmpne	r1, #5	@, nal_unit_type,
	ubfx	r0, ip, #5, #2	@ tmp196, nal_header,,
	movne	r2, #0	@, tmp203
	moveq	r2, #1	@, tmp203
	str	r0, [r3, #76]	@ tmp196, <variable>.nal_ref_idc
	bne	.L4033	@,
	cmp	r1, #20	@ nal_unit_type,
	beq	.L4009	@,
.L4011:
	mov	r0, r4	@, pH264Ctx
	sub	r1, fp, #44	@,,
	sub	r2, fp, #48	@,,
	bl	InquireSliceProperty	@
	cmp	r0, #0	@,
	bne	.L4012	@,
	ldr	r6, [fp, #-44]	@ IsNewPic, IsNewPic
	movw	r3, #59236	@ tmp206,
	ldr	r0, [r4, r3]	@ <variable>.PicCounter, <variable>.PicCounter
	cmp	r6, #1	@ IsNewPic,
	addeq	r0, r0, #1	@, tmp212, <variable>.PicCounter
	str	r0, [r4, r3]	@ tmp212, <variable>.PicCounter
	beq	.L4034	@,
.L4013:
	movw	r3, #13561	@ tmp224,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.PicIsDecoded, <variable>.PicIsDecoded
	cmp	r0, #1	@ <variable>.PicIsDecoded,
	moveq	r0, #0	@ tmp227,
	streqb	r0, [r4, r3]	@ tmp227, <variable>.PicIsDecoded
	beq	.L4016	@,
	cmp	r6, #1	@ IsNewPic,
	beq	.L4035	@,
.L4016:
	ldr	r6, [fp, #-48]	@ IsSizeChanged, IsSizeChanged
	cmp	r6, #1	@ IsSizeChanged,
	bne	.L4019	@,
	mov	r0, r4	@, pH264Ctx
	bl	FlushDPB	@
	subs	r3, r0, #0	@ ret.10118,
	bne	.L4036	@,
.L4020:
	movw	r6, #59224	@ tmp250,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	bne	.L4019	@,
	sub	r2, fp, #36	@,,
	sub	r3, fp, #40	@,,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	sub	r1, fp, #32	@,,
	bl	VCTRL_GetChanImgNum	@
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r3, [r2, #788]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r3, #1	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L4019	@,
	ldr	ip, [fp, #-36]	@ ReadNum, ReadNum
	ldr	r1, [fp, #-40]	@ NewNum, NewNum
	add	r0, r1, ip	@ tmp259, NewNum, ReadNum
	cmp	r0, #0	@ tmp259,
	ble	.L4019	@,
	movw	lr, #57716	@ tmp262,
	mvn	r0, #1	@ ret,
	str	r3, [r4, lr]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.HaveNalNotDecoded
	b	.L4002	@
.L4033:
	cmp	r1, #20	@ nal_unit_type,
	beq	.L4009	@,
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r6, [r0, #6]	@ zero_extendqisi2	@ <variable>.IsFrameLastSegFlag, <variable>.IsFrameLastSegFlag
	cmp	r6, #1	@ <variable>.IsFrameLastSegFlag,
	beq	.L4037	@,
.L4019:
	mov	r0, r4	@, pH264Ctx
	bl	FindTrailZeros	@
	subs	r6, r0, #0	@ ret.10124,
	bne	.L4038	@,
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r0, r5	@, D.47131
	str	r6, [r1, #64]	@ ret.10124, <variable>.nal_bitoffset
	ldr	ip, [r4, #368]	@ temp.10126, <variable>.pCurrNal
	ldr	r1, [ip, #8]	@, <variable>.streamBuffer
	ldr	r2, [ip, #12]	@, <variable>.bitstream_length
	bl	BsInit	@
	mov	r0, r4	@, pH264Ctx
	mov	r1, r6	@, ret.10124
	bl	H264_DecOneNal	@
	cmn	r0, #2	@ ret,
	beq	.L4002	@,
	cmp	r0, #0	@ ret,
	movweq	r3, #56412	@ tmp284,
	streq	r0, [r4, r3]	@ ret, <variable>.CurrPic.CurrentNalSize
	beq	.L4002	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC438	@,
	movt	r1, #:upper16:.LC438	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L4002	@
.L4034:
	movw	r2, #59240	@ tmp216,
	movw	r1, #20689	@ tmp214,
	ldr	ip, [r4, r2]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldrb	lr, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	lr, #1	@ <variable>.CurrSlice.field_pic_flag,
	addeq	ip, ip, #1	@ tmp219, <variable>.NewPicCounter,
	addne	ip, ip, #2	@ tmp223, <variable>.NewPicCounter,
	str	ip, [r4, r2]	@ tmp223, <variable>.NewPicCounter
	b	.L4013	@
.L4035:
	movw	r2, #59148	@ tmp230,
	ldr	ip, [r4, r2]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	ip, #0	@ <variable>.SliceParaNum,
	beq	.L4016	@,
	ldr	lr, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp233,
	mov	r0, r5	@, D.47131
	mov	r2, #12	@,
	ldr	r1, .L4040	@,
	str	r3, [lr, #64]	@ tmp233, <variable>.nal_bitoffset
	bl	BsInit	@
	mov	r1, r6	@, IsNewPic
	mov	r0, r4	@, pH264Ctx
	bl	H264_DecOneNal	@
	movw	r0, #59240	@ tmp238,
	movw	ip, #20689	@ tmp236,
	ldr	r1, [r4, r0]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #1	@ <variable>.CurrSlice.field_pic_flag,
	subeq	r1, r1, #1	@ tmp241, <variable>.NewPicCounter,
	subne	r1, r1, #2	@ tmp245, <variable>.NewPicCounter,
	str	r1, [r4, r0]	@ tmp245, <variable>.NewPicCounter
.L4023:
	movw	r0, #57716	@ tmp276,
	mov	r2, #1	@ tmp277,
	str	r2, [r4, r0]	@ tmp277, <variable>.HaveNalNotDecoded
	mvn	r0, #1	@ ret,
	b	.L4002	@
.L4032:
	str	r3, [r4, r0]	@ <variable>.pCurrNal, <variable>.HaveNalNotDecoded
	mov	r0, r3	@ ret, <variable>.pCurrNal
	b	.L4002	@
.L4037:
	movw	r1, #59148	@ tmp268,
	ldr	ip, [r4, r1]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	ip, #0	@ <variable>.SliceParaNum,
	beq	.L4019	@,
	movw	r5, #:lower16:g_event_report	@ tmp293,
	movt	r5, #:upper16:g_event_report	@ tmp293,
	ldr	ip, [r5, #0]	@ g_event_report.861, g_event_report
	cmp	ip, #0	@ g_event_report.861,
	beq	.L4022	@,
	movw	lr, #59224	@ tmp271,
	mov	r1, #112	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	mov	r3, r2	@,
	blx	ip	@ g_event_report.861
.L4022:
	mov	r6, #0	@ tmp273,
	mov	r0, r4	@, pH264Ctx
	str	r6, [r4, #364]	@ tmp273, <variable>.StartMode
	bl	DecVDM	@
	cmp	r0, r6	@,
	beq	.L4023	@,
	ldr	ip, [r5, #0]	@ g_event_report.10109, g_event_report
	cmp	ip, r6	@ g_event_report.10109,
	mvneq	r0, #0	@ ret,
	beq	.L4002	@
.L4039:
	mov	r2, r6	@, tmp273
.L4029:
	movw	r3, #59224	@ tmp275,
	mov	r1, #113	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	mov	r3, r2	@,
	blx	ip	@ g_event_report.10109
	mvn	r0, #0	@ ret,
	b	.L4002	@
.L4009:
	mov	r0, r4	@, pH264Ctx
	bl	InquireSliceExtProperty	@
	b	.L4011	@
.L4038:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC437	@,
	movt	r1, #:upper16:.LC437	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L4002	@
.L4036:
	movw	r1, #:lower16:.LC94	@,
	movw	r2, #12027	@,
	movt	r1, #:upper16:.LC94	@,
	mov	r0, #0	@,
	bl	dprint_vfmw	@
	b	.L4020	@
.L4012:
	mov	r0, r4	@, pH264Ctx
	bl	ClearCurrNal	@
	movw	r3, #:lower16:g_event_report	@ tmp264,
	movt	r3, #:upper16:g_event_report	@ tmp264,
	ldr	ip, [r3, #0]	@ g_event_report.10122, g_event_report
	cmp	ip, #0	@ g_event_report.10122,
	movne	r2, #0	@,
	bne	.L4029	@,
	mvn	r0, #0	@ ret,
	b	.L4002	@
.L4030:
	mov	r0, r1	@, pPacket
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #11928	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L4002	@
.L4041:
	.align	2
.L4040:
	.word	.LANCHOR2+432
	.fnend
	.size	H264DEC_DecodePacket, .-H264DEC_DecodePacket
	.global	g_NalTypeEOPIC
	.global	g_AspecRatioIdc
	.global	CalcZeroNum
	.global	g_ZZ_SCAN
	.global	g_ZZ_SCAN8
	.global	quant_intra_default
	.global	quant_inter_default
	.global	quant8_intra_default
	.global	quant8_inter_default
	.global	quant_org
	.global	quant8_org
	.global	TmpBuf
	.section	.rodata
	.align	2
.LANCHOR0 = . + 0
	.type	SarTable.45132, %object
	.size	SarTable.45132, 136
SarTable.45132:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.word	4
	.word	3
	.word	3
	.word	2
	.word	2
	.word	1
	.type	__func__.46973, %object
	.size	__func__.46973, 13
__func__.46973:
	.ascii	"H264DEC_Init\000"
	.space	3
	.type	__func__.41769, %object
	.size	__func__.41769, 8
__func__.41769:
	.ascii	"InitDPB\000"
	.type	__func__.40010, %object
	.size	__func__.40010, 13
__func__.40010:
	.ascii	"DirectOutput\000"
	.space	3
	.type	__func__.40516, %object
	.size	__func__.40516, 14
__func__.40516:
	.ascii	"StorePicInDPB\000"
	.space	2
	.type	__func__.42438, %object
	.size	__func__.42438, 8
__func__.42438:
	.ascii	"InitPic\000"
	.type	g_ZZ_SCAN, %object
	.size	g_ZZ_SCAN, 16
g_ZZ_SCAN:
	.byte	0
	.byte	1
	.byte	4
	.byte	8
	.byte	5
	.byte	2
	.byte	3
	.byte	6
	.byte	9
	.byte	12
	.byte	13
	.byte	10
	.byte	7
	.byte	11
	.byte	14
	.byte	15
	.type	g_ZZ_SCAN8, %object
	.size	g_ZZ_SCAN8, 64
g_ZZ_SCAN8:
	.byte	0
	.byte	1
	.byte	8
	.byte	16
	.byte	9
	.byte	2
	.byte	3
	.byte	10
	.byte	17
	.byte	24
	.byte	32
	.byte	25
	.byte	18
	.byte	11
	.byte	4
	.byte	5
	.byte	12
	.byte	19
	.byte	26
	.byte	33
	.byte	40
	.byte	48
	.byte	41
	.byte	34
	.byte	27
	.byte	20
	.byte	13
	.byte	6
	.byte	7
	.byte	14
	.byte	21
	.byte	28
	.byte	35
	.byte	42
	.byte	49
	.byte	56
	.byte	57
	.byte	50
	.byte	43
	.byte	36
	.byte	29
	.byte	22
	.byte	15
	.byte	23
	.byte	30
	.byte	37
	.byte	44
	.byte	51
	.byte	58
	.byte	59
	.byte	52
	.byte	45
	.byte	38
	.byte	31
	.byte	39
	.byte	46
	.byte	53
	.byte	60
	.byte	61
	.byte	54
	.byte	47
	.byte	55
	.byte	62
	.byte	63
	.type	__func__.45930, %object
	.size	__func__.45930, 12
__func__.45930:
	.ascii	"H264_DecSEI\000"
	.data
	.align	2
.LANCHOR2 = . + 0
	.type	quant_org, %object
	.size	quant_org, 16
quant_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	quant8_org, %object
	.size	quant8_org, 64
quant8_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	quant_intra_default, %object
	.size	quant_intra_default, 16
quant_intra_default:
	.word	471076102
	.word	538711053
	.word	622861332
	.word	707076124
	.type	quant_inter_default, %object
	.size	quant_inter_default, 16
quant_inter_default:
	.word	403967498
	.word	454562830
	.word	505092116
	.word	572398360
	.type	quant8_intra_default, %object
	.size	quant8_intra_default, 64
quant8_intra_default:
	.word	269289990
	.word	454629138
	.word	303041290
	.word	488315159
	.word	387059725
	.word	522001177
	.word	420942352
	.word	555687195
	.word	454629138
	.word	606150429
	.word	488315159
	.word	639901983
	.word	522001177
	.word	673588257
	.word	555687195
	.word	707274276
	.type	quant8_inter_default, %object
	.size	quant8_inter_default, 256
quant8_inter_default:
	.word	286199049
	.word	404100371
	.word	319884557
	.word	421008917
	.word	353571087
	.word	454629398
	.word	370479889
	.word	471537944
	.word	404100371
	.word	505158425
	.word	421008917
	.word	538844187
	.word	454629398
	.word	555752988
	.word	471537944
	.word	589373470
	.space	192
	.type	g_NalTypeEOPIC, %object
	.size	g_NalTypeEOPIC, 12
g_NalTypeEOPIC:
	.byte	0
	.byte	0
	.byte	1
	.byte	30
	.byte	72
	.byte	83
	.byte	80
	.byte	73
	.byte	67
	.byte	69
	.byte	78
	.byte	68
	.type	g_AspecRatioIdc, %object
	.size	g_AspecRatioIdc, 112
g_AspecRatioIdc:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.type	CalcZeroNum, %object
	.size	CalcZeroNum, 256
CalcZeroNum:
	.byte	8
	.byte	7
	.byte	6
	.byte	6
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"dar=%d\012\000"
.LC1:
	.ascii	"NULL pointer: %s, L%d\012\000"
	.space	1
.LC2:
	.ascii	"/home/t00194509/HiSTBAndroidV5/images_and_tools/rel"
	.ascii	"ease/hi3798mv100/verify/maintain_spc062/HiSTBAndroi"
	.ascii	"dV5_release/HiSTBAndroidV600R001C00SPC065/device/hi"
	.ascii	"silicon/bigfish/sdk/source/kernel/linux-3.10.y/driv"
	.ascii	"ers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/h264."
	.ascii	"c\000"
	.space	3
.LC3:
	.ascii	"pH264Ctx->pCurrNal->nal_bitoffset = %d; code_len_by"
	.ascii	"te = %d; bitstream_length = %d; pH264Ctx->pCurrNal-"
	.ascii	">nal_trail_zero_bit_num = %d\012\000"
.LC4:
	.ascii	"stream[%d]: bitsoffset = %d; valid_bitlen = %d; byt"
	.ascii	"espos = %x\012\000"
	.space	1
.LC5:
	.ascii	"nal_segment = %d is not expected value\012\000"
.LC6:
	.ascii	"stream[%d]: bitsoffset = %d; valid_bitlen = %d\012\000"
.LC7:
	.ascii	"new pic flag = %d\012\000"
	.space	1
.LC8:
	.ascii	"tmp slice  pps id = %d\012\000"
.LC9:
	.ascii	"PPSSPSCheckTmpId: pps with this pic_parameter_set_i"
	.ascii	"d = %d havn't decode\012\000"
	.space	3
.LC10:
	.ascii	"PPSSPSCheckTmpId: seq_parameter_set_id out of range"
	.ascii	".\012\000"
	.space	2
.LC11:
	.ascii	"PPSSPSCheckTmpId: sps with this pic_parameter_set_i"
	.ascii	"d = %d havn't decode\012\000"
	.space	3
.LC12:
	.ascii	"slice  pps id = %d\012\000"
.LC13:
	.ascii	"pps with this pic_parameter_set_id = %d havn't deco"
	.ascii	"de\012\000"
	.space	1
.LC14:
	.ascii	"sps with this pic_parameter_set_id = %d havn't deco"
	.ascii	"de\012\000"
	.space	1
.LC15:
	.ascii	"save pic yuv :  structure = %d;  idc = %d\012\000"
	.space	1
.LC16:
	.ascii	"structure = %d pH264Ctx->CurrPic.pic_width_in_mb = "
	.ascii	"%d pH264Ctx->CurrPic.pic_height_in_mb = %d\012\000"
	.space	1
.LC17:
	.ascii	"list[%d][%d]: frame_num=%d, poc=%d\012\000"
.LC18:
	.ascii	"L0: \000"
	.space	3
.LC19:
	.ascii	"%d \000"
.LC20:
	.ascii	"%dt \000"
	.space	3
.LC21:
	.ascii	"%db \000"
	.space	3
.LC22:
	.ascii	"\012\000"
	.space	2
.LC23:
	.ascii	"L1:\000"
.LC24:
	.ascii	"pH264Ctx->DPB.fs[%d]: frame_num=%d poc=%d is_refere"
	.ascii	"nce=%d\012\000"
	.space	1
.LC25:
	.ascii	"pH264Ctx->DPB.fs_ref[%d]: frame_num=%d poc=%d is_re"
	.ascii	"ference=%d\012\000"
	.space	1
.LC26:
	.ascii	"pH264Ctx->DPB.fs_ref[%d]: frame.poc=%d \012\000"
	.space	3
.LC27:
	.ascii	"line: %d pstLogicFs is null\012\000"
	.space	3
.LC28:
	.ascii	"framestore %d allocate apc %d\012\000"
	.space	1
.LC29:
	.ascii	"find APC, but logic_fs_id %d abnormal(ref=%d,plfs=%"
	.ascii	"p, pdfs=%p)\012\000"
.LC30:
	.ascii	"exg_pts: %lld <-> %lld\012\000"
.LC31:
	.ascii	"frame %d, state=%d, is already output\012\000"
	.space	1
.LC32:
	.ascii	"plfs(fs=%p, eFoState=%d) is null, logic_fs_id = %d\012"
	.ascii	"\000"
.LC33:
	.ascii	"not used frame: (%d,%d)\012\000"
	.space	3
.LC34:
	.ascii	"frame skip: is_used=%d,skip=%d\012\000"
.LC35:
	.ascii	"topfield skip\012\000"
	.space	1
.LC36:
	.ascii	"bottom field skip\012\000"
	.space	1
.LC37:
	.ascii	"err(%d) > out_thr(%d)\012\000"
	.space	1
.LC38:
	.ascii	"H264 recycle image\012\000"
.LC39:
	.ascii	"%-50s%50d\012\000"
	.space	1
.LC40:
	.ascii	"DecPicTimingSEI but SPS is invalid.\012\000"
	.space	3
.LC41:
	.ascii	"SEI: cpb_removal_delay\000"
	.space	1
.LC42:
	.ascii	"SEI: dpb_output_delay\000"
	.space	2
.LC43:
	.ascii	"pic_struct\000"
	.space	1
.LC44:
	.ascii	"SPS_SVC_EXT: inter_layer_deblocking_filter_control_"
	.ascii	"present_flag\000"
.LC45:
	.ascii	"inter_layer_present_flag:%d!\012\000"
	.space	2
.LC46:
	.ascii	"SPS_SVC_EXT: extended_spatial_scalability_idc\000"
	.space	2
.LC47:
	.ascii	"spatial scalability not support!!\012\000"
	.space	1
.LC48:
	.ascii	"SPS_SVC_EXT: chroma_phase_x_plus1_flag\000"
	.space	1
.LC49:
	.ascii	"chroma_phase_x_plus1_flag:%d!!\012\000"
.LC50:
	.ascii	"SPS_SVC_EXT: chroma_phase_y_plus1\000"
	.space	2
.LC51:
	.ascii	"chroma_phase_y_plus1:%d!\012\000"
	.space	2
.LC52:
	.ascii	"SPS_SVC_EXT: seq_tcoeff_level_prediction_flag\000"
	.space	2
.LC53:
	.ascii	"SPS_SVC_EXT: adaptive_tcoeff_level_prediction_flag\000"
	.space	1
.LC54:
	.ascii	"adaptive_tcoeff_level_prediction_flag:%d!\012\000"
	.space	1
.LC55:
	.ascii	"SPS_SVC_EXT: slice_header_restriction_flag\000"
	.space	1
.LC56:
	.ascii	"slice_header_restriction_flag error:%d,%x,%d\012\000"
	.space	2
.LC57:
	.ascii	"\012 VFMW ** release streambuff=%08x   bitstream_le"
	.ascii	"ngth=%d\012\000"
	.space	3
.LC58:
	.ascii	"H264Dec destroy\012\000"
	.space	3
.LC59:
	.ascii	"clear curr slice.\012\000"
	.space	1
.LC60:
	.ascii	"slice_type %d invalid, clear current slice.\012\000"
	.space	3
.LC61:
	.ascii	"pRepairPic(%p)/found(%d) = 0, clear current slice.\012"
	.ascii	"\000"
.LC62:
	.ascii	"listXsize[%d] = %d, clear current slice.\012\000"
	.space	2
.LC63:
	.ascii	"\012\012END of the bit buffer, copy the first packe"
	.ascii	"t!\012\012\000"
	.space	2
.LC64:
	.ascii	"0:phy:0x%x, 1:phy:0x%x; len0:%d len1:%d\012\000"
	.space	3
.LC65:
	.ascii	"0:phy:0x%x, len0:%d\012\000"
	.space	3
.LC66:
	.ascii	"\012the stream is error,len:%d\012\000"
	.space	3
.LC67:
	.ascii	"nal_ref_idc=%d, structure=%d, image_id=%d, pmv_idc="
	.ascii	"%d\012\000"
	.space	1
.LC68:
	.ascii	"logic frame id(=%d): get LogicFs error!\012\000"
	.space	3
.LC69:
	.ascii	"phy fs is null: pstDecodeFs = %p, pstDispOutFs = %p"
	.ascii	"\012\000"
	.space	3
.LC70:
	.ascii	"for P slice size of list equal 0.\012\000"
	.space	1
.LC71:
	.ascii	"for B slice size of two list all equal 0.\012\000"
	.space	1
.LC72:
	.ascii	"init list error.\012\000"
	.space	2
.LC73:
	.ascii	"L0: list after init.\012\000"
	.space	2
.LC74:
	.ascii	"L0: list after reorder.\012\000"
	.space	3
.LC75:
	.ascii	"partition fs memory fail!\012\000"
	.space	1
.LC76:
	.ascii	"ERROR: FSP_ConfigInstance fail!\012\000"
	.space	3
.LC77:
	.ascii	"stream frame packing type is %d! what can we do?\012"
	.ascii	"\000"
	.space	2
.LC78:
	.ascii	"clear all dec para\012\000"
.LC79:
	.ascii	"cann't find FrameStore\012\000"
.LC80:
	.ascii	"========== H264 FrameStore state(is_used, is_in_dpb"
	.ascii	", IsOutDPB) ========\012\000"
	.space	3
.LC81:
	.ascii	"%02d: %d %d %d\012\000"
.LC82:
	.ascii	"ReadImgNum = %d, NewImgNum = %d\012\000"
	.space	3
.LC83:
	.ascii	"FrameStore leak, ClearAll\012\000"
	.space	1
.LC84:
	.ascii	"%s %d unknow error!!\012\000"
	.space	2
.LC85:
	.ascii	"-1 == VCTRL_GetChanIDByCtx() Err! \012\000"
.LC86:
	.ascii	"FS_ALLOC_ERR, ClearAll\012\000"
.LC87:
	.ascii	"Can not new logic fs! ClearAll\012\000"
.LC88:
	.ascii	"pH264Ctx is %#x, pFrameStore is %#x\012\000"
	.space	3
.LC89:
	.ascii	"line; %d pstLogicFsImage is NULL!\012\000"
	.space	1
.LC90:
	.ascii	"InsertVO err:%d, ClearAll\012\000"
	.space	1
.LC91:
	.ascii	"H264.c line %d: frame para err(ret=%d), recycle ima"
	.ascii	"ge self\012\000"
.LC92:
	.ascii	"line: %d pstLogicFsImage is NULL!\012\000"
	.space	1
.LC93:
	.ascii	"[%s][%d] OutputFrmToVO return %d\012\000"
	.space	2
.LC94:
	.ascii	"line %d: flush dpb return %d\012\000"
	.space	2
.LC95:
	.ascii	"\012 receive streambuff=0x%08x; phy_addr=0x%x; bits"
	.ascii	"tream_length=%d\012\000"
	.space	3
.LC96:
	.ascii	"nal_release_err\012\000"
	.space	3
.LC97:
	.ascii	"cann't find slot for current nal\012\000"
	.space	2
.LC98:
	.ascii	"receive a zero packet\012\000"
	.space	1
.LC99:
	.ascii	"----------------- Imode -> %d ------------------\012"
	.ascii	"\000"
	.space	2
.LC100:
	.ascii	"I_MODE but first_mb_in_slice != 0\012\000"
	.space	1
.LC101:
	.ascii	"Discard this B(poc=%d) befor P, is_ref_idc=%d.\012\000"
.LC102:
	.ascii	"***** VDM start, TotalPicNum=%d, pH264Ctx->CurrPic."
	.ascii	"structure=%d.\012\000"
	.space	2
.LC103:
	.ascii	"DecVDM ERR\012\000"
.LC104:
	.ascii	"line %d, get APC error, ret %d\012\000"
.LC105:
	.ascii	"InserFrmInDPB: cur pic struct = %d!\012\000"
	.space	3
.LC106:
	.ascii	"CurrPic.state is 'EMPTY'\012\000"
	.space	2
.LC107:
	.ascii	"StorePicInDPB return(%d) from L%d\012\000"
	.space	1
.LC108:
	.ascii	"line %d, return %d\012\000"
.LC109:
	.ascii	"directoutput mode\012\000"
	.space	1
.LC110:
	.ascii	"line: %d pImg is NULL!\012\000"
.LC111:
	.ascii	"line %d, REPORT_IFRAME_ERR\012\000"
.LC112:
	.ascii	"err(%d) > ref_thr(%d)\012\000"
	.space	1
.LC113:
	.ascii	"marking return %d\012\000"
	.space	1
.LC114:
	.ascii	"return value is unexpeced!\012\000"
.LC115:
	.ascii	"line %d: pH264Ctx->DPB.size = %d, ref %d, ltref %d\012"
	.ascii	"\000"
.LC116:
	.ascii	"%s: pos(%d) = pre_pos, force return.\012\000"
	.space	2
.LC117:
	.ascii	"store pic err, ret = %d\012\000"
	.space	3
.LC118:
	.ascii	"pH264Ctx->CurrPic.frame_store is null pointer\012\000"
	.space	1
.LC119:
	.ascii	"imode nal store pic err, ret = %d\012\000"
	.space	1
.LC120:
	.ascii	"imode nal flush dpb err, ret = %d\012\000"
	.space	1
.LC121:
	.ascii	"GAP found while DPB is empty!\012\000"
	.space	1
.LC122:
	.ascii	"frame num gap try to fill it \012\000"
	.space	1
.LC123:
	.ascii	"CurrFrameNum = %d  UnusedShortTermFrameNum = %d\012"
	.ascii	"\000"
	.space	3
.LC124:
	.ascii	"cann't allocate frame store when gap find\012\000"
	.space	1
.LC125:
	.ascii	"allocate frame store when gap find\012\000"
.LC126:
	.ascii	"line %d: store gap pic err, ret=%d\012\000"
.LC127:
	.ascii	"%s %d frame_store is null!!\012\000"
	.space	3
.LC128:
	.ascii	"line %d: init dpb return %d\012\000"
	.space	3
.LC129:
	.ascii	"resolution error, the CAP_LEVEL_USER_DEFINE_WITH_OP"
	.ascii	"TION channel with s32ReRangeEn == 0 can't support s"
	.ascii	"uch bitstream.\012\000"
	.space	2
.LC130:
	.ascii	"s32MaxRefFrameNum < pH264Ctx->DPB.size, the CAP_LEV"
	.ascii	"EL_USER_DEFINE_WITH_OPTION channel can't support su"
	.ascii	"ch bitstream.\012\000"
	.space	3
.LC131:
	.ascii	"mem arrange err, ClearAll\012\000"
	.space	1
.LC132:
	.ascii	"get back frm\012\000"
	.space	2
.LC133:
	.ascii	"line %d: frame gap(=%d) > dpb size(=%d)\012\000"
	.space	3
.LC134:
	.ascii	"frame num gap don't allowed but gap find\012\000"
	.space	2
.LC135:
	.ascii	"line %d: find gap in NON-I slice but here gap is no"
	.ascii	"t allowed\012\000"
	.space	2
.LC136:
	.ascii	"line %d: dec gap failed\012\000"
	.space	3
.LC137:
	.ascii	"line %d: alloc framestore failed\012\000"
	.space	2
.LC138:
	.ascii	"dec_pts: %lld\012\000"
	.space	1
.LC139:
	.ascii	"dec_usertag: %lld\012\000"
	.space	1
.LC140:
	.ascii	"%s %d NULL == pH264Ctx->CurrPic.frame_store!!\012\000"
	.space	1
.LC141:
	.ascii	"   : delta_sl   \000"
	.space	3
.LC142:
	.ascii	"SEI: frame_packing_arrangement_id\000"
	.space	2
.LC143:
	.ascii	"SEI: frame_packing_arrangement_cancel_flag\000"
	.space	1
.LC144:
	.ascii	"SEI: frame_packing_arrangement_type\000"
.LC145:
	.ascii	"SEI: quincunx_sampling_flag\000"
.LC146:
	.ascii	"SEI: content_interpretation_type\000"
	.space	3
.LC147:
	.ascii	"SEI: spatial_flipping_flag\000"
	.space	1
.LC148:
	.ascii	"SEI: frame0_flipped_flag\000"
	.space	3
.LC149:
	.ascii	"SEI: field_views_flag\000"
	.space	2
.LC150:
	.ascii	"SEI: current_frame_is_frame0_flag\000"
	.space	2
.LC151:
	.ascii	"SEI: frame0_self_contained_flag\000"
.LC152:
	.ascii	"SEI: frame1_self_contained_flag\000"
.LC153:
	.ascii	"SEI: frame0_grid_position_x\000"
.LC154:
	.ascii	"SEI: frame0_grid_position_y\000"
.LC155:
	.ascii	"SEI: frame1_grid_position_x\000"
.LC156:
	.ascii	"SEI: frame1_grid_position_y\000"
.LC157:
	.ascii	"SEI: frame_packing_arrangement_reserved_byte\000"
	.space	3
.LC158:
	.ascii	"SEI: frame_packing_arrangement_repetition_period\000"
	.space	3
.LC159:
	.ascii	"SEI: frame_packing_arrangement_extension_flag\000"
	.space	2
.LC160:
	.ascii	"SEI nal dec payload type err\012\000"
	.space	2
.LC161:
	.ascii	"SEI nal dec payloadSize err\012\000"
	.space	3
.LC162:
	.ascii	"SEI_BUFFERING_PERIOD,offset = %d,payload_size = %d "
	.ascii	"\012\000"
	.space	3
.LC163:
	.ascii	"PassBytes err [%s][%d]\012\000"
.LC164:
	.ascii	"SEI_PIC_TIMING,offset = %d,payload_size = %d \012\000"
	.space	1
.LC165:
	.ascii	"SEI_PAN_SCAN_RECT,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	2
.LC166:
	.ascii	"SEI_FILLER_PAYLOAD,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	1
.LC167:
	.ascii	"SEI_USER_DATA_REGISTERED_ITU_T_T35, offset = %d, pa"
	.ascii	"yload_size = %d \012\000"
	.space	3
.LC168:
	.ascii	"SEI_USER_DATA_UNREGISTERED, offset = %d, payload_si"
	.ascii	"ze = %d \012\000"
	.space	3
.LC169:
	.ascii	"SEI: itu_t_t35_country_code\000"
.LC170:
	.ascii	"SEI: itu_t_t35_country_code_extension_byte\000"
	.space	1
.LC171:
	.ascii	"SEI: itu_t_t35_provider_code\000"
	.space	3
.LC172:
	.ascii	"len_tmp = %d cann't dec usrdata\012\000"
	.space	3
.LC173:
	.ascii	"cann't dec usrdata\012\000"
.LC174:
	.ascii	"SEI_RECOVERY_POINT,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	1
.LC175:
	.ascii	"SEI_DEC_REF_PIC_MARKING_REPETITION,offset = %d,payl"
	.ascii	"oad_size = %d \012\000"
	.space	1
.LC176:
	.ascii	"SEI_SPARE_PIC,offset = %d,payload_size = %d \012\000"
	.space	2
.LC177:
	.ascii	"SEI_SCENE_INFO,offset = %d,payload_size = %d \012\000"
	.space	1
.LC178:
	.ascii	"SEI_SUB_SEQ_INFO,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	3
.LC179:
	.ascii	"SEI_SUB_SEQ_LAYER_CHARACTERISTICS,offset = %d,paylo"
	.ascii	"ad_size = %d \012\000"
	.space	2
.LC180:
	.ascii	"SEI_SUB_SEQ_CHARACTERISTICS,offset = %d,payload_siz"
	.ascii	"e = %d \012\000"
.LC181:
	.ascii	"SEI_FULL_FRAME_FREEZE,offset = %d,payload_size = %d"
	.ascii	" \012\000"
	.space	2
.LC182:
	.ascii	"SEI_FULL_FRAME_FREEZE_RELEASE,offset = %d,payload_s"
	.ascii	"ize = %d \012\000"
	.space	2
.LC183:
	.ascii	"SEI_FULL_FRAME_SNAPSHOT,offset = %d,payload_size = "
	.ascii	"%d \012\000"
.LC184:
	.ascii	"SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START,offset = %"
	.ascii	"d,payload_size = %d \012\000"
	.space	3
.LC185:
	.ascii	"SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END,offset = %d,"
	.ascii	"payload_size = %d \012\000"
	.space	1
.LC186:
	.ascii	"SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET,offset = %d,"
	.ascii	"payload_size = %d \012\000"
	.space	1
.LC187:
	.ascii	"SEI_FILM_GRAIN_CHARACTERISTICS,offset = %d,payload_"
	.ascii	"size = %d \012\000"
	.space	1
.LC188:
	.ascii	"SEI_DEBLOCKING_FILTER_DISPLAY_PREFERENCE,offset = %"
	.ascii	"d,payload_size = %d \012\000"
	.space	3
.LC189:
	.ascii	"SEI_STEREO_VIDEO_INFO,offset = %d,payload_size = %d"
	.ascii	" \012\000"
	.space	2
.LC190:
	.ascii	"too much usrdat, cann't dec SEI\012\000"
	.space	3
.LC191:
	.ascii	"VUI: aspect_ratio_info_present_flag\000"
.LC192:
	.ascii	"VUI: aspect_ratio_idc\000"
	.space	2
.LC193:
	.ascii	"VUI: sar_width\000"
	.space	1
.LC194:
	.ascii	"VUI: sar_height\000"
.LC195:
	.ascii	"VUI: overscan_info_present_flag\000"
.LC196:
	.ascii	"VUI: overscan_appropriate_flag\000"
	.space	1
.LC197:
	.ascii	"VUI: video_signal_type_present_flag\000"
.LC198:
	.ascii	"VUI: video_format\000"
	.space	2
.LC199:
	.ascii	"VUI: video_full_range_flag\000"
	.space	1
.LC200:
	.ascii	"VUI: color_description_present_flag\000"
.LC201:
	.ascii	"VUI: colour_primaries\000"
	.space	2
.LC202:
	.ascii	"VUI: transfer_characteristics\000"
	.space	2
.LC203:
	.ascii	"VUI: matrix_coefficients\000"
	.space	3
.LC204:
	.ascii	"VUI: chroma_loc_info_present_flag\000"
	.space	2
.LC205:
	.ascii	"VUI: chroma_sample_loc_type_top_field\000"
	.space	2
.LC206:
	.ascii	"VUI: chroma_sample_loc_type_bottom_field\000"
	.space	3
.LC207:
	.ascii	"VUI: timing_info_present_flag\000"
	.space	2
.LC208:
	.ascii	"VUI: num_units_in_tick\000"
	.space	1
.LC209:
	.ascii	"VUI: time_scale\000"
.LC210:
	.ascii	"VUI: fixed_frame_rate_flag\000"
	.space	1
.LC211:
	.ascii	"VUI: nal_hrd_parameters_present_flag\000"
	.space	3
.LC212:
	.ascii	"VUI: cpb_cnt_minus1\000"
.LC213:
	.ascii	"VUI: bit_rate_scale\000"
.LC214:
	.ascii	"VUI: cpb_size_scale\000"
.LC215:
	.ascii	"hrd->cpb_cnt_minus1 out of range\012\000"
	.space	2
.LC216:
	.ascii	"VUI: bit_rate_value_minus1\000"
	.space	1
.LC217:
	.ascii	"VUI: cpb_size_value_minus1\000"
	.space	1
.LC218:
	.ascii	"VUI: cbr_flag\000"
	.space	2
.LC219:
	.ascii	"VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC220:
	.ascii	"VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC221:
	.ascii	"VUI: dpb_output_delay_length_minus1\000"
.LC222:
	.ascii	"VUI: time_offset_length\000"
.LC223:
	.ascii	"VUI: vcl_hrd_parameters_present_flag\000"
	.space	3
.LC224:
	.ascii	"VUI: low_delay_hrd_flag\000"
.LC225:
	.ascii	"VUI: pic_struct_present_flag\000"
	.space	3
.LC226:
	.ascii	"VUI: bitstream_restriction_flag\000"
.LC227:
	.ascii	"VUI: motion_vectors_over_pic_boundaries_flag\000"
	.space	3
.LC228:
	.ascii	"VUI: max_bytes_per_pic_denom\000"
	.space	3
.LC229:
	.ascii	"VUI: max_bits_per_mb_denom\000"
	.space	1
.LC230:
	.ascii	"VUI: log2_max_mv_length_horizontal\000"
	.space	1
.LC231:
	.ascii	"VUI: log2_max_mv_length_vertical\000"
	.space	3
.LC232:
	.ascii	"VUI: num_reorder_frames\000"
.LC233:
	.ascii	"VUI: max_dec_frame_buffering\000"
	.space	3
.LC234:
	.ascii	"SPS: chroma_format_idc\000"
	.space	1
.LC235:
	.ascii	"pSPS->chroma_format_idc out of range.\012\000"
	.space	1
.LC236:
	.ascii	"SPS: bit_depth_luma_minus8\000"
	.space	1
.LC237:
	.ascii	"bit_depth_luma(%d) not equal 8.\012\000"
	.space	3
.LC238:
	.ascii	"SPS: bit_depth_chroma_minus8\000"
	.space	3
.LC239:
	.ascii	"bit_depth_chroma(%d) not equal 8.\012\000"
	.space	1
.LC240:
	.ascii	"SPS: qpprime_y_zero_trans_bypass_flag\000"
	.space	2
.LC241:
	.ascii	"qpprime_y_zero_trans_bypass_flag not equal 0.\012\000"
	.space	1
.LC242:
	.ascii	"SPS: seq_scaling_matrix_present_flag\000"
	.space	3
.LC243:
	.ascii	"SPS: seq_scaling_list_present_flag\000"
	.space	1
.LC244:
	.ascii	"SPS: log2_max_frame_num_minus4\000"
	.space	1
.LC245:
	.ascii	"pSPS->log2_max_frame_num_minus4 out of range.\012\000"
	.space	1
.LC246:
	.ascii	"SPS: pic_order_cnt_type\000"
.LC247:
	.ascii	"pSPS->pic_order_cnt_type out of range.\012\000"
.LC248:
	.ascii	"SPS: log2_max_pic_order_cnt_lsb_minus4\000"
	.space	1
.LC249:
	.ascii	"pSPS->log2_max_pic_order_cnt_lsb_minus4 out of rang"
	.ascii	"e.\012\000"
	.space	1
.LC250:
	.ascii	"SPS: delta_pic_order_always_zero_flag\000"
	.space	2
.LC251:
	.ascii	"SPS: offset_for_non_ref_pic\000"
.LC252:
	.ascii	"SPS: offset_for_top_to_bottom_field\000"
.LC253:
	.ascii	"SPS: num_ref_frames_in_pic_order_cnt_cycle\000"
	.space	1
.LC254:
	.ascii	"pSPS->num_ref_frames_in_pic_order_cnt_cycle out of "
	.ascii	"range.\012\000"
	.space	1
.LC255:
	.ascii	"SPS: offset_for_ref_frame[i]\000"
	.space	3
.LC256:
	.ascii	"SPS: num_ref_frames\000"
.LC257:
	.ascii	"SPS: gaps_in_frame_num_value_allowed_flag\000"
	.space	2
.LC258:
	.ascii	"SPS: pic_width_in_mbs_minus1\000"
	.space	3
.LC259:
	.ascii	"pSPS->pic_width_in_mbs_minus1 out of range(=%d).\012"
	.ascii	"\000"
	.space	2
.LC260:
	.ascii	"SPS: pic_height_in_map_units_minus1\000"
.LC261:
	.ascii	"SPS: frame_mbs_only_flag\000"
	.space	3
.LC262:
	.ascii	"SPS: mb_adaptive_frame_field_flag\000"
	.space	2
.LC263:
	.ascii	"pSPS->pic_height_in_map_units_minus1 out of range.\012"
	.ascii	"\000"
.LC264:
	.ascii	"pic size too large.\012\000"
	.space	3
.LC265:
	.ascii	"level_idc %d not support.\012\000"
	.space	1
.LC266:
	.ascii	"dpb size according level : %d\012\000"
	.space	1
.LC267:
	.ascii	"pSPS->num_ref_frames(%d) > DPB size(%d), try to sel"
	.ascii	"ect the reasonable one.\012\000"
.LC268:
	.ascii	"SPS: direct_8x8_inference_flag\000"
	.space	1
.LC269:
	.ascii	"SPS: frame_cropping_flag\000"
	.space	3
.LC270:
	.ascii	"SPS: frame_cropping_rect_left_offset\000"
	.space	3
.LC271:
	.ascii	"SPS: frame_cropping_rect_right_offset\000"
	.space	2
.LC272:
	.ascii	"SPS: frame_cropping_rect_top_offset\000"
.LC273:
	.ascii	"SPS: frame_cropping_rect_bottom_offset\000"
	.space	1
.LC274:
	.ascii	"SPS: vui_parameters_present_flag\000"
	.space	3
.LC275:
	.ascii	"max_dec_frame_buffering(%d) > MaxDpbSize(%d)\012\000"
	.space	2
.LC276:
	.ascii	"SPS: profile_idc\000"
	.space	3
.LC277:
	.ascii	"SPS: constrained_set0_flag\000"
	.space	1
.LC278:
	.ascii	"SPS: constrained_set1_flag\000"
	.space	1
.LC279:
	.ascii	"SPS: constrained_set2_flag\000"
	.space	1
.LC280:
	.ascii	"SPS: constrained_set3_flag\000"
	.space	1
.LC281:
	.ascii	"SPS: reserved_zero_4bits\000"
	.space	3
.LC282:
	.ascii	"SPS: level_idc\000"
	.space	1
.LC283:
	.ascii	"SPS: seq_parameter_set_id\000"
	.space	2
.LC284:
	.ascii	"seq_parameter_set_id out of range.\012\000"
.LC285:
	.ascii	"Baseline stream, try to decode, exit when FMO occur"
	.ascii	"red.\012\000"
	.space	3
.LC286:
	.ascii	"EXTENDED stream, try to decode, exit when dataparti"
	.ascii	"tion occurred.\012\000"
	.space	1
.LC287:
	.ascii	"others High profile stream, try to decode, exit whe"
	.ascii	"n high profile not support occurred.\012\000"
	.space	3
.LC288:
	.ascii	"profile_idc = %5d error, try to decode as main prof"
	.ascii	"ile.\012\000"
	.space	3
.LC289:
	.ascii	"level_idc = %5d error, try to decode as level_idc %"
	.ascii	"d.\012\000"
	.space	1
.LC290:
	.ascii	"Line %d: SPS[%d] decode error.\012\000"
.LC291:
	.ascii	"svc ext error:\012\000"
.LC292:
	.ascii	"PPS: entropy_coding_mode_flag\000"
	.space	2
.LC293:
	.ascii	"PPS: pic_order_present_flag\000"
.LC294:
	.ascii	"PPS: num_slice_groups_minus1\000"
	.space	3
.LC295:
	.ascii	"Baseline stream with FMO, not support.\012\000"
.LC296:
	.ascii	"PPS: num_ref_idx_l0_active_minus1\000"
	.space	2
.LC297:
	.ascii	"num_ref_idx_l0_active_minus1 out of range.\012\000"
.LC298:
	.ascii	"PPS: num_ref_idx_l1_active_minus1\000"
	.space	2
.LC299:
	.ascii	"num_ref_idx_l1_active_minus1 out of range.\012\000"
.LC300:
	.ascii	"PPS: weighted prediction flag\000"
	.space	2
.LC301:
	.ascii	"PPS: weighted_bipred_idc\000"
	.space	3
.LC302:
	.ascii	"weighted_bipred_idc out of range\012\000"
	.space	2
.LC303:
	.ascii	"PPS: pic_init_qp_minus26\000"
	.space	3
.LC304:
	.ascii	"PPS: pic_init_qs_minus26\000"
	.space	3
.LC305:
	.ascii	"PPS: chroma_qp_index_offset\000"
.LC306:
	.ascii	"PPS: deblocking_filter_control_present_flag\000"
.LC307:
	.ascii	"PPS: constrained_intra_pred_flag\000"
	.space	3
.LC308:
	.ascii	"PPS: redundant_pic_cnt_present_flag\000"
.LC309:
	.ascii	"redundant pic not support when find redundant slice"
	.ascii	" later, exit\012\000"
	.space	3
.LC310:
	.ascii	"PPS: transform_8x8_mode_flag\000"
	.space	3
.LC311:
	.ascii	"PPS: pic_scaling_matrix_present_flag\000"
	.space	3
.LC312:
	.ascii	"PPS: pic_scaling_list_present_flag\000"
	.space	1
.LC313:
	.ascii	"PPS: second_chroma_qp_index_offset\000"
	.space	1
.LC314:
	.ascii	"second_chroma_qp_index_offset out of range.\012\000"
	.space	3
.LC315:
	.ascii	"PPS: pic_parameter_set_id\000"
	.space	2
.LC316:
	.ascii	"pic_parameter_set_id out of range.\012\000"
.LC317:
	.ascii	"PPS: seq_parameter_set_id\000"
	.space	2
.LC318:
	.ascii	"SPS haven't decode.\012\000"
	.space	3
.LC319:
	.ascii	"PPS decode error.\012\000"
	.space	1
.LC320:
	.ascii	"SH: pic_parameter_set_id\000"
	.space	3
.LC321:
	.ascii	"pps id:%d in sliceheader err\012\000"
	.space	2
.LC322:
	.ascii	"PPS or SPS of this slice not valid\012\000"
.LC323:
	.ascii	"recover point but isn't I_SLICE.\012\000"
	.space	2
.LC324:
	.ascii	"SH: frame_num\000"
	.space	2
.LC325:
	.ascii	"IDR NAL but frame_num!=0.\012\000"
	.space	1
.LC326:
	.ascii	"SH: field_pic_flag\000"
	.space	1
.LC327:
	.ascii	"SH: bottom_field_flag\000"
	.space	2
.LC328:
	.ascii	"field first_mb_in_slice bigger than pic size\012\000"
	.space	2
.LC329:
	.ascii	"frame first_mb_in_slice bigger than pic size\012\000"
	.space	2
.LC330:
	.ascii	"SH: idr_pic_id\000"
	.space	1
.LC331:
	.ascii	"idr_pic_id bigger than 65535\012\000"
	.space	2
.LC332:
	.ascii	"SH: pic_order_cnt_lsb\000"
	.space	2
.LC333:
	.ascii	"SH: delta_pic_order_cnt_bottom\000"
	.space	1
.LC334:
	.ascii	"SH: delta_pic_order_cnt[0]\000"
	.space	1
.LC335:
	.ascii	"SH: delta_pic_order_cnt[1]\000"
	.space	1
.LC336:
	.ascii	"SH: redundant_pic_cnt\000"
	.space	2
.LC337:
	.ascii	"redundant pic not support.\012\000"
.LC338:
	.ascii	"first_mb_in_slice in currslice small than prevslice"
	.ascii	" in same pic\012\000"
	.space	3
.LC339:
	.ascii	"overflow MAX_MMCO_LEN\012\000"
	.space	1
.LC340:
	.ascii	"SH: memory_management_control_operation\000"
.LC341:
	.ascii	"SH: difference_of_pic_nums_minus1\000"
	.space	2
.LC342:
	.ascii	"SH: long_term_pic_num\000"
	.space	2
.LC343:
	.ascii	"SH: long_term_frame_idx\000"
.LC344:
	.ascii	"SH: max_long_term_frame_idx_plus1\000"
	.space	2
.LC345:
	.ascii	"mmco exceed 6\012\000"
	.space	1
.LC346:
	.ascii	"SH: no_output_of_prior_pics_flag\000"
	.space	3
.LC347:
	.ascii	"SH: long_term_reference_flag\000"
	.space	3
.LC348:
	.ascii	"IDR and no_output_of_prior_pics_flag = %d\012\000"
	.space	1
.LC349:
	.ascii	"SH: adaptive_ref_pic_marking_mode_flag\000"
	.space	1
.LC350:
	.ascii	"adaptive_ref_pic_marking_mode_flag = %d\012\000"
	.space	3
.LC351:
	.ascii	"MMCO para would save dec err\012\000"
	.space	2
.LC352:
	.ascii	"mulitislice diff no_out_of_prior_pics_flag, used fi"
	.ascii	"rst.\012\000"
	.space	3
.LC353:
	.ascii	"mulitislice diff long_term_reference_flag, used fir"
	.ascii	"st.\012\000"
.LC354:
	.ascii	"mulitislice diff adaptive_ref_pic_marking_mode_flag"
	.ascii	", used first.\012\000"
	.space	2
.LC355:
	.ascii	"TotalPicNum=%d, SliceNumInPic=%d, TotalNal=%d\012\000"
	.space	1
.LC356:
	.ascii	"SH: luma_log2_weight_denom\000"
	.space	1
.LC357:
	.ascii	"SH: chroma_log2_weight_denom\000"
	.space	3
.LC358:
	.ascii	"WP log2 exceed  and err flag = %d\012\000"
	.space	1
.LC359:
	.ascii	"SH: luma_weight_flag_l0\000"
.LC360:
	.ascii	"SH: luma_weight_l0\000"
	.space	1
.LC361:
	.ascii	"SH: luma_offset_l0\000"
	.space	1
.LC362:
	.ascii	"SH: chroma_weight_flag_l0\000"
	.space	2
.LC363:
	.ascii	"SH: chroma_weight_l0\000"
	.space	3
.LC364:
	.ascii	"SH: chroma_offset_l0\000"
	.space	3
.LC365:
	.ascii	"SH: luma_weight_flag_l1\000"
.LC366:
	.ascii	"SH: luma_weight_l1\000"
	.space	1
.LC367:
	.ascii	"SH: luma_offset_l1\000"
	.space	1
.LC368:
	.ascii	"SH: chroma_weight_flag_l1\000"
	.space	2
.LC369:
	.ascii	"SH: chroma_weight_l1\000"
	.space	3
.LC370:
	.ascii	"SH: chroma_offset_l1\000"
	.space	3
.LC371:
	.ascii	"SH: ref_pic_list_reordering_flag_l0\000"
.LC372:
	.ascii	"SH: reordering_of_pic_nums_idc_l0\000"
	.space	2
.LC373:
	.ascii	"reorder idc l0 = %d, g_SeErrFlag=%d\012\000"
	.space	3
.LC374:
	.ascii	"SH: abs_diff_pic_num_minus1_l0\000"
	.space	1
.LC375:
	.ascii	"abs_diff_pic_num_minus1_l0 = %d, g_SeErrFlag=%d\012"
	.ascii	"\000"
	.space	3
.LC376:
	.ascii	"SH: long_term_pic_idx_l0\000"
	.space	3
.LC377:
	.ascii	"num of idc l0 exceed\012\000"
	.space	2
.LC378:
	.ascii	"SH: ref_pic_list_reordering_flag_l1\000"
.LC379:
	.ascii	"SH: reordering_of_pic_nums_idc_l1\000"
	.space	2
.LC380:
	.ascii	"reorder idc l1 = %d, g_SeErrFlag=%d\012\000"
	.space	3
.LC381:
	.ascii	"SH: abs_diff_pic_num_minus1_l1\000"
	.space	1
.LC382:
	.ascii	"abs_diff_pic_num_minus1_l1 = %d, g_SeErrFlag=%d\012"
	.ascii	"\000"
	.space	3
.LC383:
	.ascii	"SH: long_term_pic_idx_l1\000"
	.space	3
.LC384:
	.ascii	"num of idc l1 exceed\012\000"
	.space	2
.LC385:
	.ascii	"SH: direct_spatial_mv_pred_flag\000"
.LC386:
	.ascii	"SH: num_ref_idx_override_flag\000"
	.space	2
.LC387:
	.ascii	"SH: num_ref_idx_l0_active_minus1\000"
	.space	3
.LC388:
	.ascii	"SH: num_ref_idx_l1_active_minus1\000"
	.space	3
.LC389:
	.ascii	"frame num_ref_idx_lx_active_minus1 exceed\012\000"
	.space	1
.LC390:
	.ascii	"field num_ref_idx_lx_active_minus1 exceed\012\000"
	.space	1
.LC391:
	.ascii	"reordering para dec err\012\000"
	.space	3
.LC392:
	.ascii	"apply_weights_flag=%d\012\000"
	.space	1
.LC393:
	.ascii	"wpt dec err\012\000"
	.space	3
.LC394:
	.ascii	"mark para dec err\012\000"
	.space	1
.LC395:
	.ascii	"SH: cabac_init_idc\000"
	.space	1
.LC396:
	.ascii	"cabac_init_idc bigger than 3\012\000"
	.space	2
.LC397:
	.ascii	"SH: slice_qp_delta\000"
	.space	1
.LC398:
	.ascii	"SH: disable_deblocking_filter_idc\000"
	.space	2
.LC399:
	.ascii	"disable_deblocking_filter_idc dec err\012\000"
	.space	1
.LC400:
	.ascii	"SH: slice_alpha_c0_offset_div2\000"
	.space	1
.LC401:
	.ascii	"slice_alpha_c0_offset_div2 dec err\012\000"
.LC402:
	.ascii	"SH: slice_beta_offset_div2\000"
	.space	1
.LC403:
	.ascii	"slice_beta_offset_div2 dec err\012\000"
.LC404:
	.ascii	"\012Slice nal or IDR nal = %d\012\000"
.LC405:
	.ascii	"sliceheader dec err\012\000"
	.space	3
.LC406:
	.ascii	"Start Reason: SliceParaNum, MaxBytesReceived = %d, "
	.ascii	"%d(thr=%d)\012\000"
	.space	1
.LC407:
	.ascii	"Too many slice or bitstream, err!\012\000"
	.space	1
.LC408:
	.ascii	"Start Reason: new_pic_flag\012\000"
.LC409:
	.ascii	"init pic err, find next recover point or next valid"
	.ascii	" sps, pps, or exit\012\000"
	.space	1
.LC410:
	.ascii	"DecList error, ret=%d\012\000"
	.space	1
.LC411:
	.ascii	"dec list err.\012\000"
	.space	1
.LC412:
	.ascii	"SH: first_mb_in_slice\000"
	.space	2
.LC413:
	.ascii	"slicecheck first_mb_in_slice >= MAX_MB_NUM_IN_PIC e"
	.ascii	"rror.\012\000"
	.space	2
.LC414:
	.ascii	"SH: slice_type\000"
	.space	1
.LC415:
	.ascii	"slice type = %d\012\000"
	.space	3
.LC416:
	.ascii	"slice type = %d, err\012\000"
	.space	2
.LC417:
	.ascii	"pH264Ctx->TotalNal = %d, type:%d\012\000"
	.space	2
.LC418:
	.ascii	"stop i want\012\000"
	.space	3
.LC419:
	.ascii	"svc_extension_flag error:priority_id:%d, pred_flag%"
	.ascii	"d\012\000"
	.space	2
.LC420:
	.ascii	"%d,%d,%d\012\000"
	.space	2
.LC421:
	.ascii	"svc stream,nal_header:%x\012\000"
	.space	2
.LC422:
	.ascii	"***** NAL: IDR/Slice, nal_unit_type=%d, TotalSlice="
	.ascii	"%d\012\000"
	.space	1
.LC423:
	.ascii	"SliceCheck failed, clear current slice.\012\000"
	.space	3
.LC424:
	.ascii	"***** NAL: PPS, nal_unit_type=%d, TotalPPS=%d\012\000"
	.space	1
.LC425:
	.ascii	"***** NAL: SPS, nal_unit_type=%d, TotalSPS=%d\012\000"
	.space	1
.LC426:
	.ascii	"SPS decode error.\012\000"
	.space	1
.LC427:
	.ascii	"***** NAL: SEI, nal_unit_type=%d\012\000"
	.space	2
.LC428:
	.ascii	"SEI decode error.\012\000"
	.space	1
.LC429:
	.ascii	"***** NAL: AUD, nal_unit_type=%d\012\000"
	.space	2
.LC430:
	.ascii	"***** NAL: EOSEQ, nal_unit_type=%d\012\000"
.LC431:
	.ascii	"***** NAL: FILL, nal_unit_type=%d\012\000"
	.space	1
.LC432:
	.ascii	"***** NAL: EOSTREAM, nal_unit_type=%d\012\000"
	.space	1
.LC433:
	.ascii	"***** NAL: SPSEXT, nal_unit_type=%d\012\000"
	.space	3
.LC434:
	.ascii	"***** NAL: AUX, nal_unit_type=%d\012\000"
	.space	2
.LC435:
	.ascii	"***** NAL: EOPIC, nal_unit_type=%d\012\000"
.LC436:
	.ascii	"***** NAL: UNSUPPORT, nal_unit_type=%d,nalu header:"
	.ascii	"%x\012\000"
	.space	1
.LC437:
	.ascii	"FindTrailZeros ERR\012\000"
.LC438:
	.ascii	"H264_DecOneNal ERR\012\000"
	.bss
	.align	2
.LANCHOR1 = . + 0
	.type	TmpBuf, %object
	.size	TmpBuf, 68
TmpBuf:
	.space	68
	.type	sps_tmp.45636, %object
	.size	sps_tmp.45636, 4000
sps_tmp.45636:
	.space	4000
	.type	pps_tmp.44503, %object
	.size	pps_tmp.44503, 2208
pps_tmp.44503:
	.space	2208
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
