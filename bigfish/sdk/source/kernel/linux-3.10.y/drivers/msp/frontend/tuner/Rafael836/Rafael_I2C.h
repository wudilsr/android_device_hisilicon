
/*pedef WORD(CALLBACK* GETDLLVERSION)(void);
typedef HANDLE(CALLBACK* OPENDEVICEINSTANCE)(LPSTR,BYTE);
typedef BOOL(CALLBACK* CLOSEDEVICEINSTANCE)(HANDLE);
typedef BOOL(CALLBACK* DETECTDEVICE)(HANDLE);
typedef BYTE(CALLBACK* GETDEVICECOUNT)(LPSTR);
typedef BYTE(CALLBACK* GETDEVICEINFO)(LPSTR,LPDEVINFO);
typedef HANDLE(CALLBACK* OPENDEVICEBYSERIALID)(LPSTR,LPSTR);
typedef BOOL(CALLBACK* GETSERIALID)(HANDLE,LPSTR);
typedef BOOL(CALLBACK* CONFIGIOPORTS)(HANDLE,ULONG);
typedef BOOL(CALLBACK* GETIOCONFIG)(HANDLE,LPLONG);
typedef BOOL(CALLBACK* READIOPORTS)(HANDLE,LPLONG);
typedef BOOL(CALLBACK* WRITEIOPORTS)(HANDLE,ULONG,ULONG);
typedef BOOL(CALLBACK* READI2C)(HANDLE,PI2C_TRANS);
typedef BOOL(CALLBACK* WRITEI2C)(HANDLE,PI2C_TRANS);*/

typedef struct _I2C_LEN_TYPE
{
	unsigned char RegAddr;
	unsigned char Data[50];
	unsigned char Len;
}I2C_LEN_TYPE;

typedef struct _I2C_TYPE
{
	unsigned char RegAddr;
	unsigned char Data;
}I2C_TYPE;

int I2C_Init(void);
int Close_I2C(void);
int Rafael_I2C_Write_Len(I2C_LEN_TYPE *I2C_Info);
int Rafael_I2C_Read_Len(I2C_LEN_TYPE *I2C_Info);
int Rafael_I2C_Write(I2C_TYPE *I2C_Info);
int Rafael_R828_Convert(int InvertNum);